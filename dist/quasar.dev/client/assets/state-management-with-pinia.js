import{c as i}from"./_examples_frameless-electron-window.js";import{D as m,a as u}from"./DocPage.js";import{D as k}from"./DocTree.js";import{D as e}from"./DocPrerender.js";import{C as c}from"./CopyButton.js";import{_ as g}from"./index.js";import{b as h,d as f,w as a,h as n,i as s,e as t,f as o}from"./vendor.js";const y=n("p",null,"In large applications, state management often becomes complex due to multiple pieces of state scattered across many components and the interactions between them. It is often overlooked that the source of truth in Vue instances is the raw data object - a Vue instance simply proxies access to it. Therefore, if you have a piece of state that should be shared by multiple instances, you should avoid duplicating it and share it by identity.",-1),w=n("p",null,"We won’t go into details on how to configure or use Pinia since it has great docs. Instead we’ll just show you what the folder structure looks like when using it on a Quasar project.",-1),v=n("p",null,[s("When you scaffold a Quasar project folder you can choose to add Pinia. It will create all the necessary configuration for you. Like for example the creation of "),n("code",{class:"doc-token"},"/src/stores"),s(" which handles all the Pinia related code that you need.")],-1),_=n("p",null,[s("If you don’t choose the Pinia option during project creation but would like to add it later then all you need to do is to check the next section and create the "),n("code",{class:"doc-token"},"src/stores/index.[js|ts]"),s(" file (it’s automatically created when you run "),n("code",{class:"doc-token"},"quasar new store <name>"),s("):")],-1),b=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" store "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" createPinia "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'pinia'"),s(`

`),n("span",{class:"token comment"},`/*
 * If not building with SSR mode, you can
 * directly export the Store instantiation;
 *
 * The function below can be async too; either use
 * async/await or return a Promise which resolves
 * with the Store instance.
 */`),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"store"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token comment"},"/* { ssrContext } */"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" pinia "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createPinia"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token comment"},"// You can add Pinia plugins here"),s(`
  `),n("span",{class:"token comment"},"// pinia.use(SomePiniaPlugin)"),s(`

  `),n("span",{class:"token keyword"},"return"),s(` pinia
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])],-1),P=n("p",null,[s("Adding a Pinia store is easy with Quasar CLI through the "),n("code",{class:"doc-token"},"$ quasar new"),s(" command.")],-1),q=n("pre",{class:"doc-code"},[n("code",null,[s("$ quasar new store "),n("span",{class:"token operator"},"<"),s("store_name"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"["),s("--format ts"),n("span",{class:"token punctuation"},"]")])],-1),C=n("p",null,[s("It will create a folder in "),n("code",{class:"doc-token"},"/src/stores"),s(" named by “store_name” from the command above. It will contain all the boilerplate that you need.")],-1),x=n("p",null,[s("Let’s say that you want to create a “counter” Pinia store. You issue "),n("code",{class:"doc-token"},"$ quasar new store counter"),s(". You then notice the newly created "),n("code",{class:"doc-token"},"/src/stores/counter.[js|ts]"),s(" file:")],-1),S=n("p",null,"Example of Pinia store:",-1),j=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" defineStore "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'pinia'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"const"),s(" useCounterStore "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"defineStore"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'counter'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function-variable function"},"state"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"counter"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token literal-property property"},"getters"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function-variable function"},"doubleCount"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"state"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" state"),n("span",{class:"token punctuation"},"."),s("counter "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token literal-property property"},"actions"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"increment"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("counter"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])],-1),I=n("p",null,"We’ve created the new Pinia store, but we haven’t yet used it in our app. In a Vue file:",-1),T=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("template")]),n("span",{class:"token punctuation"},">")]),s(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token comment"},"<!-- Option 1 -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),n("span",{class:"token punctuation"},">")]),s("Direct store"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token comment"},"<!-- Read the state value directly -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),n("span",{class:"token punctuation"},">")]),s("{{ store.counter }}"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token comment"},"<!-- Use getter directly -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),n("span",{class:"token punctuation"},">")]),s("{{ store.doubleCount }}"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`

    `),n("span",{class:"token comment"},"<!-- Manipulate state directly -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("q-btn")]),s(),n("span",{class:"token attr-name"},"@click"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("store.counter--"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s("-"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("q-btn")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token comment"},"<!-- Use an action -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("q-btn")]),s(),n("span",{class:"token attr-name"},"@click"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("store.increment()"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s("+"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("q-btn")]),n("span",{class:"token punctuation"},">")]),s(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`

  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token comment"},"<!-- Option 2 -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),n("span",{class:"token punctuation"},">")]),s("Indirect store"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token comment"},"<!-- Use the computed state -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),n("span",{class:"token punctuation"},">")]),s("{{ count }}"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token comment"},"<!-- Use the computed getter -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),n("span",{class:"token punctuation"},">")]),s("{{ doubleCountValue }}"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`

    `),n("span",{class:"token comment"},"<!-- Use the exposed function -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("q-btn")]),s(),n("span",{class:"token attr-name"},"@click"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("decrementCount()"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s("-"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("q-btn")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token comment"},"<!-- Use the exposed function -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("q-btn")]),s(),n("span",{class:"token attr-name"},"@click"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("incrementCount()"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s("+"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("q-btn")]),n("span",{class:"token punctuation"},">")]),s(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`

  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token comment"},"<!-- Option 3 -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),n("span",{class:"token punctuation"},">")]),s("Destructured store"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token comment"},"<!-- Use the destructured state -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),n("span",{class:"token punctuation"},">")]),s("{{ counter }}"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token comment"},"<!-- Use the destructured getter -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),n("span",{class:"token punctuation"},">")]),s("{{ doubleCount }}"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`

    `),n("span",{class:"token comment"},"<!-- Manipulate state directly-->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("q-btn")]),s(),n("span",{class:"token attr-name"},"@click"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("counter--"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s("-"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("q-btn")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token comment"},"<!-- Use an action -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("q-btn")]),s(),n("span",{class:"token attr-name"},"@click"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("increment()"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s("+"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("q-btn")]),n("span",{class:"token punctuation"},">")]),s(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("template")]),n("span",{class:"token punctuation"},">")]),s(`

`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("script")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"},[n("span",{class:"token language-javascript"},[s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" computed "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'vue'"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" useCounterStore "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'stores/counter'"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" storeToRefs "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'pinia'"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"setup"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" store "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"useCounterStore"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"// Option 2: use computed and functions to use the store"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" count "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"computed"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" store"),n("span",{class:"token punctuation"},"."),s("counter"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" doubleCountValue "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"computed"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" store"),n("span",{class:"token punctuation"},"."),s("doubleCount"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token function-variable function"},"incrementCount"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" store"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"increment"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// use action"),s(`
    `),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token function-variable function"},"decrementCount"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" store"),n("span",{class:"token punctuation"},"."),s("counter"),n("span",{class:"token operator"},"--"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// manipulate directly"),s(`

    `),n("span",{class:"token comment"},"// Option 3: use destructuring to use the store in the template"),s(`
    `),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" counter"),n("span",{class:"token punctuation"},","),s(" doubleCount "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"storeToRefs"),n("span",{class:"token punctuation"},"("),s("store"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},'// state and getters need "storeToRefs"'),s(`
    `),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" increment "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(" store"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// actions can be destructured directly"),s(`

    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// Option 1: return the store directly and couple it in the template"),s(`
      store`),n("span",{class:"token punctuation"},","),s(`

      `),n("span",{class:"token comment"},"// Option 2: use the store in functions and compute the state to use in the template"),s(`
      count`),n("span",{class:"token punctuation"},","),s(`
      doubleCountValue`),n("span",{class:"token punctuation"},","),s(`
      incrementCount`),n("span",{class:"token punctuation"},","),s(`
      decrementCount`),n("span",{class:"token punctuation"},","),s(`

      `),n("span",{class:"token comment"},"// Option 3: pass the destructed state, getters and actions to the template"),s(`
      counter`),n("span",{class:"token punctuation"},","),s(`
      increment`),n("span",{class:"token punctuation"},","),s(`
      doubleCount`),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("script")]),n("span",{class:"token punctuation"},">")])])],-1),V=n("p",null,[s("Simply use "),n("code",{class:"doc-token"},"this.router"),s(" in Pinia stores to get access to the router.")],-1),D=n("p",null,"Here is an example:",-1),U=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" defineStore "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'pinia'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"const"),s(" useWhateverStore "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"defineStore"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'whatever'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// ..."),s(`
  `),n("span",{class:"token literal-property property"},"actions"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"whateverAction"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("router"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'...'"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),O={__name:"state-management-with-pinia",setup(A){const r=[{id:"adding-a-pinia-store",title:"2. Adding a Pinia store"},{id:"accessing-the-router-in-pinia-stores",title:"3. Accessing the router in Pinia stores"}],l={tree:{l:"src",c:[{l:"stores",e:"Pinia",c:[{l:"index.js",e:"Pinia initialization"},{l:"<store>",e:"Pinia store..."},{l:"<store>",e:"Pinia store..."}]}]},newStore:{l:"src",c:[{l:"stores",c:[{l:"index.js",e:"Pinia initialization"},{l:"counter.js",e:"Pinia store"}]}]}};return(L,p)=>(h(),f(m,{title:"State management with Pinia",desc:"(@quasar/app-vite) How to manage Pinia in a Quasar App.",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/state-management-with-pinia",toc:r},{default:a(()=>[y,n("p",null,[s("The recommended way to go if you want components sharing state is Pinia. Take a look at its "),t(u,{to:"https://pinia.vuejs.org/"},{default:a(()=>[s("documentation")]),_:1}),s(" before diving in. It has a great feature when used along the "),t(u,{to:"https://github.com/vuejs/vue-devtools"},{default:a(()=>[s("Vue dev-tools")]),_:1}),s(" browser extension like Time Travel debugging.")]),w,t(k,{def:l.tree},null,8,["def"]),v,_,t(o(e),{title:"/src/stores/index.js"},{default:a(()=>[b,t(c)]),_:1}),n("h2",{id:"adding-a-pinia-store",class:"doc-heading doc-h2",onClick:p[0]||(p[0]=d=>o(i)("adding-a-pinia-store"))},"Adding a Pinia store"),P,t(o(e),null,{default:a(()=>[q,t(c,{lang:"bash"})]),_:1}),C,x,t(k,{def:l.newStore},null,8,["def"]),S,t(o(e),null,{default:a(()=>[j,t(c)]),_:1}),I,t(o(e),null,{default:a(()=>[T,t(c)]),_:1}),n("p",null,[t(u,{to:"https://pinia.vuejs.org/core-concepts/"},{default:a(()=>[s("More info on defining a Pinia store")]),_:1}),s(".")]),n("h2",{id:"accessing-the-router-in-pinia-stores",class:"doc-heading doc-h2",onClick:p[1]||(p[1]=d=>o(i)("accessing-the-router-in-pinia-stores"))},"Accessing the router in Pinia stores"),V,D,t(o(e),null,{default:a(()=>[U,t(c)]),_:1})]),_:1}))}},N=g(O,[["__file","state-management-with-pinia.md"]]);export{N as default};
