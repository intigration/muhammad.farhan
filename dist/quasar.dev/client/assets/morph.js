import{_ as h,a as p}from"./index.js";import{c as d}from"./_examples_frameless-electron-window.js";import{D as m,a}from"./DocPage.js";import{D as s}from"./DocExample.js";import{D as u}from"./DocApi.js";import{p as c,b as _,d as f,w as i,h as e,i as t,e as o,f as g}from"./vendor.js";import"./DocCode.js";import"./CopyButton.js";import"./DocCodepen.js";import"./utils.js";import"./DocCardTitle.js";const v=e("p",null,"“Morph” is a Quasar directive that provides the ability to morph DOM elements between two states.",-1),M=e("p",null,"This directive morphs one element in a group into another. The morphing is activated by changing the value (model) of the directive to match the name of the morphing element.",-1),w=e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("ul",null,[e("li",null,"The “name” and “group” (as directive arg or through the value of the directive) are mandatory."),e("li",null,"If the value of the directive is in Object form, then “model” is also mandatory.")])],-1),D={__name:"morph",setup(b){c("_q_ex",{name:"Morph",list:p(()=>import("./e.Morph.js"),[])});const n=[{name:"Morph Utils",category:"Genis Utils",path:"/quasar-utils/morph-utils"}],l=[{id:"morph-api",title:"2. Morph API",deep:!0},{id:"usage",title:"3. Usage"}];return(x,r)=>(_(),f(m,{title:"Morph Directive",desc:"Vue directive that morphs between DOM elements or even between the two states of the same DOM element.",heading:"","edit-link":"vue-directives/morph",toc:l,related:n},{default:i(()=>[v,e("p",null,[t("Under the hood, it uses the Quasar "),o(a,{to:"/quasar-utils/morph-utils"},{default:i(()=>[t("Morph function util")]),_:1}),t(".")]),o(u,{file:"Morph"}),e("h2",{id:"usage",class:"doc-heading doc-h2",onClick:r[0]||(r[0]=y=>g(d)("usage"))},"Usage"),e("p",null,[t("Reading the "),o(a,{to:"/quasar-utils/morph-utils"},{default:i(()=>[t("Morph function util")]),_:1}),t(" first will be best in your understanding of how this directive works.")]),M,w,o(s,{title:"Morph between multiple elements in a group",file:"BasicGroup"}),o(s,{title:"Morph a button into a card",file:"Card"})]),_:1}))}},C=h(D,[["__file","morph.md"]]);export{C as default};
