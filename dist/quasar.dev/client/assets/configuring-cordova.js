import{c as r}from"./_examples_frameless-electron-window.js";import{D as k,a as l}from"./DocPage.js";import{D as c}from"./DocPrerender.js";import{C as p}from"./CopyButton.js";import{_ as f}from"./index.js";import{b as m,d as g,w as s,h as n,f as e,i as o,e as a}from"./vendor.js";const h=n("p",null,"We’ll be using Quasar CLI (and Cordova CLI) to develop and build a Mobile App. The difference between building a SPA, PWA, Electron App or a Mobile App is simply determined by the “mode” parameter in “quasar dev” and “quasar build” commands.",-1),y=n("p",null,"There are two configuration files of great importance to your mobile apps. We’ll go over each one.",-1),v=n("code",{class:"doc-token"},"/src-cordova/config.xml",-1),_=n("code",{class:"doc-token"},"/src-cordova",-1),b=n("p",null,"Some properties from this file will get overwritten as we’ll see in next section.",-1),w=n("p",null,"Quasar CLI helps you in setting some properties of the mobile Apps automatically (from config.xml): the Cordova “id”, app version, description and android-versionCode. This is for convenience so you’ll be able to have a single point where, for example, you change the version of your app, not multiple files that you need to simultaneously touch which is error prone.",-1),C=n("p",null,"For determining the values for each of the properties mentioned above, Quasar CLI:",-1),x=n("ol",null,[n("li",null,[o("Looks in the "),n("code",{class:"doc-token"},"/quasar.config"),o(" file for a “cordova” Object. Does it have “version”, “description” and/or “androidVersionCode”? If yes, it will use them.")]),n("li",null,[o("If not, then it looks into your "),n("code",{class:"doc-token"},"/package.json"),o(" for “cordovaId”, “version” and “description” fields.")])],-1),q=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"return"),o(),n("span",{class:"token punctuation"},"{"),o(`
  `),n("span",{class:"token literal-property property"},"capacitor"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"{"),o(`
    `),n("span",{class:"token comment"},"// If not present, will look for package.json > version"),o(`
    `),n("span",{class:"token literal-property property"},"version"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token string"},"'..'"),n("span",{class:"token punctuation"},","),o(),n("span",{class:"token comment"},"// string"),o(`
    `),n("span",{class:"token comment"},"// If not present, will look for package.json > description"),o(`
    `),n("span",{class:"token literal-property property"},"description"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token string"},"'...'"),n("span",{class:"token punctuation"},","),o(),n("span",{class:"token comment"},"// string"),o(`
    `),n("span",{class:"token literal-property property"},"androidVersionCode"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token string"},"'..'"),n("span",{class:"token punctuation"},","),o(),n("span",{class:"token comment"},"// string"),o(`

    `),n("span",{class:"token comment"},`/**
     * Enable Xcode modern build even if after considering iOS-Cordova issues.
     * You can enable it if you know what you are doing,
     *  for example if you want to specify the build type in your “build.json”.
     *
     * Default: false
     */`),o(`
    `),n("span",{class:"token literal-property property"},"noIosLegacyBuildFlag"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token boolean"},"true"),n("span",{class:"token operator"},"/"),n("span",{class:"token boolean"},"false"),o(`
  `),n("span",{class:"token punctuation"},"}"),o(`
`),n("span",{class:"token punctuation"},"}")])],-1),I=n("p",null,"Other options you can configure:",-1),L=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"return"),o(),n("span",{class:"token punctuation"},"{"),o(`
  `),n("span",{class:"token literal-property property"},"framework"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"{"),o(`
    `),n("span",{class:"token literal-property property"},"config"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"{"),o(`
      `),n("span",{class:"token literal-property property"},"cordova"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"{"),o(`
        `),n("span",{class:"token comment"},"// add the dynamic top padding on iOS mobile devices"),o(`
        `),n("span",{class:"token literal-property property"},"iosStatusBarPadding"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token boolean"},"true"),n("span",{class:"token operator"},"/"),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),o(`

        `),n("span",{class:"token comment"},"// Quasar handles app exit on mobile phone back button."),o(`
        `),n("span",{class:"token literal-property property"},"backButtonExit"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token boolean"},"true"),n("span",{class:"token operator"},"/"),n("span",{class:"token boolean"},"false"),n("span",{class:"token operator"},"/"),n("span",{class:"token string"},"'*'"),n("span",{class:"token operator"},"/"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'/login'"),n("span",{class:"token punctuation"},","),o(),n("span",{class:"token string"},"'/home'"),n("span",{class:"token punctuation"},","),o(),n("span",{class:"token string"},"'/my-page'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),o(`

        `),n("span",{class:"token comment"},"// On the other hand, the following completely"),o(`
        `),n("span",{class:"token comment"},"// disables Quasar's back button management."),o(`
        `),n("span",{class:"token literal-property property"},"backButton"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token boolean"},"true"),n("span",{class:"token operator"},"/"),n("span",{class:"token boolean"},"false"),o(`
      `),n("span",{class:"token punctuation"},"}"),o(`
    `),n("span",{class:"token punctuation"},"}"),o(`
  `),n("span",{class:"token punctuation"},"}"),o(`
`),n("span",{class:"token punctuation"},"}")])],-1),V=n("p",null,"Should you want to tamper with the Vite config for UI in /src:",-1),B=n("pre",{class:"doc-code"},[n("code",null,[o("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),o(),n("span",{class:"token operator"},"="),o(),n("span",{class:"token keyword"},"function"),o(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),o(),n("span",{class:"token punctuation"},"{"),o(`
  `),n("span",{class:"token keyword"},"return"),o(),n("span",{class:"token punctuation"},"{"),o(`
    `),n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"{"),o(`
      `),n("span",{class:"token function"},"extendViteConf"),o(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"viteConf"),n("span",{class:"token punctuation"},")"),o(),n("span",{class:"token punctuation"},"{"),o(`
        `),n("span",{class:"token keyword"},"if"),o(),n("span",{class:"token punctuation"},"("),o("ctx"),n("span",{class:"token punctuation"},"."),o("mode"),n("span",{class:"token punctuation"},"."),o("cordova"),n("span",{class:"token punctuation"},")"),o(),n("span",{class:"token punctuation"},"{"),o(`
          `),n("span",{class:"token comment"},"// do something with ViteConf"),o(`
        `),n("span",{class:"token punctuation"},"}"),o(`
      `),n("span",{class:"token punctuation"},"}"),o(`
    `),n("span",{class:"token punctuation"},"}"),o(`
  `),n("span",{class:"token punctuation"},"}"),o(`
`),n("span",{class:"token punctuation"},"}")])],-1),Q={__name:"configuring-cordova",setup(D){const i=[{name:"The quasar.config file",category:"Quasar CLI (with Vite)",path:"/quasar-cli-vite/quasar-config-file"}],u=[{id:"config-xml",title:"2. config.xml"},{id:"quasar-config-file",title:"3. quasar.config file"}];return(T,t)=>(m(),g(k,{title:"Configuring Cordova",desc:"(@quasar/app-vite) How to manage your Cordova apps with Quasar CLI.",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/developing-cordova-apps/configuring-cordova",toc:u,related:i},{default:s(()=>[h,y,n("h2",{id:"config-xml",class:"doc-heading doc-h2",onClick:t[0]||(t[0]=d=>e(r)("config-xml"))},"config.xml"),n("p",null,[o("The most important config file for your mobile app is "),v,o(". The "),_,o(" folder is a Cordova project, so please refer to "),a(l,{to:"https://cordova.apache.org/docs/en/latest/"},{default:s(()=>[o("Cordova documentation")]),_:1}),o(" in order to understand what each file from there does. But for now, have a few moments to read about "),a(l,{to:"https://cordova.apache.org/docs/en/latest/config_ref/"},{default:s(()=>[o("config.xml")]),_:1}),o(".")]),b,n("h2",{id:"quasar-config-file",class:"doc-heading doc-h2",onClick:t[1]||(t[1]=d=>e(r)("quasar-config-file"))},"quasar.config file"),w,C,x,a(e(c),null,{default:s(()=>[q,a(p)]),_:1}),I,a(e(c),null,{default:s(()=>[L,a(p)]),_:1}),V,a(e(c),{title:"/quasar.config file"},{default:s(()=>[B,a(p)]),_:1})]),_:1}))}},N=f(Q,[["__file","configuring-cordova.md"]]);export{N as default};
