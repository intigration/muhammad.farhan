import{_ as c,a as p}from"./index.js";import{p as u,b as h,d as g,w as b,e as t,h as e,f as n,i,j as m}from"./vendor.js";import{c as s}from"./_examples_frameless-electron-window.js";import{D as f}from"./DocPage.js";import{D as l}from"./DocExample.js";import{D as k}from"./DocApi.js";import"./DocCode.js";import"./CopyButton.js";import"./DocCodepen.js";import"./utils.js";import"./DocCardTitle.js";const v=e("p",null,"The QOptionGroup component is a helper component that allows you better control for grouping binary (on or off, true or false, 1 or 0) form input components like checkboxes, radios or toggles. A good use for this component is for offering a set of options or settings to turn on and off.",-1),w=e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,"The model for checkboxes/toggles must be an array.")],-1),C=e("p",null,[i("There are two types of slots. A generic one ("),e("code",{class:"doc-token"},"label"),i(") which applies to all options, unless a more specific index-based one is used ("),e("code",{class:"doc-token"},"label-N"),i(" where N is the 0-based index of the option). Both types of slots receive the respective option as parameter.")],-1),x=e("p",null,"Notice how we use the specific label slot for first option (option at index 0) and we also add a QTooltip.",-1),D=e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"TIP"),e("p",null,[i("The objects within the "),e("code",{class:"doc-token"},"options"),i(" array can hold any of the props found in QToggle, QCheckbox or QRadio for instance "),e("code",{class:"doc-token"},"disable"),i(" or "),e("code",{class:"doc-token"},"leftLabel"),i(". See below for an example.")])],-1),y=e("p",null,[i("When dealing with a native form which has an "),e("code",{class:"doc-token"},"action"),i(" and a "),e("code",{class:"doc-token"},"method"),i(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),e("code",{class:"doc-token"},"name"),i(" property on QOptionGroup, otherwise formData will not contain it (if it should) - all value are converted to string (native behaviour, so do not use Object values):")],-1),_={__name:"option-group",setup(Q){u("_q_ex",{name:"QOptionGroup",list:p(()=>import("./e.QOptionGroup.js"),[])});const d=[{name:"Radio",category:"Form Components",path:"/vue-components/radio"},{name:"Checkbox",category:"Form Components",path:"/vue-components/checkbox"},{name:"Toggle",category:"Form Components",path:"/vue-components/toggle"},{name:"Button Toggle",category:"Form Components",path:"/vue-components/button-toggle"}],r=[{id:"qoptiongroup-api",title:"2. QOptionGroup API",deep:!0},{id:"usage",title:"3. Usage"},{id:"standard",title:"3.1. Standard",sub:!0},{id:"with-qcheckbox-or-qtoggle",title:"3.2. With QCheckbox or QToggle",sub:!0},{id:"using-label-slots",title:"3.3. Using label slots",sub:!0},{id:"with-labels-on-left-side",title:"3.4. With labels on left side",sub:!0},{id:"inline",title:"3.5. Inline",sub:!0},{id:"dense",title:"3.6. Dense",sub:!0},{id:"disable",title:"3.7. Disable",sub:!0},{id:"disable-certain-options",title:"3.8. Disable Certain Options",sub:!0},{id:"force-dark-mode",title:"3.9. Force dark mode",sub:!0},{id:"native-form-submit",title:"3.10. Native form submit",sub:!0}];return(T,o)=>(h(),g(f,{title:"Option Group",desc:"The QOptionGroup Vue component allows you better control for grouping binary form input components like checkboxes, radios or toggles.",heading:"","edit-link":"vue-components/option-group",toc:r,related:d},{default:b(()=>[v,t(k,{file:"QOptionGroup"}),e("h2",{id:"usage",class:"doc-heading doc-h2",onClick:o[0]||(o[0]=a=>n(s)("usage"))},"Usage"),e("h3",{id:"standard",class:"doc-heading doc-h3",onClick:o[1]||(o[1]=a=>n(s)("standard"))},"Standard"),t(l,{title:"Standard",file:"Standard"}),e("h3",{id:"with-qcheckbox-or-qtoggle",class:"doc-heading doc-h3",onClick:o[2]||(o[2]=a=>n(s)("with-qcheckbox-or-qtoggle"))},"With QCheckbox or QToggle"),t(l,{title:"With checkboxes",file:"Checkbox"}),w,t(l,{title:"With toggles",file:"Toggle"}),e("h3",{id:"using-label-slots",class:"doc-heading doc-h3",onClick:o[3]||(o[3]=a=>n(s)("using-label-slots"))},[i("Using label slots "),t(m,{label:"v2.2+"})]),C,x,t(l,{title:"Label slots",file:"LabelSlots"}),e("h3",{id:"with-labels-on-left-side",class:"doc-heading doc-h3",onClick:o[4]||(o[4]=a=>n(s)("with-labels-on-left-side"))},"With labels on left side"),t(l,{title:"With option labels on the left side",file:"Label"}),e("h3",{id:"inline",class:"doc-heading doc-h3",onClick:o[5]||(o[5]=a=>n(s)("inline"))},"Inline"),t(l,{title:"Inline",file:"Inline"}),e("h3",{id:"dense",class:"doc-heading doc-h3",onClick:o[6]||(o[6]=a=>n(s)("dense"))},"Dense"),t(l,{title:"Dense and inline",file:"DenseInline"}),e("h3",{id:"disable",class:"doc-heading doc-h3",onClick:o[7]||(o[7]=a=>n(s)("disable"))},"Disable"),t(l,{title:"Disabled",file:"Disable"}),D,e("h3",{id:"disable-certain-options",class:"doc-heading doc-h3",onClick:o[8]||(o[8]=a=>n(s)("disable-certain-options"))},"Disable Certain Options"),t(l,{title:"Disable Certain Options",file:"DisableCertainOptions"}),e("h3",{id:"force-dark-mode",class:"doc-heading doc-h3",onClick:o[9]||(o[9]=a=>n(s)("force-dark-mode"))},"Force dark mode"),t(l,{title:"Force dark mode",file:"Dark"}),e("h3",{id:"native-form-submit",class:"doc-heading doc-h3",onClick:o[10]||(o[10]=a=>n(s)("native-form-submit"))},"Native form submit"),y,t(l,{title:"Native form",file:"NativeForm"})]),_:1}))}},P=c(_,[["__file","option-group.md"]]);export{P as default};
