import{c as a}from"./_examples_frameless-electron-window.js";import{D as u,a as i}from"./DocPage.js";import{D as d}from"./DocPrerender.js";import{C as c}from"./CopyButton.js";import{_ as h}from"./index.js";import{b as f,d as g,w as n,h as e,i as t,e as o,f as r}from"./vendor.js";const y=e("p",null,[t("When deploying as a SPA or PWA, the distributables folder that gets generated by Quasar CLI can be served by a static webserver. However, this not the case with a SSR (Server-side Render) build. Your distributables, in this case, contain your production webserver too – which can be tweaked from "),e("code",{class:"doc-token"},"/src-ssr"),t(".")],-1),v=e("p",null,[t("After building your app on SSR mode ("),e("code",{class:"doc-token"},"$ quasar build -m ssr"),t(") the folder that gets generated contains a standalone webserver tweaked for serving with SSR.")],-1),b=e("p",null,[t("You’ll notice that it contains a "),e("code",{class:"doc-token"},"package.json"),t(" file of its own. It has an npm script defined, called “start”:")],-1),m=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token string-property property"},'"scripts"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token punctuation"},"{"),t(`
  `),e("span",{class:"token string-property property"},'"start"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"node index.js"'),t(`
`),e("span",{class:"token punctuation"},"}")])],-1),k=e("p",null,[t("So what you need to do when deploying is to copy this distributables folder on your server, yarn/npm install the dependencies inside it, then run "),e("code",{class:"doc-token"},"$ yarn start"),t(". This boots up the webserver and starts listening for connections.")],-1),w=e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"TIP"),e("p",null,[t("The distributables folder generated after building your app is standalone. It does NOT require the rest of your project folder to work and it does NOT depend on "),e("code",{class:"doc-token"},"@quasar/cli"),t(" being installed.")])],-1),_=e("p",null,"After installing PM2 on your server, your npm start script can look like this instead:",-1),S=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token string-property property"},'"scripts"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token punctuation"},"{"),t(`
  `),e("span",{class:"token string-property property"},'"start"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"pm2 start index.js"'),t(`
`),e("span",{class:"token punctuation"},"}")])],-1),C=e("p",null,[t("Add a new "),e("strong",null,"NodeJS SSR"),t(" site to Cleavr and then configure the web app settings with the following:")],-1),x=e("ul",null,[e("li",null,[e("strong",null,"Entry point:"),t(" index.js")]),e("li",null,[e("strong",null,"Build command:"),t(" npx quasar build --mode ssr")]),e("li",null,[e("strong",null,"Artifact path:"),t(" dist/ssr")])],-1),P={__name:"deploying",setup(D){const p=[{id:"serverless",title:"2. Serverless"},{id:"the-distributables-folder",title:"3. The Distributables Folder"},{id:"enhancing-performance",title:"4. Enhancing Performance"},{id:"deploying-with-cleavr",title:"5. Deploying with Cleavr"}];return(R,s)=>(f(),g(u,{title:"Deploying SSR",desc:"(@quasar/app-vite) How to publish a Quasar server-side rendered app.",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/developing-ssr/deploying",toc:p},{default:n(()=>[y,e("p",null,[t("By default, the SSR distributables use "),o(i,{to:"https://expressjs.com/"},{default:n(()=>[t("Express")]),_:1}),t(", but you can replace it with your webserver of choice.")]),e("h2",{id:"serverless",class:"doc-heading doc-h2",onClick:s[0]||(s[0]=l=>r(a)("serverless"))},"Serverless"),e("p",null,[t("If you are deploying to a Serverless service, then please read about "),o(i,{to:"/quasar-cli-vite/developing-ssr/ssr-webserver"},{default:n(()=>[t("SSR Webserver")]),_:1}),t(" on how to prepare for it.")]),e("h2",{id:"the-distributables-folder",class:"doc-heading doc-h2",onClick:s[1]||(s[1]=l=>r(a)("the-distributables-folder"))},"The Distributables Folder"),v,b,o(r(d),null,{default:n(()=>[m,o(c)]),_:1}),k,w,e("h2",{id:"enhancing-performance",class:"doc-heading doc-h2",onClick:s[2]||(s[2]=l=>r(a)("enhancing-performance"))},"Enhancing Performance"),e("p",null,[t("By default, the webserver runs on only one of the available server’s cores. What you could do is make it use all cores. There is a solution for this: "),o(i,{to:"http://pm2.keymetrics.io/"},{default:n(()=>[t("PM2")]),_:1}),t(".")]),_,o(r(d),null,{default:n(()=>[S,o(c)]),_:1}),e("h2",{id:"deploying-with-cleavr",class:"doc-heading doc-h2",onClick:s[3]||(s[3]=l=>r(a)("deploying-with-cleavr"))},"Deploying with Cleavr"),e("p",null,[t("You can use "),o(i,{to:"https://cleavr.io"},{default:n(()=>[t("Cleavr")]),_:1}),t(" to deploy Quasar SSR apps to several popular VPS providers. Cleavr will automatically set up PM2 with cluster mode enabled for your app.")]),C,x]),_:1}))}},N=h(P,[["__file","deploying.md"]]);export{N as default};
