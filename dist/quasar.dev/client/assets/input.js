import{_ as k,a as h}from"./index.js";import{p as m,b as f,d as g,w as c,e as s,h as t,f as o,i as e,l as v}from"./vendor.js";import{c as l}from"./_examples_frameless-electron-window.js";import{D as y,a as u}from"./DocPage.js";import{D as a}from"./DocExample.js";import{D as b}from"./DocApi.js";import{D as r}from"./DocPrerender.js";import{C as d}from"./CopyButton.js";import"./DocCode.js";import"./DocCodepen.js";import"./utils.js";import"./DocCardTitle.js";const _=t("p",null,[e("The QInput component is used to capture text input from the user. It uses "),t("code",{class:"doc-token"},"v-model"),e(", similar to a regular input. It has support for errors and validation, and comes in a variety of styles, colors, and types.")],-1),w=t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"WARNING"),t("p",null,[e("For your QInput you can use only one of the main designs ("),t("code",{class:"doc-token"},"filled"),e(", "),t("code",{class:"doc-token"},"outlined"),e(", "),t("code",{class:"doc-token"},"standout"),e(", "),t("code",{class:"doc-token"},"borderless"),e("). You cannot use multiple as they are self-exclusive.")])],-1),x=t("p",null,"One of the most appropriate use cases for Standout design is in a QToolbar:",-1),I=t("p",null,[e("The "),t("code",{class:"doc-token"},"borderless"),e(" design allows you to seamlessly integrate your QInput into other components without QInput drawing a border around itself or changing its background color:")],-1),q=t("p",null,[e("The "),t("code",{class:"doc-token"},"rounded"),e(" prop only works along with Filled, Outlined and Standout designs, as showcased in the example below:")],-1),C=t("p",null,[e("The "),t("code",{class:"doc-token"},"square"),e(" prop only makes sense along with Filled, Outlined and Standout designs, as showcased in the example below:")],-1),T=t("p",null,[e("All the attributes set on "),t("code",{class:"doc-token"},"QInput"),e(" that are not in the list of "),t("code",{class:"doc-token"},"props"),e(" in the "),t("strong",null,"API"),e(" will be passed to the native field ("),t("code",{class:"doc-token"},"input"),e(" or "),t("code",{class:"doc-token"},"textarea"),e("). Some examples: autocomplete, placeholder.")],-1),S=t("p",null,"Please check these resources for more information about native attributes (for input check also the specific attributes for each type):",-1),Q=t("p",null,[e("As a helper, you can use "),t("code",{class:"doc-token"},"clearable"),e(" prop so user can reset model to "),t("code",{class:"doc-token"},"null"),e(" through an appended icon. The second QInput in the example below is the equivalent of using "),t("code",{class:"doc-token"},"clearable"),e(".")],-1),$=t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"WARNING"),t("p",null,[e("Won’t work with "),t("code",{class:"doc-token"},"v-model"),e(" managed input modifiers such as "),t("code",{class:"doc-token"},".trim"),e(" because in that case Vue doesn’t handle "),t("code",{class:"doc-token"},"null"),e(" values.")])],-1),F=t("p",null,[e("The following QInputs make use of the "),t("code",{class:"doc-token"},"type"),e(" prop in order to render native equivalent "),t("code",{class:"doc-token"},'<input type="...">'),e(" inside of them.")],-1),D=t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"WARNING"),t("p",null,"Support and behavior is the subject entirely of the browser rendering the page and not Quasar’s core code.")],-1),N=t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,[e("Some input types (like "),t("code",{class:"doc-token"},"date"),e(" or "),t("code",{class:"doc-token"},"time"),e(") always render some controls, so you if you’re using a "),t("code",{class:"doc-token"},"label"),e(" then you might want to set it along with "),t("code",{class:"doc-token"},"stack-label"),e(", otherwise the label will overlap native browser controls.")])],-1),A=t("p",null,[e("You’ll be using "),t("code",{class:"doc-token"},"v-model.number"),e(" (notice the "),t("code",{class:"doc-token"},"number"),e(" modifier) along with "),t("code",{class:"doc-token"},'type="number"'),e(" prop:")],-1),V={class:"doc-note doc-note--tip"},L=t("p",{class:"doc-note__title"},"ALTERNATIVES",-1),B=t("code",{class:"doc-token"},'type="file"',-1),P=t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"WARNING"),t("p",null,[e("Do NOT use a "),t("code",{class:"doc-token"},"v-model"),e(" when QInput is of "),t("code",{class:"doc-token"},'type="file"'),e(". Browser security policy does not allow a value to be set to such an input. As a result, you can only read it (attach an "),t("code",{class:"doc-token"},"@update:model-value"),e(" event), but not write it.")])],-1),M=t("p",null,[e("When you need QInput to grow along with its content, then use the "),t("code",{class:"doc-token"},"autogrow"),e(" prop like in the example below:")],-1),R=t("p",null,[e("Using the "),t("code",{class:"doc-token"},"label"),e(" slot you can customize the aspect of the label or add special features as "),t("code",{class:"doc-token"},"QTooltip"),e(".")],-1),O=t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,[e("Do not forget to set the "),t("code",{class:"doc-token"},"label-slot"),e(" property.")]),t("p",null,[e("If you want to interact with the content of the label (QTooltip) add the "),t("code",{class:"doc-token"},"all-pointer-events"),e(" class on the element in the slot.")])],-1),E=t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"WARNING"),t("p",null,[e("When placing a QBtn with type “submit” in one of the “before”, “after”, “prepend”, or “append” slots of a QField, QInput or QSelect, you should also add a "),t("code",{class:"doc-token"},"@click"),e(" listener on the QBtn in question. This listener should call the method that submits your form. All “click” events in such slots are not propagated to their parent elements.")])],-1),W=t("p",null,"The role of debouncing is for times when you watch the model and do expensive operations on it. So you want to first let user type out before triggering the model update, rather than updating the model on each keystroke.",-1),Y=t("p",null,[e("You can force/help the user to input a specific format with help from "),t("code",{class:"doc-token"},"mask"),e(" prop.")],-1),z=t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"WARNING"),t("p",null,[e("Mask is only available if the "),t("code",{class:"doc-token"},"type"),e(" is one of ‘text’ (default), ‘search’, ‘url’, ‘tel’, or ‘password’.")])],-1),U=t("p",null,"Below are mask tokens:",-1),G=t("thead",null,[t("tr",null,[t("th",{class:"text-left"},"Token"),t("th",{class:"text-left"},"Description")])],-1),H=t("tbody",null,[t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"#")]),t("td",null,"Numeric")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"S")]),t("td",null,"Letter, a to z, case insensitive")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"N")]),t("td",null,"Alphanumeric, case insensitive for letters")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"A")]),t("td",null,"Letter, transformed to uppercase")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"a")]),t("td",null,"Letter, transformed to lowercase")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"X")]),t("td",null,"Alphanumeric, transformed to uppercase for letters")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"x")]),t("td",null,"Alphanumeric, transformed to lowercase for letters")])],-1),j=t("strong",null,"helpers",-1),X=t("code",{class:"doc-token"},"mask",-1),J=t("p",null,[e("The "),t("code",{class:"doc-token"},"unmasked-value"),e(" is useful if for example you want to force the user type a certain format, but you want the model to contain the raw value:")],-1),K=t("p",null,[e("The "),t("code",{class:"doc-token"},"reverse-fill-mask"),e(" is useful if you want to force the user to fill the mask from the end and allow non-fixed length of input:")],-1),Z=t("p",null,"You can easily use any third party mask processor by doing a few small adjustments to your QInput.",-1),tt=t("p",null,"Starting from a QInput like this:",-1),et=t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),e("q-input")]),e(`
  `),t("span",{class:"token attr-name"},"filled"),e(`
  `),t("span",{class:"token attr-name"},"v-model"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("price"),t("span",{class:"token punctuation"},'"')]),e(`
  `),t("span",{class:"token attr-name"},"label"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("Price with 2 decimals"),t("span",{class:"token punctuation"},'"')]),e(`
  `),t("span",{class:"token attr-name"},"mask"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("#.##"),t("span",{class:"token punctuation"},'"')]),e(`
  `),t("span",{class:"token attr-name"},"fill-mask"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("#"),t("span",{class:"token punctuation"},'"')]),e(`
  `),t("span",{class:"token attr-name"},"reverse-fill-mask"),e(`
  `),t("span",{class:"token attr-name"},"hint"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("Mask: #.00"),t("span",{class:"token punctuation"},'"')]),e(`
  `),t("span",{class:"token attr-name"},"input-class"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("text-right"),t("span",{class:"token punctuation"},'"')]),e(`
`),t("span",{class:"token punctuation"},"/>")])])],-1),nt=t("p",null,"You can use v-money directive:",-1),st=t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),e("q-field")]),e(`
  `),t("span",{class:"token attr-name"},"filled"),e(`
  `),t("span",{class:"token attr-name"},"v-model"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("price"),t("span",{class:"token punctuation"},'"')]),e(`
  `),t("span",{class:"token attr-name"},"label"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("Price with v-money directive"),t("span",{class:"token punctuation"},'"')]),e(`
  `),t("span",{class:"token attr-name"},"hint"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("Mask: $ #,###.00 #"),t("span",{class:"token punctuation"},'"')]),e(`
`),t("span",{class:"token punctuation"},">")]),e(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),e("template")]),e(),t("span",{class:"token attr-name"},[t("span",{class:"token namespace"},"v-slot:"),e("control")]),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("{ id, floatingLabel, modelValue, emitValue }"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),e(`
    `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),e("input")]),e(),t("span",{class:"token attr-name"},":id"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("id"),t("span",{class:"token punctuation"},'"')]),e(),t("span",{class:"token attr-name"},"class"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("q-field__input text-right"),t("span",{class:"token punctuation"},'"')]),e(),t("span",{class:"token attr-name"},":value"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("modelValue"),t("span",{class:"token punctuation"},'"')]),e(),t("span",{class:"token attr-name"},"@change"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("e => emitValue(e.target.value)"),t("span",{class:"token punctuation"},'"')]),e(),t("span",{class:"token attr-name"},"v-money"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("moneyFormatForDirective"),t("span",{class:"token punctuation"},'"')]),e(),t("span",{class:"token attr-name"},"v-show"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("floatingLabel"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),e(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),e("template")]),t("span",{class:"token punctuation"},">")]),e(`
`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),e("q-field")]),t("span",{class:"token punctuation"},">")])])],-1),ot=t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token literal-property property"},"moneyFormatForDirective"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token punctuation"},"{"),e(`
  `),t("span",{class:"token literal-property property"},"decimal"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token string"},"'.'"),t("span",{class:"token punctuation"},","),e(`
  `),t("span",{class:"token literal-property property"},"thousands"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token string"},"','"),t("span",{class:"token punctuation"},","),e(`
  `),t("span",{class:"token literal-property property"},"prefix"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token string"},"'$ '"),t("span",{class:"token punctuation"},","),e(`
  `),t("span",{class:"token literal-property property"},"suffix"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token string"},"' #'"),t("span",{class:"token punctuation"},","),e(`
  `),t("span",{class:"token literal-property property"},"precision"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},","),e(`
  `),t("span",{class:"token literal-property property"},"masked"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token boolean"},"false"),e(),t("span",{class:"token comment"},"/* doesn't work with directive */"),e(`
`),t("span",{class:"token punctuation"},"}")])],-1),at=t("p",null,"Or you can use money component:",-1),lt=t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),e("q-field")]),e(`
  `),t("span",{class:"token attr-name"},"filled"),e(`
  `),t("span",{class:"token attr-name"},"v-model"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("price"),t("span",{class:"token punctuation"},'"')]),e(`
  `),t("span",{class:"token attr-name"},"label"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("Price with v-money component"),t("span",{class:"token punctuation"},'"')]),e(`
  `),t("span",{class:"token attr-name"},"hint"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("Mask: $ #,###.00 #"),t("span",{class:"token punctuation"},'"')]),e(`
`),t("span",{class:"token punctuation"},">")]),e(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),e("template")]),e(),t("span",{class:"token attr-name"},[t("span",{class:"token namespace"},"v-slot:"),e("control")]),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("{ id, floatingLabel, modelValue, emitValue }"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),e(`
    `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),e("money")]),e(),t("span",{class:"token attr-name"},":id"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("id"),t("span",{class:"token punctuation"},'"')]),e(),t("span",{class:"token attr-name"},"class"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("q-field__input text-right"),t("span",{class:"token punctuation"},'"')]),e(),t("span",{class:"token attr-name"},":model-value"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("modelValue"),t("span",{class:"token punctuation"},'"')]),e(),t("span",{class:"token attr-name"},[t("span",{class:"token namespace"},"@update:"),e("model-value")]),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("emitValue"),t("span",{class:"token punctuation"},'"')]),e(),t("span",{class:"token attr-name"},"v-bind"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("moneyFormatForComponent"),t("span",{class:"token punctuation"},'"')]),e(),t("span",{class:"token attr-name"},"v-show"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("floatingLabel"),t("span",{class:"token punctuation"},'"')]),e(),t("span",{class:"token punctuation"},"/>")]),e(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),e("template")]),t("span",{class:"token punctuation"},">")]),e(`
`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),e("q-field")]),t("span",{class:"token punctuation"},">")])])],-1),it=t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token literal-property property"},"moneyFormatForComponent"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token punctuation"},"{"),e(`
  `),t("span",{class:"token literal-property property"},"decimal"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token string"},"'.'"),t("span",{class:"token punctuation"},","),e(`
  `),t("span",{class:"token literal-property property"},"thousands"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token string"},"','"),t("span",{class:"token punctuation"},","),e(`
  `),t("span",{class:"token literal-property property"},"prefix"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token string"},"'$ '"),t("span",{class:"token punctuation"},","),e(`
  `),t("span",{class:"token literal-property property"},"suffix"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token string"},"' #'"),t("span",{class:"token punctuation"},","),e(`
  `),t("span",{class:"token literal-property property"},"precision"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},","),e(`
  `),t("span",{class:"token literal-property property"},"masked"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token boolean"},"true"),e(`
`),t("span",{class:"token punctuation"},"}")])],-1),ct=t("p",null,[e("You can validate QInput components with "),t("code",{class:"doc-token"},":rules"),e(" prop. Specify array of embedded rules or your own validators. Your custom validator will be a function which returns "),t("code",{class:"doc-token"},"true"),e(" if validator succeeds or "),t("code",{class:"doc-token"},"String"),e(" with error message if it doesn’t succeed.")],-1),ut=t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,[e("By default, for perf reasons, a change in the rules does not trigger a new validation until the model changes. In order to trigger the validation when rules change too, then use "),t("code",{class:"doc-token"},"reactive-rules"),e(" Boolean prop. The downside is a performance penalty (so use it when you really need this only!) and it can be slightly mitigated by using a computed prop as value for the rules (and not specify them inline in the vue template).")])],-1),rt=t("p",null,"This is so you can write convenient rules of shape like:",-1),dt=t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token parameter"},"value"),e(),t("span",{class:"token operator"},"=>"),e(" condition "),t("span",{class:"token operator"},"||"),e(" errorMessage")])],-1),pt=t("p",null,"For example:",-1),kt=t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token parameter"},"value"),e(),t("span",{class:"token operator"},"=>"),e(" value"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"includes"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'Hello'"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"||"),e(),t("span",{class:"token string"},"'Field must contain word Hello'")])],-1),ht=t("p",null,[e("You can reset the validation by calling "),t("code",{class:"doc-token"},"resetValidation()"),e(" method on the QInput.")],-1),mt=t("strong",null,"helpers",-1),ft=t("code",{class:"doc-token"},"rules",-1),gt=t("p",null,[e("If you set "),t("code",{class:"doc-token"},"lazy-rules"),e(", validation starts after first blur. If "),t("code",{class:"doc-token"},"lazy-rules"),e(" is set to "),t("code",{class:"doc-token"},"ondemand"),e(" String, then validation will be triggered only when component’s validate() method is manually called or when the wrapper QForm submits itself.")],-1),vt=t("p",null,"Rules can be async too, by using async/await or by directly returning a Promise.",-1),yt=t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,[e("Consider coupling async rules with "),t("code",{class:"doc-token"},"debounce"),e(" prop to avoid calling the async rules immediately on each keystroke, which might be detrimental to performance.")])],-1),bt=t("p",null,[e("You can also use external validation and only pass "),t("code",{class:"doc-token"},"error"),e(" and "),t("code",{class:"doc-token"},"error-message"),e(" (enable "),t("code",{class:"doc-token"},"bottom-slots"),e(" to display this error message).")],-1),_t={class:"doc-note doc-note--tip"},wt=t("p",{class:"doc-note__title"},"TIP",-1),xt=t("p",null,"You can also customize the slot for error message:",-1),It=t("p",null,[e("When dealing with a native form which has an "),t("code",{class:"doc-token"},"action"),e(" and a "),t("code",{class:"doc-token"},"method"),e(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),t("code",{class:"doc-token"},"name"),e(" property on QInput, otherwise formData will not contain it (if it should):")],-1),qt={__name:"input",setup(Ct){m("_q_ex",{name:"QInput",list:h(()=>import("./e.QInput.js"),[])});const p=[{id:"qinput-api",title:"2. QInput API",deep:!0},{id:"design",title:"3. Design"},{id:"coloring",title:"3.1. Coloring",sub:!0},{id:"standard",title:"3.2. Standard",sub:!0},{id:"filled",title:"3.3. Filled",sub:!0},{id:"outlined",title:"3.4. Outlined",sub:!0},{id:"standout",title:"3.5. Standout",sub:!0},{id:"borderless",title:"3.6. Borderless",sub:!0},{id:"rounded-design",title:"3.7. Rounded design",sub:!0},{id:"square-borders",title:"3.8. Square borders",sub:!0},{id:"force-dark-mode",title:"3.9. Force dark mode",sub:!0},{id:"basic-features",title:"4. Basic features"},{id:"native-attributes",title:"4.1. Native attributes",sub:!0},{id:"clearable",title:"4.2. Clearable",sub:!0},{id:"input-types",title:"4.3. Input types",sub:!0},{id:"textarea",title:"4.4. Textarea",sub:!0},{id:"prefix-and-suffix",title:"4.5. Prefix and suffix",sub:!0},{id:"custom-label",title:"4.6. Custom Label",sub:!0},{id:"shadow-text",title:"4.7. Shadow text",sub:!0},{id:"slots-with-qbtn-type-submit",title:"4.8. Slots with QBtn type “submit”",sub:!0},{id:"debouncing-model",title:"4.9. Debouncing model",sub:!0},{id:"loading-state",title:"4.10. Loading state",sub:!0},{id:"mask",title:"5. Mask"},{id:"using-third-party-mask-processors",title:"5.1. Using third party mask processors",sub:!0},{id:"validation",title:"6. Validation"},{id:"internal-validation",title:"6.1. Internal validation",sub:!0},{id:"external-validation",title:"6.2. External validation",sub:!0},{id:"native-form-submit",title:"7. Native form submit"}];return(Tt,n)=>(f(),g(y,{title:"Input",desc:"The QInput Vue component is used to capture text input from the user.",heading:"","edit-link":"vue-components/input",toc:p},{default:c(()=>[_,s(b,{file:"QInput"}),t("h2",{id:"design",class:"doc-heading doc-h2",onClick:n[0]||(n[0]=i=>o(l)("design"))},"Design"),w,s(a,{title:"Design Overview",file:"DesignOverview"}),t("h3",{id:"coloring",class:"doc-heading doc-h3",onClick:n[1]||(n[1]=i=>o(l)("coloring"))},"Coloring"),s(a,{title:"Coloring",file:"Coloring"}),t("h3",{id:"standard",class:"doc-heading doc-h3",onClick:n[2]||(n[2]=i=>o(l)("standard"))},"Standard"),s(a,{title:"Standard",file:"DesignStandard"}),t("h3",{id:"filled",class:"doc-heading doc-h3",onClick:n[3]||(n[3]=i=>o(l)("filled"))},"Filled"),s(a,{title:"Filled",file:"DesignFilled"}),t("h3",{id:"outlined",class:"doc-heading doc-h3",onClick:n[4]||(n[4]=i=>o(l)("outlined"))},"Outlined"),s(a,{title:"Outlined",file:"DesignOutlined"}),t("h3",{id:"standout",class:"doc-heading doc-h3",onClick:n[5]||(n[5]=i=>o(l)("standout"))},"Standout"),s(a,{title:"Standout",file:"DesignStandout"}),x,s(a,{title:"Standout in QToolbar",file:"StandoutToolbar"}),t("h3",{id:"borderless",class:"doc-heading doc-h3",onClick:n[6]||(n[6]=i=>o(l)("borderless"))},"Borderless"),I,s(a,{title:"Borderless",file:"Borderless"}),t("h3",{id:"rounded-design",class:"doc-heading doc-h3",onClick:n[7]||(n[7]=i=>o(l)("rounded-design"))},"Rounded design"),q,s(a,{title:"Rounded",file:"Rounded"}),t("h3",{id:"square-borders",class:"doc-heading doc-h3",onClick:n[8]||(n[8]=i=>o(l)("square-borders"))},"Square borders"),C,s(a,{title:"Square borders",file:"SquareBorders"}),t("h3",{id:"force-dark-mode",class:"doc-heading doc-h3",onClick:n[9]||(n[9]=i=>o(l)("force-dark-mode"))},"Force dark mode"),s(a,{title:"Force dark mode",file:"Dark"}),t("h2",{id:"basic-features",class:"doc-heading doc-h2",onClick:n[10]||(n[10]=i=>o(l)("basic-features"))},"Basic features"),t("h3",{id:"native-attributes",class:"doc-heading doc-h3",onClick:n[11]||(n[11]=i=>o(l)("native-attributes"))},"Native attributes"),T,S,t("ul",null,[t("li",null,[s(u,{to:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"},{default:c(()=>[e("input")]),_:1})]),t("li",null,[s(u,{to:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea"},{default:c(()=>[e("textarea")]),_:1})])]),t("h3",{id:"clearable",class:"doc-heading doc-h3",onClick:n[12]||(n[12]=i=>o(l)("clearable"))},"Clearable"),Q,$,s(a,{title:"Clearable",file:"Clearable"}),t("h3",{id:"input-types",class:"doc-heading doc-h3",onClick:n[13]||(n[13]=i=>o(l)("input-types"))},"Input types"),F,D,s(a,{title:"Input types",file:"InputTypes"}),N,t("h4",{id:"input-of-number-type",class:"doc-heading doc-h4",onClick:n[14]||(n[14]=i=>o(l)("input-of-number-type"))},"Input of number type"),A,s(a,{title:"Input of number type",file:"InputTypeNumber"}),t("h4",{id:"input-of-file-type",class:"doc-heading doc-h4",onClick:n[15]||(n[15]=i=>o(l)("input-of-file-type"))},"Input of file type"),t("div",V,[L,t("p",null,[t("strong",null,[e("Instead of using a QInput with "),B,e(", you might want to use "),s(u,{to:"/vue-components/file"},{default:c(()=>[e("QFile")]),_:1}),e(" picker instead or even "),s(u,{to:"/vue-components/uploader"},{default:c(()=>[e("QUploader")]),_:1})]),e(". However, should you wish to use QInput, please read the warning below.")])]),P,s(a,{title:"Input of file type",file:"InputTypeFile"}),t("h3",{id:"textarea",class:"doc-heading doc-h3",onClick:n[16]||(n[16]=i=>o(l)("textarea"))},"Textarea"),s(a,{title:"Textarea",file:"Textarea"}),M,s(a,{title:"Autogrow",file:"Autogrow"}),t("h3",{id:"prefix-and-suffix",class:"doc-heading doc-h3",onClick:n[17]||(n[17]=i=>o(l)("prefix-and-suffix"))},"Prefix and suffix"),s(a,{title:"Prefix and suffix",file:"PrefixSuffix"}),t("h3",{id:"custom-label",class:"doc-heading doc-h3",onClick:n[18]||(n[18]=i=>o(l)("custom-label"))},"Custom Label"),R,O,s(a,{title:"Custom label",file:"CustomLabel"}),t("h3",{id:"shadow-text",class:"doc-heading doc-h3",onClick:n[19]||(n[19]=i=>o(l)("shadow-text"))},"Shadow text"),s(a,{title:"Shadow text",file:"ShadowText"}),t("h3",{id:"slots-with-qbtn-type-submit",class:"doc-heading doc-h3",onClick:n[20]||(n[20]=i=>o(l)("slots-with-qbtn-type-submit"))},"Slots with QBtn type “submit”"),E,t("h3",{id:"debouncing-model",class:"doc-heading doc-h3",onClick:n[21]||(n[21]=i=>o(l)("debouncing-model"))},"Debouncing model"),W,s(a,{title:"Debounce model",file:"Debouncing"}),t("h3",{id:"loading-state",class:"doc-heading doc-h3",onClick:n[22]||(n[22]=i=>o(l)("loading-state"))},"Loading state"),s(a,{title:"Loading state",file:"LoadingState"}),t("h2",{id:"mask",class:"doc-heading doc-h2",onClick:n[23]||(n[23]=i=>o(l)("mask"))},"Mask"),Y,z,U,s(v,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:c(()=>[G,H]),_:1}),t("p",null,[e("There are "),j,e(" for QInput "),X,e(" prop: "),s(u,{to:"https://github.com/quasarframework/quasar/blob/dev/ui/src/components/input/use-mask.js#L6"},{default:c(()=>[e("full list")]),_:1}),e(". You can use these for convenience (examples: “phone”, “card”) or write the string specifying your custom needs.")]),s(a,{title:"Basic",file:"MaskBasic"}),s(a,{title:"Filling the mask",file:"MaskFill"}),J,s(a,{title:"Unmasked model",file:"MaskUnmaskedModel"}),K,s(a,{title:"Filling the mask in reverse",file:"MaskFillReverse"}),t("h3",{id:"using-third-party-mask-processors",class:"doc-heading doc-h3",onClick:n[24]||(n[24]=i=>o(l)("using-third-party-mask-processors"))},"Using third party mask processors"),Z,tt,s(o(r),null,{default:c(()=>[et,s(d)]),_:1}),nt,s(o(r),null,{default:c(()=>[st,s(d)]),_:1}),s(o(r),null,{default:c(()=>[ot,s(d)]),_:1}),at,s(o(r),null,{default:c(()=>[lt,s(d)]),_:1}),s(o(r),null,{default:c(()=>[it,s(d)]),_:1}),t("h2",{id:"validation",class:"doc-heading doc-h2",onClick:n[25]||(n[25]=i=>o(l)("validation"))},"Validation"),t("h3",{id:"internal-validation",class:"doc-heading doc-h3",onClick:n[26]||(n[26]=i=>o(l)("internal-validation"))},"Internal validation"),ct,ut,rt,s(o(r),null,{default:c(()=>[dt,s(d)]),_:1}),pt,s(o(r),null,{default:c(()=>[kt,s(d)]),_:1}),ht,t("p",null,[e("There are "),mt,e(" for QInput "),ft,e(" prop: "),s(u,{to:"https://github.com/quasarframework/quasar/blob/dev/ui/src/utils/patterns.js"},{default:c(()=>[e("full list")]),_:1}),e(". You can use these for convenience (examples: “date”, “time”, “hexColor”, “rgbOrRgbaColor”, “anyColor”) or write the string specifying your custom needs.")]),s(a,{title:"Basic",file:"ValidationRequired"}),s(a,{title:"Maximum length",file:"ValidationMaxLength"}),gt,s(a,{title:"Lazy rules",file:"ValidationLazy"}),s(a,{title:"Form validation",file:"ValidationForm"}),t("h4",{id:"async-rules",class:"doc-heading doc-h4",onClick:n[27]||(n[27]=i=>o(l)("async-rules"))},"Async rules"),vt,yt,s(a,{title:"Async rules",file:"ValidationAsync"}),t("h3",{id:"external-validation",class:"doc-heading doc-h3",onClick:n[28]||(n[28]=i=>o(l)("external-validation"))},"External validation"),bt,t("div",_t,[wt,t("p",null,[e("Depending on your needs, you might connect "),s(u,{to:"https://vuelidate.netlify.com/"},{default:c(()=>[e("Vuelidate")]),_:1}),e(" (our recommended approach) or some other validation library to QInput.")])]),s(a,{title:"External",file:"ValidationExternal"}),xt,s(a,{title:"Slot for error message",file:"ValidationSlots"}),t("h2",{id:"native-form-submit",class:"doc-heading doc-h2",onClick:n[29]||(n[29]=i=>o(l)("native-form-submit"))},"Native form submit"),It,s(a,{title:"Native form",file:"NativeForm"})]),_:1}))}},Rt=k(qt,[["__file","input.md"]]);export{Rt as default};
