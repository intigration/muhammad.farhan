import{_ as r,a as p}from"./index.js";import{c as l}from"./_examples_frameless-electron-window.js";import{D as h,a as c}from"./DocPage.js";import{D as n}from"./DocExample.js";import{D as m}from"./DocApi.js";import{p as f,b as g,d as v,w as d,h as e,i as t,e as i,f as s}from"./vendor.js";import"./DocCode.js";import"./CopyButton.js";import"./DocCodepen.js";import"./utils.js";import"./DocCardTitle.js";const b=e("p",null,"The QSelect component has two types of selection: single or multiple. This component opens up a menu for the selection list and action. A filter can also be used for longer lists.",-1),w=e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,[t("For your QSelect you can use only one of the main designs ("),e("code",{class:"doc-token"},"filled"),t(", "),e("code",{class:"doc-token"},"outlined"),t(", "),e("code",{class:"doc-token"},"standout"),t(", "),e("code",{class:"doc-token"},"borderless"),t("). You cannot use multiple as they are self-exclusive.")])],-1),k=e("p",null,[t("As a helper, you can use "),e("code",{class:"doc-token"},"clearable"),t(" prop so user can reset model to "),e("code",{class:"doc-token"},"null"),t(" through an appended icon. The second QSelect in the example below is the equivalent of using "),e("code",{class:"doc-token"},"clearable"),t(".")],-1),y=e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,[t("When placing a QBtn with type “submit” in one of the “before”, “after”, “prepend”, or “append” slots of a QField, QInput or QSelect, you should also add a "),e("code",{class:"doc-token"},"@click"),t(" listener on the QBtn in question. This listener should call the method that submits your form. All “click” events in such slots are not propagated to their parent elements.")])],-1),_=e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,[t("Please note that transitions do not work when using "),e("code",{class:"doc-token"},"options-cover"),t(" prop.")])],-1),T=e("p",null,[t("By default QSelect shows the list of options as a menu on desktop and as a dialog on mobiles. You can force one behavior by using the "),e("code",{class:"doc-token"},"behavior"),t(" property.")],-1),C=e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,[t("Please note that on iOS menu behavior might generate problems, especially when used in combination with "),e("code",{class:"doc-token"},"use-input"),t(" prop. You can use a conditional "),e("code",{class:"doc-token"},"behavior"),t(" prop like "),e("code",{class:"doc-token"},`:behavior="$q.platform.is.ios === true ? 'dialog' : 'menu'"`),t(" to use dialog mode only on iOS.")])],-1),S=e("div",{class:"doc-note doc-note--danger"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,"The model for single selection can be anything (String, Object, …) while the model for multiple selection must be an Array.")],-1),A=e("p",null,[t("The model content can be influenced by "),e("code",{class:"doc-token"},"emit-value"),t(" prop as you’ll learn in “The options” section below.")],-1),O=e("p",null,[t("When "),e("code",{class:"doc-token"},"emit-value"),t(" is used, the model becomes the determined "),e("code",{class:"doc-token"},"value"),t(" from the specified selected option. Default is to emit the whole option. It makes sense to use it only when the options are of Object form.")],-1),N=e("p",null,[t("When "),e("code",{class:"doc-token"},"map-options"),t(" is used, the model can contain only the "),e("code",{class:"doc-token"},"value"),t(", and it will be mapped against the options to determine its label. There is a performance penalty involved, so use it only if absolutely necessary. It’s not needed, for example, if the model contains the whole Object (so contains the label prop).")],-1),D=e("p",null,[t("By default, QSelect looks at "),e("code",{class:"doc-token"},"label"),t(", "),e("code",{class:"doc-token"},"value"),t(", "),e("code",{class:"doc-token"},"disable"),t(" and "),e("code",{class:"doc-token"},"sanitize"),t(" props of each option from the options array Objects. But you can override those:")],-1),Q=e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,"If you use functions for custom props always check if the option is null. These functions are used both for options in the list and for the selected options.")],-1),I=e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,[t("The list of options is rendered using virtual scroll, so if you render more than one element for an option you must set a "),e("code",{class:"doc-token"},"q-virtual-scroll--with-prev"),t(" class on all elements except the first one.")])],-1),z=e("p",null,"Here is another example where we add a QToggle to each option. The possibilities are endless.",-1),$=e("p",null,"By default, when there are no options, the menu won’t appear. But you can customize this scenario and specify what the menu should display.",-1),x=e("p",null,[t("The following example shows a glimpse of how you can play with lazy loading the options. This means, along with many other things, that "),e("code",{class:"doc-token"},"options"),t(" prop is not required on first render.")],-1),M=e("p",null,"You can dynamically load new options when scroll reaches the end:",-1),B=e("p",null,[t("All the attributes set on QSelect that are not in the list of props in the API will be passed to the native input field used (please check "),e("code",{class:"doc-token"},"use-input"),t(" prop description first to understand what it does) for filtering / autocomplete / adding new value. Some examples: autocomplete, placeholder.")],-1),F=e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"TIP"),e("p",null,"The following are just a few examples to get you started into making your own QSelect behavior. This is not exhaustive list of possibilities that QSelect offers."),e("p",null,[t("It makes sense to use this feature along with "),e("code",{class:"doc-token"},"use-input"),t(" prop.")])],-1),P=e("p",null,[t("In order to enable the creation of new values, you need to "),e("strong",null,"either specify"),t(" the "),e("code",{class:"doc-token"},"new-value-mode"),t(" prop "),e("strong",null,"and/or"),t(" listen for "),e("code",{class:"doc-token"},"@new-value"),t(" event. If you use both, then the purpose of listening to "),e("code",{class:"doc-token"},"@new-value"),t(" would be only to override the "),e("code",{class:"doc-token"},"new-value-mode"),t(" in your custom scenarios.")],-1),R=e("p",null,[t("The "),e("code",{class:"doc-token"},"new-value-mode"),t(" prop value specifies how the value should be added: "),e("code",{class:"doc-token"},"add"),t(" (adds a value, even if duplicate), "),e("code",{class:"doc-token"},"add-unique"),t(" (add only if NOT duplicate) or "),e("code",{class:"doc-token"},"toggle"),t(" (adds value if it’s not already in model, otherwise it removes it).")],-1),E=e("p",null,[t("By using this prop you don’t need to also listen for "),e("code",{class:"doc-token"},"@new-value"),t(" event, unless you have some specific scenarios for which you want to override the behavior.")],-1),W=e("p",null,[t("The "),e("code",{class:"doc-token"},"@new-value"),t(" event is emitted with the value to be added and a "),e("code",{class:"doc-token"},"done"),t(" callback. The "),e("code",{class:"doc-token"},"done"),t(" callback has two "),e("strong",null,"optional"),t(" parameters:")],-1),L=e("ul",null,[e("li",null,"the value to be added"),e("li",null,[t("the behavior (same values of "),e("code",{class:"doc-token"},"new-value-mode"),t(" prop, and when it is specified it overrides that prop – if it is used) – default behavior (if not using "),e("code",{class:"doc-token"},"new-value-mode"),t(") is to add the value even if it would be a duplicate")])],-1),q=e("p",null,[t("Calling "),e("code",{class:"doc-token"},"done()"),t(" with no parameters simply empties the input box value, without tampering with the model in any way.")],-1),H=e("p",null,"Filtering and adding the new values to menu:",-1),G=e("p",null,"Filters new values (in the example below the value to be added requires at least 3 characters to pass), and does not add to menu:",-1),V=e("p",null,"Generating multiple values from input:",-1),j=e("p",null,[e("strong",null,"By default, all options (included selected ones) are sanitized"),t(". This means that displaying them in HTML format is disabled. However, if you require HTML on your options and you trust their content, then there are a few ways to do this.")],-1),U=e("p",null,"You can force the HTML form of the menu options by:",-1),Y=e("ul",null,[e("li",null,[t("setting "),e("code",{class:"doc-token"},"html"),t(" key of the trusted option to "),e("code",{class:"doc-token"},"true"),t(" (for specific trusted options)")]),e("li",null,[t("or by setting "),e("code",{class:"doc-token"},"options-html"),t(" prop of QSelect (for all options)")])],-1),K=e("p",null,"The displayed value of QSelect is displayed as HTML if:",-1),Z=e("ul",null,[e("li",null,[t("the "),e("code",{class:"doc-token"},"display-value-html"),t(" prop of QSelect is set")]),e("li",null,[t("or you are not using "),e("code",{class:"doc-token"},"display-value"),t(" and "),e("ul",null,[e("li",null,[t("the "),e("code",{class:"doc-token"},"options-html"),t(" prop of QSelect is set")]),e("li",null,[t("any selected option has "),e("code",{class:"doc-token"},"html"),t(" key set to "),e("code",{class:"doc-token"},"true")])])])],-1),J=e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,[t("If you use "),e("code",{class:"doc-token"},"selected"),t(" or "),e("code",{class:"doc-token"},"selected-item"),t(" slots, then you are responsible for sanitization of the display value. The "),e("code",{class:"doc-token"},"display-value-html"),t(" prop will not apply.")])],-1),X=e("p",null,[t("The render performance is NOT affected much by the number of options, unless "),e("code",{class:"doc-token"},"map-options"),t(" is used on a large set. Notice the infinite scroll in place which renders additional options as the user scrolls through the list.")],-1),ee=e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"TIP"),e("ul",null,[e("li",null,[t("(Composition API) To get the best performance while using lots of options, do not wrap the array that you are passing in the "),e("code",{class:"doc-token"},"options"),t(" prop with ref()/computed()/reactive()/etc. This allows Vue to skip making the list “responsive” to changes.")]),e("li",null,[t("(Options API) To get the best performance while using lots of options, freeze the array that you are passing in the "),e("code",{class:"doc-token"},"options"),t(" prop using "),e("code",{class:"doc-token"},"Object.freeze(items)"),t(". This allows Vue to skip making the list “responsive” to changes.")])])],-1),te=e("p",null,"When QSelect is focused:",-1),oe=e("ul",null,[e("li",null,[t("pressing "),e("kbd",null,"ENTER"),t(", "),e("kbd",null,"ARROW DOWN"),t(" (or "),e("kbd",null,"SPACE"),t(" if "),e("code",{class:"doc-token"},"use-input"),t(" is not set) will open the list of options")]),e("li",null,[t("if "),e("code",{class:"doc-token"},"use-chips"),t(" is set: "),e("ul",null,[e("li",null,[t("pressing "),e("kbd",null,"SHIFT"),t(" + "),e("kbd",null,"TAB"),t(" will navigate backwards through the QChips (if a QChip is selected "),e("kbd",null,"TAB"),t(" will navigate forward through the QChips)")]),e("li",null,[t("pressing "),e("kbd",null,"ENTER"),t(" when a QChip is selected will remove that option from the selection")]),e("li",null,[t("pressing "),e("kbd",null,"BACKSPACE"),t(" will remove the last option from the selection (when "),e("code",{class:"doc-token"},"use-input"),t(" is set the input should be empty)")])])]),e("li",null,[t("pressing "),e("kbd",null,"BACKSPACE"),t(" when "),e("code",{class:"doc-token"},"clearable"),t(" is set then: "),e("ul",null,[e("li",null,[t("it clears the model (with "),e("code",{class:"doc-token"},"null"),t(" value) for single selection")]),e("li",null,"it removes the last added value for multiple selection")])]),e("li",null,[t("pressing "),e("kbd",null,"TAB"),t(" (or "),e("kbd",null,"SHIFT"),t(" + "),e("kbd",null,"TAB"),t(" if "),e("code",{class:"doc-token"},"use-chips"),t(" is not set or the first QChip is selected) will navigate to the next or previous focusable element on page")]),e("li",null,[t("typing text ("),e("kbd",null,"0"),t(" - "),e("kbd",null,"9"),t(" or "),e("kbd",null,"A"),t(" - "),e("kbd",null,"Z"),t(") if "),e("code",{class:"doc-token"},"use-input"),t(" is not set will: "),e("ul",null,[e("li",null,"create a search buffer (will be reset when a new key is not typed for 1.5 seconds) that will be used to search in the options labels"),e("li",null,"select the next option starting with that letter (after the current focused one) if the first key in buffer is typed multiple times"),e("li",null,"select the next option (starting with the current focused one) that matches the typed text (the match is fuzzy - the option label should start with the first letter and contain all the letters)")])])],-1),ie=e("p",null,"When the list of options is opened:",-1),ne=e("ul",null,[e("li",null,[t("pressing "),e("kbd",null,"ARROW UP"),t(" or "),e("kbd",null,"ARROW DOWN"),t(" will navigate up or down in the list of options")]),e("li",null,[t("pressing "),e("kbd",null,"PAGE UP"),t(" or "),e("kbd",null,"PAGE DOWN"),t(" will navigate one page up or down in the list of options")]),e("li",null,[t("pressing "),e("kbd",null,"HOME"),t(" or "),e("kbd",null,"END"),t(" will navigate to the start or end of the list of options (only if you are not using "),e("code",{class:"doc-token"},"use-input"),t(", or the input is empty)")]),e("li",null,"when navigating using arrow keys, navigation will wrap when reaching the start or end of the list"),e("li",null,[t("pressing "),e("kbd",null,"ENTER"),t(" (or "),e("kbd",null,"SPACE"),t(" when "),e("code",{class:"doc-token"},"use-input"),t(" is not set, or "),e("kbd",null,"TAB"),t(" when "),e("code",{class:"doc-token"},"multiple"),t(" is not set) when an option is selected in the list will: "),e("ul",null,[e("li",null,[t("select the option and close the list of options if "),e("code",{class:"doc-token"},"multiple"),t(" is not set")]),e("li",null,[t("toggle the option if "),e("code",{class:"doc-token"},"multiple"),t(" is set")])])])],-1),le=e("p",null,[t("When dealing with a native form which has an "),e("code",{class:"doc-token"},"action"),t(" and a "),e("code",{class:"doc-token"},"method"),t(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),e("code",{class:"doc-token"},"name"),t(" property on QSelect, otherwise formData will not contain it (if it should) - all value are converted to string (native behaviour, so do not use Object values):")],-1),se={__name:"select",setup(ae){f("_q_ex",{name:"QSelect",list:p(()=>import("./e.QSelect.js"),[])});const u=[{id:"qselect-api",title:"2. QSelect API",deep:!0},{id:"design",title:"3. Design"},{id:"overview",title:"3.1. Overview",sub:!0},{id:"decorators",title:"3.2. Decorators",sub:!0},{id:"coloring",title:"3.3. Coloring",sub:!0},{id:"clearable",title:"3.4. Clearable",sub:!0},{id:"disable-and-readonly",title:"3.5. Disable and readonly",sub:!0},{id:"slots-with-qbtn-type-submit",title:"3.6. Slots with QBtn type “submit”",sub:!0},{id:"menu-transitions",title:"3.7. Menu transitions",sub:!0},{id:"options-list-display-mode",title:"3.8. Options list display mode",sub:!0},{id:"the-model",title:"4. The model"},{id:"the-options",title:"5. The options"},{id:"options-type",title:"5.1. Options type",sub:!0},{id:"affecting-model",title:"5.2. Affecting model",sub:!0},{id:"custom-prop-names",title:"5.3. Custom prop names",sub:!0},{id:"customizing-menu-options",title:"5.4. Customizing menu options",sub:!0},{id:"lazy-loading",title:"5.5. Lazy loading",sub:!0},{id:"cover-mode",title:"5.6. Cover mode",sub:!0},{id:"the-display-value",title:"6. The display value"},{id:"filtering-and-autocomplete",title:"7. Filtering and autocomplete"},{id:"native-attributes-with-use-input",title:"7.1. Native attributes with “use-input”",sub:!0},{id:"create-new-values",title:"8. Create new values"},{id:"the-new-value-mode-prop",title:"8.1. The new-value-mode prop",sub:!0},{id:"the-new-value-event",title:"8.2. The @new-value event",sub:!0},{id:"using-menu-and-filtering",title:"8.3. Using menu and filtering",sub:!0},{id:"sanitization",title:"9. Sanitization"},{id:"render-performance",title:"10. Render performance"},{id:"keyboard-navigation",title:"11. Keyboard navigation"},{id:"native-form-submit",title:"12. Native form submit"}];return(de,o)=>(g(),v(h,{title:"Select",desc:"The QSelect Vue component has two types of selection - single or multiple. This component opens up a menu for the selection list and action. A filter can also be used for longer lists.",heading:"","edit-link":"vue-components/select",toc:u},{default:d(()=>[b,e("p",null,[t("In case you are looking for a dropdown “button” instead of “input” use "),i(c,{to:"/vue-components/button-dropdown"},{default:d(()=>[t("Button Dropdown")]),_:1}),t(" instead.")]),i(m,{file:"QSelect"}),e("h2",{id:"design",class:"doc-heading doc-h2",onClick:o[0]||(o[0]=a=>s(l)("design"))},"Design"),e("h3",{id:"overview",class:"doc-heading doc-h3",onClick:o[1]||(o[1]=a=>s(l)("overview"))},"Overview"),w,i(n,{title:"Design Overview",file:"DesignOverview"}),e("h3",{id:"decorators",class:"doc-heading doc-h3",onClick:o[2]||(o[2]=a=>s(l)("decorators"))},"Decorators"),i(n,{title:"Decorators",file:"Decorators"}),e("h3",{id:"coloring",class:"doc-heading doc-h3",onClick:o[3]||(o[3]=a=>s(l)("coloring"))},"Coloring"),i(n,{title:"Coloring",file:"Coloring"}),e("h3",{id:"clearable",class:"doc-heading doc-h3",onClick:o[4]||(o[4]=a=>s(l)("clearable"))},"Clearable"),k,i(n,{title:"Clearable",file:"Clearable"}),e("h3",{id:"disable-and-readonly",class:"doc-heading doc-h3",onClick:o[5]||(o[5]=a=>s(l)("disable-and-readonly"))},"Disable and readonly"),i(n,{title:"Disable and readonly",file:"DisableReadonly"}),e("h3",{id:"slots-with-qbtn-type-submit",class:"doc-heading doc-h3",onClick:o[6]||(o[6]=a=>s(l)("slots-with-qbtn-type-submit"))},"Slots with QBtn type “submit”"),y,e("h3",{id:"menu-transitions",class:"doc-heading doc-h3",onClick:o[7]||(o[7]=a=>s(l)("menu-transitions"))},"Menu transitions"),_,e("p",null,[t("In the example below there’s a few transitions showcased. For a full list of transitions available, go to "),i(c,{to:"/options/transitions"},{default:d(()=>[t("Transitions")]),_:1}),t(".")]),i(n,{title:"Menu transitions",file:"MenuTransitions"}),e("h3",{id:"options-list-display-mode",class:"doc-heading doc-h3",onClick:o[8]||(o[8]=a=>s(l)("options-list-display-mode"))},"Options list display mode"),T,C,i(n,{title:"Show options in menu",file:"BehaviorMenu"}),i(n,{title:"Show options in dialog",file:"BehaviorDialog"}),e("h2",{id:"the-model",class:"doc-heading doc-h2",onClick:o[9]||(o[9]=a=>s(l)("the-model"))},"The model"),S,i(n,{title:"Single vs multiple selection",file:"ModelSingleMultiple"}),i(n,{title:"Multiple selection, counter and max-values",file:"ModelMultipleCounter"}),A,e("h2",{id:"the-options",class:"doc-heading doc-h2",onClick:o[10]||(o[10]=a=>s(l)("the-options"))},"The options"),e("h3",{id:"options-type",class:"doc-heading doc-h3",onClick:o[11]||(o[11]=a=>s(l)("options-type"))},"Options type"),i(n,{title:"String options",file:"OptionString"}),i(n,{title:"Object options",file:"OptionObject"}),e("h3",{id:"affecting-model",class:"doc-heading doc-h3",onClick:o[12]||(o[12]=a=>s(l)("affecting-model"))},"Affecting model"),O,i(n,{title:"Emit-value",file:"OptionEmitValue"}),N,i(n,{title:"Map options",file:"OptionMapOptions"}),e("h3",{id:"custom-prop-names",class:"doc-heading doc-h3",onClick:o[13]||(o[13]=a=>s(l)("custom-prop-names"))},"Custom prop names"),D,Q,i(n,{title:"Custom label, value and disable props",file:"OptionCustomProps"}),e("h3",{id:"customizing-menu-options",class:"doc-heading doc-h3",onClick:o[14]||(o[14]=a=>s(l)("customizing-menu-options"))},"Customizing menu options"),I,i(n,{title:"Options slot",file:"OptionSlot"}),z,i(n,{title:"Object options",file:"OptionQToggle"}),$,i(n,{title:"No options slot",file:"OptionNoneSlot"}),e("h3",{id:"lazy-loading",class:"doc-heading doc-h3",onClick:o[15]||(o[15]=a=>s(l)("lazy-loading"))},"Lazy loading"),x,i(n,{title:"Lazy load options",file:"OptionLazyLoad"}),M,i(n,{title:"Dynamic loading options",file:"OptionsDynamic"}),e("h3",{id:"cover-mode",class:"doc-heading doc-h3",onClick:o[16]||(o[16]=a=>s(l)("cover-mode"))},"Cover mode"),i(n,{title:"Menu covering component",file:"OptionCover"}),e("h2",{id:"the-display-value",class:"doc-heading doc-h2",onClick:o[17]||(o[17]=a=>s(l)("the-display-value"))},"The display value"),i(n,{title:"Custom display value",file:"DisplayCustomValue"}),i(n,{title:"Chips as display value",file:"DisplayChips"}),i(n,{title:"Selected-item slot",file:"DisplaySelectedItemSlot"}),e("h2",{id:"filtering-and-autocomplete",class:"doc-heading doc-h2",onClick:o[18]||(o[18]=a=>s(l)("filtering-and-autocomplete"))},"Filtering and autocomplete"),e("h3",{id:"native-attributes-with-use-input",class:"doc-heading doc-h3",onClick:o[19]||(o[19]=a=>s(l)("native-attributes-with-use-input"))},"Native attributes with “use-input”"),B,e("p",null,[t("More information: "),i(c,{to:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"},{default:d(()=>[t("native input attributes")]),_:1}),t(".")]),i(n,{title:"Filtering options",file:"InputFilterOptions"}),i(n,{title:"Basic filtering",file:"BasicFiltering"}),i(n,{title:"Filtering on more than 2 chars",file:"InputFilterMin"}),i(n,{title:"Text autocomplete",file:"TextAutocomplete"}),i(n,{title:"Lazy filtering",file:"InputFilterLazy"}),i(n,{title:"Selecting option after filtering",file:"InputFilterAfter"}),e("h2",{id:"create-new-values",class:"doc-heading doc-h2",onClick:o[20]||(o[20]=a=>s(l)("create-new-values"))},"Create new values"),F,P,e("h3",{id:"the-new-value-mode-prop",class:"doc-heading doc-h3",onClick:o[21]||(o[21]=a=>s(l)("the-new-value-mode-prop"))},"The new-value-mode prop"),R,E,i(n,{title:"New value mode",file:"CreateNewValueMode"}),e("h3",{id:"the-new-value-event",class:"doc-heading doc-h3",onClick:o[22]||(o[22]=a=>s(l)("the-new-value-event"))},"The @new-value event"),W,L,q,i(n,{title:"Listening on @new-value",file:"CreateListener"}),i(n,{title:"Adding only unique values",file:"CreateListenerUnique"}),e("h3",{id:"using-menu-and-filtering",class:"doc-heading doc-h3",onClick:o[23]||(o[23]=a=>s(l)("using-menu-and-filtering"))},"Using menu and filtering"),H,i(n,{title:"Filtering and adding to menu",file:"FilteringAddsToMenu"}),G,i(n,{title:"Filtering without adding to menu",file:"FilteringNoAddToMenu"}),V,i(n,{title:"Generating multiple values",file:"FilteringAddMultiple"}),e("h2",{id:"sanitization",class:"doc-heading doc-h2",onClick:o[24]||(o[24]=a=>s(l)("sanitization"))},"Sanitization"),j,U,Y,K,Z,J,i(n,{title:"Options in HTML form",file:"HtmlOptions"}),i(n,{title:"Display value in HTML form",file:"HtmlDisplayValue"}),e("h2",{id:"render-performance",class:"doc-heading doc-h2",onClick:o[25]||(o[25]=a=>s(l)("render-performance"))},"Render performance"),X,ee,i(n,{title:"100k options",file:"RenderPerf"}),e("h2",{id:"keyboard-navigation",class:"doc-heading doc-h2",onClick:o[26]||(o[26]=a=>s(l)("keyboard-navigation"))},"Keyboard navigation"),te,oe,ie,ne,e("h2",{id:"native-form-submit",class:"doc-heading doc-h2",onClick:o[27]||(o[27]=a=>s(l)("native-form-submit"))},"Native form submit"),le,i(n,{title:"Native form",file:"NativeForm"})]),_:1}))}},ke=r(se,[["__file","select.md"]]);export{ke as default};
