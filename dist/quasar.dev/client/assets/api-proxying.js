import{b as o,d as p,w as t,h as n,i as s,e as a,f as r}from"./vendor.js";import{D as c,a as l}from"./DocPage.js";import{D as i}from"./DocPrerender.js";import{C as u}from"./CopyButton.js";import{_ as k}from"./index.js";const d=n("p",null,"When integrating a project folder (created by Quasar CLI) with an existing backend, a common need is to access the backend API when using the dev server. To achieve this, we can run the dev server and the API backend side-by-side (or remotely), and let the dev server proxy all API requests to the actual backend.",-1),y=n("p",null,"This is useful if you access relative paths in your API requests. Obviously, these relative paths will probably not work while you are developing. In order to create an environment similar to the one used by your deployed website/app, you can proxy your API requests.",-1),h=n("code",{class:"doc-token"},"/quasar.config",-1),g=n("code",{class:"doc-token"},"devServer.proxy",-1),m=n("code",{class:"doc-token"},"http-proxy",-1),f=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"devServer"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"proxy"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// string shorthand"),s(`
    `),n("span",{class:"token string-property property"},"'/foo'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'http://localhost:4567'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token comment"},"// with options"),s(`
    `),n("span",{class:"token string-property property"},"'/api'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token literal-property property"},"target"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'http://jsonplaceholder.typicode.com'"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token literal-property property"},"changeOrigin"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token function-variable function"},"rewrite"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"path"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" path"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"replace"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"^\\/api"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"''"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token comment"},"// with RegEx"),s(`
    `),n("span",{class:"token string-property property"},"'^/fallback/.*'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token literal-property property"},"target"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'http://jsonplaceholder.typicode.com'"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token literal-property property"},"changeOrigin"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token function-variable function"},"rewrite"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"path"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" path"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"replace"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"^\\/fallback"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"''"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token comment"},"// Using the proxy instance"),s(`
    `),n("span",{class:"token string-property property"},"'/api'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token literal-property property"},"target"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'http://jsonplaceholder.typicode.com'"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token literal-property property"},"changeOrigin"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token function-variable function"},"configure"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("proxy"),n("span",{class:"token punctuation"},","),s(" options")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// proxy will be an instance of 'http-proxy'"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token comment"},"// Proxying websockets or socket.io"),s(`
    `),n("span",{class:"token string-property property"},"'/socket.io'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token literal-property property"},"target"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'ws://localhost:3000'"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token literal-property property"},"ws"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),x={__name:"api-proxying",setup(_){const e=[{name:"The quasar.config file",category:"Quasar CLI (with Vite)",path:"/quasar-cli-vite/quasar-config-file"}];return(v,b)=>(o(),p(c,{title:"API Proxying for Dev",desc:"(@quasar/app-vite) How to use an API proxy with the Quasar dev server.",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/api-proxying",related:e},{default:t(()=>[d,y,n("p",null,[s("To configure the proxy rules, edit the "),h,s(" file in "),g,s(". Under the hood, it uses "),m,s(". Full list of its options "),a(l,{to:"https://github.com/http-party/node-http-proxy#options"},{default:t(()=>[s("here")]),_:1}),s(".")]),a(r(i),{title:"/quasar.config file"},{default:t(()=>[f,a(u)]),_:1})]),_:1}))}},C=k(x,[["__file","api-proxying.md"]]);export{C as default};
