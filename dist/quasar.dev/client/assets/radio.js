import{_ as u,a as h}from"./index.js";import{p as m,b as g,d as f,w as l,h as e,i as t,e as i,f as s,j as b}from"./vendor.js";import{c as n}from"./_examples_frameless-electron-window.js";import{D as v,a as r}from"./DocPage.js";import{D as d}from"./DocExample.js";import{D as k}from"./DocApi.js";import"./DocCode.js";import"./CopyButton.js";import"./DocCodepen.js";import"./utils.js";import"./DocCardTitle.js";const w=e("p",null,"The QRadio component is another basic element for user input. You can use this to supply a way for the user to pick an option from multiple choices.",-1),_={class:"doc-note doc-note--tip"},C=e("p",{class:"doc-note__title"},"TIP",-1),D=e("p",null,[t("In the second row in the example below, the property "),e("code",{class:"doc-token"},"keep-color"),t(" is being used to retain the passed in color when the radio button is not in a toggled state.")],-1),Q=e("p",null,[t("Apart from the standard sizes below, you can define your own through the "),e("code",{class:"doc-token"},"size"),t(" property (last one is a custom size).")],-1),y={class:"doc-note doc-note--tip"},I=e("p",{class:"doc-note__title"},"TIP",-1),x=e("p",null,[t("In the example below, we are rendering a "),e("code",{class:"doc-token"},"<label>"),t(" tag (notice "),e("code",{class:"doc-token"},'tag="label"'),t(") so the QRadio will respond to clicks on QItems to change toggle state.")],-1),$=e("p",null,[t("When dealing with a native form which has an "),e("code",{class:"doc-token"},"action"),t(" and a "),e("code",{class:"doc-token"},"method"),t(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),e("code",{class:"doc-token"},"name"),t(" property on QRadio, otherwise formData will not contain it (if it should) - all value are converted to string (native behaviour, so do not use Object values):")],-1),z={__name:"radio",setup(O){m("_q_ex",{name:"QRadio",list:h(()=>import("./e.QRadio.js"),[])});const c=[{name:"Option Group",category:"Form Components",path:"/vue-components/option-group"},{name:"Button Toggle",category:"Form Components",path:"/vue-components/button-toggle"},{name:"Checkbox",category:"Form Components",path:"/vue-components/checkbox"},{name:"Toggle",category:"Form Components",path:"/vue-components/toggle"}],p=[{id:"qradio-api",title:"2. QRadio API",deep:!0},{id:"usage",title:"3. Usage"},{id:"standard",title:"3.1. Standard",sub:!0},{id:"with-custom-icons",title:"3.2. With custom icons",sub:!0},{id:"dense",title:"3.3. Dense",sub:!0},{id:"coloring",title:"3.4. Coloring",sub:!0},{id:"force-dark-mode",title:"3.5. Force dark mode",sub:!0},{id:"disable",title:"3.6. Disable",sub:!0},{id:"label-on-left-side",title:"3.7. Label on left-side",sub:!0},{id:"sizes",title:"3.8. Sizes",sub:!0},{id:"with-qoptiongroup",title:"3.9. With QOptionGroup",sub:!0},{id:"with-qitem",title:"3.10. With QItem",sub:!0},{id:"native-form-submit",title:"3.11. Native form submit",sub:!0}];return(R,o)=>(g(),f(v,{title:"Radio",desc:"The QRadio Vue component is a basic element for user input. It can be used to supply a way for the user to pick an option from multiple choices.",heading:"","edit-link":"vue-components/radio",toc:p,related:c},{default:l(()=>[w,e("div",_,[C,e("p",null,[t("Please also refer to the "),i(r,{to:"/vue-components/option-group"},{default:l(()=>[t("QOptionGroup")]),_:1}),t(" on other possibilities for creating groups of Radios.")])]),i(k,{file:"QRadio"}),e("h2",{id:"usage",class:"doc-heading doc-h2",onClick:o[0]||(o[0]=a=>s(n)("usage"))},"Usage"),e("h3",{id:"standard",class:"doc-heading doc-h3",onClick:o[1]||(o[1]=a=>s(n)("standard"))},"Standard"),i(d,{title:"Standard",file:"Standard"}),e("h3",{id:"with-custom-icons",class:"doc-heading doc-h3",onClick:o[2]||(o[2]=a=>s(n)("with-custom-icons"))},[t("With custom icons "),i(b,{label:"v2.5+"})]),i(d,{title:"With icons",file:"WithIcons"}),e("h3",{id:"dense",class:"doc-heading doc-h3",onClick:o[3]||(o[3]=a=>s(n)("dense"))},"Dense"),i(d,{title:"Dense",file:"Dense"}),e("h3",{id:"coloring",class:"doc-heading doc-h3",onClick:o[4]||(o[4]=a=>s(n)("coloring"))},"Coloring"),D,i(d,{title:"Coloring",file:"Coloring"}),e("h3",{id:"force-dark-mode",class:"doc-heading doc-h3",onClick:o[5]||(o[5]=a=>s(n)("force-dark-mode"))},"Force dark mode"),i(d,{title:"Force dark mode",file:"OnDarkBackground"}),e("h3",{id:"disable",class:"doc-heading doc-h3",onClick:o[6]||(o[6]=a=>s(n)("disable"))},"Disable"),i(d,{title:"Disable",file:"Disable"}),e("h3",{id:"label-on-left-side",class:"doc-heading doc-h3",onClick:o[7]||(o[7]=a=>s(n)("label-on-left-side"))},"Label on left-side"),i(d,{title:"Label on left side",file:"LabelPosition"}),e("h3",{id:"sizes",class:"doc-heading doc-h3",onClick:o[8]||(o[8]=a=>s(n)("sizes"))},"Sizes"),Q,i(d,{title:"Standard sizes",file:"StandardSizes"}),e("h3",{id:"with-qoptiongroup",class:"doc-heading doc-h3",onClick:o[9]||(o[9]=a=>s(n)("with-qoptiongroup"))},"With QOptionGroup"),e("div",y,[I,e("p",null,[t("You can also use "),i(r,{to:"/vue-components/option-group"},{default:l(()=>[t("QOptionGroup")]),_:1}),t(", which simplifies the usage when you have groups of radios, like in example below.")])]),i(d,{title:"Usage with QOptionGroup",file:"OptionGroup"}),e("h3",{id:"with-qitem",class:"doc-heading doc-h3",onClick:o[10]||(o[10]=a=>s(n)("with-qitem"))},"With QItem"),x,i(d,{title:"With QItem",file:"InaList"}),e("h3",{id:"native-form-submit",class:"doc-heading doc-h3",onClick:o[11]||(o[11]=a=>s(n)("native-form-submit"))},"Native form submit"),$,i(d,{title:"Native form",file:"NativeForm"})]),_:1}))}},V=u(z,[["__file","radio.md"]]);export{V as default};
