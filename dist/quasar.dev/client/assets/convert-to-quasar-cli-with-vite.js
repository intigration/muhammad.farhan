import{b as h,d as f,w as o,h as e,f as n,e as s,k as d,i as t}from"./vendor.js";import{c as i}from"./_examples_frameless-electron-window.js";import{D as k,a as l}from"./DocPage.js";import{D as p}from"./DocPrerender.js";import{C as c}from"./CopyButton.js";import{_ as m}from"./index.js";const w=e("p",null,[t("This page will guide you on how to convert a Quasar CLI with Webpack ("),e("code",{class:"doc-token"},"@quasar/app-webpack"),t(" - formerly known as "),e("code",{class:"doc-token"},"@quasar/app"),t(") project into a Quasar CLI with Vite one ("),e("code",{class:"doc-token"},"@quasar/app-vite"),t(").")],-1),g=e("pre",{class:"doc-code"},[e("code",null,[t("$ "),e("span",{class:"token function"},"yarn"),t(` create quasar
`),e("span",{class:"token comment"},'# then pick "App with Quasar CLI", "Quasar v2", "Quasar App CLI with Vite"')])],-1),y=e("pre",{class:"doc-code"},[e("code",null,[t("$ "),e("span",{class:"token function"},"npm"),t(` init quasar
`),e("span",{class:"token comment"},'# then pick "App with Quasar CLI", "Quasar v2", "Quasar App CLI with Vite"')])],-1),v=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token comment"},"# experimental support"),t(`
$ `),e("span",{class:"token function"},"pnpm"),t(` create quasar
`),e("span",{class:"token comment"},'# then pick "App with Quasar CLI", "Quasar v2", "Quasar App CLI with Vite"')])],-1),_=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token comment"},"# experimental support"),t(`
$ bun create quasar
`),e("span",{class:"token comment"},'# then pick "App with Quasar CLI", "Quasar v2", "Quasar App CLI with Vite"')])],-1),b=e("p",null,"There are significant changes to the root files so it’s easier to generate a new project folder rather than explaining each of the many changes.",-1),C=e("p",null,"From your original project folder, copy these as they are:",-1),q=e("ul",null,[e("li",null,"/src (with small caveat; see next steps)"),e("li",null,"/src-cordova"),e("li",null,"/src-capacitor"),e("li",null,"/src-electron"),e("li",null,"/src-pwa (with small caveat; see next steps)"),e("li",null,"/src-ssr (with small caveat; see next steps)"),e("li",null,[e("s",null,"/src-bex"),t(),e("strong",null,"Nope. Don’t!")])],-1),x=e("p",null,[t("Move "),e("code",{class:"doc-token"},"/src/index.template.html"),t(" to "),e("code",{class:"doc-token"},"/index.html"),t(". And make the following change:")],-1),S=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token deleted-sign deleted"},[e("span",{class:"token prefix deleted"},"-"),e("span",{class:"token line"},` <!-- DO NOT touch the following DIV -->
`),e("span",{class:"token prefix deleted"},"-"),e("span",{class:"token line"},` <div id="q-app"></div>
`)]),e("span",{class:"token inserted-sign inserted"},[e("span",{class:"token prefix inserted"},"+"),e("span",{class:"token line"}," <!-- quasar:entry-point -->")])])],-1),Q=e("p",null,[t("Also, edit "),e("code",{class:"doc-token"},"/src/router/index.js"),t(":")],-1),V=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token comment"},"// old way"),t(`
`),e("span",{class:"token literal-property property"},"history"),e("span",{class:"token operator"},":"),t(),e("span",{class:"token function"},"createHistory"),e("span",{class:"token punctuation"},"("),t("process"),e("span",{class:"token punctuation"},"."),t("env"),e("span",{class:"token punctuation"},"."),e("span",{class:"token constant"},"MODE"),t(),e("span",{class:"token operator"},"==="),t(),e("span",{class:"token string"},"'ssr'"),t(),e("span",{class:"token operator"},"?"),t(),e("span",{class:"token keyword"},"void"),t(),e("span",{class:"token number"},"0"),t(),e("span",{class:"token operator"},":"),t(" process"),e("span",{class:"token punctuation"},"."),t("env"),e("span",{class:"token punctuation"},"."),e("span",{class:"token constant"},"VUE_ROUTER_BASE"),e("span",{class:"token punctuation"},")"),t(`

`),e("span",{class:"token comment"},"// new way"),t(`
`),e("span",{class:"token literal-property property"},"history"),e("span",{class:"token operator"},":"),t(),e("span",{class:"token function"},"createHistory"),e("span",{class:"token punctuation"},"("),t("process"),e("span",{class:"token punctuation"},"."),t("env"),e("span",{class:"token punctuation"},"."),e("span",{class:"token constant"},"VUE_ROUTER_BASE"),e("span",{class:"token punctuation"},")")])],-1),I=e("p",null,[t("Make sure that all your Vue component files (SFC) are imported with their "),e("code",{class:"doc-token"},".vue"),t(" extension explicitly specified. Omitting the file extension works with Webpack (due to Quasar CLI configured list of extensions for it to try), but not with Vite too.")],-1),A=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token comment"},"// BAD! Will not work:"),t(`
`),e("span",{class:"token keyword"},"import"),t(" MyComponent "),e("span",{class:"token keyword"},"from"),t(),e("span",{class:"token string"},"'./MyComponent'"),t(`

`),e("span",{class:"token comment"},"// GOOD:"),t(`
`),e("span",{class:"token keyword"},"import"),t(" MyComponent "),e("span",{class:"token keyword"},"from"),t(),e("span",{class:"token string"},"'./MyComponent.vue'")])],-1),L=e("code",{class:"doc-token"},"build",-1),j=e("code",{class:"doc-token"},"devServer",-1),P=e("code",{class:"doc-token"},"tsconfig.json > compilerOptions > paths",-1),B=e("code",{class:"doc-token"},"/package.json > browserslist",-1),E=e("code",{class:"doc-token"},"/src-ssr/directives",-1),T=e("code",{class:"doc-token"},"/src-ssr/production-export.js",-1),M=e("code",{class:"doc-token"},"/src-ssr/server.js",-1),$=e("li",null,[e("strong",null,[t("VERY important: BEFORE porting your files over, run command "),e("code",{class:"doc-token"},"quasar mode add pwa"),t(". Otherwise all the needed packages will not be added, and your build will fail.")])],-1),W=e("code",{class:"doc-token"},"service-worker.js",-1),D=e("code",{class:"doc-token"},"sw.js",-1),O=e("li",null,[t("Quasar CLI with Webpack relies on "),e("code",{class:"doc-token"},"quasar.config file > manifest"),t(" to specify the manifest, but you will need to use "),e("code",{class:"doc-token"},"/src-pwa/manifest.json"),t(" to declare it for Quasar CLI with Vite. After declaring the manifest in "),e("code",{class:"doc-token"},"/src-pwa/manifest.json"),t(", delete "),e("code",{class:"doc-token"},"quasar.config file > manifest"),t(" section.")],-1),R=e("li",null,[t("There were also some props in the "),e("code",{class:"doc-token"},"quasar.config"),t(" file that are no longer available. Most notably: "),e("code",{class:"doc-token"},"metaVariables"),t(", "),e("code",{class:"doc-token"},"metaVariablesFn"),t(". Simply edit "),e("code",{class:"doc-token"},"/index.html"),t(" and add those tags directly there.")],-1),N=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),t("head")]),e("span",{class:"token punctuation"},">")]),t(`
  <% if (ctx.mode.pwa) { %>
    `),e("span",{class:"token comment"},"<!-- Define your custom PWA-related meta/link tags here. -->"),t(`
  <% } %>
`),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),t("head")]),e("span",{class:"token punctuation"},">")])])],-1),F=e("p",null,"The BEX mode differs quite a lot. The PWA mode in a Quasar CLI with Vite project supports PWA manifest v3 and multiple content scripts. You will have to manually port over your BEX files to the new architecture, which should be fairly easy though.",-1),X=e("p",null,[t("It’s best to "),e("code",{class:"doc-token"},"$ quasar mode add bex"),t(", pick your preferred PWA manifest version (v2 or v3) and port your BEX.")],-1),Y=e("pre",{class:"doc-code"},[e("code",null,`$ quasar dev
$ quasar build`)],-1),H={__name:"convert-to-quasar-cli-with-vite",setup(U){const u=[{id:"step-1-create-a-quasar-cli-with-vite-project-folder-",title:"1.1. Step 1: Create a Quasar CLI with Vite project folder:",sub:!0},{id:"step-2-copy-folders-from-original-folder",title:"1.2. Step 2: Copy folders from original folder",sub:!0},{id:"step-3-explicitly-specify-extensions-on-all-your-import-statements",title:"1.3. Step 3: Explicitly specify extensions on all your import statements",sub:!0},{id:"step-4-check-the-new-quasar-config-file",title:"1.4. Step 4: Check the new quasar.config file",sub:!0},{id:"step-5-browser-compatibility",title:"1.5. Step 5: Browser compatibility",sub:!0},{id:"step-6-ssr-related",title:"1.6. Step 6: SSR related",sub:!0},{id:"step-7-pwa-related",title:"1.7. Step 7: PWA related",sub:!0},{id:"step-8-bex-related",title:"1.8. Step 8: BEX related",sub:!0},{id:"step-9-and-were-done",title:"1.9. Step 9: And we’re done",sub:!0}];return(G,a)=>(h(),f(k,{title:"Convert project to Quasar CLI with Vite",desc:"(@quasar/app-vite) How to convert a Quasar CLI with Webpack project to a Quasar CLI with Vite one.",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/convert-to-quasar-cli-with-vite",toc:u},{default:o(()=>[w,e("h3",{id:"step-1-create-a-quasar-cli-with-vite-project-folder-",class:"doc-heading doc-h3",onClick:a[0]||(a[0]=r=>n(i)("step-1-create-a-quasar-cli-with-vite-project-folder-"))},"Step 1: Create a Quasar CLI with Vite project folder:"),s(n(p),{tabs:["Yarn","NPM","PNPM","Bun"]},{default:o(()=>[s(d,{class:"q-pa-none",name:"Yarn"},{default:o(()=>[g,s(c,{lang:"bash"})]),_:1}),s(d,{class:"q-pa-none",name:"NPM"},{default:o(()=>[y,s(c,{lang:"bash"})]),_:1}),s(d,{class:"q-pa-none",name:"PNPM"},{default:o(()=>[v,s(c,{lang:"bash"})]),_:1}),s(d,{class:"q-pa-none",name:"Bun"},{default:o(()=>[_,s(c,{lang:"bash"})]),_:1})]),_:1}),b,e("h3",{id:"step-2-copy-folders-from-original-folder",class:"doc-heading doc-h3",onClick:a[1]||(a[1]=r=>n(i)("step-2-copy-folders-from-original-folder"))},"Step 2: Copy folders from original folder"),C,q,x,s(n(p),null,{default:o(()=>[S,s(c)]),_:1}),Q,s(n(p),null,{default:o(()=>[V,s(c)]),_:1}),e("h3",{id:"step-3-explicitly-specify-extensions-on-all-your-import-statements",class:"doc-heading doc-h3",onClick:a[2]||(a[2]=r=>n(i)("step-3-explicitly-specify-extensions-on-all-your-import-statements"))},"Step 3: Explicitly specify extensions on all your import statements"),I,s(n(p),null,{default:o(()=>[A,s(c)]),_:1}),e("h3",{id:"step-4-check-the-new-quasar-config-file",class:"doc-heading doc-h3",onClick:a[3]||(a[3]=r=>n(i)("step-4-check-the-new-quasar-config-file"))},"Step 4: Check the new quasar.config file"),e("p",null,[t("There are property changes in "),L,t(", "),j,t(", and all Quasar Modes (pwa, ssr, etc). The props are detailed in the "),s(l,{to:"/quasar-cli-vite/quasar-config-file"},{default:o(()=>[t("quasar.config file")]),_:1}),t(" page. You will have to manually port your configuration to the Quasar CLI with Vite architecture.")]),e("h4",{id:"typescript-aliases",class:"doc-heading doc-h4",onClick:a[4]||(a[4]=r=>n(i)("typescript-aliases"))},"TypeScript Aliases"),e("p",null,[t("If you are using TypeScript and defined custom path aliases in "),P,t(", they will no longer be processed automatically. See "),s(l,{to:"quasar-cli-vite/handling-vite#folder-aliases"},{default:o(()=>[t("Folder aliases | Handling Vite")]),_:1}),t(" for available ways to handle this.")]),e("h3",{id:"step-5-browser-compatibility",class:"doc-heading doc-h3",onClick:a[5]||(a[5]=r=>n(i)("step-5-browser-compatibility"))},"Step 5: Browser compatibility"),e("p",null,[t("A Quasar CLI with Webpack project relies on "),B,t(" to specify which browsers you are targeting. That property no longer has any meaning. Projects managed by Quasar CLI with Vite work completely different and you might want to check the "),s(l,{to:"/quasar-cli-vite/browser-compatibility"},{default:o(()=>[t("Browser Compatibility")]),_:1}),t(" page.")]),e("h3",{id:"step-6-ssr-related",class:"doc-heading doc-h3",onClick:a[6]||(a[6]=r=>n(i)("step-6-ssr-related"))},"Step 6: SSR related"),e("ul",null,[e("li",null,[t("Delete "),E,t(" folder (if you have it) – it no longer serves any purpose; check "),s(l,{to:"/quasar-cli-vite/developing-ssr/vue-ssr-directives"},{default:o(()=>[t("Vue SSR Directives")]),_:1}),t(" page")]),e("li",null,[t("Port the "),T,t(" file to "),M,t("; Make sure to read about the "),s(l,{to:"/quasar-cli-vite/developing-ssr/ssr-webserver"},{default:o(()=>[t("SSR Webserver")]),_:1}),t(" first")])]),e("p",null,[t("More info: "),s(l,{to:"/quasar-cli-vite/developing-ssr/configuring-ssr"},{default:o(()=>[t("Configuring SSR")]),_:1})]),e("h3",{id:"step-7-pwa-related",class:"doc-heading doc-h3",onClick:a[7]||(a[7]=r=>n(i)("step-7-pwa-related"))},"Step 7: PWA related"),e("ul",null,[$,e("li",null,[t("The default name of the outputted service worker file has changed from "),W,t(" to "),D,t(". This can break your update process the first time the new app is loaded. So, if your app is in production, to ensure smooth upgrades from the previous Webpack builds, make sure the name matches the name of your previous service worker file. You can set it through "),s(l,{to:"/quasar-cli-vite/developing-pwa/configuring-pwa#quasar-config-file"},{default:o(()=>[t("quasar.config file > pwa > swFilename")]),_:1}),t(".")]),O,R]),s(n(p),{title:"/index.html"},{default:o(()=>[N,s(c)]),_:1}),e("p",null,[t("More info: "),s(l,{to:"/quasar-cli-vite/developing-pwa/preparation"},{default:o(()=>[t("PWA - Preparation")]),_:1})]),e("h3",{id:"step-8-bex-related",class:"doc-heading doc-h3",onClick:a[8]||(a[8]=r=>n(i)("step-8-bex-related"))},"Step 8: BEX related"),F,X,e("p",null,[t("More info: "),s(l,{to:"/quasar-cli-vite/developing-browser-extensions/preparation#2-understand-the-anatomy-of-src-bex"},{default:o(()=>[t("Preparation and folder structure")]),_:1}),t(" and "),s(l,{to:"/quasar-cli-vite/developing-browser-extensions/configuring-bex"},{default:o(()=>[t("Configuring BEX")]),_:1}),t(".")]),e("h3",{id:"step-9-and-were-done",class:"doc-heading doc-h3",onClick:a[9]||(a[9]=r=>n(i)("step-9-and-were-done"))},"Step 9: And we’re done"),s(n(p),null,{default:o(()=>[Y,s(c,{lang:"bash"})]),_:1})]),_:1}))}},se=m(H,[["__file","convert-to-quasar-cli-with-vite.md"]]);export{se as default};
