import{c as i}from"./_examples_frameless-electron-window.js";import{D as h,a as r}from"./DocPage.js";import{D as m}from"./DocTree.js";import{D as d}from"./DocPrerender.js";import{C as c}from"./CopyButton.js";import{_ as f}from"./index.js";import{b as x,d as _,w as n,h as e,f as a,e as t,i as o}from"./vendor.js";const b=e("p",null,"The difference between building a SPA, Mobile App, Electron App, BEX or SSR is simply determined by the “mode” parameter in “quasar dev” and “quasar build” commands.",-1),w=e("p",null,"In order to build a BEX, we first need to add the BEX mode to our Quasar project:",-1),B=e("pre",{class:"doc-code"},[e("code",null,[o("$ quasar mode "),e("span",{class:"token function"},"add"),o(" bex")])],-1),g=e("p",null,"If you want to jump right in and start developing, you can skip the “quasar mode” command and issue:",-1),k=e("pre",{class:"doc-code"},[e("code",null,[o("$ quasar dev "),e("span",{class:"token parameter variable"},"-m"),o(" bex")])],-1),E=e("p",null,[o("This will add BEX mode automatically, if it is missing adding a "),e("code",{class:"doc-token"},"src-bex"),o(" folder to your project.")],-1),y={class:"doc-note doc-note--tip"},j=e("p",{class:"doc-note__title"},"TIP",-1),v=e("p",null,[o("The "),e("code",{class:"doc-token"},"src-bex"),o(" folder is just a standard browser extension folder so you are free to use it as you would any other browser extension project folder. Please refer to supported Browser Extension documentation to learn more.")],-1),X=e("li",null,[e("strong",null,"Other Chromium Based Browsers"),o(" - Refer to their specific documentation.")],-1),C=e("p",null,"The new folder has the following structure:",-1),q=e("p",null,"The next section will discuss these in more detail.",-1),S={__name:"preparation",setup(D){const l=[{id:"add-quasar-bex-mode",title:"2. Add Quasar BEX Mode"},{id:"understand-the-anatomy-of-src-bex",title:"3. Understand The Anatomy Of “src-bex”"}],p={tree:{l:"src-bex",c:[{l:"css",e:"CSS to use in the Browser Context",c:[{l:"content-css.css",e:"CSS file which is auto injected into the consuming webpage via the manifest.json"}]},{l:"icons",e:"Icons of your app for all platforms",c:[{l:"icon-16x16.png ",e:"Icon file at 16px x 16px"},{l:"icon-48x48.png",e:"Icon file at 48px x 48px"},{l:"icon-128x128.png",e:"Icon file at 128px x 128px"}]},{l:"js",e:"Javascript files used within the context of the BEX.",c:[{l:"background.js",e:"Standard background script BEX file - auto injected via manifest.json"},{l:"background-hooks.js",e:"Background script with a hook into the BEX communication layer"},{l:"content-hooks.js",e:"Content script script with a hook into the BEX communication layer"},{l:"content-script.js",e:"Standard content script BEX file - auto injected via manifest.json"},{l:"dom-hooks.js",e:"JS file which is injected into the DOM with a hook into the BEX communication layer"}]},{l:"www/",e:"Compiled BEX source - compiled from /src (Quasar app)"},{l:"manifest.json",e:"Main thread code for production"}]}};return(T,s)=>(x(),_(h,{title:"Preparation for BEX",desc:"(@quasar/app-webpack) How to add the Browser Extension (BEX) mode into a Quasar app.",overline:"Quasar CLI with Webpack - @quasar/app-webpack",heading:"","edit-link":"quasar-cli-webpack/developing-browser-extensions/preparation",toc:l},{default:n(()=>[b,e("h2",{id:"add-quasar-bex-mode",class:"doc-heading doc-h2",onClick:s[0]||(s[0]=u=>a(i)("add-quasar-bex-mode"))},"Add Quasar BEX Mode"),w,t(a(d),null,{default:n(()=>[B,t(c,{lang:"bash"})]),_:1}),g,t(a(d),null,{default:n(()=>[k,t(c,{lang:"bash"})]),_:1}),E,e("div",y,[j,v,e("ul",null,[e("li",null,[t(r,{to:"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions"},{default:n(()=>[o("Firefox Browser Extension Documentation")]),_:1})]),e("li",null,[t(r,{to:"https://developer.chrome.com/extensions"},{default:n(()=>[o("Google Chrome Browser Extension Documentation")]),_:1})]),X])]),e("h2",{id:"understand-the-anatomy-of-src-bex",class:"doc-heading doc-h2",onClick:s[1]||(s[1]=u=>a(i)("understand-the-anatomy-of-src-bex"))},"Understand The Anatomy Of “src-bex”"),C,t(m,{def:p.tree},null,8,["def"]),q]),_:1}))}},N=f(S,[["__file","preparation.md"]]);export{N as default};
