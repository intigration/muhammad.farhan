import{b as h,d as m,w as o,h as n,i as s,e as t,f as e,l as u}from"./vendor.js";import{c as p}from"./_examples_frameless-electron-window.js";import{D as f,a as r}from"./DocPage.js";import{D as c}from"./DocPrerender.js";import{C as l}from"./CopyButton.js";import{_ as w}from"./index.js";const g=n("p",null,"The SSR middleware files fulfill one special purpose: they prepare the Nodejs server that runs your SSR app with additional functionality (Expressjs compatible middleware).",-1),y=n("p",null,[s("With SSR middleware files, it is possible to split the middleware logic into self-contained, easy to maintain files. It is also trivial to disable any of the SSR middleware files or even contextually determine which of the SSR middleware files get into the build through the "),n("code",{class:"doc-token"},"/quasar.config"),s(" file configuration.")],-1),_={class:"doc-note doc-note--tip"},b=n("p",{class:"doc-note__title"},"TIP",-1),v=n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"WARNING"),n("p",null,[s("You will need at least one SSR middleware file which handles the rendering of the page with Vue (which should be positioned as last in the middlewares list). When SSR mode is added to your Quasar CLI project, this will be scaffolded into "),n("code",{class:"doc-token"},"src-ssr/middlewares/render.js"),s(".")])],-1),S=n("p",null,"A SSR middleware file is a simple JavaScript file which exports a function. Quasar will then call the exported function when it prepares the Nodejs server (Expressjs) app and additionally pass an Object as param (which will be detailed in the next section).",-1),x=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// import something here"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" app"),n("span",{class:"token punctuation"},","),s(" resolve"),n("span",{class:"token punctuation"},","),s(" publicPath"),n("span",{class:"token punctuation"},","),s(" folders"),n("span",{class:"token punctuation"},","),s(" render"),n("span",{class:"token punctuation"},","),s(" serve "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},'// something to do with the server "app"'),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),R=n("p",null,"The SSR middleware files can also be async:",-1),j=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// import something here"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" app"),n("span",{class:"token punctuation"},","),s(" resolve"),n("span",{class:"token punctuation"},","),s(" publicPath"),n("span",{class:"token punctuation"},","),s(" folders"),n("span",{class:"token punctuation"},","),s(" render"),n("span",{class:"token punctuation"},","),s(" serve "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},'// something to do with the server "app"'),s(`
  `),n("span",{class:"token keyword"},"await"),s(),n("span",{class:"token function"},"something"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),q=n("p",null,[s("You can wrap the returned function with "),n("code",{class:"doc-token"},"ssrMiddleware"),s(" helper to get a better IDE autocomplete experience (through Typescript):")],-1),P=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" ssrMiddleware "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"ssrMiddleware"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" app"),n("span",{class:"token punctuation"},","),s(" resolve"),n("span",{class:"token punctuation"},","),s(" publicPath"),n("span",{class:"token punctuation"},","),s(" folders"),n("span",{class:"token punctuation"},","),s(" render"),n("span",{class:"token punctuation"},","),s(" serve "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// something to do"),s(`
  `),n("span",{class:"token keyword"},"await"),s(),n("span",{class:"token function"},"something"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])],-1),C=n("p",null,"We are referring here to the Object received as parameter by the default exported function of the SSR middleware file.",-1),T=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" app"),n("span",{class:"token punctuation"},","),s(" resolve"),n("span",{class:"token punctuation"},","),s(" publicPath"),n("span",{class:"token punctuation"},","),s(" folders"),n("span",{class:"token punctuation"},","),s(" render"),n("span",{class:"token punctuation"},","),s(" serve "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{")])],-1),I=n("p",null,"Detailing the Object:",-1),N=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token punctuation"},"{"),s(`
  app`),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// Expressjs app instance"),s(`
  `),n("span",{class:"token literal-property property"},"resolve"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"urlPath"),n("span",{class:"token punctuation"},"("),s("path"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token function"},"root"),n("span",{class:"token punctuation"},"("),s("arg1"),n("span",{class:"token punctuation"},","),s(" arg2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token keyword"},"public"),n("span",{class:"token punctuation"},"("),s("arg1"),n("span",{class:"token punctuation"},","),s(" arg2"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  publicPath`),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// String"),s(`
  `),n("span",{class:"token literal-property property"},"folders"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    root`),n("span",{class:"token punctuation"},","),s("     "),n("span",{class:"token comment"},"// String"),s(`
    `),n("span",{class:"token keyword"},"public"),s("    "),n("span",{class:"token comment"},"// String"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token function"},"render"),n("span",{class:"token punctuation"},"("),s("ssrContext"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token literal-property property"},"serve"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"static"),n("span",{class:"token punctuation"},"("),s("path"),n("span",{class:"token punctuation"},","),s(" opts"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token function"},"error"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" err"),n("span",{class:"token punctuation"},","),s(" req"),n("span",{class:"token punctuation"},","),s(" res "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),D=n("p",null,"This is the Expressjs app instance. The “bread and butter” of any middleware since you’ll be using it to configure the webserver.",-1),E=n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Prop name"),n("th",{class:"text-left"},"Description")])],-1),$=n("tbody",null,[n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"urlPath(path)")]),n("td",null,[s("Whenever you define a route (with app.use(), app.get(), app.post() etc), you should use the "),n("code",{class:"doc-token"},"resolve.urlPath()"),s(" method so that you’ll also keep into account the configured publicPath (quasar.config file > build > publicPath).")])]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"root(path1[, path2, ...pathN])")]),n("td",null,[s("Resolve folder path to the root (of the project in dev and of the distributables in production). Under the hood, it does a "),n("code",{class:"doc-token"},"path.join()"),s(".")])]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"public(path1[, path2, ...pathN])")]),n("td",null,[s("Resolve folder path to the “public” folder. Under the hood, it does a "),n("code",{class:"doc-token"},"path.join()"),s(".")])])],-1),L=n("p",null,"The configured quasar.config file > build > publicPath",-1),M=n("p",null,[s("The "),n("code",{class:"doc-token"},"folders"),s(" is sometimes needed because the exact path to root folder and to the public folder differs in a production build than in a development build. So by using "),n("code",{class:"doc-token"},"folders"),s(" you won’t need to mind about this.")],-1),V=n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Prop name"),n("th",{class:"text-left"},"Description")])],-1),W=n("tbody",null,[n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"root")]),n("td",null,"Full path to the root (of the project in dev and of the distributables in production).")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"public")]),n("td",null,"Full path to the “public” folder.")])],-1),A=n("ul",null,[n("li",null,[s("Syntax: "),n("code",{class:"doc-token"},"<Promise(String)> render(ssrContext)"),s(".")]),n("li",null,"Description: Uses Vue and Vue Router to render the requested URL path. Returns the rendered HTML string to return to the client.")],-1),F=n("p",null,"serve.static():",-1),Q=n("li",null,[n("p",null,[s("Syntax: "),n("code",{class:"doc-token"},"<middlewareFn> serve.static(pathFromPublicFolder, opts)")])],-1),U=n("p",null,[s("Description: It’s essentially a wrapper over "),n("code",{class:"doc-token"},"express.static()"),s(" with a few convenient tweaks:")],-1),O=n("ul",null,[n("li",null,[s("the "),n("code",{class:"doc-token"},"pathFromPublicFolder"),s(" is a path resolved to the “public” folder out of the box")]),n("li",null,[s("the "),n("code",{class:"doc-token"},"opts"),s(" are the same as for "),n("code",{class:"doc-token"},"express.static()")]),n("li",null,[n("code",{class:"doc-token"},"opts.maxAge"),s(" is used by default, taking into account the quasar.config file > ssr > maxAge configuration; this sets how long the respective file(s) can live in browser’s cache")])],-1),H=n("pre",{class:"doc-code"},[n("code",null,[s("serve"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"static"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'my-file.json'"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"// is equivalent to:"),s(`

express`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"static"),n("span",{class:"token punctuation"},"("),s("resolve"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"public"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'my-file.json'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"maxAge"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token operator"},"..."),s(),n("span",{class:"token comment"},"// quasar.config file > ssr > maxAge"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])],-1),Y=n("p",null,"serve.error():",-1),B=n("ul",null,[n("li",null,[s("Syntax: "),n("code",{class:"doc-token"},"<void> serve.error({ err, req, res })")]),n("li",null,"Description: Displays a wealth of useful debug information (including the stack trace)."),n("li",null,[s("It’s available only in development and "),n("strong",null,"NOT in production"),s(".")])],-1),G=n("p",null,"The first step is always to generate a new SSR middleware file using Quasar CLI:",-1),J=n("pre",{class:"doc-code"},[n("code",null,[s("$ quasar new ssrmiddleware "),n("span",{class:"token operator"},"<"),s("name"),n("span",{class:"token operator"},">")])],-1),z=n("p",null,[s("Where "),n("code",{class:"doc-token"},"<name>"),s(" should be exchanged by a suitable name for your SSR middleware file.")],-1),K=n("p",null,[s("This command creates a new file: "),n("code",{class:"doc-token"},"/src-ssr/middlewares/<name>.js"),s(" with the following content:")],-1),X=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// import something here"),s(`

`),n("span",{class:"token comment"},'// "async" is optional!'),s(`
`),n("span",{class:"token comment"},"// remove it if you don't need it"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" app"),n("span",{class:"token punctuation"},","),s(" resolveUrlPath"),n("span",{class:"token punctuation"},","),s(" publicPath"),n("span",{class:"token punctuation"},","),s(" folders"),n("span",{class:"token punctuation"},","),s(" render "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},'// something to do with the server "app"'),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),Z=n("p",null,"You can also return a Promise:",-1),nn=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// import something here"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" app"),n("span",{class:"token punctuation"},","),s(" resolve"),n("span",{class:"token punctuation"},","),s(" publicPath"),n("span",{class:"token punctuation"},","),s(" folders"),n("span",{class:"token punctuation"},","),s(" render"),n("span",{class:"token punctuation"},","),s(" serve "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Promise"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("resolve"),n("span",{class:"token punctuation"},","),s(" reject")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},'// something to do with the server "app"'),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),sn=n("p",null,"You can now add content to that file depending on the intended use of your SSR middleware file.",-1),tn=n("p",null,[s("The last step is to tell Quasar to use your new SSR middleware file. For this to happen you need to add the file in the "),n("code",{class:"doc-token"},"/quasar.config"),s(" file")],-1),en=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"ssr"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"middlewares"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
    `),n("span",{class:"token comment"},"// references /src-ssr/middlewares/<name>.js"),s(`
    `),n("span",{class:"token string"},"'<name>'"),s(`
  `),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),an=n("p",null,"When building a SSR app, you may want some boot files to run only on production or only on development, in which case you can do so like below:",-1),on=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"ssr"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"middlewares"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
    ctx`),n("span",{class:"token punctuation"},"."),s("prod "),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token string"},"'<name>'"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"''"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// I run only on production!"),s(`
    ctx`),n("span",{class:"token punctuation"},"."),s("dev "),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token string"},"'<name>'"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"''"),s(),n("span",{class:"token comment"},"// I run only on development"),s(`
  `),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),cn=n("p",null,[s("In case you want to specify SSR middleware file from node_modules, you can do so by prepending the path with "),n("code",{class:"doc-token"},"~"),s(" (tilde) character:")],-1),ln=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"ssr"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"middlewares"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
    `),n("span",{class:"token comment"},"// boot file from an npm package"),s(`
    `),n("span",{class:"token string"},"'~my-npm-package/some/file'"),s(`
  `),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),pn=n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"WARNING"),n("p",null,"The order in which you specify the SSR middlewares matters because it determines the way in which the middlewares are applied to the Nodejs server. So they influence how it responds to the client.")],-1),un=n("div",{class:"doc-note doc-note--danger"},[n("p",{class:"doc-note__title"},"Important!"),n("p",null,[s("Out of all the possible SSR middlewares in your app, "),n("strong",null,"this one is absolutely required"),s(", because it handles the actual SSR rendering with Vue.")])],-1),rn=n("p",null,"In the example below we highlight that this middleware needs to be the last in the list. This is because it also responds to the client (as we’ll see in the second code sample below) with the HTML of the page. So any subsequent middleware cannot set headers.",-1),dn=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"ssr"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"middlewares"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
    `),n("span",{class:"token comment"},"// ..... all other middlewares"),s(`

    `),n("span",{class:"token string"},"'render'"),s(),n("span",{class:"token comment"},"// references /src-ssr/middlewares/render.js;"),s(`
             `),n("span",{class:"token comment"},"// you can name the file however you want,"),s(`
             `),n("span",{class:"token comment"},"// just make sure that it runs as last middleware"),s(`
  `),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),kn=n("p",null,"Now let’s see what it contains:",-1),hn=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// This middleware should execute as last one"),s(`
`),n("span",{class:"token comment"},"// since it captures everything and tries to"),s(`
`),n("span",{class:"token comment"},"// render the page with Vue"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" app"),n("span",{class:"token punctuation"},","),s(" resolve"),n("span",{class:"token punctuation"},","),s(" render"),n("span",{class:"token punctuation"},","),s(" serve "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// we capture any other Express route and hand it"),s(`
  `),n("span",{class:"token comment"},"// over to Vue and Vue Router to render our page"),s(`
  app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("resolve"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"urlPath"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'*'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("req"),n("span",{class:"token punctuation"},","),s(" res")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    res`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setHeader"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Content-Type'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'text/html'"),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token function"},"render"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" req"),n("span",{class:"token punctuation"},","),s(" res "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"html"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// now let's send the rendered html to the client"),s(`
        res`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"send"),n("span",{class:"token punctuation"},"("),s("html"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"catch"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"err"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// oops, we had an error while rendering the page"),s(`

        `),n("span",{class:"token comment"},"// we were told to redirect to another URL"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("err"),n("span",{class:"token punctuation"},"."),s("url"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
          `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("err"),n("span",{class:"token punctuation"},"."),s("code"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            res`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),s("err"),n("span",{class:"token punctuation"},"."),s("code"),n("span",{class:"token punctuation"},","),s(" err"),n("span",{class:"token punctuation"},"."),s("url"),n("span",{class:"token punctuation"},")"),s(`
          `),n("span",{class:"token punctuation"},"}"),s(`
          `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
            res`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),s("err"),n("span",{class:"token punctuation"},"."),s("url"),n("span",{class:"token punctuation"},")"),s(`
          `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token comment"},"// hmm, Vue Router could not find the requested route"),s(`
        `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("err"),n("span",{class:"token punctuation"},"."),s("code "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token number"},"404"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
          `),n("span",{class:"token comment"},'// Should reach here only if no "catch-all" route'),s(`
          `),n("span",{class:"token comment"},"// is defined in /src/routes"),s(`
          res`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"status"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"404"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"send"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'404 | Page Not Found'"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token comment"},"// well, we treat any other code as error;"),s(`
        `),n("span",{class:"token comment"},"// if we're in dev mode, then we can use Quasar CLI"),s(`
        `),n("span",{class:"token comment"},"// to display a nice error page that contains the stack"),s(`
        `),n("span",{class:"token comment"},"// and other useful information"),s(`
        `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("process"),n("span",{class:"token punctuation"},"."),s("env"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DEV"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
          `),n("span",{class:"token comment"},"// serve.error is available on dev only"),s(`
          serve`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"error"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" err"),n("span",{class:"token punctuation"},","),s(" req"),n("span",{class:"token punctuation"},","),s(" res "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token comment"},"// we're in production, so we should have another method"),s(`
        `),n("span",{class:"token comment"},"// to display something to the client when we encounter an error"),s(`
        `),n("span",{class:"token comment"},"// (for security reasons, it's not ok to display the same wealth"),s(`
        `),n("span",{class:"token comment"},"// of information as we do in development)"),s(`
        `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
          `),n("span",{class:"token comment"},"// Render Error Page on production or"),s(`
          `),n("span",{class:"token comment"},"// create a route (/src/routes) for an error page and redirect to it"),s(`
          res`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"status"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"500"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"send"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'500 | Internal Server Error'"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
      `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),mn=n("p",null,[s("Notice the "),n("code",{class:"doc-token"},"render"),s(" parameter (from the above code sample) that the exported function of the middleware gets called with. That’s where the SSR rendering happens.")],-1),fn=n("p",null,"While developing, whenever you change anything in the SSR middlewares, Quasar App CLI will automatically trigger a recompilation of client-side resources and apply the middleware changes to the Nodejs server (Expressjs).",-1),wn=n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,"You can use any Expressjs compatible middleware.")],-1),gn=n("p",null,"This one makes sense to use it for production only.",-1),yn=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(" compression "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'compression'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" app "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),s(`
    `),n("span",{class:"token function"},"compression"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"threshold"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),_n=n("p",null,"The order in which the SSR middlewares are applied matters. So it might be wise to set the following one as the first (in quasar.config file > ssr > middlewares) so that it will be able to intercept all client requests.",-1),bn=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" app"),n("span",{class:"token punctuation"},","),s(" resolve "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"all"),n("span",{class:"token punctuation"},"("),s("resolve"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"urlPath"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'*'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("req"),n("span",{class:"token punctuation"},","),s(" _"),n("span",{class:"token punctuation"},","),s(" next")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'someone requested:'"),n("span",{class:"token punctuation"},","),s(" req"),n("span",{class:"token punctuation"},"."),s("url"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token function"},"next"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),vn={__name:"ssr-middleware",setup(Sn){const d=[{name:"The quasar.config file",category:"Quasar CLI (with Webpack)",path:"/quasar-cli-webpack/quasar-config-file"}],k=[{id:"anatomy-of-a-middleware-file",title:"2. Anatomy of a middleware file"},{id:"middleware-object-parameter",title:"3. Middleware object parameter"},{id:"usage-of-ssr-middleware",title:"4. Usage of SSR middleware"},{id:"the-ssr-render-middleware",title:"5. The SSR render middleware"},{id:"hot-module-reload",title:"6. Hot Module Reload"},{id:"examples-of-ssr-middleware",title:"7. Examples of SSR middleware"},{id:"compression",title:"7.1. Compression",sub:!0},{id:"logger-interceptor",title:"7.2. Logger / Interceptor",sub:!0}];return(xn,a)=>(h(),m(f,{title:"SSR Middleware",desc:"(@quasar/app-webpack) Managing the SSR middleware in a Quasar app.",overline:"Quasar CLI with Webpack - @quasar/app-webpack",heading:"","edit-link":"quasar-cli-webpack/developing-ssr/ssr-middleware",toc:k,related:d},{default:o(()=>[g,y,n("div",_,[b,n("p",null,[s("For more advanced usage, you will need to get acquainted to the "),t(r,{to:"https://expressjs.com/en/4x/api.html"},{default:o(()=>[s("Expressjs API")]),_:1}),s(".")])]),v,n("h2",{id:"anatomy-of-a-middleware-file",class:"doc-heading doc-h2",onClick:a[0]||(a[0]=i=>e(p)("anatomy-of-a-middleware-file"))},"Anatomy of a middleware file"),S,t(e(c),null,{default:o(()=>[x,t(l)]),_:1}),R,t(e(c),null,{default:o(()=>[j,t(l)]),_:1}),q,t(e(c),null,{default:o(()=>[P,t(l)]),_:1}),n("p",null,[s("Notice we are using the "),t(r,{to:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"},{default:o(()=>[s("ES6 destructuring assignment")]),_:1}),s(". Only assign what you actually need/use.")]),n("h2",{id:"middleware-object-parameter",class:"doc-heading doc-h2",onClick:a[1]||(a[1]=i=>e(p)("middleware-object-parameter"))},"Middleware object parameter"),C,t(e(c),null,{default:o(()=>[T,t(l)]),_:1}),I,t(e(c),null,{default:o(()=>[N,t(l)]),_:1}),n("h4",{id:"app",class:"doc-heading doc-h4",onClick:a[2]||(a[2]=i=>e(p)("app"))},"app"),D,n("h4",{id:"resolve",class:"doc-heading doc-h4",onClick:a[3]||(a[3]=i=>e(p)("resolve"))},"resolve"),t(u,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:o(()=>[E,$]),_:1}),n("h4",{id:"publicpath",class:"doc-heading doc-h4",onClick:a[4]||(a[4]=i=>e(p)("publicpath"))},"publicPath"),L,n("h4",{id:"folders",class:"doc-heading doc-h4",onClick:a[5]||(a[5]=i=>e(p)("folders"))},"folders"),M,t(u,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:o(()=>[V,W]),_:1}),n("h4",{id:"render",class:"doc-heading doc-h4",onClick:a[6]||(a[6]=i=>e(p)("render"))},"render"),A,n("h4",{id:"serve",class:"doc-heading doc-h4",onClick:a[7]||(a[7]=i=>e(p)("serve"))},"serve"),F,n("ul",null,[Q,n("li",null,[U,O,t(e(c),null,{default:o(()=>[H,t(l)]),_:1})])]),Y,B,n("h2",{id:"usage-of-ssr-middleware",class:"doc-heading doc-h2",onClick:a[8]||(a[8]=i=>e(p)("usage-of-ssr-middleware"))},"Usage of SSR middleware"),G,t(e(c),null,{default:o(()=>[J,t(l,{lang:"bash"})]),_:1}),z,K,t(e(c),null,{default:o(()=>[X,t(l)]),_:1}),Z,t(e(c),null,{default:o(()=>[nn,t(l)]),_:1}),sn,tn,t(e(c),{title:"/quasar.config file"},{default:o(()=>[en,t(l)]),_:1}),an,t(e(c),{title:"/quasar.config file"},{default:o(()=>[on,t(l)]),_:1}),cn,t(e(c),{title:"/quasar.config file"},{default:o(()=>[ln,t(l)]),_:1}),pn,n("h2",{id:"the-ssr-render-middleware",class:"doc-heading doc-h2",onClick:a[9]||(a[9]=i=>e(p)("the-ssr-render-middleware"))},"The SSR render middleware"),un,rn,t(e(c),{title:"/quasar.config file"},{default:o(()=>[dn,t(l)]),_:1}),kn,t(e(c),{title:"/src-ssr/middlewares/render.js"},{default:o(()=>[hn,t(l)]),_:1}),mn,n("h2",{id:"hot-module-reload",class:"doc-heading doc-h2",onClick:a[10]||(a[10]=i=>e(p)("hot-module-reload"))},"Hot Module Reload"),fn,n("h2",{id:"examples-of-ssr-middleware",class:"doc-heading doc-h2",onClick:a[11]||(a[11]=i=>e(p)("examples-of-ssr-middleware"))},"Examples of SSR middleware"),wn,n("h3",{id:"compression",class:"doc-heading doc-h3",onClick:a[12]||(a[12]=i=>e(p)("compression"))},"Compression"),gn,t(e(c),null,{default:o(()=>[yn,t(l)]),_:1}),n("h3",{id:"logger-interceptor",class:"doc-heading doc-h3",onClick:a[13]||(a[13]=i=>e(p)("logger-interceptor"))},"Logger / Interceptor"),_n,t(e(c),null,{default:o(()=>[bn,t(l)]),_:1})]),_:1}))}},In=w(vn,[["__file","ssr-middleware.md"]]);export{In as default};
