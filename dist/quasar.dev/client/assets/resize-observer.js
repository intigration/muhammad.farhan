import{_ as a,a as n}from"./index.js";import{c}from"./_examples_frameless-electron-window.js";import{D as p}from"./DocPage.js";import{D as l}from"./DocExample.js";import{D as d}from"./DocApi.js";import{p as m,b as v,d as h,w as _,e as t,h as e,f as u,i as r}from"./vendor.js";import"./DocCode.js";import"./CopyButton.js";import"./DocCodepen.js";import"./utils.js";import"./DocCardTitle.js";const f=e("p",null,[r("QResizeObserver is a Quasar component that emits a "),e("code",{class:"doc-token"},"resize"),r(" event whenever the wrapping DOM element / component (defined as direct parent of QResizeObserver) changes its size (width and/or height). Note that no polling is involved, but overusing it is costly too.")],-1),g=e("p",null,"Please note that QResizeObserver will issue an event as soon as it gets rendered and attached to DOM, so you can have the initial size of the container.",-1),b={__name:"resize-observer",setup(z){m("_q_ex",{name:"QResizeObserver",list:n(()=>import("./e.QResizeObserver.js"),[])});const o=[{name:"Scroll Observer",category:"Observers",path:"/vue-components/scroll-observer"}],i=[{id:"qresizeobserver-api",title:"2. QResizeObserver API",deep:!0},{id:"usage",title:"3. Usage"}];return(O,s)=>(v(),h(p,{title:"Resize Observer (for Element)",desc:"The QResizeObserver Vue component emits a 'resize' event whenever the wrapping DOM element changes its width or height.",heading:"","edit-link":"vue-components/resize-observer",toc:i,related:o},{default:_(()=>[f,t(d,{file:"QResizeObserver"}),e("h2",{id:"usage",class:"doc-heading doc-h2",onClick:s[0]||(s[0]=D=>u(c)("usage"))},"Usage"),t(l,{title:"Basic",file:"Basic"}),g]),_:1}))}},A=a(b,[["__file","resize-observer.md"]]);export{A as default};
