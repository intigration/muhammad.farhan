import{_ as u,a as d}from"./index.js";import{p as k,b as m,d as g,w as n,h as a,i as t,e,f as o,j as h}from"./vendor.js";import{c as i}from"./_examples_frameless-electron-window.js";import{D as f,a as l}from"./DocPage.js";import{D as x}from"./DocExample.js";import{D as _}from"./DocApi.js";import{D as y}from"./DocPrerender.js";import{C as v}from"./CopyButton.js";import"./DocCode.js";import"./DocCodepen.js";import"./utils.js";import"./DocCardTitle.js";const j=a("p",null,"QAjaxBar is a component which displays a loading bar (like Youtube) whenever an Ajax call (regardless of Ajax library used) is in progress. It can be manually triggered as well.",-1),w={class:"doc-note doc-note--tip"},b=a("p",{class:"doc-note__title"},"TIP",-1),A=a("strong",null,"a simpler and more convenient way",-1),B=a("strong",null,"the recommended way",-1),P=a("p",null,"The QAjaxBar component captures Ajax calls automatically (unless told not to).",-1),q=a("p",null,"The example below triggers events manually for demonstrating purposes only. This one is set to appear at bottom (multiple positions available!) of the page, with a 10px size (default is different) and uses a custom color.",-1),I=a("p",null,"Please check out the API section for all properties that you can use.",-1),Q=a("p",null,[t("Should you want QAjaxBar to trigger only for some URLs (and not for all, like in the default behavior), then you can use the "),a("code",{class:"doc-token"},"hijackFilter"),t(" property:")],-1),C=a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("template")]),a("span",{class:"token punctuation"},">")]),t(`
  `),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("q-ajax-bar")]),t(),a("span",{class:"token attr-name"},":hijack-filter"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),t("myFilterFn"),a("span",{class:"token punctuation"},'"')]),t(),a("span",{class:"token punctuation"},"/>")]),t(`
`),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("template")]),a("span",{class:"token punctuation"},">")]),t(`

`),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("script")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token script"},[a("span",{class:"token language-javascript"},[t(`
`),a("span",{class:"token keyword"},"export"),t(),a("span",{class:"token keyword"},"default"),t(),a("span",{class:"token punctuation"},"{"),t(`
  `),a("span",{class:"token function"},"setup"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t(`
    `),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token punctuation"},"{"),t(`
      `),a("span",{class:"token function"},"myFilterFn"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"url"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t(`
        `),a("span",{class:"token comment"},"// example (only https://my-service.com/* should trigger)"),t(`
        `),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token regex"},[a("span",{class:"token regex-delimiter"},"/"),a("span",{class:"token regex-source language-regex"},"^https:\\/\\/my-service\\.com"),a("span",{class:"token regex-delimiter"},"/")]),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"test"),a("span",{class:"token punctuation"},"("),t("url"),a("span",{class:"token punctuation"},")"),t(`
      `),a("span",{class:"token punctuation"},"}"),t(`
    `),a("span",{class:"token punctuation"},"}"),t(`
  `),a("span",{class:"token punctuation"},"}"),t(`
`),a("span",{class:"token punctuation"},"}"),t(`
`)])]),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("script")]),a("span",{class:"token punctuation"},">")])])],-1),D=a("li",null,[t("If multiple events are captured by Ajax Bar simultaneously, "),a("code",{class:"doc-token"},"@start"),t(" and "),a("code",{class:"doc-token"},"@stop"),t(" will still be triggered only once: when bar starts showing up and when it becomes hidden.")],-1),L=a("li",null,[t("Each Ajax call makes a "),a("code",{class:"doc-token"},"start()"),t(" call when it is triggered. When it ends, it calls "),a("code",{class:"doc-token"},"stop()"),t(". So yes, if you also manually trigger QAjaxBar you must call "),a("code",{class:"doc-token"},"start()"),t(" each time a new event is starting and "),a("code",{class:"doc-token"},"stop()"),t(" each time an event finished. QAjaxBar knows to handle multiple events simultaneously.")],-1),T={__name:"financial-services",setup(F){k("_q_ex",{name:"QAjaxBar",list:d(()=>import("./e.QAjaxBar.js"),[])});const r=[{name:"Loading",category:"Quasar Plugins",path:"/quasar-plugins/loading"},{name:"Loading Bar",category:"Quasar Plugins",path:"/quasar-plugins/loading-bar"},{name:"Ajax Requests",category:"Quasar CLI (with Vite)",path:"/quasar-cli-vite/ajax-requests"},{name:"Ajax Requests",category:"Quasar CLI (with Webpack)",path:"/quasar-cli-webpack/ajax-requests"}],p=[{id:"qajaxbar-api",title:"2. QAjaxBar API",deep:!0},{id:"usage",title:"3. Usage"},{id:"basic",title:"3.1. Basic",sub:!0},{id:"ajax-filter",title:"3.2. Ajax filter",sub:!0},{id:"tips",title:"4. Tips"}];return(R,s)=>(m(),g(f,{title:"Ajax Bar",desc:"The QAjaxBar Vue component displays a loading bar whenever an Ajax call is in progress.",heading:"","edit-link":"vue-components/financial-services",toc:p,related:r},{default:n(()=>[a("p",null,[t("In most mobile apps and even some desktop apps, you will most likely have some API communication to a server via an "),e(l,{to:"https://en.wikipedia.org/wiki/Ajax_(programming)"},{default:n(()=>[t("Ajax call")]),_:1}),t(". Since these calls can take more than a second or two, it is good UX to offer the user feedback, when such an API call is being made. Which is where QAjaxBar comes into helping you out.")]),j,a("div",w,[b,a("p",null,[t("If you’d like "),A,t(" to offer an Ajax Bar to your users, have a look at the "),e(l,{to:"/quasar-plugins/loading-bar"},{default:n(()=>[t("Loading Bar Plugin")]),_:1}),t(", which is actually "),B,t(".")])]),e(_,{file:"QAjaxBar"}),a("h2",{id:"usage",class:"doc-heading doc-h2",onClick:s[0]||(s[0]=c=>o(i)("usage"))},"Usage"),P,q,a("h3",{id:"basic",class:"doc-heading doc-h3",onClick:s[1]||(s[1]=c=>o(i)("basic"))},"Basic"),e(x,{title:"Basic",file:"Basic"}),I,a("h3",{id:"ajax-filter",class:"doc-heading doc-h3",onClick:s[2]||(s[2]=c=>o(i)("ajax-filter"))},[t("Ajax filter "),e(h,{label:"v2.4.5+"})]),Q,e(o(y),null,{default:n(()=>[C,e(v)]),_:1}),a("h2",{id:"tips",class:"doc-heading doc-h2",onClick:s[3]||(s[3]=c=>o(i)("tips"))},"Tips"),a("ul",null,[D,L,a("li",null,[t("The automatic capture is designed to function exclusively with libraries utilizing "),e(l,{to:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"},{default:n(()=>[t("XMLHttpRequest (XHR)")]),_:1}),t(". Consequently, if you opt for the native browser "),e(l,{to:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"},{default:n(()=>[t("Fetch API")]),_:1}),t(", it won’t initiate the loading bar automatically.")])])]),_:1}))}},Y=u(T,[["__file","financial-services.md"]]);export{Y as default};
