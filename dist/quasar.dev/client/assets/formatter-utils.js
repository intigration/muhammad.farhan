import{c as p}from"./_examples_frameless-electron-window.js";import{D as r,a as k}from"./DocPage.js";import{D as c}from"./DocPrerender.js";import{C as l}from"./CopyButton.js";import{_ as m}from"./index.js";import{b as d,d as f,w as e,h as n,f as t,e as a,i as s}from"./vendor.js";const g=n("p",null,[s("You will notice all examples import "),n("code",{class:"doc-token"},"format"),s(" Object from Quasar. However, if you need only one formatter method from it, then you can use ES6 destructuring to help Tree Shaking embed only that method and not all of "),n("code",{class:"doc-token"},"format"),s(".")],-1),h=n("p",null,"Example:",-1),b=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// we import all of `format`"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" format "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token comment"},"// destructuring to keep only what is needed"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" capitalize"),n("span",{class:"token punctuation"},","),s(" humanStorageSize "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` format

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token function"},"capitalize"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'some text'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// Some text"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token function"},"humanStorageSize"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"13087"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// 12.8kB")])],-1),_=n("p",null,"You can also import all formatters and use whatever you need like this (but note that your bundle will probably contain unused methods too):",-1),w=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" format "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(" format"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"capitalize"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'some text'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(" format"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"humanStorageSize"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"13087"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")")])],-1),z={class:"doc-note doc-note--tip"},y=n("p",{class:"doc-note__title"},"TIP",-1),S=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" format "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" capitalize "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` format

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token function"},"capitalize"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'some text'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// Some text")])],-1),v=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" format "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" humanStorageSize "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` format

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token function"},"humanStorageSize"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"13087"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// 12.8kB")])],-1),N=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" format "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" between "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` format

`),n("span",{class:"token comment"},"// (Number) between(Number, Number min, Number max)"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token function"},"between"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"50"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"20"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// 20")])],-1),x=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" format "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" normalizeToInterval "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` format

`),n("span",{class:"token comment"},"// (Number) normalizeToInterval(Number, Number lower_margin, Number upper_margin)"),s(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token function"},"normalizeToInterval"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"21"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"20"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 10"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token function"},"normalizeToInterval"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"33"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"20"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 11"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token function"},"normalizeToInterval"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"52"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"20"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 19"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token function"},"normalizeToInterval"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"16"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 12")])],-1),C=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" format "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" pad "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` format

`),n("span",{class:"token comment"},"// (String) pad(String toPad, Number length, String paddingCharacter)"),s(`
`),n("span",{class:"token comment"},"// length is default 2"),s(`
`),n("span",{class:"token comment"},"// paddingCharacter is default '0'"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token function"},"pad"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'2'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// '0002'")])],-1),T={__name:"formatter-utils",setup(q){const i=[{id:"helping-tree-shake",title:"1.1. Helping Tree-Shake",sub:!0},{id:"capitalize",title:"2. Capitalize"},{id:"format-to-human-readable-size",title:"3. Format to Human Readable Size"},{id:"normalize-number-to-interval",title:"4. Normalize Number to Interval"},{id:"pad-string",title:"5. Pad String"}];return(I,o)=>(d(),f(r,{title:"Formatter Utils",desc:"A set of Quasar methods for formatting values. Capitalizing, padding, normalizing and more.",heading:"","edit-link":"quasar-utils/formatter-utils",toc:i},{default:e(()=>[n("h3",{id:"helping-tree-shake",class:"doc-heading doc-h3",onClick:o[0]||(o[0]=u=>t(p)("helping-tree-shake"))},"Helping Tree-Shake"),g,h,a(t(c),null,{default:e(()=>[b,a(l)]),_:1}),_,a(t(c),null,{default:e(()=>[w,a(l)]),_:1}),n("div",z,[y,n("p",null,[s("For usage with the UMD build see "),a(k,{to:"/start/umd#quasar-global-object"},{default:e(()=>[s("here")]),_:1}),s(".")])]),n("h2",{id:"capitalize",class:"doc-heading doc-h2",onClick:o[1]||(o[1]=u=>t(p)("capitalize"))},"Capitalize"),a(t(c),null,{default:e(()=>[S,a(l)]),_:1}),n("h2",{id:"format-to-human-readable-size",class:"doc-heading doc-h2",onClick:o[2]||(o[2]=u=>t(p)("format-to-human-readable-size"))},"Format to Human Readable Size"),a(t(c),null,{default:e(()=>[v,a(l)]),_:1}),n("h2",{id:"normalize-number-to-interval",class:"doc-heading doc-h2",onClick:o[3]||(o[3]=u=>t(p)("normalize-number-to-interval"))},"Normalize Number to Interval"),a(t(c),null,{default:e(()=>[N,a(l)]),_:1}),a(t(c),null,{default:e(()=>[x,a(l)]),_:1}),n("h2",{id:"pad-string",class:"doc-heading doc-h2",onClick:o[4]||(o[4]=u=>t(p)("pad-string"))},"Pad String"),a(t(c),null,{default:e(()=>[C,a(l)]),_:1})]),_:1}))}},U=m(T,[["__file","formatter-utils.md"]]);export{U as default};
