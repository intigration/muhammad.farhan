import{_ as r,a as p}from"./index.js";import{c as d}from"./_examples_frameless-electron-window.js";import{D as u,a as m}from"./DocPage.js";import{D as a}from"./DocExample.js";import{D as k}from"./DocApi.js";import{D as _}from"./DocPrerender.js";import{C as h}from"./CopyButton.js";import{p as f,b,d as g,w as s,h as e,i as t,e as o,f as c}from"./vendor.js";import"./DocCode.js";import"./DocCodepen.js";import"./utils.js";import"./DocCardTitle.js";const v=e("p",null,[t("The QMarkupTable is a way for you to simply wrap a native "),e("code",{class:"doc-token"},"<table>"),t(" in order to make it look like a Material Design table.")],-1),T={class:"doc-note doc-note--tip"},w=e("p",{class:"doc-note__title"},"TIP",-1),y=e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,[t("Notice that the content of "),e("code",{class:"doc-token"},"QMarkupTable"),t(" reflects an accurate markup representation of a native HTML "),e("code",{class:"doc-token"},"<table>"),t(", having a "),e("code",{class:"doc-token"},"<thead>"),t(" and "),e("code",{class:"doc-token"},"<tbody>"),t(" to wrap header and table body. This is required.")])],-1),D={class:"doc-note doc-note--warning"},M=e("p",{class:"doc-note__title"},"UMD developers",-1),q=e("p",null,[t("This component will "),e("em",null,"NOT"),t(" work as-is within the UMD version of Quasar. Browsers parse the template HTML before Vue kicks in and renders it, so the markup needs to be correct. "),e("code",{class:"doc-token"},"<q-markup-table> <thead>"),t(" or "),e("code",{class:"doc-token"},"<q-markup-table> <tbody>"),t(" is not. The solution is to wrap the content in a "),e("code",{class:"doc-token"},"<template>"),t(" like the following:")],-1),Q=e("br",null,null,-1),x=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),t("q-markup-table")]),e("span",{class:"token punctuation"},">")]),t(`
  `),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),t("template")]),e("span",{class:"token punctuation"},">")]),t(`
    `),e("span",{class:"token comment"},"<!-- your content -->"),t(`
  `),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),t("template")]),e("span",{class:"token punctuation"},">")]),t(`
`),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),t("q-markup-table")]),e("span",{class:"token punctuation"},">")])])],-1),B=e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"TIP"),e("p",null,[t("If you want to remove the hover effect on some rows or some cells add a "),e("code",{class:"doc-token"},"q-tr--no-hover"),t(" or "),e("code",{class:"doc-token"},"q-td--no-hover"),t(" class to them.")])],-1),C={__name:"markup-table",setup(N){f("_q_ex",{name:"QMarkupTable",list:p(()=>import("./e.QMarkupTable.js"),[])});const l=[{name:"Table",category:"Vue Components",path:"/vue-components/table"}],i=[{id:"qmarkuptable-api",title:"2. QMarkupTable API",deep:!0},{id:"usage",title:"3. Usage"}];return(P,n)=>(b(),g(u,{title:"Markup Table",desc:"The QMarkupTable Vue component is a helper wrapper which styles a native table.",heading:"","edit-link":"vue-components/markup-table",toc:i,related:l},{default:s(()=>[v,e("div",T,[w,e("p",null,[t("For advanced functionality like pagination, sorting, filtering, and many more, you may want to check out "),o(m,{to:"/vue-components/table"},{default:s(()=>[t("QTable")]),_:1}),t(" component instead.")])]),o(k,{file:"QMarkupTable"}),e("h2",{id:"usage",class:"doc-heading doc-h2",onClick:n[0]||(n[0]=V=>c(d)("usage"))},"Usage"),y,e("div",D,[M,q,Q,o(c(_),null,{default:s(()=>[x,o(h)]),_:1})]),o(a,{title:"Basic",file:"Basic","no-edit":""}),o(a,{title:"Separators",file:"Separators","no-edit":""}),o(a,{title:"Force dark mode",file:"Dark","no-edit":""}),o(a,{title:"Customization",file:"Customization","no-edit":""}),B]),_:1}))}},W=r(C,[["__file","markup-table.md"]]);export{W as default};
