import{_ as r,a as u}from"./index.js";import{c as s}from"./_examples_frameless-electron-window.js";import{D as m}from"./DocPage.js";import{D as i}from"./DocExample.js";import{D as p}from"./DocApi.js";import{p as g,b as h,d as b,w as f,e as n,h as o,f as a,i as t}from"./vendor.js";import"./DocCode.js";import"./CopyButton.js";import"./DocCodepen.js";import"./utils.js";import"./DocCardTitle.js";const v=o("p",null,"The QBtnToggle component is another basic element for user input, similar to QRadio but with buttons. You can use this to supply a way for the user to pick an option from multiple choices.",-1),y=o("div",{class:"doc-note doc-note--tip"},[o("p",{class:"doc-note__title"},"TIP"),o("p",null,"Since QBtnToggle uses QBtn, you can use design related props of QBtn to style this component.")],-1),k=o("p",null,[t("First QBtnToggle below has tooltips on each button. Second QBtnToggle has customized the content. Notice the "),o("code",{class:"doc-token"},"slot"),t(" prop in the "),o("code",{class:"doc-token"},"options"),t(" Object definition. When you use this "),o("code",{class:"doc-token"},"slot"),t(" prop, you donâ€™t necessary need the "),o("code",{class:"doc-token"},"label"),t(" / "),o("code",{class:"doc-token"},"icon"),t(" props in "),o("code",{class:"doc-token"},"options"),t(".")],-1),B=o("p",null,[t("When dealing with a native form which has an "),o("code",{class:"doc-token"},"action"),t(" and a "),o("code",{class:"doc-token"},"method"),t(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),o("code",{class:"doc-token"},"name"),t(" property on QBtnToggle, otherwise formData will not contain it (if it should) - all value are converted to string (native behaviour, so do not use Object values):")],-1),_={__name:"button-toggle",setup(T){g("_q_ex",{name:"QBtnToggle",list:u(()=>import("./e.QBtnToggle.js"),[])});const c=[{name:"Button",category:"Buttons",path:"/vue-components/button"},{name:"Tabs",category:"Vue Components",path:"/vue-components/tabs"},{name:"Option Group",category:"Form Components",path:"/vue-components/option-group"},{name:"Radio",category:"Form Components",path:"/vue-components/radio"},{name:"Checkbox",category:"Form Components",path:"/vue-components/checkbox"},{name:"Toggle",category:"Form Components",path:"/vue-components/toggle"}],d=[{id:"qbtntoggle-api",title:"2. QBtnToggle API",deep:!0},{id:"usage",title:"3. Usage"},{id:"basic",title:"3.1. Basic",sub:!0},{id:"design",title:"3.2. Design",sub:!0},{id:"custom-content",title:"3.3. Custom content",sub:!0},{id:"disable-and-readonly",title:"3.4. Disable and readonly",sub:!0},{id:"native-form-submit",title:"3.5. Native form submit",sub:!0}];return(C,e)=>(h(),b(m,{title:"Button Toggle",desc:"The QBtnToggle Vue component is a basic element for user input, similar to QRadio but with buttons.",heading:"","edit-link":"vue-components/button-toggle",toc:d,related:c},{default:f(()=>[v,n(p,{file:"QBtnToggle"}),o("h2",{id:"usage",class:"doc-heading doc-h2",onClick:e[0]||(e[0]=l=>a(s)("usage"))},"Usage"),o("h3",{id:"basic",class:"doc-heading doc-h3",onClick:e[1]||(e[1]=l=>a(s)("basic"))},"Basic"),n(i,{title:"Basic",file:"Basic"}),o("h3",{id:"design",class:"doc-heading doc-h3",onClick:e[2]||(e[2]=l=>a(s)("design"))},"Design"),y,n(i,{title:"Some design examples",file:"Design"}),n(i,{title:"Spread horizontally",file:"Spread"}),o("h3",{id:"custom-content",class:"doc-heading doc-h3",onClick:e[3]||(e[3]=l=>a(s)("custom-content"))},"Custom content"),k,n(i,{title:"Custom buttons content",file:"CustomContent"}),o("h3",{id:"disable-and-readonly",class:"doc-heading doc-h3",onClick:e[4]||(e[4]=l=>a(s)("disable-and-readonly"))},"Disable and readonly"),n(i,{title:"Disable and readonly",file:"DisableReadonly"}),o("h3",{id:"native-form-submit",class:"doc-heading doc-h3",onClick:e[5]||(e[5]=l=>a(s)("native-form-submit"))},"Native form submit"),B,n(i,{title:"Native form",file:"NativeForm"})]),_:1}))}},A=r(_,[["__file","button-toggle.md"]]);export{A as default};
