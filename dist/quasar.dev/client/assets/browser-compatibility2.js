import{c as l}from"./_examples_frameless-electron-window.js";import{D as c,a as p}from"./DocPage.js";import{D as u}from"./DocPrerender.js";import{C as d}from"./CopyButton.js";import{_ as f}from"./index.js";import{b,d as g,w as o,h as s,f as n,e as a,i as t}from"./vendor.js";const h=s("p",null,[t("Your "),s("code",{class:"doc-token"},"/package.json"),t(" file should contain a "),s("code",{class:"doc-token"},"browserslist"),t(" field. This will tell Quasar App the range of browsers that the project is targeting. Babel and Autoprefixer will use this field to determine how to transpile JS code (if transpiling is left enabled) and what CSS vendor prefixes it needs to add your CSS code.")],-1),k=s("p",null,"Babel will look for exactly the JS features that need transpiling (based on the configured browsers) and apply them. Be mindful about it though, as it is sufficient to add one “bad apple” in the options list and that will dumb down your code back to ES5.",-1),w=s("p",null,"The following is the default “browserslist” when you create a Quasar project:",-1),m=s("pre",{class:"doc-code"},[s("code",null,[s("span",{class:"token string-property property"},'"browserslist"'),s("span",{class:"token operator"},":"),t(),s("span",{class:"token punctuation"},"["),t(`
  `),s("span",{class:"token string"},'"last 10 Chrome versions"'),s("span",{class:"token punctuation"},","),t(`
  `),s("span",{class:"token string"},'"last 10 Firefox versions"'),s("span",{class:"token punctuation"},","),t(`
  `),s("span",{class:"token string"},'"last 4 Edge versions"'),s("span",{class:"token punctuation"},","),t(`
  `),s("span",{class:"token string"},'"last 7 Safari versions"'),s("span",{class:"token punctuation"},","),t(`
  `),s("span",{class:"token string"},'"last 8 Android versions"'),s("span",{class:"token punctuation"},","),t(`
  `),s("span",{class:"token string"},'"last 8 ChromeAndroid versions"'),s("span",{class:"token punctuation"},","),t(`
  `),s("span",{class:"token string"},'"last 8 FirefoxAndroid versions"'),s("span",{class:"token punctuation"},","),t(`
  `),s("span",{class:"token string"},'"last 10 iOS versions"'),s("span",{class:"token punctuation"},","),t(`
  `),s("span",{class:"token string"},'"last 5 Opera versions"'),t(`
`),s("span",{class:"token punctuation"},"]")])],-1),_={__name:"browser-compatibility",setup(y){const i=[{name:"The quasar.config file",category:"Quasar CLI (with Webpack)",path:"/quasar-cli-webpack/quasar-config-file"}],r=[{id:"configuring-compatibility",title:"2. Configuring compatibility"}];return(C,e)=>(b(),g(c,{title:"Browser compatibility",desc:"(@quasar/app-webpack) How to handle the browser support with Quasar CLI.",overline:"Quasar CLI with Webpack - @quasar/app-webpack",heading:"","edit-link":"quasar-cli-webpack/browser-compatibility",toc:r,related:i},{default:o(()=>[s("h2",{id:"configuring-compatibility",class:"doc-heading doc-h2",onClick:e[0]||(e[0]=v=>n(l)("configuring-compatibility"))},"Configuring compatibility"),h,k,w,a(n(u),{title:"package.json"},{default:o(()=>[m,a(d)]),_:1}),s("p",null,[t("More info on how to specify browser ranges: "),a(p,{to:"https://github.com/browserslist/browserslist"},{default:o(()=>[t("browserslist")]),_:1}),t(".")])]),_:1}))}},Q=f(_,[["__file","browser-compatibility.md"]]);export{Q as default};
