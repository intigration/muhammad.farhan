import{c as l}from"./_examples_frameless-electron-window.js";import{D as k,a as r}from"./DocPage.js";import{D as c}from"./DocPrerender.js";import{C as p}from"./CopyButton.js";import{_ as d}from"./index.js";import{b as m,d as h,w as a,h as n,f as o,e as t,i as s}from"./vendor.js";const f=n("p",null,"You will notice all examples import different parts of Quasar. However, if you need only one specific util method, then you can use ES6 destructuring to help Tree Shaking embed only that method and not all around it.",-1),g=n("p",null,[s("Example with "),n("code",{class:"doc-token"},"dom"),s(" utils:")],-1),y=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" dom "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" offset "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` dom

`),n("span",{class:"token comment"},"// Offset on screen"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"offset"),n("span",{class:"token punctuation"},"("),s("DomElement"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// { top: 10, left: 100 }")])],-1),w=n("p",null,"You can also import all of dom utils and use whatever you need like this (but note that your bundle will contain unused methods too):",-1),v=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" dom "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`

`),n("span",{class:"token comment"},"// Offset on screen"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("dom"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"offset"),n("span",{class:"token punctuation"},"("),s("DomElement"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// { top: 10, left: 100 }")])],-1),_={class:"doc-note doc-note--tip"},D=n("p",{class:"doc-note__title"},"TIP",-1),b=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" dom "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" offset "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` dom

`),n("span",{class:"token comment"},"// Offset on screen"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"offset"),n("span",{class:"token punctuation"},"("),s("DomElement"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// { top: 10, left: 100 }")])],-1),C=n("p",null,[s("This applies only when DomElement is visible! It returns the "),n("strong",null,"computed"),s(" browser style, so the property you are asking for doesn’t necessary has to be applied within a "),n("code",{class:"doc-token"},"style"),s(" attribute.")],-1),E=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" dom "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" style "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` dom

`),n("span",{class:"token comment"},"// Get COMPUTED style (when DomElement is visible!)"),s(`
`),n("span",{class:"token comment"},'// Computed means a DomElement might not have "height" CSS property set,'),s(`
`),n("span",{class:"token comment"},"// but that does not mean it doesn't have a height when it's displayed."),s(`
`),n("span",{class:"token comment"},"// The following method accesses the computed CSS provided by the browser:"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"style"),n("span",{class:"token punctuation"},"("),s("DomElement"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'height'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// '10px' <<< notice it returns a String ending in 'px'")])],-1),x=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" dom "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" height"),n("span",{class:"token punctuation"},","),s(" width "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` dom


`),n("span",{class:"token comment"},'// Some aliases of the previous method for "width" and "height" which'),s(`
`),n("span",{class:"token comment"},"// returns Numbers instead of Strings:"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(`
  `),n("span",{class:"token function"},"height"),n("span",{class:"token punctuation"},"("),s("DomElement"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token function"},"width"),n("span",{class:"token punctuation"},"("),s("DomElement"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// 10 100")])],-1),O=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" dom "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" css "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` dom

`),n("span",{class:"token comment"},"// Apply a list of CSS properties to a DomNode"),s(`
`),n("span",{class:"token function"},"css"),n("span",{class:"token punctuation"},"("),s("DomElement"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"height"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'10px'"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token literal-property property"},"display"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'flex'"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])],-1),S=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" dom "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" ready "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` dom

`),n("span",{class:"token comment"},"// Execute a Function when DOM is ready:"),s(`
`),n("span",{class:"token function"},"ready"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// ...."),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])],-1),M=n("p",null,"It’s cross-browser.",-1),q=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" event "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`

node`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEventListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'click'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token parameter"},"evt"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// left clicked?"),s(`
  `),n("span",{class:"token punctuation"},"("),s("Boolean"),n("span",{class:"token punctuation"},")"),s(" event"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"leftClick"),n("span",{class:"token punctuation"},"("),s("evt"),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token comment"},"// middle clicked?"),s(`
  `),n("span",{class:"token punctuation"},"("),s("Boolean"),n("span",{class:"token punctuation"},")"),s(" event"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"middleClick"),n("span",{class:"token punctuation"},"("),s("evt"),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token comment"},"// right clicked?"),s(`
  `),n("span",{class:"token punctuation"},"("),s("Boolean"),n("span",{class:"token punctuation"},")"),s(" event"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rightClick"),n("span",{class:"token punctuation"},"("),s("evt"),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token comment"},"// key in number format"),s(`
  `),n("span",{class:"token punctuation"},"("),s("Number"),n("span",{class:"token punctuation"},")"),s(" event"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getEventKey"),n("span",{class:"token punctuation"},"("),s("evt"),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token comment"},"// Mouse wheel distance (in pixels)"),s(`
  `),n("span",{class:"token punctuation"},"("),s("Object "),n("span",{class:"token punctuation"},"{"),s("x"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(" event"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getMouseWheelDistance"),n("span",{class:"token punctuation"},"("),s("evt"),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token comment"},"// position on viewport"),s(`
  `),n("span",{class:"token comment"},"// works both for mouse and touch events!"),s(`
  `),n("span",{class:"token punctuation"},"("),s("Object "),n("span",{class:"token punctuation"},"{"),s("top"),n("span",{class:"token punctuation"},","),s(" left"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(" event"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"position"),n("span",{class:"token punctuation"},"("),s("evt"),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token comment"},"// get target DOM Element on which mouse or touch"),s(`
  `),n("span",{class:"token comment"},"// event has fired upon"),s(`
  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"DOM"),s(" Element"),n("span",{class:"token punctuation"},")"),s(" event"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"targetElement"),n("span",{class:"token punctuation"},"("),s("evt"),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token comment"},"// call stopPropagation and preventDefault"),s(`
  event`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"stopAndPrevent"),n("span",{class:"token punctuation"},"("),s("evt"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])],-1),B={__name:"dom-utils",setup(H){const u=[{id:"helping-tree-shake",title:"1.1. Helping Tree-Shake",sub:!0},{id:"offset-on-screen-viewport",title:"2. Offset on screen viewport"},{id:"get-computed-style",title:"3. Get Computed Style"},{id:"get-height-width",title:"4. Get Height / Width"},{id:"apply-css-properties-in-batch",title:"5. Apply CSS Properties in Batch"},{id:"execute-when-dom-is-ready",title:"6. Execute when DOM is ready"},{id:"handling-event-on-a-dom-event-handler",title:"7. Handling event on a DOM event handler"}];return(P,e)=>(m(),h(k,{title:"DOM Utils",desc:"A set of Quasar methods for DOM elements which helps you in retrieving the offset on screen viewport, getting and setting styles, waiting for the DOM to be ready and morphing DOM elements.",heading:"","edit-link":"quasar-utils/dom-utils",toc:u},{default:a(()=>[n("h3",{id:"helping-tree-shake",class:"doc-heading doc-h3",onClick:e[0]||(e[0]=i=>o(l)("helping-tree-shake"))},"Helping Tree-Shake"),f,g,t(o(c),null,{default:a(()=>[y,t(p)]),_:1}),w,t(o(c),null,{default:a(()=>[v,t(p)]),_:1}),n("div",_,[D,n("p",null,[s("For usage with the UMD build see "),t(r,{to:"/start/umd#quasar-global-object"},{default:a(()=>[s("here")]),_:1}),s(".")])]),n("h2",{id:"offset-on-screen-viewport",class:"doc-heading doc-h2",onClick:e[1]||(e[1]=i=>o(l)("offset-on-screen-viewport"))},"Offset on screen viewport"),t(o(c),null,{default:a(()=>[b,t(p)]),_:1}),n("h2",{id:"get-computed-style",class:"doc-heading doc-h2",onClick:e[2]||(e[2]=i=>o(l)("get-computed-style"))},"Get Computed Style"),C,t(o(c),null,{default:a(()=>[E,t(p)]),_:1}),n("h2",{id:"get-height-width",class:"doc-heading doc-h2",onClick:e[3]||(e[3]=i=>o(l)("get-height-width"))},"Get Height / Width"),t(o(c),null,{default:a(()=>[x,t(p)]),_:1}),n("h2",{id:"apply-css-properties-in-batch",class:"doc-heading doc-h2",onClick:e[4]||(e[4]=i=>o(l)("apply-css-properties-in-batch"))},"Apply CSS Properties in Batch"),t(o(c),null,{default:a(()=>[O,t(p)]),_:1}),n("h2",{id:"execute-when-dom-is-ready",class:"doc-heading doc-h2",onClick:e[5]||(e[5]=i=>o(l)("execute-when-dom-is-ready"))},"Execute when DOM is ready"),t(o(c),null,{default:a(()=>[S,t(p)]),_:1}),n("h2",{id:"handling-event-on-a-dom-event-handler",class:"doc-heading doc-h2",onClick:e[6]||(e[6]=i=>o(l)("handling-event-on-a-dom-event-handler"))},"Handling event on a DOM event handler"),M,t(o(c),null,{default:a(()=>[q,t(p)]),_:1})]),_:1}))}},j=d(B,[["__file","dom-utils.md"]]);export{j as default};
