import{_ as p,a as h}from"./index.js";import{c as n}from"./_examples_frameless-electron-window.js";import{D as f,a as m}from"./DocPage.js";import{D as i}from"./DocExample.js";import{D as g}from"./DocApi.js";import{D as r}from"./DocPrerender.js";import{C as c}from"./CopyButton.js";import{p as b,b as v,d as y,w as a,e as s,h as e,f as l,i as o}from"./vendor.js";import"./DocCode.js";import"./DocCodepen.js";import"./utils.js";import"./DocCardTitle.js";const k=e("p",null,[o("The QField component is used to provide common functionality and aspect to form components. It uses "),e("code",{class:"doc-token"},":model-value"),o(" (or "),e("code",{class:"doc-token"},"v-model"),o(" if you want to use "),e("code",{class:"doc-token"},"clearable"),o(" property) to have knowledge of the model of the component inside. It has support for labels, hints, errors, validation, and comes in a variety of styles and colors.")],-1),w=e("p",null,[o("QField allows you to display any form control (or almost anything as a matter of fact) inside it. Just place your desired content inside the "),e("code",{class:"doc-token"},"control"),o(" slot.")],-1),_=e("div",{class:"doc-note doc-note--danger"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,"Do NOT wrap QInput, QFile or QSelect with QField as these components already inherit QField.")],-1),C=e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"TIP"),e("p",null,"The examples below use dumb content (text) just to show you the design that QField can use. For checking out examples that wrap real components, see the “Basic Features” section.")],-1),x=e("div",{class:"doc-note doc-note--danger"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,[o("QField does not (and should not) manage your "),e("code",{class:"doc-token"},"control"),o(" slot, so if you use "),e("code",{class:"doc-token"},"label"),o(" prop, it might be a good idea to also specify "),e("code",{class:"doc-token"},"stack-label"),o(", otherwise it might overlap your control when QField is not focused.")])],-1),F=e("p",null,[o("For your QField you can use only one of the main designs ("),e("code",{class:"doc-token"},"filled"),o(", "),e("code",{class:"doc-token"},"outlined"),o(", "),e("code",{class:"doc-token"},"standout"),o(", "),e("code",{class:"doc-token"},"borderless"),o("). You cannot use multiple as they are self-exclusive.")],-1),Q=e("p",null,"One of the most appropriate use cases for Standout design is in a QToolbar:",-1),S=e("p",null,[o("The "),e("code",{class:"doc-token"},"borderless"),o(" design allows you to seamlessly integrate your QField into other components without QField drawing a border around itself or changing its background color:")],-1),T=e("p",null,[o("The "),e("code",{class:"doc-token"},"rounded"),o(" prop only works along with Filled, Outlined and Standout designs, as showcased in the example below:")],-1),I=e("p",null,[o("The "),e("code",{class:"doc-token"},"square"),o(" prop only makes sense along with Filled, Outlined and Standout designs, as showcased in the example below:")],-1),D=e("p",null,[o("As a helper, you can use "),e("code",{class:"doc-token"},"clearable"),o(" prop so user can reset model to "),e("code",{class:"doc-token"},"null"),o(" through an appended icon.")],-1),$=e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,[o("If using "),e("code",{class:"doc-token"},"clearable"),o(" you must use "),e("code",{class:"doc-token"},"v-model"),o(" or listen on "),e("code",{class:"doc-token"},"@update:model-value"),o(" and update the value.")])],-1),B=e("p",null,[o("Anything you place inside the "),e("code",{class:"doc-token"},"control"),o(" slot will be used as content of the field. We provide a few examples of controls below.")],-1),V=e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"TIP"),e("p",null,[o("Most of the form controls always render something visible, so you if you’re using a "),e("code",{class:"doc-token"},"label"),o(" then you might want to set it along with "),e("code",{class:"doc-token"},"stack-label"),o(", otherwise the label will overlap the enclosed control.")])],-1),P=e("p",null,[o("Using the "),e("code",{class:"doc-token"},"label"),o(" slot you can customize the aspect of the label or add special features as "),e("code",{class:"doc-token"},"QTooltip"),o(".")],-1),q=e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"TIP"),e("p",null,[o("Do not forget to set the "),e("code",{class:"doc-token"},"label-slot"),o(" property.")]),e("p",null,[o("If you want to interact with the content of the label (QTooltip) add the "),e("code",{class:"doc-token"},"all-pointer-events"),o(" class on the element in the slot.")])],-1),A=e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,[o("When placing a QBtn with type “submit” in one of the “before”, “after”, “prepend”, or “append” slots of a QField, QInput or QSelect, you should also add a "),e("code",{class:"doc-token"},"@click"),o(" listener on the QBtn in question. This listener should call the method that submits your form. All “click” events in such slots are not propagated to their parent elements.")])],-1),O=e("p",null,[o("You can validate QField components with "),e("code",{class:"doc-token"},":rules"),o(" prop. Specify array of embedded rules or your own validators. Your custom validator will be a function which returns "),e("code",{class:"doc-token"},"true"),o(" if validator succeeds or "),e("code",{class:"doc-token"},"String"),o(" with error message if it doesn’t succeed.")],-1),N=e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"TIP"),e("p",null,[o("By default, for perf reasons, a change in the rules does not trigger a new validation until the model changes. In order to trigger the validation when rules change too, then use "),e("code",{class:"doc-token"},"reactive-rules"),o(" Boolean prop. The downside is a performance penalty (so use it when you really need this only!) and it can be slightly mitigated by using a computed prop as value for the rules (and not specify them inline in the vue template).")])],-1),L=e("p",null,"This is so you can write convenient rules of shape like:",-1),R=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token parameter"},"value"),o(),e("span",{class:"token operator"},"=>"),o(" condition "),e("span",{class:"token operator"},"||"),o(" errorMessage")])],-1),E=e("p",null,"For example:",-1),z=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token parameter"},"value"),o(),e("span",{class:"token operator"},"=>"),o(" value "),e("span",{class:"token operator"},"<"),o(),e("span",{class:"token number"},"10"),o(),e("span",{class:"token operator"},"||"),o(),e("span",{class:"token string"},"'Value should be lower'")])],-1),W=e("p",null,[o("You can reset the validation by calling "),e("code",{class:"doc-token"},"resetValidation()"),o(" method on the QField.")],-1),Y=e("p",null,[o("If you set "),e("code",{class:"doc-token"},"lazy-rules"),o(", validation starts after first blur. If "),e("code",{class:"doc-token"},"lazy-rules"),o(" is set to "),e("code",{class:"doc-token"},"ondemand"),o(" String, then validation will be triggered only when component’s validate() method is manually called or when the wrapper QForm submits itself.")],-1),G=e("p",null,"Rules can be async too, by using async/await or by directly returning a Promise.",-1),M=e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"TIP"),e("p",null,[o("Consider coupling async rules with "),e("code",{class:"doc-token"},"debounce"),o(" prop to avoid calling the async rules immediately on each keystroke, which might be detrimental to performance.")])],-1),j=e("p",null,[o("You can also use external validation and only pass "),e("code",{class:"doc-token"},"error"),o(" and "),e("code",{class:"doc-token"},"error-message"),o(" (enable "),e("code",{class:"doc-token"},"bottom-slots"),o(" to display this error message).")],-1),H={class:"doc-note doc-note--tip"},J=e("p",{class:"doc-note__title"},"TIP",-1),U=e("p",null,"You can also customize the slot for error message:",-1),K={__name:"field",setup(X){b("_q_ex",{name:"QField",list:h(()=>import("./e.QField.js"),[])});const u=[{id:"qfield-api",title:"2. QField API",deep:!0},{id:"design",title:"3. Design"},{id:"overview",title:"3.1. Overview",sub:!0},{id:"coloring",title:"3.2. Coloring",sub:!0},{id:"standard",title:"3.3. Standard",sub:!0},{id:"filled",title:"3.4. Filled",sub:!0},{id:"outlined",title:"3.5. Outlined",sub:!0},{id:"standout",title:"3.6. Standout",sub:!0},{id:"borderless",title:"3.7. Borderless",sub:!0},{id:"rounded-design",title:"3.8. Rounded design",sub:!0},{id:"square-borders",title:"3.9. Square borders",sub:!0},{id:"force-dark-mode",title:"3.10. Force dark mode",sub:!0},{id:"basic-features",title:"4. Basic features"},{id:"clearable",title:"4.1. Clearable",sub:!0},{id:"control-types",title:"4.2. Control types",sub:!0},{id:"prefix-and-suffix",title:"4.3. Prefix and suffix",sub:!0},{id:"custom-label",title:"4.4. Custom Label",sub:!0},{id:"slots-with-qbtn-type-submit",title:"4.5. Slots with QBtn type “submit”",sub:!0},{id:"loading-state",title:"4.6. Loading state",sub:!0},{id:"validation",title:"5. Validation"},{id:"internal-validation",title:"5.1. Internal validation",sub:!0},{id:"external-validation",title:"5.2. External validation",sub:!0}];return(Z,t)=>(v(),y(f,{title:"Field",desc:"The QField Vue component is used to provide common functionality and aspect to form components.",heading:"","edit-link":"vue-components/field",toc:u},{default:a(()=>[k,w,_,s(g,{file:"QField"}),e("h2",{id:"design",class:"doc-heading doc-h2",onClick:t[0]||(t[0]=d=>l(n)("design"))},"Design"),C,x,e("h3",{id:"overview",class:"doc-heading doc-h3",onClick:t[1]||(t[1]=d=>l(n)("overview"))},"Overview"),F,s(i,{title:"Design Overview",file:"DesignOverview"}),e("h3",{id:"coloring",class:"doc-heading doc-h3",onClick:t[2]||(t[2]=d=>l(n)("coloring"))},"Coloring"),s(i,{title:"Coloring",file:"Coloring"}),e("h3",{id:"standard",class:"doc-heading doc-h3",onClick:t[3]||(t[3]=d=>l(n)("standard"))},"Standard"),s(i,{title:"Standard",file:"DesignStandard"}),e("h3",{id:"filled",class:"doc-heading doc-h3",onClick:t[4]||(t[4]=d=>l(n)("filled"))},"Filled"),s(i,{title:"Filled",file:"DesignFilled"}),e("h3",{id:"outlined",class:"doc-heading doc-h3",onClick:t[5]||(t[5]=d=>l(n)("outlined"))},"Outlined"),s(i,{title:"Outlined",file:"DesignOutlined"}),e("h3",{id:"standout",class:"doc-heading doc-h3",onClick:t[6]||(t[6]=d=>l(n)("standout"))},"Standout"),s(i,{title:"Standout",file:"DesignStandout"}),Q,s(i,{title:"Standout in QToolbar",file:"StandoutToolbar"}),e("h3",{id:"borderless",class:"doc-heading doc-h3",onClick:t[7]||(t[7]=d=>l(n)("borderless"))},"Borderless"),S,s(i,{title:"Borderless",file:"Borderless"}),e("h3",{id:"rounded-design",class:"doc-heading doc-h3",onClick:t[8]||(t[8]=d=>l(n)("rounded-design"))},"Rounded design"),T,s(i,{title:"Rounded",file:"Rounded"}),e("h3",{id:"square-borders",class:"doc-heading doc-h3",onClick:t[9]||(t[9]=d=>l(n)("square-borders"))},"Square borders"),I,s(i,{title:"Square borders",file:"SquareBorders"}),e("h3",{id:"force-dark-mode",class:"doc-heading doc-h3",onClick:t[10]||(t[10]=d=>l(n)("force-dark-mode"))},"Force dark mode"),s(i,{title:"Force dark mode",file:"Dark"}),e("h2",{id:"basic-features",class:"doc-heading doc-h2",onClick:t[11]||(t[11]=d=>l(n)("basic-features"))},"Basic features"),e("h3",{id:"clearable",class:"doc-heading doc-h3",onClick:t[12]||(t[12]=d=>l(n)("clearable"))},"Clearable"),D,$,s(i,{title:"Clearable",file:"Clearable"}),e("h3",{id:"control-types",class:"doc-heading doc-h3",onClick:t[13]||(t[13]=d=>l(n)("control-types"))},"Control types"),B,s(i,{title:"Control types",file:"ControlTypes"}),V,e("h3",{id:"prefix-and-suffix",class:"doc-heading doc-h3",onClick:t[14]||(t[14]=d=>l(n)("prefix-and-suffix"))},"Prefix and suffix"),s(i,{title:"Prefix and suffix",file:"PrefixSuffix"}),e("h3",{id:"custom-label",class:"doc-heading doc-h3",onClick:t[15]||(t[15]=d=>l(n)("custom-label"))},"Custom Label"),P,q,s(i,{title:"Custom label",file:"CustomLabel"}),e("h3",{id:"slots-with-qbtn-type-submit",class:"doc-heading doc-h3",onClick:t[16]||(t[16]=d=>l(n)("slots-with-qbtn-type-submit"))},"Slots with QBtn type “submit”"),A,e("h3",{id:"loading-state",class:"doc-heading doc-h3",onClick:t[17]||(t[17]=d=>l(n)("loading-state"))},"Loading state"),s(i,{title:"Loading state",file:"LoadingState"}),e("h2",{id:"validation",class:"doc-heading doc-h2",onClick:t[18]||(t[18]=d=>l(n)("validation"))},"Validation"),e("h3",{id:"internal-validation",class:"doc-heading doc-h3",onClick:t[19]||(t[19]=d=>l(n)("internal-validation"))},"Internal validation"),O,N,L,s(l(r),null,{default:a(()=>[R,s(c)]),_:1}),E,s(l(r),null,{default:a(()=>[z,s(c)]),_:1}),W,s(i,{title:"Basic",file:"ValidationRequired"}),s(i,{title:"Maximum value",file:"ValidationMaxValue"}),Y,s(i,{title:"Lazy rules",file:"ValidationLazy"}),e("h4",{id:"async-rules",class:"doc-heading doc-h4",onClick:t[20]||(t[20]=d=>l(n)("async-rules"))},"Async rules"),G,M,s(i,{title:"Async rules",file:"ValidationAsync"}),e("h3",{id:"external-validation",class:"doc-heading doc-h3",onClick:t[21]||(t[21]=d=>l(n)("external-validation"))},"External validation"),j,e("div",H,[J,e("p",null,[o("Depending on your needs, you might connect "),s(m,{to:"https://vuelidate.netlify.com/"},{default:a(()=>[o("Vuelidate")]),_:1}),o(" (our recommended approach) or some other validation library to QField.")])]),s(i,{title:"External",file:"ValidationExternal"}),U,s(i,{title:"Slot for error message",file:"ValidationSlots"})]),_:1}))}},pe=p(K,[["__file","field.md"]]);export{pe as default};
