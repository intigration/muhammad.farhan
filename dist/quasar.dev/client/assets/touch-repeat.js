import{_ as h,a as k}from"./index.js";import{c as a}from"./_examples_frameless-electron-window.js";import{D as m,a as v}from"./DocPage.js";import{D as l}from"./DocExample.js";import{D as g}from"./DocApi.js";import{D as u}from"./DocPrerender.js";import{C as p}from"./CopyButton.js";import{p as f,b as _,d as y,w as c,e as o,h as e,f as s,i as t}from"./vendor.js";import"./DocCode.js";import"./DocCodepen.js";import"./utils.js";import"./DocCardTitle.js";const w=e("p",null,[t("Quasar offers full-featured Vue directives that can totally replace libraries like Hammerjs: "),e("code",{class:"doc-token"},"v-touch-pan"),t(", "),e("code",{class:"doc-token"},"v-touch-swipe"),t(", "),e("code",{class:"doc-token"},"v-touch-hold"),t(" and "),e("code",{class:"doc-token"},"v-touch-repeat"),t(".")],-1),b=e("blockquote",{class:"doc-note"},[e("p",null,[e("strong",null,"These directives also work with mouse events, not only touch events"),t(", so you are able to build cool functionality for your App on desktops too.")])],-1),T=e("p",null,[t("We will be describing "),e("code",{class:"doc-token"},"v-touch-repeat"),t(" on the lines below.")],-1),R=e("p",null,"Click and hold with your mouse on the area below to see it in action. Notice that on touch capable devices the scrolling is not blocked.",-1),D=e("blockquote",{class:"doc-note"},[e("p",null,"The default repeat pattern is 0:600:300 (ms).")],-1),H=e("p",null,[t("Below is an example configured to also react to "),e("code",{class:"doc-token"},"SPACE"),t(", "),e("code",{class:"doc-token"},"ENTER"),t(" and "),e("code",{class:"doc-token"},"h"),t(" keys ("),e("strong",null,"focus on it first"),t("), with 0:300:200 (ms) repeat pattern. Hit & hold keys, or click/tap and hold.")],-1),C=e("p",null,"Below is an example of applying TouchRepeat to QBtn. Notice how we play with the directive arguments in order to make the blue buttons increment slower than the red ones.",-1),B=e("p",null,[t("When you want to handle mouse events too, use the "),e("code",{class:"doc-token"},"mouse"),t(" modifier:")],-1),E=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),t("div")]),t(),e("span",{class:"token attr-name"},"v-touch-repeat.mouse"),e("span",{class:"token attr-value"},[e("span",{class:"token punctuation attr-equals"},"="),e("span",{class:"token punctuation"},'"'),t("myHandler"),e("span",{class:"token punctuation"},'"')]),e("span",{class:"token punctuation"},">")]),t("..."),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),t("div")]),e("span",{class:"token punctuation"},">")])])],-1),P=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),t("div")]),t(),e("span",{class:"token attr-name"},"v-touch-repeat.65.70"),e("span",{class:"token attr-value"},[e("span",{class:"token punctuation attr-equals"},"="),e("span",{class:"token punctuation"},'"'),t("myHandler"),e("span",{class:"token punctuation"},'"')]),e("span",{class:"token punctuation"},">")]),t("..."),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),t("div")]),e("span",{class:"token punctuation"},">")])])],-1),q=e("p",null,[t("There are some special modifiers that you do not require to write the equivalent keycode: "),e("code",{class:"doc-token"},"space"),t(", "),e("code",{class:"doc-token"},"tab"),t(", "),e("code",{class:"doc-token"},"enter"),t(".")],-1),x=e("p",null,[t("When you want to inhibit TouchRepeat, you can do so by stopping propagation of the "),e("code",{class:"doc-token"},"touchstart"),t(" / "),e("code",{class:"doc-token"},"mousedown"),t(" / "),e("code",{class:"doc-token"},"keydown"),t(" events from the inner content:")],-1),V=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),t("div")]),t(),e("span",{class:"token attr-name"},"v-touch-repeat.mouse.enter"),e("span",{class:"token attr-value"},[e("span",{class:"token punctuation attr-equals"},"="),e("span",{class:"token punctuation"},'"'),t("userHasHold"),e("span",{class:"token punctuation"},'"')]),e("span",{class:"token punctuation"},">")]),t(`
  `),e("span",{class:"token comment"},"<!-- ...content -->"),t(`
  `),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),t("div")]),t(),e("span",{class:"token attr-name"},"@touchstart.stop"),t(),e("span",{class:"token attr-name"},"@mousedown.stop"),t(),e("span",{class:"token attr-name"},"@keydown.stop"),e("span",{class:"token punctuation"},">")]),t(`
    `),e("span",{class:"token comment"},`<!--
      TouchRepeat will not apply here because
      we are calling stopPropagation() on touchstart,
      mousedown and keydown events
    -->`),t(`
  `),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),t("div")]),e("span",{class:"token punctuation"},">")]),t(`
  `),e("span",{class:"token comment"},"<!-- ...content -->"),t(`
`),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),t("div")]),e("span",{class:"token punctuation"},">")])])],-1),N=e("p",null,[t("However, if you are using "),e("code",{class:"doc-token"},"capture"),t(", "),e("code",{class:"doc-token"},"mouseCapture"),t(" or "),e("code",{class:"doc-token"},"keyCapture"),t(" modifiers then events will first reach the TouchRepeat directive then the inner content, so TouchRepeat will still trigger.")],-1),A=e("p",null,"Due to performance reasons, not all of the modifiers are reactive. Some require a window/page/component refresh to get updated. Please check the API card for the modifiers which are not marked as reactive.",-1),I={__name:"touch-repeat",setup($){f("_q_ex",{name:"TouchRepeat",list:k(()=>import("./e.TouchRepeat.js"),[])});const d=[{name:"Touch Swipe",category:"Vue Directives",path:"/vue-directives/touch-swipe"},{name:"Touch Pan",category:"Vue Directives",path:"/vue-directives/touch-pan"},{name:"Touch Hold",category:"Vue Directives",path:"/vue-directives/touch-hold"}],r=[{id:"touchrepeat-api",title:"2. TouchRepeat API",deep:!0},{id:"usage",title:"3. Usage"},{id:"handling-mouse-events",title:"3.1. Handling Mouse Events",sub:!0},{id:"handling-key-events",title:"3.2. Handling Key Events",sub:!0},{id:"inhibiting-touchrepeat",title:"3.3. Inhibiting TouchRepeat",sub:!0},{id:"note-on-hmr",title:"4. Note on HMR"}];return(M,n)=>(_(),y(m,{title:"Touch Repeat Directive",desc:"Vue directive which triggers an event at specified intervals of time while the user touches and holds on a component or element.",heading:"","edit-link":"vue-directives/touch-repeat",toc:r,related:d},{default:c(()=>[w,b,T,o(g,{file:"TouchRepeat"}),e("h2",{id:"usage",class:"doc-heading doc-h2",onClick:n[0]||(n[0]=i=>s(a)("usage"))},"Usage"),R,D,o(l,{title:"Basic",file:"Basic"}),H,o(l,{title:"Custom keys",file:"Keys"}),C,o(l,{title:"Applied to QBtn",file:"Buttons"}),e("h3",{id:"handling-mouse-events",class:"doc-heading doc-h3",onClick:n[1]||(n[1]=i=>s(a)("handling-mouse-events"))},"Handling Mouse Events"),B,o(s(u),null,{default:c(()=>[E,o(p)]),_:1}),e("h3",{id:"handling-key-events",class:"doc-heading doc-h3",onClick:n[2]||(n[2]=i=>s(a)("handling-key-events"))},"Handling Key Events"),e("p",null,[t("When you want to handle key events too, use "),o(v,{to:"https://keycode.info/"},{default:c(()=>[t("keycodes")]),_:1}),t(" as modifiers:")]),o(s(u),null,{default:c(()=>[P,o(p)]),_:1}),q,e("h3",{id:"inhibiting-touchrepeat",class:"doc-heading doc-h3",onClick:n[3]||(n[3]=i=>s(a)("inhibiting-touchrepeat"))},"Inhibiting TouchRepeat"),x,o(s(u),null,{default:c(()=>[V,o(p)]),_:1}),N,e("h2",{id:"note-on-hmr",class:"doc-heading doc-h2",onClick:n[4]||(n[4]=i=>s(a)("note-on-hmr"))},"Note on HMR"),A]),_:1}))}},X=h(I,[["__file","touch-repeat.md"]]);export{X as default};
