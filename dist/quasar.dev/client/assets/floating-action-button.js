import{_ as p,a as b}from"./index.js";import{p as g,b as h,d as f,w as d,e as a,h as e,f as n,i as s,j as y}from"./vendor.js";import{c as l}from"./_examples_frameless-electron-window.js";import{D as m,a as x}from"./DocPage.js";import{D as o}from"./DocExample.js";import{D as r}from"./DocApi.js";import"./DocCode.js";import"./CopyButton.js";import"./DocCodepen.js";import"./utils.js";import"./DocCardTitle.js";const v=e("p",null,"A Floating Action Button (FAB) represents the primary action in a Page. But, it’s not limited to only a single action. It can contain any number of sub-actions too. And more importantly, it can also be used inline in your Pages or Layouts.",-1),k=e("p",null,"Note that you don’t need a QLayout to use FABs.",-1),_=e("p",null,"There are two types of FABs: expandable (has sub-actions) and non-expandable.",-1),F=e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"TIP"),e("p",null,"For an exhausting list of options, please read the API cards (at the top of this page).")],-1),Q=e("p",null,"If you want a non-expandable FAB, all you need is a round button – wrapped in QPageSticky if used on a QLayout.",-1),w=e("p",null,"When the labels are internal and your QFab opens up vertically (up or down) then you also have the ability to choose how to vertically align the sub-actions:",-1),A=e("p",null,[s("By default, when the label is external on the main QFab (not the sub-actions), it gets shown only when QFab is opened. However, you can override that by setting a Boolean value for "),e("code",{class:"doc-token"},"hide-label"),s(" prop.")],-1),P=e("p",null,"If we hide the icon (through specific prop), we should at least use an internal label:",-1),S=e("p",null,[s("The default padding for QFab is “md” and for QFabAction is “sm”. However, you can use "),e("code",{class:"doc-token"},"padding"),s(" prop to customize it (accepts CSS units too):")],-1),B=e("p",null,"Notice the slots for QFab and the slots for QFabAction below:",-1),E={__name:"floating-action-button",setup(C){g("_q_ex",{name:"QFab",list:b(()=>import("./e.QFab.js"),[])});const c=[{name:"Layout",category:"Layout and Grid",path:"/layout/layout"},{name:"Layout Page",category:"Layout and Grid",path:"/layout/page"}],u=[{id:"qfab-api",title:"2. QFab API",deep:!0},{id:"qfabaction-api",title:"3. QFabAction API",deep:!0},{id:"usage",title:"4. Usage"},{id:"non-expandable",title:"4.1. Non-Expandable",sub:!0},{id:"expandable",title:"4.2. Expandable",sub:!0},{id:"internal-labels",title:"4.3. Internal labels",sub:!0},{id:"external-labels",title:"4.4. External labels",sub:!0},{id:"hide-icons",title:"4.5. Hide icons",sub:!0},{id:"padding",title:"4.6. Padding",sub:!0},{id:"square-style",title:"4.7. Square style",sub:!0},{id:"slots",title:"4.8. Slots",sub:!0},{id:"with-qpagesticky",title:"4.9. With QPageSticky",sub:!0},{id:"draggable",title:"4.10. Draggable",sub:!0}];return(I,t)=>(h(),f(m,{title:"Floating Action Button",desc:"How to use the QFab component. Floating Action Buttons for your Quasar app.",heading:"","edit-link":"vue-components/floating-action-button",toc:u,related:c},{default:d(()=>[v,k,a(r,{file:"QFab"}),a(r,{file:"QFabAction"}),e("h2",{id:"usage",class:"doc-heading doc-h2",onClick:t[0]||(t[0]=i=>n(l)("usage"))},"Usage"),_,F,e("h3",{id:"non-expandable",class:"doc-heading doc-h3",onClick:t[1]||(t[1]=i=>n(l)("non-expandable"))},"Non-Expandable"),Q,a(o,{title:"Non expandable",file:"NonExpandable"}),e("h3",{id:"expandable",class:"doc-heading doc-h3",onClick:t[2]||(t[2]=i=>n(l)("expandable"))},"Expandable"),a(o,{title:"Expandable",file:"Expandable"}),e("h3",{id:"internal-labels",class:"doc-heading doc-h3",onClick:t[3]||(t[3]=i=>n(l)("internal-labels"))},"Internal labels"),a(o,{title:"Internal label",file:"InternalLabel"}),a(o,{title:"Toggling internal label",file:"InternalLabelToggling"}),w,a(o,{title:"Vertical actions alignment",file:"VerticalActionsAlignment"}),e("h3",{id:"external-labels",class:"doc-heading doc-h3",onClick:t[4]||(t[4]=i=>n(l)("external-labels"))},"External labels"),A,a(o,{title:"External label",file:"ExternalLabel"}),a(o,{title:"Custom styled external label",file:"ExternalLabelStyled"}),a(o,{title:"Toggling external label",file:"ExternalLabelToggling"}),e("h3",{id:"hide-icons",class:"doc-heading doc-h3",onClick:t[5]||(t[5]=i=>n(l)("hide-icons"))},"Hide icons"),P,a(o,{title:"Hide icon",file:"HideIcon"}),e("h3",{id:"padding",class:"doc-heading doc-h3",onClick:t[6]||(t[6]=i=>n(l)("padding"))},"Padding"),S,a(o,{title:"Playing with padding",file:"Padding"}),e("h3",{id:"square-style",class:"doc-heading doc-h3",onClick:t[7]||(t[7]=i=>n(l)("square-style"))},"Square style"),a(o,{title:"Square style",file:"SquareStyle"}),e("h3",{id:"slots",class:"doc-heading doc-h3",onClick:t[8]||(t[8]=i=>n(l)("slots"))},[s("Slots "),a(y,{label:"v2.4+"})]),B,a(o,{title:"Slots: icon, active-icon and label",file:"FabSlots"}),e("h3",{id:"with-qpagesticky",class:"doc-heading doc-h3",onClick:t[9]||(t[9]=i=>n(l)("with-qpagesticky"))},"With QPageSticky"),a(o,{title:"With QPageSticky",file:"PageSticky"}),e("h3",{id:"draggable",class:"doc-heading doc-h3",onClick:t[10]||(t[10]=i=>n(l)("draggable"))},"Draggable"),e("p",null,[s("Below is a nice example of using "),a(x,{to:"/vue-directives/touch-pan"},{default:d(()=>[s("TouchPan")]),_:1}),s(" for making the QFab draggable across the screen.")]),a(o,{title:"Draggable",file:"Draggable"})]),_:1}))}},j=p(E,[["__file","floating-action-button.md"]]);export{j as default};
