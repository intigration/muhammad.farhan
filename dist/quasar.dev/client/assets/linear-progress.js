import{_ as u,a as c}from"./index.js";import{c as r}from"./_examples_frameless-electron-window.js";import{D as p}from"./DocPage.js";import{D as a}from"./DocExample.js";import{D as m}from"./DocApi.js";import{p as g,b as h,d as f,w as b,e as i,h as e,f as o,i as n}from"./vendor.js";import"./DocCode.js";import"./CopyButton.js";import"./DocCodepen.js";import"./utils.js";import"./DocCardTitle.js";const v=e("p",null,"The QLinearProgress component displays a colored loading bar. The bar can either have a determinate progress or an indeterminate animation. It should be used to inform the user that an action is occurring in the background.",-1),y=e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"TIP"),e("p",null,[n("For indeterminate state (above) or query state (below) you donâ€™t need to specify the "),e("code",{class:"doc-token"},"value"),n(" property.")])],-1),_=e("p",null,"To add a label to the progress bar you can use the default slot. Take care to:",-1),k=e("ul",null,[e("li",null,[n("use a "),e("code",{class:"doc-token"},"size"),n(" big enough to allow showing the label")]),e("li",null,"set a text color for the label so that it is visible both on the filled and unfilled areas, or use text-shadow CSS, or use a QBadge as in the example below")],-1),C={__name:"linear-progress",setup(P){g("_q_ex",{name:"QLinearProgress",list:c(()=>import("./e.QLinearProgress.js"),[])});const l=[{name:"Circular Progress",category:"Vue Components",path:"/vue-components/circular-progress"},{name:"Inner Loading",category:"Vue Components",path:"/vue-components/inner-loading"},{name:"Spinners",category:"Vue Components",path:"/vue-components/spinners"},{name:"Loading",category:"Quasar Plugins",path:"/quasar-plugins/loading"},{name:"Loading Bar",category:"Quasar Plugins",path:"/quasar-plugins/loading-bar"}],d=[{id:"qlinearprogress-api",title:"2. QLinearProgress API",deep:!0},{id:"usage",title:"3. Usage"},{id:"determined-state",title:"3.1. Determined state",sub:!0},{id:"indeterminate-state",title:"3.2. Indeterminate state",sub:!0},{id:"reversed",title:"3.3. Reversed",sub:!0},{id:"style",title:"3.4. Style",sub:!0},{id:"buffer",title:"3.5. Buffer",sub:!0},{id:"with-a-label",title:"3.6. With a label",sub:!0}];return(D,t)=>(h(),f(p,{title:"Linear Progress",desc:"The QLinearProgress Vue component displays a colored loading bar. The bar can either have a determinate progress or an indeterminate animation.",heading:"","edit-link":"vue-components/linear-progress",toc:d,related:l},{default:b(()=>[v,i(m,{file:"QLinearProgress"}),e("h2",{id:"usage",class:"doc-heading doc-h2",onClick:t[0]||(t[0]=s=>o(r)("usage"))},"Usage"),e("h3",{id:"determined-state",class:"doc-heading doc-h3",onClick:t[1]||(t[1]=s=>o(r)("determined-state"))},"Determined state"),i(a,{title:"Determined state",file:"Determinate"}),e("h3",{id:"indeterminate-state",class:"doc-heading doc-h3",onClick:t[2]||(t[2]=s=>o(r)("indeterminate-state"))},"Indeterminate state"),i(a,{title:"Indeterminate state",file:"Indeterminate"}),y,i(a,{title:"Query state",file:"Query"}),e("h3",{id:"reversed",class:"doc-heading doc-h3",onClick:t[3]||(t[3]=s=>o(r)("reversed"))},"Reversed"),i(a,{title:"Reverse progress direction",file:"Reverse"}),e("h3",{id:"style",class:"doc-heading doc-h3",onClick:t[4]||(t[4]=s=>o(r)("style"))},"Style"),i(a,{title:"Custom height",file:"CustomHeight"}),i(a,{title:"Standard sizes",file:"StandardSizes"}),i(a,{title:"Stripe",file:"Stripe"}),i(a,{title:"Force dark mode",file:"OnDarkBackground"}),e("h3",{id:"buffer",class:"doc-heading doc-h3",onClick:t[5]||(t[5]=s=>o(r)("buffer"))},"Buffer"),i(a,{title:"Buffer",file:"Buffering"}),e("h3",{id:"with-a-label",class:"doc-heading doc-h3",onClick:t[6]||(t[6]=s=>o(r)("with-a-label"))},"With a label"),_,k,i(a,{title:"With a label",file:"Label"})]),_:1}))}},R=u(C,[["__file","linear-progress.md"]]);export{R as default};
