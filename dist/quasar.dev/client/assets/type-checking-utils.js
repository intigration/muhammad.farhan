import{c}from"./_examples_frameless-electron-window.js";import{D as k,a as r}from"./DocPage.js";import{D as p}from"./DocPrerender.js";import{C as l}from"./CopyButton.js";import{_ as d}from"./index.js";import{b as m,d as g,w as e,h as n,i as s,e as t,f as o}from"./vendor.js";const f={class:"doc-note doc-note--tip"},y=n("p",{class:"doc-note__title"},"TIP",-1),w=n("p",null,"Recursively checks if one Object is equal to another. Also supports Map, Set, ArrayBuffer, Regexp, Date, and many more.",-1),h=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" is "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`

`),n("span",{class:"token keyword"},"const"),s(" objA "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"/* ... */"),s(),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token keyword"},"const"),s(" objB "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"/* ... */"),s(),n("span",{class:"token punctuation"},"}"),s(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(" is"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"deepEqual"),n("span",{class:"token punctuation"},"("),s("objA"),n("span",{class:"token punctuation"},","),s(" objB"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// true or false")])],-1),_=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" is "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`

`),n("span",{class:"token keyword"},"const"),s(" obj "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"some"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'value'"),s(),n("span",{class:"token punctuation"},"}"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(" is"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"object"),n("span",{class:"token punctuation"},"("),s("obj"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// true")])],-1),b=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" is "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`

`),n("span",{class:"token keyword"},"const"),s(" date "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Date"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(" is"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"date"),n("span",{class:"token punctuation"},"("),s("date"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// true"),s(`

`),n("span",{class:"token keyword"},"const"),s(" now "),n("span",{class:"token operator"},"="),s(" Date"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(" is"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"date"),n("span",{class:"token punctuation"},"("),s("now"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// false")])],-1),x=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" is "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`

`),n("span",{class:"token keyword"},"const"),s(" pattern1 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"\\w+"),n("span",{class:"token regex-delimiter"},"/")]),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(" is"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"regexp"),n("span",{class:"token punctuation"},"("),s("pattern1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// true"),s(`

`),n("span",{class:"token keyword"},"const"),s(" pattern2 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"RegExp"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'\\\\w+'"),n("span",{class:"token punctuation"},")"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(" is"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"regexp"),n("span",{class:"token punctuation"},"("),s("pattern2"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// true")])],-1),j=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" is "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`

`),n("span",{class:"token keyword"},"const"),s(" myNumber "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"80"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(" is"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"number"),n("span",{class:"token punctuation"},"("),s("myNumber"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// true")])],-1),q={__name:"type-checking-utils",setup(C){const i=[{id:"is-deepequal",title:"2. is.deepEqual"},{id:"is-object",title:"3. is.object"},{id:"is-date",title:"4. is.date"},{id:"is-regexp",title:"5. is.regexp"},{id:"is-number",title:"6. is.number"}];return(v,a)=>(m(),g(k,{title:"Type Checking Utils (<is>)",desc:"A set of Quasar methods for type checking.",badge:"v2.8+",heading:"","edit-link":"quasar-utils/type-checking-utils",toc:i},{default:e(()=>[n("div",f,[y,n("p",null,[s("For usage with the UMD build see "),t(r,{to:"/start/umd#quasar-global-object"},{default:e(()=>[s("here")]),_:1}),s(".")])]),n("h2",{id:"is-deepequal",class:"doc-heading doc-h2",onClick:a[0]||(a[0]=u=>o(c)("is-deepequal"))},"is.deepEqual"),w,t(o(p),null,{default:e(()=>[h,t(l)]),_:1}),n("h2",{id:"is-object",class:"doc-heading doc-h2",onClick:a[1]||(a[1]=u=>o(c)("is-object"))},"is.object"),t(o(p),null,{default:e(()=>[_,t(l)]),_:1}),n("h2",{id:"is-date",class:"doc-heading doc-h2",onClick:a[2]||(a[2]=u=>o(c)("is-date"))},"is.date"),t(o(p),null,{default:e(()=>[b,t(l)]),_:1}),n("h2",{id:"is-regexp",class:"doc-heading doc-h2",onClick:a[3]||(a[3]=u=>o(c)("is-regexp"))},"is.regexp"),t(o(p),null,{default:e(()=>[x,t(l)]),_:1}),n("h2",{id:"is-number",class:"doc-heading doc-h2",onClick:a[4]||(a[4]=u=>o(c)("is-number"))},"is.number"),t(o(p),null,{default:e(()=>[j,t(l)]),_:1})]),_:1}))}},P=d(q,[["__file","type-checking-utils.md"]]);export{P as default};
