import{_ as h,a as g}from"./index.js";import{c as s}from"./_examples_frameless-electron-window.js";import{D as m}from"./DocPage.js";import{D as i}from"./DocExample.js";import{D as k}from"./DocApi.js";import{D as u}from"./DocPrerender.js";import{C as p}from"./CopyButton.js";import{p as v,b as f,d as _,w as l,e as o,h as e,f as a,i as t}from"./vendor.js";import"./DocCode.js";import"./DocCodepen.js";import"./utils.js";import"./DocCardTitle.js";const w=e("p",null,[t("Quasar offers full-featured Vue directives that can totally replace libraries like Hammerjs: "),e("code",{class:"doc-token"},"v-touch-pan"),t(", "),e("code",{class:"doc-token"},"v-touch-swipe"),t(", "),e("code",{class:"doc-token"},"v-touch-hold"),t(" and even "),e("code",{class:"doc-token"},"v-touch-repeat"),t(".")],-1),b=e("blockquote",{class:"doc-note"},[e("p",null,[e("strong",null,"These directives also work with mouse events, not only touch events"),t(", so you are able to build cool functionality for your App on desktops too.")])],-1),y=e("p",null,[t("We will be describing "),e("code",{class:"doc-token"},"v-touch-pan"),t(" on the lines below.")],-1),P=e("p",null,"Click then pan in a direction with your mouse on the area below to see it in action. Page scrolling is prevented, but you can opt out if you wish.",-1),T=e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"TIP"),e("p",null,[t("If your content also has images, you might want to add "),e("code",{class:"doc-token"},'draggable="false"'),t(" to them, otherwise the native browser behavior might interfere in a negative way.")])],-1),x=e("p",null,"Panning works both with a mouse or a native touch action. You can also capture pan to certain directions (any) only as youâ€™ll see below.",-1),D=e("p",null,"Example on capturing only horizontal panning. Notice that on touch capable devices the scrolling is automatically not blocked, since we are only capturing horizontally.",-1),H=e("p",null,"Example on capturing only vertically panning. Page scrolling is prevented, but you can opt out if you wish.",-1),C=e("p",null,[t("Example on capturing panning on custom directions. For this, use modifiers: "),e("code",{class:"doc-token"},"up"),t(", "),e("code",{class:"doc-token"},"down"),t(", "),e("code",{class:"doc-token"},"left"),t(", "),e("code",{class:"doc-token"},"right"),t(". Page scrolling is prevented, but you can opt out if you wish.")],-1),V=e("p",null,[t("When you want to handle mouse events too, use the "),e("code",{class:"doc-token"},"mouse"),t(" modifier:")],-1),E=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token comment"},`<!--
  directive will also be triggered by mouse actions
-->`),t(`
`),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),t("div")]),t(),e("span",{class:"token attr-name"},"v-touch-pan.mouse"),e("span",{class:"token attr-value"},[e("span",{class:"token punctuation attr-equals"},"="),e("span",{class:"token punctuation"},'"'),t("userHasPanned"),e("span",{class:"token punctuation"},'"')]),e("span",{class:"token punctuation"},">")]),t("..."),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),t("div")]),e("span",{class:"token punctuation"},">")])])],-1),B=e("p",null,[t("By default, the directive does not block page scrolling. If you want to prevent scrolling, then use the "),e("code",{class:"doc-token"},"prevent"),t(" modifier.")],-1),A=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),t("div")]),t(),e("span",{class:"token attr-name"},"v-touch-pan.prevent"),e("span",{class:"token attr-value"},[e("span",{class:"token punctuation attr-equals"},"="),e("span",{class:"token punctuation"},'"'),t("userHasPanned"),e("span",{class:"token punctuation"},'"')]),e("span",{class:"token punctuation"},">")]),t("..."),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),t("div")]),e("span",{class:"token punctuation"},">")])])],-1),I=e("p",null,[t("When you want to inhibit TouchPan, you can do so by stopping propagation of the "),e("code",{class:"doc-token"},"touchstart"),t(" / "),e("code",{class:"doc-token"},"mousedown"),t(" events from the inner content:")],-1),q=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),t("div")]),t(),e("span",{class:"token attr-name"},"v-touch-pan.mouse"),e("span",{class:"token attr-value"},[e("span",{class:"token punctuation attr-equals"},"="),e("span",{class:"token punctuation"},'"'),t("userHasHold"),e("span",{class:"token punctuation"},'"')]),e("span",{class:"token punctuation"},">")]),t(`
  `),e("span",{class:"token comment"},"<!-- ...content -->"),t(`
  `),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),t("div")]),t(),e("span",{class:"token attr-name"},"@touchstart.stop"),t(),e("span",{class:"token attr-name"},"@mousedown.stop"),e("span",{class:"token punctuation"},">")]),t(`
    `),e("span",{class:"token comment"},`<!--
      TouchPan will not apply here because
      we are calling stopPropagation() on touchstart
      and mousedown events
    -->`),t(`
  `),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),t("div")]),e("span",{class:"token punctuation"},">")]),t(`
  `),e("span",{class:"token comment"},"<!-- ...content -->"),t(`
`),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),t("div")]),e("span",{class:"token punctuation"},">")])])],-1),N=e("p",null,[t("However, if you are using "),e("code",{class:"doc-token"},"capture"),t(" or "),e("code",{class:"doc-token"},"mouseCapture"),t(" modifiers then events will first reach the TouchPan directive then the inner content, so TouchPan will still trigger.")],-1),$=e("p",null,"Below is a nice example on using TouchPan on a QFab. You can drag it across the screen.",-1),z=e("p",null,"Due to performance reasons, not all of the modifiers are reactive. Some require a window/page/component refresh to get updated. Please check the API card for the modifiers which are not marked as reactive.",-1),F={__name:"touch-pan",setup(M){v("_q_ex",{name:"TouchPan",list:g(()=>import("./e.TouchPan.js"),[])});const r=[{name:"Touch Swipe",category:"Vue Directives",path:"/vue-directives/touch-swipe"},{name:"Touch Repeat",category:"Vue Directives",path:"/vue-directives/touch-repeat"},{name:"Touch Hold",category:"Vue Directives",path:"/vue-directives/touch-hold"}],d=[{id:"touchpan-api",title:"2. TouchPan API",deep:!0},{id:"usage",title:"3. Usage"},{id:"handling-mouse-events",title:"3.1. Handling Mouse Events",sub:!0},{id:"preventing-scroll-on-touch-capable-devices-",title:"3.2. Preventing Scroll (on touch capable devices)",sub:!0},{id:"inhibiting-touchpan",title:"3.3. Inhibiting TouchPan",sub:!0},{id:"example-with-fab",title:"4. Example with FAB"},{id:"note-on-hmr",title:"5. Note on HMR"}];return(R,n)=>(f(),_(m,{title:"Touch Pan Directive",desc:"Vue directive which triggers an event when the user drags the finger or mouse on a component or element.",heading:"","edit-link":"vue-directives/touch-pan",toc:d,related:r},{default:l(()=>[w,b,y,o(k,{file:"TouchPan"}),e("h2",{id:"usage",class:"doc-heading doc-h2",onClick:n[0]||(n[0]=c=>a(s)("usage"))},"Usage"),P,T,o(i,{title:"All directions",file:"Basic"}),x,D,o(i,{title:"Horizontally",file:"Horizontal"}),H,o(i,{title:"Vertically",file:"Vertical"}),C,o(i,{title:"Custom directions",file:"Custom"}),e("h3",{id:"handling-mouse-events",class:"doc-heading doc-h3",onClick:n[1]||(n[1]=c=>a(s)("handling-mouse-events"))},"Handling Mouse Events"),V,o(a(u),null,{default:l(()=>[E,o(p)]),_:1}),e("h3",{id:"preventing-scroll-on-touch-capable-devices-",class:"doc-heading doc-h3",onClick:n[2]||(n[2]=c=>a(s)("preventing-scroll-on-touch-capable-devices-"))},"Preventing Scroll (on touch capable devices)"),B,o(a(u),null,{default:l(()=>[A,o(p)]),_:1}),e("h3",{id:"inhibiting-touchpan",class:"doc-heading doc-h3",onClick:n[3]||(n[3]=c=>a(s)("inhibiting-touchpan"))},"Inhibiting TouchPan"),I,o(a(u),null,{default:l(()=>[q,o(p)]),_:1}),N,e("h2",{id:"example-with-fab",class:"doc-heading doc-h2",onClick:n[4]||(n[4]=c=>a(s)("example-with-fab"))},"Example with FAB"),$,o(i,{title:"Draggable",file:"Draggable"}),e("h2",{id:"note-on-hmr",class:"doc-heading doc-h2",onClick:n[5]||(n[5]=c=>a(s)("note-on-hmr"))},"Note on HMR"),z]),_:1}))}},Z=h(F,[["__file","touch-pan.md"]]);export{Z as default};
