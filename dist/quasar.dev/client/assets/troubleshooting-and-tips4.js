import{c as d}from"./_examples_frameless-electron-window.js";import{D as p,a as c}from"./DocPage.js";import{D as l}from"./DocPrerender.js";import{C as r}from"./CopyButton.js";import{_ as h}from"./index.js";import{b as S,d as b,w as a,h as e,f as t,i as o,e as s}from"./vendor.js";const g=e("p",null,[o("While you are developing a Mobile App with Capacitor Mode, you can access "),e("code",{class:"doc-token"},"$q.capacitor"),o(" in your Vue files. This is an alias to the global "),e("code",{class:"doc-token"},"Capacitor"),o(" Object.")],-1),m=e("p",null,"This way you have Chrome Dev Tools directly for your App running on the emulator/phone/table. Inspect elements, check console output, and so on and so forth.",-1),f=e("p",null,[e("img",{src:"https://cdn.quasar.dev/img/remote-debug.png",alt:"",title:"Android Remote Debugging",class:"doc-img"}),e("img",{src:"https://cdn.quasar.dev/img/remote-debug-2.png",alt:"",title:"Android Remote Debugging",class:"doc-img"})],-1),T=e("p",null,"If you are having problems getting Android builds to finish and you see a message like:",-1),_=e("pre",{class:"doc-code"},[e("code",null,"> Failed to install the following Android SDK packages as some licenses have not been accepted.")],-1),k=e("p",null,"If this is the case you need to accept ALL the licenses. Thankfully there is a tool for this:",-1),y=e("ul",null,[e("li",null,[o("Linux: "),e("code",{class:"doc-token"},"sdkmanager --licenses")]),e("li",null,[o("macOS: "),e("code",{class:"doc-token"},"~/Library/Android/sdk/tools/bin/sdkmanager --licenses")]),e("li",null,[o("Windows: "),e("code",{class:"doc-token"},"%ANDROID_SDK_ROOT%/tools/bin/sdkmanager --licenses")])],-1),A=e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,[o("The environmental variable "),e("code",{class:"doc-token"},"ANDROID_HOME"),o(" has been deprecated and replaced with "),e("code",{class:"doc-token"},"ANDROID_SDK_ROOT"),o(". Depending on your version of Android Studio you may need one or the other. It doesn’t hurt to have both set.")])],-1),v=e("p",null,[o("Some newer Debian-based OS (e.g. ubuntu, elementary OS) might leave you with a "),e("code",{class:"doc-token"},"Android SDK not found."),o(" after you installed and (correctly) configured the environment.")],-1),D=e("p",null,"This could have two different reasons: Usually the paths aren’t configured correctly. The first step is to verify if your paths are set correctly. This can be done by running the following commands:",-1),E=e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token builtin class-name"},"echo"),o(),e("span",{class:"token variable"},"$ANDROID_HOME"),o(`

`),e("span",{class:"token comment"},"# or"),o(`

$ `),e("span",{class:"token builtin class-name"},"echo"),o(),e("span",{class:"token variable"},"$ANDROID_SDK_ROOT")])],-1),M=e("p",null,[o("The expected output should be a path similar to this "),e("code",{class:"doc-token"},"$HOME/Android/Sdk"),o(". After this run:")],-1),O=e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"ls"),o(),e("span",{class:"token parameter variable"},"-la"),o(),e("span",{class:"token variable"},"$ANDROID_HOME"),o(`

`),e("span",{class:"token comment"},"# or"),o(`

$ `),e("span",{class:"token function"},"ls"),o(),e("span",{class:"token parameter variable"},"-la"),o(),e("span",{class:"token variable"},"$ANDROID_SDK_ROOT")])],-1),R=e("p",null,"To ensure the folder contains the SDK. The expected output should contain folders like ‘tools’, ‘sources’, ‘platform-tools’, etc.",-1),w=e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token builtin class-name"},"echo"),o(),e("span",{class:"token environment constant"},"$PATH")])],-1),B=e("p",null,"The output should contain each one entry for the Android SDK ‘tools’-folder and ‘platform-tools’-tools. This could look like this:",-1),U=e("pre",{class:"doc-code"},[e("code",null,"/home/your_user/bin:/home/your_user/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/your_user/Android/Sdk/tools:/home/your_user/Android/Sdk/platform-tools")],-1),V={class:"doc-note"},Y=e("p",null,[o("In Android Studio (if you open it on "),e("code",{class:"doc-token"},"/src-capacitor/android"),o("), you will be greeted with a message recommending to upgrade the Gradle version. "),e("strong",null,"DO NOT UPGRADE GRADLE"),o(" as it will break the Capacitor project. Same goes for any other requested upgrades.")],-1),C=e("img",{src:"https://cdn.quasar.dev/img/gradle-upgrade-notice.png",alt:"Gradle upgrade",class:"q-mb-md rounded-borders",style:{"max-width":"350px"}},null,-1),I=e("p",null,"If you encounter any IDE errors then click on File > Invalidate caches and restart.",-1),$=e("img",{src:"https://cdn.quasar.dev/img/gradle-invalidate-cache.png",alt:"Gradle upgrade",class:"rounded-borders",style:{"max-width":"350px"}},null,-1),x=e("p",null,[o("You may bump into "),e("code",{class:"doc-token"},"?????? no permissions"),o(" problem when trying to run your App directly on an Android phone/tablet.")],-1),q=e("p",null,"Here’s how you fix this:",-1),N=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token comment"},"# create the .rules file and insert the content"),o(`
`),e("span",{class:"token comment"},"# from below this example"),o(`
`),e("span",{class:"token function"},"sudo"),o(),e("span",{class:"token function"},"vim"),o(` /etc/udev/rules.d/51-android.rules
`),e("span",{class:"token function"},"sudo"),o(),e("span",{class:"token function"},"chmod"),o(),e("span",{class:"token number"},"644"),o(`   /etc/udev/rules.d/51-android.rules
`),e("span",{class:"token function"},"sudo"),o(),e("span",{class:"token function"},"chown"),o(` root. /etc/udev/rules.d/51-android.rules
`),e("span",{class:"token function"},"sudo"),o(),e("span",{class:"token function"},"service"),o(` udev restart
`),e("span",{class:"token function"},"sudo"),o(),e("span",{class:"token function"},"killall"),o(" adb")])],-1),K=e("p",null,[o("The content for "),e("code",{class:"doc-token"},"51-android.rules"),o(":")],-1),L=e("pre",{class:"doc-code"},[e("code",null,`SUBSYSTEM=="usb", ATTRS{idVendor}=="0bb4", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0e79", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0502", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0b05", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="413c", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0489", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="091e", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="18d1", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0bb4", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="12d1", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="24e3", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="2116", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0482", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="17ef", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="1004", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="22b8", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0409", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="2080", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0955", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="2257", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="10a9", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="1d4d", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0471", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="04da", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="05c6", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="1f53", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="04e8", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="04dd", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0fce", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0930", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="19d2", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="1bbb", MODE="0666"`)],-1),H=e("p",null,[o("Now running "),e("code",{class:"doc-token"},"adb devices"),o(" should discover your device.")],-1),G=e("p",null,"If you are debugging iOS Apps, you can use the Safari developer tools to remotely debug through a USB cable attached to your iOS phone/tablet. It can be used for emulator too.",-1),F=e("p",null,"This way you have Safari developer tools directly for your App running on the emulator/phone/table. Inspect elements, check console output, and so on and so forth.",-1),Q=e("p",null,"First enable the “developer” menu option in the Settings of Safari. Then if you navigate to the “developer” menu option you will see your emulator or connected device listed near the top. From here you can open the developer tools.",-1),P=e("p",null,"Since mobile phones have a status bar and/or notches, your app’s styling might need some tweaking when building on Capacitor. In order to prevent parts of your app from going behind the status bar, there is a global CSS variable that can be used for creating a “safe-area”. This variable can then be applied in your app’s top and bottom padding or margin.",-1),W=e("p",null,"Quasar has support for these CSS safe-areas by default in QHeader/QFooter and Notify. However it’s important to always check your Capacitor build on several models to see if all cases of your app are dealing with the safe areas correctly.",-1),j=e("p",null,"In cases you need to manually tweak your CSS you can do so with:",-1),z=e("pre",{class:"doc-code"},[e("code",null,`// for your app's header
padding-top: constant(safe-area-inset-top) // for iOS 11.0
padding-top: env(safe-area-inset-top) // for iOS 11.2 +
// for your app's footer
padding-bottom: constant(safe-area-inset-bottom)
padding-bottom: env(safe-area-inset-bottom)`)],-1),J=e("p",null,[o("Of course you can also use the above example with "),e("code",{class:"doc-token"},"margin"),o(" instead of "),e("code",{class:"doc-token"},"padding"),o(" depending on your app.")],-1),X={__name:"troubleshooting-and-tips",setup(Z){const u=[{id:"q-capacitor",title:"2. $q.capacitor"},{id:"android-tips",title:"3. Android Tips"},{id:"android-remote-debugging",title:"3.1. Android remote debugging",sub:!0},{id:"accept-licenses",title:"3.2. Accept Licenses",sub:!0},{id:"android-sdk-not-found-after-installation-of-the-sdk",title:"3.3. Android SDK not found after installation of the SDK",sub:!0},{id:"android-studio",title:"3.4. Android Studio",sub:!0},{id:"setting-up-device-on-linux",title:"3.5. Setting up device on Linux",sub:!0},{id:"ios-tips",title:"4. iOS Tips"},{id:"ios-remote-debugging",title:"4.1. iOS remote debugging",sub:!0},{id:"status-bar-and-notch-safe-areas",title:"4.2. Status bar and notch safe-areas",sub:!0}];return(ee,n)=>(S(),b(p,{title:"Capacitor Troubleshooting and Tips",desc:"(@quasar/app-webpack) Tips and tricks for a Quasar hybrid mobile app with Capacitor.",overline:"Quasar CLI with Webpack - @quasar/app-webpack",heading:"","edit-link":"quasar-cli-webpack/developing-capacitor-apps/troubleshooting-and-tips",toc:u},{default:a(()=>[e("h2",{id:"q-capacitor",class:"doc-heading doc-h2",onClick:n[0]||(n[0]=i=>t(d)("q-capacitor"))},"$q.capacitor"),g,e("h2",{id:"android-tips",class:"doc-heading doc-h2",onClick:n[1]||(n[1]=i=>t(d)("android-tips"))},"Android Tips"),e("h3",{id:"android-remote-debugging",class:"doc-heading doc-h3",onClick:n[2]||(n[2]=i=>t(d)("android-remote-debugging"))},"Android remote debugging"),e("p",null,[o("If you are debugging Android Apps, you can use Google Chrome "),s(c,{to:"https://developers.google.com/web/tools/chrome-devtools/debug/remote-debugging/remote-debugging?hl=en"},{default:a(()=>[o("Remote Debugging")]),_:1}),o(" through a USB cable attached to your Android phone/tablet. It can be used for emulator too.")]),m,f,e("h3",{id:"accept-licenses",class:"doc-heading doc-h3",onClick:n[3]||(n[3]=i=>t(d)("accept-licenses"))},"Accept Licenses"),T,s(t(l),null,{default:a(()=>[_,s(r)]),_:1}),k,y,e("h3",{id:"android-sdk-not-found-after-installation-of-the-sdk",class:"doc-heading doc-h3",onClick:n[4]||(n[4]=i=>t(d)("android-sdk-not-found-after-installation-of-the-sdk"))},"Android SDK not found after installation of the SDK"),A,v,D,s(t(l),null,{default:a(()=>[E,s(r,{lang:"bash"})]),_:1}),M,s(t(l),null,{default:a(()=>[O,s(r,{lang:"bash"})]),_:1}),R,s(t(l),null,{default:a(()=>[w,s(r,{lang:"bash"})]),_:1}),B,s(t(l),null,{default:a(()=>[U,s(r,{lang:"bash"})]),_:1}),e("blockquote",V,[e("p",null,[o("If you ensured your paths are set correctly and still get the error, you can try the following fix: "),s(c,{to:"https://github.com/meteor/meteor/issues/8464#issuecomment-288112504"},{default:a(()=>[o("Replacing the Android Studio ‘tools’ folder manually")]),_:1})])]),e("h3",{id:"android-studio",class:"doc-heading doc-h3",onClick:n[5]||(n[5]=i=>t(d)("android-studio"))},"Android Studio"),Y,C,I,$,e("h3",{id:"setting-up-device-on-linux",class:"doc-heading doc-h3",onClick:n[6]||(n[6]=i=>t(d)("setting-up-device-on-linux"))},"Setting up device on Linux"),x,q,s(t(l),null,{default:a(()=>[N,s(r,{lang:"bash"})]),_:1}),K,s(t(l),null,{default:a(()=>[L,s(r)]),_:1}),H,e("h2",{id:"ios-tips",class:"doc-heading doc-h2",onClick:n[7]||(n[7]=i=>t(d)("ios-tips"))},"iOS Tips"),e("h3",{id:"ios-remote-debugging",class:"doc-heading doc-h3",onClick:n[8]||(n[8]=i=>t(d)("ios-remote-debugging"))},"iOS remote debugging"),G,F,Q,e("h3",{id:"status-bar-and-notch-safe-areas",class:"doc-heading doc-h3",onClick:n[9]||(n[9]=i=>t(d)("status-bar-and-notch-safe-areas"))},"Status bar and notch safe-areas"),P,W,j,s(t(l),null,{default:a(()=>[z,s(r)]),_:1}),J]),_:1}))}},ie=h(X,[["__file","troubleshooting-and-tips.md"]]);export{ie as default};
