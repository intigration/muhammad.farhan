import{b as d,d as g,w as o,h as n,i as s,e as t,f as a,j as f,l as m}from"./vendor.js";import{c as l}from"./_examples_frameless-electron-window.js";import{D as h,a as u}from"./DocPage.js";import{D as p}from"./DocPrerender.js";import{C as c}from"./CopyButton.js";import{_ as y}from"./index.js";const v=n("code",{class:"doc-token"},"/src",-1),_=n("p",null,[s("You may have noticed that the "),n("code",{class:"doc-token"},"vite.config.js"),s(" / "),n("code",{class:"doc-token"},"vite.config.ts"),s(" file does not exist in your Quasar CLI with Vite project. This is because Quasar CLI generates the Vite configuration for you so that you don’t have to worry about it.")],-1),b=n("p",null,"In case you need to tweak it, you can do so through quasar.config file > build > extendViteConf like so:",-1),w=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// use mergeConfig helper to avoid overwriting the default config"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" mergeConfig "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'vite'"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"// ..."),s(`

`),n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"extendViteConf"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("viteConf"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(" isServer"),n("span",{class:"token punctuation"},","),s(" isClient "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// example: change the chunk size warning limit"),s(`
    viteConf`),n("span",{class:"token punctuation"},"."),s("build "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"mergeConfig"),n("span",{class:"token punctuation"},"("),s("viteConf"),n("span",{class:"token punctuation"},"."),s("build"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token literal-property property"},"chunkSizeWarningLimit"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"750"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token comment"},"// equivalent of following vite.config.js/vite.config.ts:"),s(`
    `),n("span",{class:"token comment"},"// export default defineConfig({"),s(`
    `),n("span",{class:"token comment"},"//   build: {"),s(`
    `),n("span",{class:"token comment"},"//     chunkSizeWarningLimit: 750"),s(`
    `),n("span",{class:"token comment"},"//   }"),s(`
    `),n("span",{class:"token comment"},"// })"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),C=n("p",null,[s("Notice that you don’t need to return anything. The parameter of extendViteConf(viteConf) is the Vite configuration Object generated by Quasar for you. You can add/remove/replace almost anything in it, assuming you really know what you are doing. Do not tamper with the input and output files though or any other option that is already configured by "),n("code",{class:"doc-token"},"quasar.config file > build"),s(".")],-1),x=n("p",null,"Quasar CLI offers a useful command for this:",-1),q=n("pre",{class:"doc-code"},[n("code",null,[s("$ quasar inspect "),n("span",{class:"token parameter variable"},"-h"),s(`

  Description
    Inspect Quasar generated Vite config

  Usage
    $ quasar inspect
    $ quasar inspect `),n("span",{class:"token parameter variable"},"-c"),s(` build
    $ quasar inspect `),n("span",{class:"token parameter variable"},"-m"),s(" electron "),n("span",{class:"token parameter variable"},"-p"),s(),n("span",{class:"token string"},"'build.outDir'"),s(`

  Options
    --cmd, `),n("span",{class:"token parameter variable"},"-c"),s("        Quasar "),n("span",{class:"token builtin class-name"},"command"),s(),n("span",{class:"token punctuation"},"["),s("dev"),n("span",{class:"token operator"},"|"),s("build"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"("),s("default: dev"),n("span",{class:"token punctuation"},")"),s(`
    --mode, `),n("span",{class:"token parameter variable"},"-m"),s("       App mode "),n("span",{class:"token punctuation"},"["),s("spa"),n("span",{class:"token operator"},"|"),s("ssr"),n("span",{class:"token operator"},"|"),s("pwa"),n("span",{class:"token operator"},"|"),s("bex"),n("span",{class:"token operator"},"|"),s("cordova"),n("span",{class:"token operator"},"|"),s("capacitor"),n("span",{class:"token operator"},"|"),s("electron"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"("),s("default: spa"),n("span",{class:"token punctuation"},")"),s(`
    --depth, `),n("span",{class:"token parameter variable"},"-d"),s("      Number of levels deep "),n("span",{class:"token punctuation"},"("),s("default: "),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(`
    --path, `),n("span",{class:"token parameter variable"},"-p"),s("       Path of config "),n("span",{class:"token keyword"},"in"),s(` dot notation
                        Examples:
                          `),n("span",{class:"token parameter variable"},"-p"),s(` module.rules
                          `),n("span",{class:"token parameter variable"},"-p"),s(` plugins
    --thread, `),n("span",{class:"token parameter variable"},"-t"),s(`     Display only one specific app mode config thread
    --help, `),n("span",{class:"token parameter variable"},"-h"),s("       Displays this message")])],-1),V=n("p",null,[s("Make sure to yarn/npm install the vite plugin package that you want to use, then edit the "),n("code",{class:"doc-token"},"/quasar.config"),s(" file:")],-1),j=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"vitePlugins"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
    `),n("span",{class:"token comment"},"// both are perfectly equivalent:"),s(`
    `),n("span",{class:"token punctuation"},"["),s(),n("span",{class:"token string"},"'<plugin-name>'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"/* plugin options */"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"["),s(),n("span",{class:"token string"},"'<plugin-name>'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"/* plugin options */"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"server"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"client"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token punctuation"},"]"),s(`
  `),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),S=n("p",null,"You can disable a plugin on the client-side or the server-side, which is especially useful when developing a SSR app:",-1),P=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"vitePlugins"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
    `),n("span",{class:"token comment"},"// disable on the server-side:"),s(`
    `),n("span",{class:"token punctuation"},"["),s(),n("span",{class:"token string"},"'<plugin-name>'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"/* plugin options */"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"server"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"false"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`

    `),n("span",{class:"token comment"},"// disable on the client-side:"),s(`
    `),n("span",{class:"token punctuation"},"["),s(),n("span",{class:"token string"},"'<plugin-name>'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"/* plugin options */"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"client"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"false"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token punctuation"},"]"),s(`
  `),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),T=n("p",null,"There are multiple syntaxes supported:",-1),I=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"vitePlugins"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
  `),n("span",{class:"token punctuation"},"["),s(),n("span",{class:"token string"},"'<plugin1-name>'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"/* plugin1 options */"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"server"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"client"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"["),s(),n("span",{class:"token string"},"'<plugin2-name>'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"/* plugin2 options */"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"server"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"client"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token comment"},"// ..."),s(`
`),n("span",{class:"token punctuation"},"]"),s(`

`),n("span",{class:"token comment"},"// or:"),s(`

`),n("span",{class:"token literal-property property"},"vitePlugins"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
  `),n("span",{class:"token punctuation"},"["),s(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'<plugin1-name>'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"/* plugin1 options */"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"server"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"client"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"["),s(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'<plugin2-name>'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"/* plugin2 options */"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"server"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"client"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token comment"},"// ..."),s(`
`),n("span",{class:"token punctuation"},"]"),s(`

`),n("span",{class:"token comment"},"// finally, you can specify using the form below,"),s(`
`),n("span",{class:"token comment"},"// but this one has a drawback in that Quasar CLI cannot pick up"),s(`
`),n("span",{class:"token comment"},"// when you change the options param so you'll have to manually"),s(`
`),n("span",{class:"token comment"},"// restart the dev server"),s(`

`),n("span",{class:"token literal-property property"},"vitePlugins"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
  `),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'<plugin1-name>'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"/* plugin1 options */"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'<plugin2-name>'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"/* plugin2 options */"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token comment"},"// ..."),s(`
`),n("span",{class:"token punctuation"},"]")])],-1),Q={class:"doc-note doc-note--tip"},D=n("p",{class:"doc-note__title"},"TIP",-1),A=n("p",null,[s("You might actually bump into Vite plugins that need to be used as "),n("code",{class:"doc-token"},"require('<package-name>').default"),s(" instead of "),n("code",{class:"doc-token"},"require('<package-name>')"),s(". So:")],-1),$=n("br",null,null,-1),O=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"vitePlugins"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
  `),n("span",{class:"token punctuation"},"["),s(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'<plugin1-name>'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("default"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"/* plugin1 options */"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token comment"},"// ..."),s(`
`),n("span",{class:"token punctuation"},"]")])],-1),L=n("p",null,[s("And, should you want, you can also add Vite plugins through "),n("code",{class:"doc-token"},"extendViteConf()"),s(" in the "),n("code",{class:"doc-token"},"/quasar.config"),s(" file. This is especially useful for (but not limited to) SSR mode where you’d want a Vite plugin to be applied only on the server-side or the client-side:")],-1),N=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"extendViteConf"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("viteConf"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(" isClient"),n("span",{class:"token punctuation"},","),s(" isServer "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    viteConf`),n("span",{class:"token punctuation"},"."),s("plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),s(`
      `),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'<plugin1-name>'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"/* plugin1 options */"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'<plugin2-name>'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"/* plugin2 options */"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token comment"},"// ..."),s(`
    `),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),U=n("p",null,[s("Moreover, don’t forget that your "),n("code",{class:"doc-token"},"/quasar.config"),s(" file exports a function that receives "),n("code",{class:"doc-token"},"ctx"),s(" as parameter. You can use it throughout the whole config file to apply settings only to certain Quasar modes or only to dev or prod:")],-1),B=n("pre",{class:"doc-code"},[n("code",null,[s("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token function"},"extendViteConf"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("viteConf"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(" isClient"),n("span",{class:"token punctuation"},","),s(" isServer "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("ctx"),n("span",{class:"token punctuation"},"."),s("mode"),n("span",{class:"token punctuation"},"."),s("pwa"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
          viteConf`),n("span",{class:"token punctuation"},"."),s("plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),n("span",{class:"token comment"},"/* ... */"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`

        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("ctx"),n("span",{class:"token punctuation"},"."),s("dev"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
          viteConf`),n("span",{class:"token punctuation"},"."),s("plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),n("span",{class:"token comment"},"/* ... */"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),E=n("p",null,"It is likely that you will need to copy static or external files to your Quasar project during the build to production process, rollup-plugin-copy allows you to copy files and folders when building your app.",-1),Y=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// ..."),s(`
  `),n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// ..."),s(`
    `),n("span",{class:"token literal-property property"},"vitePlugins"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
      `),n("span",{class:"token punctuation"},"["),s(`
        `),n("span",{class:"token string"},"'rollup-plugin-copy'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(`
          `),n("span",{class:"token literal-property property"},"targets"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
            `),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"// Syntax code, check doc in https://www.npmjs.com/package/rollup-plugin-copy"),s(`
              `),n("span",{class:"token literal-property property"},"src"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'[ORIGIN_PATH]'"),n("span",{class:"token punctuation"},","),s(`
              `),n("span",{class:"token literal-property property"},"dest"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'[DEST_PATH]'"),s(`
            `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
            `),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"// Copying firebase-messaging-sw.js to SPA/PWA/SSR dest build folder"),s(`
              `),n("span",{class:"token literal-property property"},"src"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'config/firebase/firebase-messaging-sw.js'"),n("span",{class:"token punctuation"},","),s(`
              `),n("span",{class:"token literal-property property"},"dest"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'dest/spa'"),s("    "),n("span",{class:"token comment"},"// example when building SPA"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
          `),n("span",{class:"token punctuation"},"]"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
      `),n("span",{class:"token punctuation"},"]"),s(`
      `),n("span",{class:"token comment"},"// other vite/rollup plugins"),s(`
    `),n("span",{class:"token punctuation"},"]"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token comment"},"// ...")])],-1),H=n("code",{class:"doc-token"},"@vitejs/plugin-vue",-1),R=n("code",{class:"doc-token"},"quasar.config file > build > viteVuePluginOptions",-1),W=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"viteVuePluginOptions"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"script"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// example: enable experimental props destructuring"),s(`
      `),n("span",{class:"token literal-property property"},"propsDestructure"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`

    `),n("span",{class:"token literal-property property"},"template"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token literal-property property"},"compilerOptions"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// example: enable custom/web element tag detection"),s(`
        `),n("span",{class:"token function-variable function"},"isCustomElement"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"tag"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" tag"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'my-'"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),z=n("p",null,"Quasar comes with a bunch of useful folder aliases pre-configured. You can use them anywhere in your project and Vite will resolve the correct path.",-1),M=n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Alias"),n("th",{class:"text-left"},"Resolves to")])],-1),F=n("tbody",null,[n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"src")]),n("td",null,"/src")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"app")]),n("td",null,"/")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"components")]),n("td",null,"/src/components")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"layouts")]),n("td",null,"/src/layouts")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"pages")]),n("td",null,"/src/pages")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"assets")]),n("td",null,"/src/assets")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"boot")]),n("td",null,"/src/boot")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"stores")]),n("td",null,"/src/stores (Pinia stores)")])],-1),G=n("p",null,[s("We will use "),n("code",{class:"doc-token"},"utils"),s(" as an example, which may be used as "),n("code",{class:"doc-token"},"import { formatTime } from 'utils/time'"),s(". There are two ways to add a folder alias:")],-1),J=n("ol",null,[n("li",null,[s("Through "),n("code",{class:"doc-token"},"/quasar.config file > build > alias"),s(" property. This is the simplest way to add a folder alias. Use Node’s "),n("code",{class:"doc-token"},"path.join"),s(" helper to get the absolute path to your alias. Example:")])],-1),K=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" path "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'node:path'"),n("span",{class:"token punctuation"},")"),s(`

module`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token literal-property property"},"alias"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token literal-property property"},"utils"),n("span",{class:"token operator"},":"),s(" path"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"join"),n("span",{class:"token punctuation"},"("),s("__dirname"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'./src/utils'"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),X=n("ol",{start:"2"},[n("li",null,[s("By extending the Vite config directly. Do not assign to "),n("code",{class:"doc-token"},"viteConf.resolve.alias"),s(" directly to preserve the built-in aliases, use "),n("code",{class:"doc-token"},"Object.assign"),s(" instead. Use Node’s "),n("code",{class:"doc-token"},"path.join"),s(" helper to resolve the path to your intended alias.")])],-1),Z=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" path "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'node:path'"),n("span",{class:"token punctuation"},")"),s(`

module`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token function"},"extendViteConf"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("viteConf"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(" isServer"),n("span",{class:"token punctuation"},","),s(" isClient "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        Object`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"assign"),n("span",{class:"token punctuation"},"("),s("viteConf"),n("span",{class:"token punctuation"},"."),s("resolve"),n("span",{class:"token punctuation"},"."),s("alias"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(`
          `),n("span",{class:"token literal-property property"},"utils"),n("span",{class:"token operator"},":"),s(" path"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"join"),n("span",{class:"token punctuation"},"("),s("__dirname"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'./src/utils'"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),nn=n("p",null,[s("If you are using TypeScript, you also have to add the aliases you defined in "),n("code",{class:"doc-token"},"quasar.config file"),s(" to your "),n("code",{class:"doc-token"},"tsconfig.json"),s(" file. To preserve the built-in aliases, you have to re-define them in your "),n("code",{class:"doc-token"},"tsconfig.json"),s(" file. Example:")],-1),sn=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},'"extends"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"@quasar/app-vite/tsconfig-preset"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"compilerOptions"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"baseUrl"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"."'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"paths"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token property"},'"src/*"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"src/*"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token property"},'"app/*"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"*"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token property"},'"components/*"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"src/components/*"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token property"},'"layouts/*"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"src/layouts/*"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token property"},'"pages/*"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"src/pages/*"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token property"},'"assets/*"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"src/assets/*"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token property"},'"boot/*"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"src/boot/*"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token property"},'"stores/*"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"src/stores/*"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`

      `),n("span",{class:"token property"},'"utils/*"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"src/utils/*"'),n("span",{class:"token punctuation"},"]"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),tn=n("code",{class:"doc-token"},"tsconfig.json",-1),an=n("code",{class:"doc-token"},"vite-tsconfig-paths",-1),on=n("code",{class:"doc-token"},"quasar.config file",-1),en=n("code",{class:"doc-token"},"tsconfig.json",-1),pn=n("code",{class:"doc-token"},"quasar.config file",-1),cn=n("pre",{class:"doc-code"},[n("code",null,[s("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// no longer needed to define aliases here"),s(`
      `),n("span",{class:"token comment"},"// alias: {},"),s(`

      `),n("span",{class:"token literal-property property"},"vitePlugins"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
        `),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'vite-tsconfig-paths'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(`
          `),n("span",{class:"token comment"},"// projects: ['./tsconfig.json', '../../tsconfig.json'] // if you have multiple tsconfig files (e.g. in a monorepo)"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"]"),s(`
      `),n("span",{class:"token punctuation"},"]"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])],-1),ln=n("p",null,[s("Styles in "),n("code",{class:"doc-token"},"*.vue"),s(" files (and all other style files) are piped through PostCSS by default, so you don’t need to use a specific loader for it.")],-1),un=n("p",null,[s("By default, PostCSS is configured to use Autoprefixer. Take a look at "),n("code",{class:"doc-token"},"/postcss.config.cjs"),s(" where you can tweak it if you need to.")],-1),rn={__name:"handling-vite",setup(kn){const r=[{name:"The quasar.config file",category:"Quasar CLI (with Vite)",path:"/quasar-cli-vite/quasar-config-file"}],k=[{id:"updating-vite-config",title:"2. Updating Vite config"},{id:"inspecting-vite-config",title:"3. Inspecting Vite Config"},{id:"adding-vite-plugins",title:"4. Adding Vite plugins"},{id:"example-rollup-plugin-copy",title:"4.1. Example: rollup-plugin-copy",sub:!0},{id:"vite-vue-plugin-options",title:"5. Vite Vue Plugin options"},{id:"folder-aliases",title:"6. Folder aliases"},{id:"postcss",title:"7. PostCSS"}];return(dn,e)=>(d(),g(h,{title:"Handling Vite",desc:"(@quasar/app-vite) How to manage Vite in a Quasar app.",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/handling-vite",toc:k,related:r},{default:o(()=>[n("p",null,[s("The build system uses "),t(u,{to:"https://vitejs.dev"},{default:o(()=>[s("Vite")]),_:1}),s(" to create the UI of your website/app ("),v,s(" folder). Don’t worry if you aren’t acquainted with Vite. Out of the box, you won’t need to configure it because it already has everything set up.")]),n("h2",{id:"updating-vite-config",class:"doc-heading doc-h2",onClick:e[0]||(e[0]=i=>a(l)("updating-vite-config"))},"Updating Vite config"),_,b,t(a(p),{title:"/quasar.config file"},{default:o(()=>[w,t(c)]),_:1}),C,n("p",null,[s("If you want to add some Vite plugins, see the "),t(u,{to:"#adding-vite-plugins"},{default:o(()=>[s("Adding Vite plugins")]),_:1}),s(" section below.")]),n("h2",{id:"inspecting-vite-config",class:"doc-heading doc-h2",onClick:e[1]||(e[1]=i=>a(l)("inspecting-vite-config"))},"Inspecting Vite Config"),x,t(a(p),null,{default:o(()=>[q,t(c,{lang:"bash"})]),_:1}),n("h2",{id:"adding-vite-plugins",class:"doc-heading doc-h2",onClick:e[2]||(e[2]=i=>a(l)("adding-vite-plugins"))},[s("Adding Vite plugins "),t(f,{label:"@quasar/app-vite 1.8+"})]),V,t(a(p),{title:"/quasar.config file"},{default:o(()=>[j,t(c)]),_:1}),S,t(a(p),{title:"/quasar.config file"},{default:o(()=>[P,t(c)]),_:1}),T,t(a(p),{title:"/quasar.config file"},{default:o(()=>[I,t(c)]),_:1}),n("div",Q,[D,A,$,t(a(p),null,{default:o(()=>[O,t(c)]),_:1})]),L,t(a(p),null,{default:o(()=>[N,t(c)]),_:1}),U,t(a(p),null,{default:o(()=>[B,t(c)]),_:1}),n("h3",{id:"example-rollup-plugin-copy",class:"doc-heading doc-h3",onClick:e[3]||(e[3]=i=>a(l)("example-rollup-plugin-copy"))},"Example: rollup-plugin-copy"),E,t(a(p),{title:"/quasar.config file"},{default:o(()=>[Y,t(c)]),_:1}),n("h2",{id:"vite-vue-plugin-options",class:"doc-heading doc-h2",onClick:e[4]||(e[4]=i=>a(l)("vite-vue-plugin-options"))},"Vite Vue Plugin options"),n("p",null,[s("If you need to tweak the Vite Vue Plugin("),t(u,{to:"https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue"},{default:o(()=>[H]),_:1}),s(") options, you can do so through "),R,s(" like so:")]),t(a(p),{title:"/quasar.config file"},{default:o(()=>[W,t(c)]),_:1}),n("h2",{id:"folder-aliases",class:"doc-heading doc-h2",onClick:e[5]||(e[5]=i=>a(l)("folder-aliases"))},"Folder aliases"),z,t(m,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:o(()=>[M,F]),_:1}),n("h4",{id:"adding-folder-aliases",class:"doc-heading doc-h4",onClick:e[6]||(e[6]=i=>a(l)("adding-folder-aliases"))},"Adding folder aliases"),G,J,t(a(p),{title:"/quasar.config file"},{default:o(()=>[K,t(c)]),_:1}),X,t(a(p),{title:"/quasar.config file"},{default:o(()=>[Z,t(c)]),_:1}),n("h5",{id:"using-with-typescript",class:"doc-heading doc-h5",onClick:e[7]||(e[7]=i=>a(l)("using-with-typescript"))},"Using with TypeScript"),nn,t(a(p),{title:"/tsconfig.json"},{default:o(()=>[sn,t(c)]),_:1}),n("p",null,[s("If you want to use "),tn,s(" as the source of truth and let Vite pick them up from there automatically, you can use "),t(u,{to:"https://github.com/aleclarson/vite-tsconfig-paths"},{default:o(()=>[an]),_:1}),s(" plugin. This way, you will not have to update both "),on,s(" and "),en,s(" whenever adding an alias, avoiding potential mistakes. Install it following the instructions in the link and then add it to your "),pn,s(":")]),t(a(p),{title:"/quasar.config file"},{default:o(()=>[cn,t(c)]),_:1}),n("h2",{id:"postcss",class:"doc-heading doc-h2",onClick:e[8]||(e[8]=i=>a(l)("postcss"))},"PostCSS"),ln,un]),_:1}))}},_n=y(rn,[["__file","handling-vite.md"]]);export{_n as default};
