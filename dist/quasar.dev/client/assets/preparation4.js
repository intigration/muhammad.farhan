import{c as l}from"./_examples_frameless-electron-window.js";import{D as h,a as i}from"./DocPage.js";import{D as m}from"./DocTree.js";import{D as d}from"./DocPrerender.js";import{C as c}from"./CopyButton.js";import{_ as w}from"./index.js";import{b as f,d as g,w as s,h as e,f as a,e as t,i as o}from"./vendor.js";const y=e("p",null,"Before we dive in to the actual development, we need to do some preparation work.",-1),_=e("p",null,[o("In order to develop/build a Quasar Electron app, we need to add the Electron mode to our Quasar project. What this does is that it yarn/npm/pnpm/bun installs some Electron packages and creates "),e("code",{class:"doc-token"},"/src-electron"),o(" folder.")],-1),b=e("pre",{class:"doc-code"},[e("code",null,[o("$ quasar mode "),e("span",{class:"token function"},"add"),o(" electron")])],-1),k=e("p",null,[o("Every Electron app has two threads: the main thread (deals with the window and initialization code – from the newly created folder "),e("code",{class:"doc-token"},"/src-electron"),o(") and the renderer thread (which deals with the actual content of your app from "),e("code",{class:"doc-token"},"/src"),o(").")],-1),v=e("p",null,"The new folder has the following structure:",-1),x=e("p",null,"If you run into errors during npm install about node-gyp, then you most likely do not have the proper build tools installed on your system. Build tools include items like Python and Visual Studio. Fortunately, there are a few packages to help simplify this process.",-1),E=e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"Note: April 2019"),e("p",null,[o("In Powershell.exe (Run as Admin) "),e("code",{class:"doc-token"},"npm install --global windows-build-tools"),o(" seems to fail at the moment with errors pointing to python2 and vctools. You can get around this with Chocolatey. One-liner install:")]),e("p",null,[e("strong",null,"Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(‘https://chocolatey.org/install.ps1’))")]),e("p",null,[o("and then run "),e("code",{class:"doc-token"},"choco upgrade python2 visualstudio2017-workload-vctools"),o(".")])],-1),S=e("p",null,"At this point things should successfully install, but if not then you will need a clean installation of Visual Studio. Please note that these are not problems with Quasar, but they are related to NPM and Windows.",-1),D=e("p",null,"If you want to jump right in and start developing, you can skip the previous step with “quasar mode” command and issue:",-1),q=e("pre",{class:"doc-code"},[e("code",null,[o("$ quasar dev "),e("span",{class:"token parameter variable"},"-m"),o(` electron

`),e("span",{class:"token comment"},"# passing extra parameters and/or options to"),o(`
`),e("span",{class:"token comment"},'# underlying "electron" executable:'),o(`
$ quasar dev `),e("span",{class:"token parameter variable"},"-m"),o(` electron -- --no-sandbox --disable-setuid-sandbox
`),e("span",{class:"token comment"},"# when on Windows and using Powershell:"),o(`
$ quasar dev `),e("span",{class:"token parameter variable"},"-m"),o(" electron "),e("span",{class:"token string"},"'--'"),o(" --no-sandbox --disable-setuid-sandbox")])],-1),I=e("p",null,"This will add Electron mode automatically, if it is missing. It will open up an Electron window which will render your app along with Developer Tools opened side by side.",-1),P={__name:"preparation",setup(C){const p=[{id:"step-1-add-quasar-electron-mode",title:"2. Step 1: Add Quasar Electron Mode"},{id:"a-note-for-windows-users",title:"2.1. A note for Windows Users",sub:!0},{id:"step-2-start-developing",title:"3. Step 2: Start Developing"}],u={tree:{l:"src-electron",c:[{l:"icons",e:"Icons of your app for all platforms",c:[{l:"icon.icns",e:"Icon file for Darwin (MacOS) platform"},{l:"icon.ico",e:"Icon file for win32 (Windows) platform"},{l:"icon.png",e:"Tray icon file for all platforms"}]},{l:"electron-preload.js",e:"(or .ts) Electron preload script (injects Node.js stuff into renderer thread)"},{l:"electron-main.js",e:"(or .ts) Main thread code"}]}};return(N,n)=>(f(),g(h,{title:"Preparation for Electron",desc:"(@quasar/app-vite) How to add Electron mode into a Quasar app.",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/developing-electron-apps/preparation",toc:p},{default:s(()=>[y,e("h2",{id:"step-1-add-quasar-electron-mode",class:"doc-heading doc-h2",onClick:n[0]||(n[0]=r=>a(l)("step-1-add-quasar-electron-mode"))},"Step 1: Add Quasar Electron Mode"),_,t(a(d),null,{default:s(()=>[b,t(c,{lang:"bash"})]),_:1}),k,v,t(m,{def:u.tree},null,8,["def"]),e("h3",{id:"a-note-for-windows-users",class:"doc-heading doc-h3",onClick:n[1]||(n[1]=r=>a(l)("a-note-for-windows-users"))},"A note for Windows Users"),x,e("p",null,[o("The first item we need to check is our npm version and ensure that it is not outdated. This is accomplished using "),t(i,{to:"https://github.com/felixrieseberg/npm-windows-upgrade"},{default:s(()=>[o("npm-windows-upgrade")]),_:1}),o(". If you are using yarn, then you can skip this check.")]),e("p",null,[o("Once that is complete, we can then continue to setup the needed build tools. Using "),t(i,{to:"https://github.com/felixrieseberg/windows-build-tools"},{default:s(()=>[o("windows-build-tools")]),_:1}),o(", most of the dirty work is done for us. Installing this globally will in turn setup Visual C++ packages, Python, and more.")]),E,S,e("h2",{id:"step-2-start-developing",class:"doc-heading doc-h2",onClick:n[2]||(n[2]=r=>a(l)("step-2-start-developing"))},"Step 2: Start Developing"),D,t(a(d),null,{default:s(()=>[q,t(c,{lang:"bash"})]),_:1}),I]),_:1}))}},$=w(P,[["__file","preparation.md"]]);export{$ as default};
