import{b as c,d as p,w as o,e as s,f as t,h as e,i as a}from"./vendor.js";import{D as d,a as u}from"./DocPage.js";import{D as f}from"./DocTree.js";import{D as r}from"./DocPrerender.js";import{C as n}from"./CopyButton.js";import{_ as m}from"./index.js";const h=e("p",null,"We’ll be using Quasar CLI to develop and build a PWA. The difference between building a SPA, Mobile App, Electron App, PWA or SSR is simply determined by the “mode” parameter in “quasar dev” and “quasar build” commands.",-1),w=e("p",null,"In order to build a PWA, we first need to add the PWA mode to our Quasar project:",-1),k=e("pre",{class:"doc-code"},[e("code",null,[a("$ quasar mode "),e("span",{class:"token function"},"add"),a(" pwa")])],-1),_=e("p",null,"If you want to jump right in and start developing, you can skip the “quasar mode” command and issue:",-1),g=e("pre",{class:"doc-code"},[e("code",null,[a("$ quasar dev "),e("span",{class:"token parameter variable"},"-m"),a(" pwa")])],-1),v=e("p",null,"This will add PWA mode automatically, if it is missing.",-1),y=e("p",null,"All the files above are going to be detailed in the next pages, but the high overview is:",-1),b=e("ul",null,[e("li",null,[a("The "),e("code",{class:"doc-token"},"register-service-worker.[js|ts]"),a(" file is part of the UI code and communicates with the service worker.")]),e("li",null,[a("The "),e("code",{class:"doc-token"},"manifest.json"),a(" is the PWA manifest file.")]),e("li",null,[a("When using InjectManifest, you can write your own custom service worker ("),e("code",{class:"doc-token"},"custom-service-worker.[js|ts]"),a(").")])],-1),A=e("p",null,[a("Should you want to use different filenames, you can do so by editing the "),e("code",{class:"doc-token"},"/quasar.config"),a(" file:")],-1),q=e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token literal-property property"},"sourceFiles"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"{"),a(`
  `),e("span",{class:"token literal-property property"},"pwaRegisterServiceWorker"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},"'src-pwa/register-service-worker'"),e("span",{class:"token punctuation"},","),a(`
  `),e("span",{class:"token literal-property property"},"pwaServiceWorker"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},"'src-pwa/custom-service-worker'"),e("span",{class:"token punctuation"},","),a(`
  `),e("span",{class:"token literal-property property"},"pwaManifestFile"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},"'src-pwa/manifest.json'"),e("span",{class:"token punctuation"},","),a(`
`),e("span",{class:"token punctuation"},"}")])],-1),P={__name:"preparation",setup(W){const i=[{name:"The quasar.config file",category:"Quasar CLI (with Vite)",path:"/quasar-cli-vite/quasar-config-file"}],l={tree:{l:"src-pwa",c:[{l:"register-service-worker.js",e:"(or .ts) UI code *managing* service worker"},{l:"manifest.json",e:"Your PWA manifest file"},{l:"custom-service-worker.js",e:"(or .ts) Optional custom service worker file (injectManifest mode ONLY)"}]}};return(j,I)=>(c(),p(d,{title:"Preparation for PWA",desc:"(@quasar/app-vite) How to add PWA mode with Quasar CLI.",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/developing-pwa/preparation",related:i},{default:o(()=>[h,w,s(t(r),null,{default:o(()=>[k,s(n,{lang:"bash"})]),_:1}),_,s(t(r),null,{default:o(()=>[g,s(n,{lang:"bash"})]),_:1}),v,e("p",null,[a("A new folder will appear in your project folder (which is explained in detail on the "),s(u,{to:"/quasar-cli-vite/developing-pwa/configuring-pwa"},{default:o(()=>[a("Configuring PWA")]),_:1}),a(" page):")]),s(f,{def:l.tree},null,8,["def"]),y,b,A,s(t(r),{title:"/quasar.config file"},{default:o(()=>[q,s(n)]),_:1})]),_:1}))}},Q=m(P,[["__file","preparation.md"]]);export{Q as default};
