import{c as p}from"./_examples_frameless-electron-window.js";import{D as d}from"./DocPage.js";import{D as c}from"./DocPrerender.js";import{C as l}from"./CopyButton.js";import{_ as u}from"./index.js";import{b as k,d as h,w as o,h as n,f as s,e,i as t}from"./vendor.js";const m=n("p",null,[t("For security reasons, the renderer thread (your UI code from "),n("code",{class:"doc-token"},"/src"),t(") does not have access to the Node.js stuff. However, you can run Node.js code and bridge it to the renderer thread through an Electron Preload script located at "),n("code",{class:"doc-token"},"/src-electron/electron-preload.[js|ts]"),t(". Use "),n("code",{class:"doc-token"},"contextBridge"),t(" (from the "),n("code",{class:"doc-token"},"electron"),t(" package) to expose the stuff that you need for your UI.")],-1),f=n("p",null,"Since the preload script runs from Node.js, be careful what you do with it and what you expose to the renderer thread!",-1),_=n("p",null,[t("In "),n("code",{class:"doc-token"},"/src-electron/"),t(" folder, there is a file named "),n("code",{class:"doc-token"},"electron-preload.js"),t(". Fill it with your preload code.")],-1),y=n("p",null,[t("Make sure that your "),n("code",{class:"doc-token"},"/src-electron/electron-main.[js|ts]"),t(" has the following (near the “webPreferences” section):")],-1),w=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// Add this at the top:"),t(`
`),n("span",{class:"token keyword"},"import"),t(" path "),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'path'"),t(`

`),n("span",{class:"token comment"},"// ..."),t(`

`),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token function"},"createWindow"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token comment"},"// ..."),t(`
  mainWindow `),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"new"),t(),n("span",{class:"token class-name"},"BrowserWindow"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token comment"},"// ..."),t(`
    `),n("span",{class:"token literal-property property"},"webPreferences"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
      `),n("span",{class:"token comment"},"// HERE IS THE MAGIC:"),t(`
      `),n("span",{class:"token literal-property property"},"preload"),n("span",{class:"token operator"},":"),t(" path"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"resolve"),n("span",{class:"token punctuation"},"("),t("__dirname"),n("span",{class:"token punctuation"},","),t(" process"),n("span",{class:"token punctuation"},"."),t("env"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"QUASAR_ELECTRON_PRELOAD"),n("span",{class:"token punctuation"},")"),t(`
    `),n("span",{class:"token punctuation"},"}"),t(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])],-1),g=n("p",null,[t("Example of "),n("code",{class:"doc-token"},"/src-electron/electron-preload.[js|ts]"),t(" content:")],-1),I=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// example which injects window.myAPI.doAThing() into the renderer"),t(`
`),n("span",{class:"token comment"},"// thread (/src/*)"),t(`

`),n("span",{class:"token keyword"},"const"),t(),n("span",{class:"token punctuation"},"{"),t(" contextBridge "),n("span",{class:"token punctuation"},"}"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'electron'"),n("span",{class:"token punctuation"},")"),t(`

contextBridge`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"exposeInMainWorld"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'myAPI'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token function-variable function"},"doAThing"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"=>"),t(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])],-1),v=n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"WARNING"),n("ol",null,[n("li",null,"Be aware that this file runs in a Node.js context."),n("li",null,"If you import anything from node_modules, then make sure that the package is specified in /package.json > “dependencies” and NOT in “devDependencies”.")])],-1),P=n("p",null,[t("Just by using "),n("code",{class:"doc-token"},"contextBridge"),t(" does not automatically mean that everything you do is safe. For instance the code below is unsafe:")],-1),x=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// BAD code; DON'T!!"),t(`
contextBridge`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"exposeInMainWorld"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'myAPI'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"send"),n("span",{class:"token operator"},":"),t(" ipcRenderer"),n("span",{class:"token punctuation"},"."),t(`send
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])],-1),b=n("p",null,"It directly exposes a powerful API without any kind of argument filtering. This would allow any website to send arbitrary IPC messages which you do not want to be possible. The correct way to expose IPC-based APIs would instead be to provide one method per IPC message.",-1),A=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// Good code"),t(`
contextBridge`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"exposeInMainWorld"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'myAPI'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token function-variable function"},"loadPreferences"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"=>"),t(" ipcRenderer"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"invoke"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'myAPI:load-prefs'"),n("span",{class:"token punctuation"},")"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])],-1),N=n("p",null,[t("Now, "),n("code",{class:"doc-token"},"loadPreferences"),t(" is available globally in your javascript code (ie: "),n("code",{class:"doc-token"},"window.myAPI.loadPreferences"),t(").")],-1),C=n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"WARNING"),n("p",null,[t("Make sure to pick names which do not colide with existing "),n("code",{class:"doc-token"},"Window"),t(" keys.")])],-1),j=n("p",null,[t("Using the above code with an "),n("code",{class:"doc-token"},"invoke"),t(" to "),n("code",{class:"doc-token"},"load-prefs"),t(" in the main thread would have code like this:")],-1),B=n("pre",{class:"doc-code"},[n("code",null,[t("ipcMain"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"handle"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'myAPI:load-prefs'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"=>"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token comment"},"// object that contains preferences"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])],-1),E=n("p",null,[t("Should you wish to change the location of the preload script (and/or even the main thread file) then edit the "),n("code",{class:"doc-token"},"/quasar.config"),t(" file:")],-1),T=n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// should you wish to change default files"),t(`
`),n("span",{class:"token literal-property property"},"sourceFiles"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"electronMain"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src-electron/electron-main.js'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"electronPreload"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src-electron/electron-preload.js'"),t(`
`),n("span",{class:"token punctuation"},"}")])],-1),W={__name:"electron-preload-script",setup(D){const i=[{id:"how-to-use-it",title:"2. How to use it"},{id:"security-considerations",title:"3. Security considerations"},{id:"custom-path-to-the-preload-script",title:"4. Custom path to the preload script"}];return(M,a)=>(k(),h(d,{title:"Electron Preload Script",desc:"(@quasar/app-vite) How to handle Electron Node Integration with an Electron Preload script with Quasar CLI.",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/developing-electron-apps/electron-preload-script",toc:i},{default:o(()=>[m,f,n("h2",{id:"how-to-use-it",class:"doc-heading doc-h2",onClick:a[0]||(a[0]=r=>s(p)("how-to-use-it"))},"How to use it"),_,y,e(s(c),{title:"/src-electron/electron-main"},{default:o(()=>[w,e(l)]),_:1}),g,e(s(c),null,{default:o(()=>[I,e(l)]),_:1}),v,n("h2",{id:"security-considerations",class:"doc-heading doc-h2",onClick:a[1]||(a[1]=r=>s(p)("security-considerations"))},"Security considerations"),P,e(s(c),null,{default:o(()=>[x,e(l)]),_:1}),b,e(s(c),null,{default:o(()=>[A,e(l)]),_:1}),N,C,j,e(s(c),null,{default:o(()=>[B,e(l)]),_:1}),n("h2",{id:"custom-path-to-the-preload-script",class:"doc-heading doc-h2",onClick:a[2]||(a[2]=r=>s(p)("custom-path-to-the-preload-script"))},"Custom path to the preload script"),E,e(s(c),null,{default:o(()=>[T,e(l)]),_:1})]),_:1}))}},G=u(W,[["__file","electron-preload-script.md"]]);export{G as default};
