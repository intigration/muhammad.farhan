import{mergeProps as w,withCtx as r,createTextVNode as a,unref as h,createVNode as e,useSSRContext as q}from"vue";import{ssrRenderComponent as p}from"vue/server-renderer";import"quasar";import{D as P,a as g}from"./DocPage-DKr-0pQn.js";import{D as m}from"./DocPrerender-DPOnWPFO.js";import{C as c}from"./CopyButton-l3ndfN49.js";import{_ as A}from"../server-entry.js";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const u={__name:"api-proxying",__ssrInlineRender:!0,setup(k){const l=[{name:"The quasar.config file",category:"Quasar CLI (with Webpack)",path:"/quasar-cli-webpack/quasar-config-file"}];return(i,f,x,b)=>{f(p(P,w({title:"API Proxying for Dev",desc:"(@quasar/app-webpack) How to use an API proxy with the Quasar dev server.",overline:"Quasar CLI with Webpack - @quasar/app-webpack",heading:"","edit-link":"quasar-cli-webpack/api-proxying",related:l},b),{default:r((S,s,y,n)=>{if(s)s(`<p${n}>When integrating a project folder (created by Quasar CLI) with an existing backend, a common need is to access the backend API when using the dev server. To achieve this, we can run the dev server and the API backend side-by-side (or remotely), and let the dev server proxy all API requests to the actual backend.</p><p${n}>This is useful if you access relative paths in your API requests. Obviously, these relative paths will probably not work while you are developing. In order to create an environment similar to the one used by your deployed website/app, you can proxy your API requests.</p><p${n}>To configure the proxy rules, edit the <code class="doc-token"${n}>/quasar.config</code> file in <code class="doc-token"${n}>devServer.proxy</code>. You should refer to `),s(p(g,{to:"https://webpack.js.org/configuration/dev-server/#devserver-proxy"},{default:r(($,o,d,t)=>{if(o)o("Webpack Dev Server Proxy");else return[a("Webpack Dev Server Proxy")]}),_:1},y,n)),s(" docs for detailed usage. But here’s a simple example:</p>"),s(p(h(m),{title:"/quasar.config file"},{default:r(($,o,d,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token literal-property property"${t}>devServer</span><span class="token operator"${t}>:</span> <span class="token punctuation"${t}>{</span>
  <span class="token literal-property property"${t}>proxy</span><span class="token operator"${t}>:</span> <span class="token punctuation"${t}>{</span>
    <span class="token comment"${t}>// proxy all requests starting with /api to jsonplaceholder</span>
    <span class="token string-property property"${t}>&#39;/api&#39;</span><span class="token operator"${t}>:</span> <span class="token punctuation"${t}>{</span>
      <span class="token literal-property property"${t}>target</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;http://some.api.target.com:7070&#39;</span><span class="token punctuation"${t}>,</span>
      <span class="token literal-property property"${t}>changeOrigin</span><span class="token operator"${t}>:</span> <span class="token boolean"${t}>true</span><span class="token punctuation"${t}>,</span>
      <span class="token literal-property property"${t}>pathRewrite</span><span class="token operator"${t}>:</span> <span class="token punctuation"${t}>{</span>
        <span class="token string-property property"${t}>&#39;^/api&#39;</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;&#39;</span>
      <span class="token punctuation"${t}>}</span>
    <span class="token punctuation"${t}>}</span>
  <span class="token punctuation"${t}>}</span>
<span class="token punctuation"${t}>}</span></code></pre>`),o(p(c,null,null,d,t));else return[e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token literal-property property"},"devServer"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"{"),a(`
  `),e("span",{class:"token literal-property property"},"proxy"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"{"),a(`
    `),e("span",{class:"token comment"},"// proxy all requests starting with /api to jsonplaceholder"),a(`
    `),e("span",{class:"token string-property property"},"'/api'"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"{"),a(`
      `),e("span",{class:"token literal-property property"},"target"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},"'http://some.api.target.com:7070'"),e("span",{class:"token punctuation"},","),a(`
      `),e("span",{class:"token literal-property property"},"changeOrigin"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token boolean"},"true"),e("span",{class:"token punctuation"},","),a(`
      `),e("span",{class:"token literal-property property"},"pathRewrite"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"{"),a(`
        `),e("span",{class:"token string-property property"},"'^/api'"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},"''"),a(`
      `),e("span",{class:"token punctuation"},"}"),a(`
    `),e("span",{class:"token punctuation"},"}"),a(`
  `),e("span",{class:"token punctuation"},"}"),a(`
`),e("span",{class:"token punctuation"},"}")])]),e(c)]}),_:1},y,n)),s(`<p${n}>The above example will proxy the request <code class="doc-token"${n}>/api/posts/1</code> to <code class="doc-token"${n}>http://some.api.target.com:7070/posts/1</code>.</p>`);else return[e("p",null,"When integrating a project folder (created by Quasar CLI) with an existing backend, a common need is to access the backend API when using the dev server. To achieve this, we can run the dev server and the API backend side-by-side (or remotely), and let the dev server proxy all API requests to the actual backend."),e("p",null,"This is useful if you access relative paths in your API requests. Obviously, these relative paths will probably not work while you are developing. In order to create an environment similar to the one used by your deployed website/app, you can proxy your API requests."),e("p",null,[a("To configure the proxy rules, edit the "),e("code",{class:"doc-token"},"/quasar.config"),a(" file in "),e("code",{class:"doc-token"},"devServer.proxy"),a(". You should refer to "),e(g,{to:"https://webpack.js.org/configuration/dev-server/#devserver-proxy"},{default:r(()=>[a("Webpack Dev Server Proxy")]),_:1}),a(" docs for detailed usage. But here’s a simple example:")]),e(h(m),{title:"/quasar.config file"},{default:r(()=>[e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token literal-property property"},"devServer"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"{"),a(`
  `),e("span",{class:"token literal-property property"},"proxy"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"{"),a(`
    `),e("span",{class:"token comment"},"// proxy all requests starting with /api to jsonplaceholder"),a(`
    `),e("span",{class:"token string-property property"},"'/api'"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"{"),a(`
      `),e("span",{class:"token literal-property property"},"target"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},"'http://some.api.target.com:7070'"),e("span",{class:"token punctuation"},","),a(`
      `),e("span",{class:"token literal-property property"},"changeOrigin"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token boolean"},"true"),e("span",{class:"token punctuation"},","),a(`
      `),e("span",{class:"token literal-property property"},"pathRewrite"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"{"),a(`
        `),e("span",{class:"token string-property property"},"'^/api'"),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},"''"),a(`
      `),e("span",{class:"token punctuation"},"}"),a(`
    `),e("span",{class:"token punctuation"},"}"),a(`
  `),e("span",{class:"token punctuation"},"}"),a(`
`),e("span",{class:"token punctuation"},"}")])]),e(c)]),_:1}),e("p",null,[a("The above example will proxy the request "),e("code",{class:"doc-token"},"/api/posts/1"),a(" to "),e("code",{class:"doc-token"},"http://some.api.target.com:7070/posts/1"),a(".")])]}),_:1},x))}}},v=u.setup;u.setup=(k,l)=>{const i=q();return(i.modules||(i.modules=new Set)).add("src/pages/quasar-cli-webpack/api-proxying.md"),v?v(k,l):void 0};const H=A(u,[["__file","api-proxying.md"]]);export{H as default};
