import{mergeProps as w,withCtx as o,unref as t,createVNode as a,createTextVNode as u,useSSRContext as C}from"vue";import{ssrRenderComponent as s}from"vue/server-renderer";import"quasar";import{D as h}from"./DocPage-DKr-0pQn.js";import{D as i}from"./DocPrerender-DPOnWPFO.js";import{C as n}from"./CopyButton-l3ndfN49.js";import{_ as x}from"../server-entry.js";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const b={__name:"build-commands",__ssrInlineRender:!0,setup(g){return(f,p,k,v)=>{p(s(h,w({title:"SPA Build Commands",desc:"(@quasar/app-webpack) The Quasar CLI list of commands when developing or building a single page application.",overline:"Quasar CLI with Webpack - @quasar/app-webpack",heading:"","edit-link":"quasar-cli-webpack/developing-spa/build-commands"},v),{default:o((D,r,m,d)=>{if(r)r(`<p${d}>Developing:</p>`),r(s(t(i),null,{default:o(($,l,c,e)=>{if(l)l(`<pre class="doc-code"${e}><code${e}>$ quasar dev</code></pre>`),l(s(n,{lang:"bash"},null,c,e));else return[a("pre",{class:"doc-code"},[a("code",null,"$ quasar dev")]),a(n,{lang:"bash"})]}),_:1},m,d)),r(`<p${d}>Building for Production:</p>`),r(s(t(i),null,{default:o(($,l,c,e)=>{if(l)l(`<pre class="doc-code"${e}><code${e}>$ quasar build</code></pre>`),l(s(n,{lang:"bash"},null,c,e));else return[a("pre",{class:"doc-code"},[a("code",null,"$ quasar build")]),a(n,{lang:"bash"})]}),_:1},m,d)),r(`<p${d}>If you want a production build with debugging enabled:</p>`),r(s(t(i),null,{default:o(($,l,c,e)=>{if(l)l(`<pre class="doc-code"${e}><code${e}>$ quasar build <span class="token parameter variable"${e}>-d</span>

<span class="token comment"${e}># ..or the longer form</span>
$ quasar build <span class="token parameter variable"${e}>--debug</span></code></pre>`),l(s(n,{lang:"bash"},null,c,e));else return[a("pre",{class:"doc-code"},[a("code",null,[u("$ quasar build "),a("span",{class:"token parameter variable"},"-d"),u(`

`),a("span",{class:"token comment"},"# ..or the longer form"),u(`
$ quasar build `),a("span",{class:"token parameter variable"},"--debug")])]),a(n,{lang:"bash"})]}),_:1},m,d));else return[a("p",null,"Developing:"),a(t(i),null,{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,"$ quasar dev")]),a(n,{lang:"bash"})]),_:1}),a("p",null,"Building for Production:"),a(t(i),null,{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,"$ quasar build")]),a(n,{lang:"bash"})]),_:1}),a("p",null,"If you want a production build with debugging enabled:"),a(t(i),null,{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[u("$ quasar build "),a("span",{class:"token parameter variable"},"-d"),u(`

`),a("span",{class:"token comment"},"# ..or the longer form"),u(`
$ quasar build `),a("span",{class:"token parameter variable"},"--debug")])]),a(n,{lang:"bash"})]),_:1})]}),_:1},k))}}},q=b.setup;b.setup=(g,f)=>{const p=C();return(p.modules||(p.modules=new Set)).add("src/pages/quasar-cli-webpack/developing-spa/build-commands.md"),q?q(g,f):void 0};const z=x(b,[["__file","build-commands.md"]]);export{z as default};
