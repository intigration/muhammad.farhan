import{resolveComponent as L,mergeProps as W,withCtx as o,unref as d,createVNode as a,createTextVNode as e,useSSRContext as j}from"vue";import{ssrRenderComponent as p}from"vue/server-renderer";import{c as w}from"./page-utils-C-QWsEHe.js";import{D as E,a as h}from"./DocPage-DKr-0pQn.js";import{D as g}from"./DocPrerender-DPOnWPFO.js";import{C as c}from"./CopyButton-l3ndfN49.js";import{_ as P}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const C={__name:"convert-to-quasar-cli-with-webpack",__ssrInlineRender:!0,setup(y){const $=[{id:"step-1-create-a-quasar-cli-with-webpack-project-folder-",title:"1.1. Step 1: Create a Quasar CLI with Webpack project folder:",sub:!0},{id:"step-2-copy-folders-from-original-folder",title:"1.2. Step 2: Copy folders from original folder",sub:!0},{id:"step-3-check-the-new-quasar-config-file",title:"1.3. Step 3: Check the new quasar.config file",sub:!0},{id:"step-4-browser-compatibility",title:"1.4. Step 4: Browser compatibility",sub:!0},{id:"step-5-ssr-related",title:"1.5. Step 5: SSR related",sub:!0},{id:"step-6-pwa-related",title:"1.6. Step 6: PWA related",sub:!0},{id:"step-7-bex-related",title:"1.7. Step 7: BEX related",sub:!0},{id:"step-8-and-were-done",title:"1.8. Step 8: And we’re done",sub:!0}];return(q,A,x,S)=>{const f=L("q-tab-panel");A(p(E,W({title:"Convert project to Quasar CLI with Webpack",desc:"(@quasar/app-webpack) How to convert a Quasar CLI with Vite project to a Quasar CLI with Webpack one.",overline:"Quasar CLI with Webpack - @quasar/app-webpack",heading:"","edit-link":"quasar-cli-webpack/convert-to-quasar-cli-with-webpack",toc:$},S),{default:o((B,l,m,t)=>{if(l)l(`<p${t}>This page will guide you on how to convert a Quasar CLI with Vite (<code class="doc-token"${t}>@quasar/app-vite</code>) project into a Quasar CLI with Webpack one (<code class="doc-token"${t}>@quasar/app-webpack</code>).</p><h3 id="step-1-create-a-quasar-cli-with-webpack-project-folder-" class="doc-heading doc-h3"${t}>Step 1: Create a Quasar CLI with Webpack project folder:</h3>`),l(p(d(g),{tabs:["Yarn","NPM","PNPM","Bun"]},{default:o((i,s,u,n)=>{if(s)s(p(f,{class:"q-pa-none",name:"Yarn"},{default:o((v,k,b,r)=>{if(k)k(`<pre class="doc-code"${r}><code${r}>$ <span class="token function"${r}>yarn</span> create quasar
<span class="token comment"${r}># then pick &quot;App with Quasar CLI&quot;, &quot;Quasar v2&quot;, &quot;Quasar App CLI with Webpack&quot;</span></code></pre>`),k(p(c,{lang:"bash"},null,b,r));else return[a("pre",{class:"doc-code"},[a("code",null,[e("$ "),a("span",{class:"token function"},"yarn"),e(` create quasar
`),a("span",{class:"token comment"},'# then pick "App with Quasar CLI", "Quasar v2", "Quasar App CLI with Webpack"')])]),a(c,{lang:"bash"})]}),_:1},u,n)),s(p(f,{class:"q-pa-none",name:"NPM"},{default:o((v,k,b,r)=>{if(k)k(`<pre class="doc-code"${r}><code${r}>$ <span class="token function"${r}>npm</span> init quasar
<span class="token comment"${r}># then pick &quot;App with Quasar CLI&quot;, &quot;Quasar v2&quot;, &quot;Quasar App CLI with Webpack&quot;</span></code></pre>`),k(p(c,{lang:"bash"},null,b,r));else return[a("pre",{class:"doc-code"},[a("code",null,[e("$ "),a("span",{class:"token function"},"npm"),e(` init quasar
`),a("span",{class:"token comment"},'# then pick "App with Quasar CLI", "Quasar v2", "Quasar App CLI with Webpack"')])]),a(c,{lang:"bash"})]}),_:1},u,n)),s(p(f,{class:"q-pa-none",name:"PNPM"},{default:o((v,k,b,r)=>{if(k)k(`<pre class="doc-code"${r}><code${r}><span class="token comment"${r}># experimental support</span>
$ <span class="token function"${r}>pnpm</span> create quasar
<span class="token comment"${r}># then pick &quot;App with Quasar CLI&quot;, &quot;Quasar v2&quot;, &quot;Quasar App CLI with Webpack&quot;</span></code></pre>`),k(p(c,{lang:"bash"},null,b,r));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),e(`
$ `),a("span",{class:"token function"},"pnpm"),e(` create quasar
`),a("span",{class:"token comment"},'# then pick "App with Quasar CLI", "Quasar v2", "Quasar App CLI with Webpack"')])]),a(c,{lang:"bash"})]}),_:1},u,n)),s(p(f,{class:"q-pa-none",name:"Bun"},{default:o((v,k,b,r)=>{if(k)k(`<pre class="doc-code"${r}><code${r}><span class="token comment"${r}># experimental support</span>
$ bun create quasar
<span class="token comment"${r}># then pick &quot;App with Quasar CLI&quot;, &quot;Quasar v2&quot;, &quot;Quasar App CLI with Webpack&quot;</span></code></pre>`),k(p(c,{lang:"bash"},null,b,r));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),e(`
$ bun create quasar
`),a("span",{class:"token comment"},'# then pick "App with Quasar CLI", "Quasar v2", "Quasar App CLI with Webpack"')])]),a(c,{lang:"bash"})]}),_:1},u,n));else return[a(f,{class:"q-pa-none",name:"Yarn"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[e("$ "),a("span",{class:"token function"},"yarn"),e(` create quasar
`),a("span",{class:"token comment"},'# then pick "App with Quasar CLI", "Quasar v2", "Quasar App CLI with Webpack"')])]),a(c,{lang:"bash"})]),_:1}),a(f,{class:"q-pa-none",name:"NPM"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[e("$ "),a("span",{class:"token function"},"npm"),e(` init quasar
`),a("span",{class:"token comment"},'# then pick "App with Quasar CLI", "Quasar v2", "Quasar App CLI with Webpack"')])]),a(c,{lang:"bash"})]),_:1}),a(f,{class:"q-pa-none",name:"PNPM"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),e(`
$ `),a("span",{class:"token function"},"pnpm"),e(` create quasar
`),a("span",{class:"token comment"},'# then pick "App with Quasar CLI", "Quasar v2", "Quasar App CLI with Webpack"')])]),a(c,{lang:"bash"})]),_:1}),a(f,{class:"q-pa-none",name:"Bun"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),e(`
$ bun create quasar
`),a("span",{class:"token comment"},'# then pick "App with Quasar CLI", "Quasar v2", "Quasar App CLI with Webpack"')])]),a(c,{lang:"bash"})]),_:1})]}),_:1},m,t)),l(`<p${t}>There are significant changes to the root files so it’s easier to generate a new project folder rather than explaining each of the many changes.</p><h3 id="step-2-copy-folders-from-original-folder" class="doc-heading doc-h3"${t}>Step 2: Copy folders from original folder</h3><p${t}>From your original project folder, copy these as they are:</p><ul${t}><li${t}>/src (with small caveat; see next steps)</li><li${t}>/src-cordova</li><li${t}>/src-capacitor</li><li${t}>/src-electron</li><li${t}>/src-pwa</li><li${t}>/src-ssr (with small caveat; see next steps)</li><li${t}><s${t}>/src-bex</s> <strong${t}>Nope. Don’t!</strong></li></ul><p${t}>Also move <code class="doc-token"${t}>/index.html</code> to <code class="doc-token"${t}>/src/index.template.html</code>. And make the following change:</p>`),l(p(d(g),null,{default:o((i,s,u,n)=>{if(s)s(`<pre class="doc-code"${n}><code${n}><span class="token comment"${n}>&lt;!-- quasar:entry-point --&gt;</span>

// replace with:

<span class="token comment"${n}>&lt;!-- DO NOT touch the following DIV --&gt;</span>
<span class="token tag"${n}><span class="token tag"${n}><span class="token punctuation"${n}>&lt;</span>div</span> <span class="token attr-name"${n}>id</span><span class="token attr-value"${n}><span class="token punctuation attr-equals"${n}>=</span><span class="token punctuation"${n}>&quot;</span>q-app<span class="token punctuation"${n}>&quot;</span></span><span class="token punctuation"${n}>&gt;</span></span><span class="token tag"${n}><span class="token tag"${n}><span class="token punctuation"${n}>&lt;/</span>div</span><span class="token punctuation"${n}>&gt;</span></span></code></pre>`),s(p(c,null,null,u,n));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"<!-- quasar:entry-point -->"),e(`

// replace with:

`),a("span",{class:"token comment"},"<!-- DO NOT touch the following DIV -->"),e(`
`),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),e("div")]),e(),a("span",{class:"token attr-name"},"id"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),e("q-app"),a("span",{class:"token punctuation"},'"')]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),e("div")]),a("span",{class:"token punctuation"},">")])])]),a(c)]}),_:1},m,t)),l(`<p${t}>Also, edit <code class="doc-token"${t}>/src/router/index.js</code>:</p>`),l(p(d(g),null,{default:o((i,s,u,n)=>{if(s)s(`<pre class="doc-code"${n}><code${n}><span class="token comment"${n}>// old way</span>
<span class="token literal-property property"${n}>history</span><span class="token operator"${n}>:</span> <span class="token function"${n}>createHistory</span><span class="token punctuation"${n}>(</span>process<span class="token punctuation"${n}>.</span>env<span class="token punctuation"${n}>.</span><span class="token constant"${n}>VUE_ROUTER_BASE</span><span class="token punctuation"${n}>)</span>

<span class="token comment"${n}>// new way</span>
<span class="token literal-property property"${n}>history</span><span class="token operator"${n}>:</span> <span class="token function"${n}>createHistory</span><span class="token punctuation"${n}>(</span>process<span class="token punctuation"${n}>.</span>env<span class="token punctuation"${n}>.</span><span class="token constant"${n}>MODE</span> <span class="token operator"${n}>===</span> <span class="token string"${n}>&#39;ssr&#39;</span> <span class="token operator"${n}>?</span> <span class="token keyword"${n}>void</span> <span class="token number"${n}>0</span> <span class="token operator"${n}>:</span> process<span class="token punctuation"${n}>.</span>env<span class="token punctuation"${n}>.</span><span class="token constant"${n}>VUE_ROUTER_BASE</span><span class="token punctuation"${n}>)</span></code></pre>`),s(p(c,null,null,u,n));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"// old way"),e(`
`),a("span",{class:"token literal-property property"},"history"),a("span",{class:"token operator"},":"),e(),a("span",{class:"token function"},"createHistory"),a("span",{class:"token punctuation"},"("),e("process"),a("span",{class:"token punctuation"},"."),e("env"),a("span",{class:"token punctuation"},"."),a("span",{class:"token constant"},"VUE_ROUTER_BASE"),a("span",{class:"token punctuation"},")"),e(`

`),a("span",{class:"token comment"},"// new way"),e(`
`),a("span",{class:"token literal-property property"},"history"),a("span",{class:"token operator"},":"),e(),a("span",{class:"token function"},"createHistory"),a("span",{class:"token punctuation"},"("),e("process"),a("span",{class:"token punctuation"},"."),e("env"),a("span",{class:"token punctuation"},"."),a("span",{class:"token constant"},"MODE"),e(),a("span",{class:"token operator"},"==="),e(),a("span",{class:"token string"},"'ssr'"),e(),a("span",{class:"token operator"},"?"),e(),a("span",{class:"token keyword"},"void"),e(),a("span",{class:"token number"},"0"),e(),a("span",{class:"token operator"},":"),e(" process"),a("span",{class:"token punctuation"},"."),e("env"),a("span",{class:"token punctuation"},"."),a("span",{class:"token constant"},"VUE_ROUTER_BASE"),a("span",{class:"token punctuation"},")")])]),a(c)]}),_:1},m,t)),l(`<h3 id="step-3-check-the-new-quasar-config-file" class="doc-heading doc-h3"${t}>Step 3: Check the new quasar.config file</h3><p${t}>There are property changes in <code class="doc-token"${t}>build</code>, <code class="doc-token"${t}>devServer</code>, and all Quasar Modes (pwa, ssr, etc). The props are detailed in the `),l(p(h,{to:"/quasar-cli-webpack/quasar-config-file"},{default:o((i,s,u,n)=>{if(s)s("quasar.config file");else return[e("quasar.config file")]}),_:1},m,t)),l(` page. You will have to manually port your configuration to the Quasar CLI with Webpack architecture.</p><h3 id="step-4-browser-compatibility" class="doc-heading doc-h3"${t}>Step 4: Browser compatibility</h3><p${t}>A Quasar CLI with Webpack project relies on <code class="doc-token"${t}>/package.json &gt; browserslist</code> to specify which browsers you are targetting. More info: `),l(p(h,{to:"/quasar-cli-webpack/browser-compatibility"},{default:o((i,s,u,n)=>{if(s)s("Browser Compatibility");else return[e("Browser Compatibility")]}),_:1},m,t)),l(` page.</p><h3 id="step-5-ssr-related" class="doc-heading doc-h3"${t}>Step 5: SSR related</h3><p${t}>Port the <code class="doc-token"${t}>/src-ssr/server.js</code> to <code class="doc-token"${t}>/src-ssr/production-export.js</code> file. Make sure to read about the `),l(p(h,{to:"/quasar-cli-webpack/developing-ssr/ssr-production-export"},{default:o((i,s,u,n)=>{if(s)s("SSR Production Export");else return[e("SSR Production Export")]}),_:1},m,t)),l(` first. The production-export.js is essentially default exporting the <code class="doc-token"${t}>listen()</code> method from <code class="doc-token"${t}>src-ssr/server.js</code>. All the other functionality cannot be ported over.</p><p${t}>More info: `),l(p(h,{to:"/quasar-cli-webpack/developing-ssr/configuring-ssr"},{default:o((i,s,u,n)=>{if(s)s("Configuring SSR");else return[e("Configuring SSR")]}),_:1},m,t)),l(`</p><h3 id="step-6-pwa-related" class="doc-heading doc-h3"${t}>Step 6: PWA related</h3><p${t}>The <code class="doc-token"${t}>/src-pwa/manifest.json</code> has no meaning for a Quasar CLI with Webpack project. You will need to use <code class="doc-token"${t}>quasar.config file &gt; manifest</code> to declare it there. After that then delete the <code class="doc-token"${t}>/src-pwa/manifest.json</code> file.</p><p${t}>Also check <code class="doc-token"${t}>quasar.config file &gt; pwa</code> &gt; <code class="doc-token"${t}>metaVariables</code> and <code class="doc-token"${t}>metaVariablesFn</code>.</p><p${t}>More info: `),l(p(h,{to:"/quasar-cli-webpack/developing-pwa/configuring-pwa"},{default:o((i,s,u,n)=>{if(s)s("Configuring PWA");else return[e("Configuring PWA")]}),_:1},m,t)),l(`</p><h3 id="step-7-bex-related" class="doc-heading doc-h3"${t}>Step 7: BEX related</h3><p${t}>The BEX mode differs quite a lot. The PWA mode in a Quasar CLI with Webpack project does NOT supports PWA manifest v3 and multiple content scripts. You will have to manually port over your BEX files to the new architecture.</p><p${t}>It’s best to <code class="doc-token"${t}>$ quasar mode add bex</code> and port your BEX.</p><p${t}>More info: `),l(p(h,{to:"/quasar-cli-webpack/developing-browser-extensions/preparation#2-understand-the-anatomy-of-src-bex"},{default:o((i,s,u,n)=>{if(s)s("Preparation and folder structure");else return[e("Preparation and folder structure")]}),_:1},m,t)),l(" and "),l(p(h,{to:"/quasar-cli-webpack/developing-browser-extensions/configuring-bex"},{default:o((i,s,u,n)=>{if(s)s("Configuring BEX");else return[e("Configuring BEX")]}),_:1},m,t)),l(`.</p><h3 id="step-8-and-were-done" class="doc-heading doc-h3"${t}>Step 8: And we’re done</h3>`),l(p(d(g),null,{default:o((i,s,u,n)=>{if(s)s(`<pre class="doc-code"${n}><code${n}>$ quasar dev
$ quasar build</code></pre>`),s(p(c,{lang:"bash"},null,u,n));else return[a("pre",{class:"doc-code"},[a("code",null,`$ quasar dev
$ quasar build`)]),a(c,{lang:"bash"})]}),_:1},m,t));else return[a("p",null,[e("This page will guide you on how to convert a Quasar CLI with Vite ("),a("code",{class:"doc-token"},"@quasar/app-vite"),e(") project into a Quasar CLI with Webpack one ("),a("code",{class:"doc-token"},"@quasar/app-webpack"),e(").")]),a("h3",{id:"step-1-create-a-quasar-cli-with-webpack-project-folder-",class:"doc-heading doc-h3",onClick:i=>d(w)("step-1-create-a-quasar-cli-with-webpack-project-folder-")},"Step 1: Create a Quasar CLI with Webpack project folder:",8,["onClick"]),a(d(g),{tabs:["Yarn","NPM","PNPM","Bun"]},{default:o(()=>[a(f,{class:"q-pa-none",name:"Yarn"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[e("$ "),a("span",{class:"token function"},"yarn"),e(` create quasar
`),a("span",{class:"token comment"},'# then pick "App with Quasar CLI", "Quasar v2", "Quasar App CLI with Webpack"')])]),a(c,{lang:"bash"})]),_:1}),a(f,{class:"q-pa-none",name:"NPM"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[e("$ "),a("span",{class:"token function"},"npm"),e(` init quasar
`),a("span",{class:"token comment"},'# then pick "App with Quasar CLI", "Quasar v2", "Quasar App CLI with Webpack"')])]),a(c,{lang:"bash"})]),_:1}),a(f,{class:"q-pa-none",name:"PNPM"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),e(`
$ `),a("span",{class:"token function"},"pnpm"),e(` create quasar
`),a("span",{class:"token comment"},'# then pick "App with Quasar CLI", "Quasar v2", "Quasar App CLI with Webpack"')])]),a(c,{lang:"bash"})]),_:1}),a(f,{class:"q-pa-none",name:"Bun"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),e(`
$ bun create quasar
`),a("span",{class:"token comment"},'# then pick "App with Quasar CLI", "Quasar v2", "Quasar App CLI with Webpack"')])]),a(c,{lang:"bash"})]),_:1})]),_:1}),a("p",null,"There are significant changes to the root files so it’s easier to generate a new project folder rather than explaining each of the many changes."),a("h3",{id:"step-2-copy-folders-from-original-folder",class:"doc-heading doc-h3",onClick:i=>d(w)("step-2-copy-folders-from-original-folder")},"Step 2: Copy folders from original folder",8,["onClick"]),a("p",null,"From your original project folder, copy these as they are:"),a("ul",null,[a("li",null,"/src (with small caveat; see next steps)"),a("li",null,"/src-cordova"),a("li",null,"/src-capacitor"),a("li",null,"/src-electron"),a("li",null,"/src-pwa"),a("li",null,"/src-ssr (with small caveat; see next steps)"),a("li",null,[a("s",null,"/src-bex"),e(),a("strong",null,"Nope. Don’t!")])]),a("p",null,[e("Also move "),a("code",{class:"doc-token"},"/index.html"),e(" to "),a("code",{class:"doc-token"},"/src/index.template.html"),e(". And make the following change:")]),a(d(g),null,{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"<!-- quasar:entry-point -->"),e(`

// replace with:

`),a("span",{class:"token comment"},"<!-- DO NOT touch the following DIV -->"),e(`
`),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),e("div")]),e(),a("span",{class:"token attr-name"},"id"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),e("q-app"),a("span",{class:"token punctuation"},'"')]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),e("div")]),a("span",{class:"token punctuation"},">")])])]),a(c)]),_:1}),a("p",null,[e("Also, edit "),a("code",{class:"doc-token"},"/src/router/index.js"),e(":")]),a(d(g),null,{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"// old way"),e(`
`),a("span",{class:"token literal-property property"},"history"),a("span",{class:"token operator"},":"),e(),a("span",{class:"token function"},"createHistory"),a("span",{class:"token punctuation"},"("),e("process"),a("span",{class:"token punctuation"},"."),e("env"),a("span",{class:"token punctuation"},"."),a("span",{class:"token constant"},"VUE_ROUTER_BASE"),a("span",{class:"token punctuation"},")"),e(`

`),a("span",{class:"token comment"},"// new way"),e(`
`),a("span",{class:"token literal-property property"},"history"),a("span",{class:"token operator"},":"),e(),a("span",{class:"token function"},"createHistory"),a("span",{class:"token punctuation"},"("),e("process"),a("span",{class:"token punctuation"},"."),e("env"),a("span",{class:"token punctuation"},"."),a("span",{class:"token constant"},"MODE"),e(),a("span",{class:"token operator"},"==="),e(),a("span",{class:"token string"},"'ssr'"),e(),a("span",{class:"token operator"},"?"),e(),a("span",{class:"token keyword"},"void"),e(),a("span",{class:"token number"},"0"),e(),a("span",{class:"token operator"},":"),e(" process"),a("span",{class:"token punctuation"},"."),e("env"),a("span",{class:"token punctuation"},"."),a("span",{class:"token constant"},"VUE_ROUTER_BASE"),a("span",{class:"token punctuation"},")")])]),a(c)]),_:1}),a("h3",{id:"step-3-check-the-new-quasar-config-file",class:"doc-heading doc-h3",onClick:i=>d(w)("step-3-check-the-new-quasar-config-file")},"Step 3: Check the new quasar.config file",8,["onClick"]),a("p",null,[e("There are property changes in "),a("code",{class:"doc-token"},"build"),e(", "),a("code",{class:"doc-token"},"devServer"),e(", and all Quasar Modes (pwa, ssr, etc). The props are detailed in the "),a(h,{to:"/quasar-cli-webpack/quasar-config-file"},{default:o(()=>[e("quasar.config file")]),_:1}),e(" page. You will have to manually port your configuration to the Quasar CLI with Webpack architecture.")]),a("h3",{id:"step-4-browser-compatibility",class:"doc-heading doc-h3",onClick:i=>d(w)("step-4-browser-compatibility")},"Step 4: Browser compatibility",8,["onClick"]),a("p",null,[e("A Quasar CLI with Webpack project relies on "),a("code",{class:"doc-token"},"/package.json > browserslist"),e(" to specify which browsers you are targetting. More info: "),a(h,{to:"/quasar-cli-webpack/browser-compatibility"},{default:o(()=>[e("Browser Compatibility")]),_:1}),e(" page.")]),a("h3",{id:"step-5-ssr-related",class:"doc-heading doc-h3",onClick:i=>d(w)("step-5-ssr-related")},"Step 5: SSR related",8,["onClick"]),a("p",null,[e("Port the "),a("code",{class:"doc-token"},"/src-ssr/server.js"),e(" to "),a("code",{class:"doc-token"},"/src-ssr/production-export.js"),e(" file. Make sure to read about the "),a(h,{to:"/quasar-cli-webpack/developing-ssr/ssr-production-export"},{default:o(()=>[e("SSR Production Export")]),_:1}),e(" first. The production-export.js is essentially default exporting the "),a("code",{class:"doc-token"},"listen()"),e(" method from "),a("code",{class:"doc-token"},"src-ssr/server.js"),e(". All the other functionality cannot be ported over.")]),a("p",null,[e("More info: "),a(h,{to:"/quasar-cli-webpack/developing-ssr/configuring-ssr"},{default:o(()=>[e("Configuring SSR")]),_:1})]),a("h3",{id:"step-6-pwa-related",class:"doc-heading doc-h3",onClick:i=>d(w)("step-6-pwa-related")},"Step 6: PWA related",8,["onClick"]),a("p",null,[e("The "),a("code",{class:"doc-token"},"/src-pwa/manifest.json"),e(" has no meaning for a Quasar CLI with Webpack project. You will need to use "),a("code",{class:"doc-token"},"quasar.config file > manifest"),e(" to declare it there. After that then delete the "),a("code",{class:"doc-token"},"/src-pwa/manifest.json"),e(" file.")]),a("p",null,[e("Also check "),a("code",{class:"doc-token"},"quasar.config file > pwa"),e(" > "),a("code",{class:"doc-token"},"metaVariables"),e(" and "),a("code",{class:"doc-token"},"metaVariablesFn"),e(".")]),a("p",null,[e("More info: "),a(h,{to:"/quasar-cli-webpack/developing-pwa/configuring-pwa"},{default:o(()=>[e("Configuring PWA")]),_:1})]),a("h3",{id:"step-7-bex-related",class:"doc-heading doc-h3",onClick:i=>d(w)("step-7-bex-related")},"Step 7: BEX related",8,["onClick"]),a("p",null,"The BEX mode differs quite a lot. The PWA mode in a Quasar CLI with Webpack project does NOT supports PWA manifest v3 and multiple content scripts. You will have to manually port over your BEX files to the new architecture."),a("p",null,[e("It’s best to "),a("code",{class:"doc-token"},"$ quasar mode add bex"),e(" and port your BEX.")]),a("p",null,[e("More info: "),a(h,{to:"/quasar-cli-webpack/developing-browser-extensions/preparation#2-understand-the-anatomy-of-src-bex"},{default:o(()=>[e("Preparation and folder structure")]),_:1}),e(" and "),a(h,{to:"/quasar-cli-webpack/developing-browser-extensions/configuring-bex"},{default:o(()=>[e("Configuring BEX")]),_:1}),e(".")]),a("h3",{id:"step-8-and-were-done",class:"doc-heading doc-h3",onClick:i=>d(w)("step-8-and-were-done")},"Step 8: And we’re done",8,["onClick"]),a(d(g),null,{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,`$ quasar dev
$ quasar build`)]),a(c,{lang:"bash"})]),_:1})]}),_:1},x))}}},Q=C.setup;C.setup=(y,$)=>{const q=j();return(q.modules||(q.modules=new Set)).add("src/pages/quasar-cli-webpack/convert-to-quasar-cli-with-webpack.md"),Q?Q(y,$):void 0};const J=P(C,[["__file","convert-to-quasar-cli-with-webpack.md"]]);export{J as default};
