import{provide as B,resolveComponent as T,mergeProps as D,withCtx as h,unref as s,createVNode as e,createTextVNode as n,useSSRContext as Q}from"vue";import{ssrRenderComponent as i}from"vue/server-renderer";import{c as u}from"./page-utils-C-QWsEHe.js";import{D as A,a as b}from"./DocPage-DKr-0pQn.js";import{D as o}from"./DocExample-BcaABDtE.js";import{D as v}from"./DocApi-Df9ryd6x.js";import{D as S}from"./DocPrerender-DPOnWPFO.js";import{C as $}from"./CopyButton-l3ndfN49.js";import{_ as E}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const p={__name:"tree",__ssrInlineRender:!0,setup(x){B("_q_ex",{name:"QTree"});const y=[{id:"qtree-api",title:"2. QTree API",deep:!0},{id:"usage",title:"3. Usage"},{id:"basic",title:"3.1. Basic",sub:!0},{id:"no-connector-lines",title:"3.2. No connector lines",sub:!0},{id:"dense",title:"3.3. Dense",sub:!0},{id:"force-dark-mode",title:"3.4. Force dark mode",sub:!0},{id:"perf-considerations",title:"3.5. Perf considerations",sub:!0},{id:"integrated-example",title:"3.6. Integrated example",sub:!0},{id:"customize-content",title:"3.7. Customize content",sub:!0},{id:"accordion-filtering-and-selectable",title:"3.8. Accordion, filtering and selectable",sub:!0},{id:"lazy-loading",title:"3.9. Lazy loading",sub:!0},{id:"selection-vs-ticking-expansion",title:"3.10. Selection vs ticking, expansion",sub:!0},{id:"tick-strategy",title:"3.11. Tick strategy",sub:!0},{id:"custom-filter-method",title:"3.12. Custom filter method",sub:!0},{id:"nodes-model-structure",title:"3.13. Nodes model structure",sub:!0}];return(k,N,w,z)=>{const g=T("q-badge"),m=T("q-markup-table");N(i(A,D({title:"Tree",desc:"The QTree is a highly configurable Vue component which displays hierarchical data, such as a table of contents in a tree structure.",heading:"","edit-link":"vue-components/tree",toc:y},z),{default:h((P,d,a,l)=>{if(d)d(`<p${l}>Quasar Tree represents a highly configurable component that displays hierarchical data, such as a table of contents in a tree structure.</p>`),d(i(v,{file:"QTree"},null,a,l)),d(`<h2 id="usage" class="doc-heading doc-h2"${l}>Usage</h2><h3 id="basic" class="doc-heading doc-h3"${l}>Basic</h3>`),d(i(o,{title:"Basic",file:"Basic"},null,a,l)),d(`<h3 id="no-connector-lines" class="doc-heading doc-h3"${l}>No connector lines</h3>`),d(i(o,{title:"No connectors",file:"NoConnectors"},null,a,l)),d(`<h3 id="dense" class="doc-heading doc-h3"${l}>Dense `),d(i(g,{label:"v2.2.4+"},null,a,l)),d("</h3>"),d(i(o,{title:"Dense",file:"DenseTree"},null,a,l)),d(`<h3 id="force-dark-mode" class="doc-heading doc-h3"${l}>Force dark mode</h3>`),d(i(o,{title:"Force dark mode",file:"Dark"},null,a,l)),d(`<h3 id="perf-considerations" class="doc-heading doc-h3"${l}>Perf considerations `),d(i(g,{label:"v2.9.2+"},null,a,l)),d(`</h3><p${l}>When using relatively large data, for performance we recommend using the <code class="doc-token"${l}>no-transition</code> Boolean prop which will account for a significant runtime speed improvement.</p>`),d(i(s(S),null,{default:h((r,c,f,t)=>{if(c)c(`<pre class="doc-code"${t}><code${t}>&lt;q-tree no-transition ...</code></pre>`),c(i($,null,null,f,t));else return[e("pre",{class:"doc-code"},[e("code",null,"<q-tree no-transition ...")]),e($)]}),_:1},a,l)),d(`<h3 id="integrated-example" class="doc-heading doc-h3"${l}>Integrated example</h3>`),d(i(o,{title:"With QSplitter and QTabPanels",file:"Splitter"},null,a,l)),d(`<p${l}>More info: `),d(i(b,{to:"/vue-components/splitter"},{default:h((r,c,f,t)=>{if(c)c("QSplitter");else return[n("QSplitter")]}),_:1},a,l)),d(", "),d(i(b,{to:"/vue-components/tab-panels"},{default:h((r,c,f,t)=>{if(c)c("QTabPanels");else return[n("QTabPanels")]}),_:1},a,l)),d(`.</p><h3 id="customize-content" class="doc-heading doc-h3"${l}>Customize content</h3><p${l}>Notice (in the example below) the default header and body slot customization.</p>`),d(i(o,{title:"Default header and body slots",file:"SlotsDefault"},null,a,l)),d(`<p${l}>Notice (in the example below) the custom header and body slots.</p>`),d(i(o,{title:"Customizing nodes",file:"SlotsCustomized"},null,a,l)),d(`<div class="doc-note doc-note--warning"${l}><p class="doc-note__title"${l}>WARNING</p><p${l}>Clicking or pressing <code class="doc-token"${l}>SPACE</code> or <code class="doc-token"${l}>ENTER</code> on the custom header selects the tree item (and the custom header is blurred).</p><p${l}>If you don’t want this to happen just wrap the content of the custom header in a <code class="doc-token"${l}>&lt;div @click.stop @keypress.stop&gt;</code> (or add the listeners to the respective component/element that is emitting them).</p></div><h3 id="accordion-filtering-and-selectable" class="doc-heading doc-h3"${l}>Accordion, filtering and selectable</h3><p${l}>In the example below, sibling nodes get contracted when one gets expanded.</p>`),d(i(o,{title:"Accordion mode",file:"Accordion"},null,a,l)),d(i(o,{title:"Filtering nodes",file:"FilterDefault"},null,a,l)),d(i(o,{title:"Selectable nodes",file:"Selectable"},null,a,l)),d(`<h3 id="lazy-loading" class="doc-heading doc-h3"${l}>Lazy loading</h3>`),d(i(o,{title:"Lazy loading nodes",file:"LazyLoad"},null,a,l)),d(`<h3 id="selection-vs-ticking-expansion" class="doc-heading doc-h3"${l}>Selection vs ticking, expansion</h3><ul${l}><li${l}>Selection (through QTree <code class="doc-token"${l}>selected</code> prop) refers to the currently selected node (gets highlighted with different background).</li><li${l}>Ticking (through QTree <code class="doc-token"${l}>ticked</code> prop) refers to the checkbox associated with each node.</li><li${l}>Expansion (through QTree <code class="doc-token"${l}>expanded</code> prop) refers to the nodes that are expanded.</li></ul><p${l}>All properties above require to be dynamically bound using <code class="doc-token"${l}>v-model:&lt;prop_name&gt;</code> directive in order for them to work correctly (example: <code class="doc-token"${l}>v-model:expanded</code>).</p>`),d(i(o,{title:"Syncing node properties",file:"Sync"},null,a,l)),d(`<h3 id="tick-strategy" class="doc-heading doc-h3"${l}>Tick strategy</h3><p${l}>There are three ticking strategy: ‘leaf’, ‘leaf-filtered’, ‘strict’ with an additional (and default) ‘none’ which disables ticking.</p>`),d(i(m,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:h((r,c,f,t)=>{if(c)c(`<thead${t}><tr${t}><th class="text-left"${t}>Strategy</th><th class="text-left"${t}>Description</th></tr></thead><tbody${t}><tr${t}><td${t}>leaf</td><td${t}>Ticked nodes are only the leaves. Ticking a node influences the parent’s ticked state too (parent becomes partially ticked or ticked), as well as its children (all tickable children become ticked).</td></tr><tr${t}><td${t}>leaf-filtered</td><td${t}>Same concept as <code class="doc-token"${t}>leaf</code>, only that this strategy applies only to filtered nodes (the nodes that remain visible after filtering).</td></tr><tr${t}><td${t}>strict</td><td${t}>Ticked nodes are independent of parent or children tick state.</td></tr></tbody>`);else return[e("thead",null,[e("tr",null,[e("th",{class:"text-left"},"Strategy"),e("th",{class:"text-left"},"Description")])]),e("tbody",null,[e("tr",null,[e("td",null,"leaf"),e("td",null,"Ticked nodes are only the leaves. Ticking a node influences the parent’s ticked state too (parent becomes partially ticked or ticked), as well as its children (all tickable children become ticked).")]),e("tr",null,[e("td",null,"leaf-filtered"),e("td",null,[n("Same concept as "),e("code",{class:"doc-token"},"leaf"),n(", only that this strategy applies only to filtered nodes (the nodes that remain visible after filtering).")])]),e("tr",null,[e("td",null,"strict"),e("td",null,"Ticked nodes are independent of parent or children tick state.")])])]}),_:1},a,l)),d(`<p${l}>You can apply a global tick strategy for a QTree and locally change the ticking strategy for a certain node by specifying the <code class="doc-token"${l}>tickStrategy</code> in the <code class="doc-token"${l}>nodes</code> model.</p>`),d(i(o,{title:"Tick strategy",file:"TickStrategy"},null,a,l)),d(`<h3 id="custom-filter-method" class="doc-heading doc-h3"${l}>Custom filter method</h3><p${l}>You can customize the filtering method by specifying the <code class="doc-token"${l}>filter-method</code> prop. The method below filters by input if it also has ‘(*)’:</p>`),d(i(o,{title:"Custom filter",file:"FilterCustom"},null,a,l)),d(`<h3 id="nodes-model-structure" class="doc-heading doc-h3"${l}>Nodes model structure</h3><p${l}>The following describes a node’s properties that are taken into account by QTree’s v-model.</p>`),d(i(m,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:h((r,c,f,t)=>{if(c)c(`<thead${t}><tr${t}><th class="text-left"${t}>Node Property</th><th class="text-left"${t}>Type</th><th class="text-left"${t}>Behavior when not present</th><th class="text-left"${t}>Description</th></tr></thead><tbody${t}><tr${t}><td${t}>&lt;nodeKey&gt;</td><td${t}>String, Number</td><td${t}>An error is generated</td><td${t}>Node’s key. The key is picked from the key specified in <code class="doc-token"${t}>nodeKey</code> property.</td></tr><tr${t}><td${t}>label</td><td${t}>String</td><td${t}>The item has no label</td><td${t}>Node’s label. When <code class="doc-token"${t}>labelKey</code> prop is set the label is picked from that key.</td></tr><tr${t}><td${t}>icon</td><td${t}>String</td><td${t}>The default icon is used</td><td${t}>Node’s icon.</td></tr><tr${t}><td${t}>iconColor</td><td${t}>String</td><td${t}>The inherited color is used</td><td${t}>Node’s icon color. One from Quasar Color Palette.</td></tr><tr${t}><td${t}>img</td><td${t}>String</td><td${t}>No image is displayed</td><td${t}>Node’s image. Use /public folder. Example: ‘mountains.png’</td></tr><tr${t}><td${t}>avatar</td><td${t}>String</td><td${t}>No avatar is displayed</td><td${t}>Node’s avatar. Use /public folder. Example: ‘boy-avatar.png’</td></tr><tr${t}><td${t}>children</td><td${t}>Array</td><td${t}>This node has no sub-nodes</td><td${t}>Array of nodes as children.</td></tr><tr${t}><td${t}>disabled</td><td${t}>Boolean</td><td${t}>The node is enabled</td><td${t}>Is node disabled?</td></tr><tr${t}><td${t}>expandable</td><td${t}>Boolean</td><td${t}>The node is expandable</td><td${t}>Is node expandable?</td></tr><tr${t}><td${t}>selectable</td><td${t}>Boolean</td><td${t}>The node is selectable</td><td${t}>Is node selectable?</td></tr><tr${t}><td${t}>handler</td><td${t}>Function</td><td${t}>No extra function is called</td><td${t}>Custom function that should be called on click on node. Receives <code class="doc-token"${t}>node</code> as parameter.</td></tr><tr${t}><td${t}>tickable</td><td${t}>Boolean</td><td${t}>The node is tickable according to tick strategy</td><td${t}>When using a tick strategy, each node shows a checkbox. Should a node’s checkbox be disabled?</td></tr><tr${t}><td${t}>noTick</td><td${t}>Boolean</td><td${t}>Node displays a checkbox</td><td${t}>When using a tick strategy, should node display a checkbox?</td></tr><tr${t}><td${t}>tickStrategy</td><td${t}>String</td><td${t}>Tick strategy ‘none’ is used</td><td${t}>Override global tick strategy for this node only. One of ‘leaf’, ‘leaf-filtered’, ‘strict’, ‘none’.</td></tr><tr${t}><td${t}>lazy</td><td${t}>Boolean</td><td${t}>Children are not lazy loaded</td><td${t}>Should children be lazy loaded? In this case also don’t specify ‘children’ prop.</td></tr><tr${t}><td${t}>header</td><td${t}>String</td><td${t}>Slot ‘default-header’ is used</td><td${t}>Node header scoped slot name, without the required ‘header-’ prefix. Example: ‘story’ refers to ‘header-story’ scoped slot.</td></tr><tr${t}><td${t}>body</td><td${t}>String</td><td${t}>Slot ‘default-body’ is used</td><td${t}>Node body scoped slot name, without the required ‘body-’ prefix. Example: ‘story’ refers to ‘body-story’ scoped slot.</td></tr></tbody>`);else return[e("thead",null,[e("tr",null,[e("th",{class:"text-left"},"Node Property"),e("th",{class:"text-left"},"Type"),e("th",{class:"text-left"},"Behavior when not present"),e("th",{class:"text-left"},"Description")])]),e("tbody",null,[e("tr",null,[e("td",null,"<nodeKey>"),e("td",null,"String, Number"),e("td",null,"An error is generated"),e("td",null,[n("Node’s key. The key is picked from the key specified in "),e("code",{class:"doc-token"},"nodeKey"),n(" property.")])]),e("tr",null,[e("td",null,"label"),e("td",null,"String"),e("td",null,"The item has no label"),e("td",null,[n("Node’s label. When "),e("code",{class:"doc-token"},"labelKey"),n(" prop is set the label is picked from that key.")])]),e("tr",null,[e("td",null,"icon"),e("td",null,"String"),e("td",null,"The default icon is used"),e("td",null,"Node’s icon.")]),e("tr",null,[e("td",null,"iconColor"),e("td",null,"String"),e("td",null,"The inherited color is used"),e("td",null,"Node’s icon color. One from Quasar Color Palette.")]),e("tr",null,[e("td",null,"img"),e("td",null,"String"),e("td",null,"No image is displayed"),e("td",null,"Node’s image. Use /public folder. Example: ‘mountains.png’")]),e("tr",null,[e("td",null,"avatar"),e("td",null,"String"),e("td",null,"No avatar is displayed"),e("td",null,"Node’s avatar. Use /public folder. Example: ‘boy-avatar.png’")]),e("tr",null,[e("td",null,"children"),e("td",null,"Array"),e("td",null,"This node has no sub-nodes"),e("td",null,"Array of nodes as children.")]),e("tr",null,[e("td",null,"disabled"),e("td",null,"Boolean"),e("td",null,"The node is enabled"),e("td",null,"Is node disabled?")]),e("tr",null,[e("td",null,"expandable"),e("td",null,"Boolean"),e("td",null,"The node is expandable"),e("td",null,"Is node expandable?")]),e("tr",null,[e("td",null,"selectable"),e("td",null,"Boolean"),e("td",null,"The node is selectable"),e("td",null,"Is node selectable?")]),e("tr",null,[e("td",null,"handler"),e("td",null,"Function"),e("td",null,"No extra function is called"),e("td",null,[n("Custom function that should be called on click on node. Receives "),e("code",{class:"doc-token"},"node"),n(" as parameter.")])]),e("tr",null,[e("td",null,"tickable"),e("td",null,"Boolean"),e("td",null,"The node is tickable according to tick strategy"),e("td",null,"When using a tick strategy, each node shows a checkbox. Should a node’s checkbox be disabled?")]),e("tr",null,[e("td",null,"noTick"),e("td",null,"Boolean"),e("td",null,"Node displays a checkbox"),e("td",null,"When using a tick strategy, should node display a checkbox?")]),e("tr",null,[e("td",null,"tickStrategy"),e("td",null,"String"),e("td",null,"Tick strategy ‘none’ is used"),e("td",null,"Override global tick strategy for this node only. One of ‘leaf’, ‘leaf-filtered’, ‘strict’, ‘none’.")]),e("tr",null,[e("td",null,"lazy"),e("td",null,"Boolean"),e("td",null,"Children are not lazy loaded"),e("td",null,"Should children be lazy loaded? In this case also don’t specify ‘children’ prop.")]),e("tr",null,[e("td",null,"header"),e("td",null,"String"),e("td",null,"Slot ‘default-header’ is used"),e("td",null,"Node header scoped slot name, without the required ‘header-’ prefix. Example: ‘story’ refers to ‘header-story’ scoped slot.")]),e("tr",null,[e("td",null,"body"),e("td",null,"String"),e("td",null,"Slot ‘default-body’ is used"),e("td",null,"Node body scoped slot name, without the required ‘body-’ prefix. Example: ‘story’ refers to ‘body-story’ scoped slot.")])])]}),_:1},a,l));else return[e("p",null,"Quasar Tree represents a highly configurable component that displays hierarchical data, such as a table of contents in a tree structure."),e(v,{file:"QTree"}),e("h2",{id:"usage",class:"doc-heading doc-h2",onClick:r=>s(u)("usage")},"Usage",8,["onClick"]),e("h3",{id:"basic",class:"doc-heading doc-h3",onClick:r=>s(u)("basic")},"Basic",8,["onClick"]),e(o,{title:"Basic",file:"Basic"}),e("h3",{id:"no-connector-lines",class:"doc-heading doc-h3",onClick:r=>s(u)("no-connector-lines")},"No connector lines",8,["onClick"]),e(o,{title:"No connectors",file:"NoConnectors"}),e("h3",{id:"dense",class:"doc-heading doc-h3",onClick:r=>s(u)("dense")},[n("Dense "),e(g,{label:"v2.2.4+"})],8,["onClick"]),e(o,{title:"Dense",file:"DenseTree"}),e("h3",{id:"force-dark-mode",class:"doc-heading doc-h3",onClick:r=>s(u)("force-dark-mode")},"Force dark mode",8,["onClick"]),e(o,{title:"Force dark mode",file:"Dark"}),e("h3",{id:"perf-considerations",class:"doc-heading doc-h3",onClick:r=>s(u)("perf-considerations")},[n("Perf considerations "),e(g,{label:"v2.9.2+"})],8,["onClick"]),e("p",null,[n("When using relatively large data, for performance we recommend using the "),e("code",{class:"doc-token"},"no-transition"),n(" Boolean prop which will account for a significant runtime speed improvement.")]),e(s(S),null,{default:h(()=>[e("pre",{class:"doc-code"},[e("code",null,"<q-tree no-transition ...")]),e($)]),_:1}),e("h3",{id:"integrated-example",class:"doc-heading doc-h3",onClick:r=>s(u)("integrated-example")},"Integrated example",8,["onClick"]),e(o,{title:"With QSplitter and QTabPanels",file:"Splitter"}),e("p",null,[n("More info: "),e(b,{to:"/vue-components/splitter"},{default:h(()=>[n("QSplitter")]),_:1}),n(", "),e(b,{to:"/vue-components/tab-panels"},{default:h(()=>[n("QTabPanels")]),_:1}),n(".")]),e("h3",{id:"customize-content",class:"doc-heading doc-h3",onClick:r=>s(u)("customize-content")},"Customize content",8,["onClick"]),e("p",null,"Notice (in the example below) the default header and body slot customization."),e(o,{title:"Default header and body slots",file:"SlotsDefault"}),e("p",null,"Notice (in the example below) the custom header and body slots."),e(o,{title:"Customizing nodes",file:"SlotsCustomized"}),e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,[n("Clicking or pressing "),e("code",{class:"doc-token"},"SPACE"),n(" or "),e("code",{class:"doc-token"},"ENTER"),n(" on the custom header selects the tree item (and the custom header is blurred).")]),e("p",null,[n("If you don’t want this to happen just wrap the content of the custom header in a "),e("code",{class:"doc-token"},"<div @click.stop @keypress.stop>"),n(" (or add the listeners to the respective component/element that is emitting them).")])]),e("h3",{id:"accordion-filtering-and-selectable",class:"doc-heading doc-h3",onClick:r=>s(u)("accordion-filtering-and-selectable")},"Accordion, filtering and selectable",8,["onClick"]),e("p",null,"In the example below, sibling nodes get contracted when one gets expanded."),e(o,{title:"Accordion mode",file:"Accordion"}),e(o,{title:"Filtering nodes",file:"FilterDefault"}),e(o,{title:"Selectable nodes",file:"Selectable"}),e("h3",{id:"lazy-loading",class:"doc-heading doc-h3",onClick:r=>s(u)("lazy-loading")},"Lazy loading",8,["onClick"]),e(o,{title:"Lazy loading nodes",file:"LazyLoad"}),e("h3",{id:"selection-vs-ticking-expansion",class:"doc-heading doc-h3",onClick:r=>s(u)("selection-vs-ticking-expansion")},"Selection vs ticking, expansion",8,["onClick"]),e("ul",null,[e("li",null,[n("Selection (through QTree "),e("code",{class:"doc-token"},"selected"),n(" prop) refers to the currently selected node (gets highlighted with different background).")]),e("li",null,[n("Ticking (through QTree "),e("code",{class:"doc-token"},"ticked"),n(" prop) refers to the checkbox associated with each node.")]),e("li",null,[n("Expansion (through QTree "),e("code",{class:"doc-token"},"expanded"),n(" prop) refers to the nodes that are expanded.")])]),e("p",null,[n("All properties above require to be dynamically bound using "),e("code",{class:"doc-token"},"v-model:<prop_name>"),n(" directive in order for them to work correctly (example: "),e("code",{class:"doc-token"},"v-model:expanded"),n(").")]),e(o,{title:"Syncing node properties",file:"Sync"}),e("h3",{id:"tick-strategy",class:"doc-heading doc-h3",onClick:r=>s(u)("tick-strategy")},"Tick strategy",8,["onClick"]),e("p",null,"There are three ticking strategy: ‘leaf’, ‘leaf-filtered’, ‘strict’ with an additional (and default) ‘none’ which disables ticking."),e(m,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:h(()=>[e("thead",null,[e("tr",null,[e("th",{class:"text-left"},"Strategy"),e("th",{class:"text-left"},"Description")])]),e("tbody",null,[e("tr",null,[e("td",null,"leaf"),e("td",null,"Ticked nodes are only the leaves. Ticking a node influences the parent’s ticked state too (parent becomes partially ticked or ticked), as well as its children (all tickable children become ticked).")]),e("tr",null,[e("td",null,"leaf-filtered"),e("td",null,[n("Same concept as "),e("code",{class:"doc-token"},"leaf"),n(", only that this strategy applies only to filtered nodes (the nodes that remain visible after filtering).")])]),e("tr",null,[e("td",null,"strict"),e("td",null,"Ticked nodes are independent of parent or children tick state.")])])]),_:1}),e("p",null,[n("You can apply a global tick strategy for a QTree and locally change the ticking strategy for a certain node by specifying the "),e("code",{class:"doc-token"},"tickStrategy"),n(" in the "),e("code",{class:"doc-token"},"nodes"),n(" model.")]),e(o,{title:"Tick strategy",file:"TickStrategy"}),e("h3",{id:"custom-filter-method",class:"doc-heading doc-h3",onClick:r=>s(u)("custom-filter-method")},"Custom filter method",8,["onClick"]),e("p",null,[n("You can customize the filtering method by specifying the "),e("code",{class:"doc-token"},"filter-method"),n(" prop. The method below filters by input if it also has ‘(*)’:")]),e(o,{title:"Custom filter",file:"FilterCustom"}),e("h3",{id:"nodes-model-structure",class:"doc-heading doc-h3",onClick:r=>s(u)("nodes-model-structure")},"Nodes model structure",8,["onClick"]),e("p",null,"The following describes a node’s properties that are taken into account by QTree’s v-model."),e(m,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:h(()=>[e("thead",null,[e("tr",null,[e("th",{class:"text-left"},"Node Property"),e("th",{class:"text-left"},"Type"),e("th",{class:"text-left"},"Behavior when not present"),e("th",{class:"text-left"},"Description")])]),e("tbody",null,[e("tr",null,[e("td",null,"<nodeKey>"),e("td",null,"String, Number"),e("td",null,"An error is generated"),e("td",null,[n("Node’s key. The key is picked from the key specified in "),e("code",{class:"doc-token"},"nodeKey"),n(" property.")])]),e("tr",null,[e("td",null,"label"),e("td",null,"String"),e("td",null,"The item has no label"),e("td",null,[n("Node’s label. When "),e("code",{class:"doc-token"},"labelKey"),n(" prop is set the label is picked from that key.")])]),e("tr",null,[e("td",null,"icon"),e("td",null,"String"),e("td",null,"The default icon is used"),e("td",null,"Node’s icon.")]),e("tr",null,[e("td",null,"iconColor"),e("td",null,"String"),e("td",null,"The inherited color is used"),e("td",null,"Node’s icon color. One from Quasar Color Palette.")]),e("tr",null,[e("td",null,"img"),e("td",null,"String"),e("td",null,"No image is displayed"),e("td",null,"Node’s image. Use /public folder. Example: ‘mountains.png’")]),e("tr",null,[e("td",null,"avatar"),e("td",null,"String"),e("td",null,"No avatar is displayed"),e("td",null,"Node’s avatar. Use /public folder. Example: ‘boy-avatar.png’")]),e("tr",null,[e("td",null,"children"),e("td",null,"Array"),e("td",null,"This node has no sub-nodes"),e("td",null,"Array of nodes as children.")]),e("tr",null,[e("td",null,"disabled"),e("td",null,"Boolean"),e("td",null,"The node is enabled"),e("td",null,"Is node disabled?")]),e("tr",null,[e("td",null,"expandable"),e("td",null,"Boolean"),e("td",null,"The node is expandable"),e("td",null,"Is node expandable?")]),e("tr",null,[e("td",null,"selectable"),e("td",null,"Boolean"),e("td",null,"The node is selectable"),e("td",null,"Is node selectable?")]),e("tr",null,[e("td",null,"handler"),e("td",null,"Function"),e("td",null,"No extra function is called"),e("td",null,[n("Custom function that should be called on click on node. Receives "),e("code",{class:"doc-token"},"node"),n(" as parameter.")])]),e("tr",null,[e("td",null,"tickable"),e("td",null,"Boolean"),e("td",null,"The node is tickable according to tick strategy"),e("td",null,"When using a tick strategy, each node shows a checkbox. Should a node’s checkbox be disabled?")]),e("tr",null,[e("td",null,"noTick"),e("td",null,"Boolean"),e("td",null,"Node displays a checkbox"),e("td",null,"When using a tick strategy, should node display a checkbox?")]),e("tr",null,[e("td",null,"tickStrategy"),e("td",null,"String"),e("td",null,"Tick strategy ‘none’ is used"),e("td",null,"Override global tick strategy for this node only. One of ‘leaf’, ‘leaf-filtered’, ‘strict’, ‘none’.")]),e("tr",null,[e("td",null,"lazy"),e("td",null,"Boolean"),e("td",null,"Children are not lazy loaded"),e("td",null,"Should children be lazy loaded? In this case also don’t specify ‘children’ prop.")]),e("tr",null,[e("td",null,"header"),e("td",null,"String"),e("td",null,"Slot ‘default-header’ is used"),e("td",null,"Node header scoped slot name, without the required ‘header-’ prefix. Example: ‘story’ refers to ‘header-story’ scoped slot.")]),e("tr",null,[e("td",null,"body"),e("td",null,"String"),e("td",null,"Slot ‘default-body’ is used"),e("td",null,"Node body scoped slot name, without the required ‘body-’ prefix. Example: ‘story’ refers to ‘body-story’ scoped slot.")])])]),_:1})]}),_:1},w))}}},C=p.setup;p.setup=(x,y)=>{const k=Q();return(k.modules||(k.modules=new Set)).add("src/pages/vue-components/tree.md"),C?C(x,y):void 0};const le=E(p,[["__file","tree.md"]]);export{le as default};
