import{resolveComponent as q,mergeProps as C,withCtx as c,unref as p,createVNode as n,createTextVNode as s,useSSRContext as j}from"vue";import{ssrRenderComponent as u}from"vue/server-renderer";import{c as g}from"./page-utils-C-QWsEHe.js";import{D as S,a as y}from"./DocPage-DKr-0pQn.js";import{D as r}from"./DocPrerender-DPOnWPFO.js";import{C as o}from"./CopyButton-l3ndfN49.js";import{_ as E}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const m={__name:"handling-webpack",__ssrInlineRender:!0,setup(h){const f=[{name:"The quasar.config file",category:"Quasar CLI (with Webpack)",path:"/quasar-cli-webpack/quasar-config-file"}],$=[{id:"usage-with-quasar-config-file",title:"2. Usage with quasar.config file"},{id:"inspecting-webpack-config",title:"3. Inspecting Webpack Config"},{id:"webpack-aliases",title:"4. Webpack Aliases"},{id:"adding-webpack-aliases",title:"4.1. Adding Webpack aliases",sub:!0},{id:"webpack-v5-compatibility-issues",title:"5. Webpack v5 compatibility issues"},{id:"webpack-loaders",title:"6. Webpack loaders"},{id:"installing-loaders",title:"6.1. Installing loaders",sub:!0},{id:"postcss",title:"6.2. PostCSS",sub:!0},{id:"pug",title:"6.3. Pug",sub:!0},{id:"coffeescript",title:"6.4. Coffeescript",sub:!0}];return(P,v,w,W)=>{const b=q("q-markup-table");v(u(S,C({title:"Handling Webpack",desc:"(@quasar/app-webpack) How to manage Webpack in a Quasar app.",overline:"Quasar CLI with Webpack - @quasar/app-webpack",heading:"","edit-link":"quasar-cli-webpack/handling-webpack",toc:$,related:f},W),{default:c((T,l,d,t)=>{if(l)l(`<p${t}>The build system uses Webpack to create your website/app. Don’t worry if you aren’t acquainted with Webpack. Out of the box, you won’t need to configure it because it already has everything set up.</p><h2 id="usage-with-quasar-config-file" class="doc-heading doc-h2"${t}>Usage with quasar.config file</h2><p${t}>For cases where you need to tweak the default Webpack config you can do so by editing the <code class="doc-token"${t}>/quasar.config</code> file and configuring <code class="doc-token"${t}>build &gt; extendWebpack (cfg)</code> method or <code class="doc-token"${t}>build &gt; chainWebpack (chain)</code>.</p><p${t}>Example of adding ESLint loader to Webpack (assuming you’ve installed it):</p>`),l(u(p(r),{title:"/quasar.config file"},{default:c((k,e,i,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token literal-property property"${a}>build</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token function"${a}>extendWebpack</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>cfg<span class="token punctuation"${a}>,</span> <span class="token punctuation"${a}>{</span> isServer<span class="token punctuation"${a}>,</span> isClient <span class="token punctuation"${a}>}</span></span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
    cfg<span class="token punctuation"${a}>.</span>module<span class="token punctuation"${a}>.</span>rules<span class="token punctuation"${a}>.</span><span class="token function"${a}>push</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>{</span>
      <span class="token literal-property property"${a}>enforce</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;pre&#39;</span><span class="token punctuation"${a}>,</span>
      <span class="token literal-property property"${a}>test</span><span class="token operator"${a}>:</span> <span class="token regex"${a}><span class="token regex-delimiter"${a}>/</span><span class="token regex-source language-regex"${a}>\\.(js|vue)$</span><span class="token regex-delimiter"${a}>/</span></span><span class="token punctuation"${a}>,</span>
      <span class="token literal-property property"${a}>loader</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;eslint-loader&#39;</span><span class="token punctuation"${a}>,</span>
      <span class="token literal-property property"${a}>exclude</span><span class="token operator"${a}>:</span> <span class="token regex"${a}><span class="token regex-delimiter"${a}>/</span><span class="token regex-source language-regex"${a}>(node_modules|quasar)</span><span class="token regex-delimiter"${a}>/</span></span>
    <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(u(o,null,null,i,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"extendWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("cfg"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(" isServer"),n("span",{class:"token punctuation"},","),s(" isClient "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    cfg`),n("span",{class:"token punctuation"},"."),s("module"),n("span",{class:"token punctuation"},"."),s("rules"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token literal-property property"},"enforce"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'pre'"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token literal-property property"},"test"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"\\.(js|vue)$"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token literal-property property"},"loader"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'eslint-loader'"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token literal-property property"},"exclude"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"(node_modules|quasar)"),n("span",{class:"token regex-delimiter"},"/")]),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]}),_:1},d,t)),l(`<p${t}>Notice that you don’t need to return anything. The parameter of extendWebpack(cfg) is the Webpack configuration Object generated by Quasar for you. You can add/remove/replace anything from it, assuming you really know what you are doing.</p><p${t}>Equivalent quasar.conf for chainWebpack():</p>`),l(u(p(r),{title:"/quasar.config file"},{default:c((k,e,i,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token literal-property property"${a}>build</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token function"${a}>chainWebpack</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>chain<span class="token punctuation"${a}>,</span> <span class="token punctuation"${a}>{</span> isServer<span class="token punctuation"${a}>,</span> isClient <span class="token punctuation"${a}>}</span></span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
    chain<span class="token punctuation"${a}>.</span>module<span class="token punctuation"${a}>.</span><span class="token function"${a}>rule</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;eslint&#39;</span><span class="token punctuation"${a}>)</span>
      <span class="token punctuation"${a}>.</span><span class="token function"${a}>test</span><span class="token punctuation"${a}>(</span><span class="token regex"${a}><span class="token regex-delimiter"${a}>/</span><span class="token regex-source language-regex"${a}>\\.(js|vue)$</span><span class="token regex-delimiter"${a}>/</span></span><span class="token punctuation"${a}>)</span>
      <span class="token punctuation"${a}>.</span><span class="token function"${a}>enforce</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;pre&#39;</span><span class="token punctuation"${a}>)</span>
      <span class="token punctuation"${a}>.</span>exclude
        <span class="token punctuation"${a}>.</span><span class="token function"${a}>add</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>(</span><span class="token regex"${a}><span class="token regex-delimiter"${a}>/</span><span class="token regex-source language-regex"${a}>[\\\\/]node_modules[\\\\/]</span><span class="token regex-delimiter"${a}>/</span></span><span class="token punctuation"${a}>)</span><span class="token punctuation"${a}>)</span>
        <span class="token punctuation"${a}>.</span><span class="token function"${a}>end</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span>
      <span class="token punctuation"${a}>.</span><span class="token function"${a}>use</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;eslint-loader&#39;</span><span class="token punctuation"${a}>)</span>
        <span class="token punctuation"${a}>.</span><span class="token function"${a}>loader</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;eslint-loader&#39;</span><span class="token punctuation"${a}>)</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(u(o,null,null,i,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"chainWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("chain"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(" isServer"),n("span",{class:"token punctuation"},","),s(" isClient "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    chain`),n("span",{class:"token punctuation"},"."),s("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rule"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'eslint'"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"test"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"\\.(js|vue)$"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"enforce"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'pre'"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),s(`exclude
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"[\\\\/]node_modules[\\\\/]"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"end"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'eslint-loader'"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"loader"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'eslint-loader'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]}),_:1},d,t)),l(`<div class="doc-note doc-note--tip"${t}><p class="doc-note__title"${t}>TIP</p><p${t}>The method <code class="doc-token"${t}>chainWebpack()</code> supplies a `),l(u(y,{to:"https://github.com/neutrinojs/webpack-chain"},{default:c((k,e,i,a)=>{if(e)e("webpack-chain");else return[s("webpack-chain")]}),_:1},d,t)),l(` Object. You might want to check its documentation page.</p></div><div class="doc-note doc-note--warning"${t}><p class="doc-note__title"${t}>WARNING</p><p${t}><code class="doc-token"${t}>chainWebpack()</code> gets executed <strong${t}>before</strong> <code class="doc-token"${t}>extendWebpack()</code>.</p><p${t}>The two examples above are equivalent. Do NOT use both methods to tamper for the same thing!</p></div><h2 id="inspecting-webpack-config" class="doc-heading doc-h2"${t}>Inspecting Webpack Config</h2><p${t}>Quasar CLI offers a useful command for this:</p>`),l(u(p(r),null,{default:c((k,e,i,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}>$ quasar inspect <span class="token parameter variable"${a}>-h</span>

  Description
    Inspect Quasar generated Webpack config

  Usage
    $ quasar inspect
    $ quasar inspect <span class="token parameter variable"${a}>-c</span> build
    $ quasar inspect <span class="token parameter variable"${a}>-m</span> electron <span class="token parameter variable"${a}>-p</span> <span class="token string"${a}>&#39;module.rules&#39;</span>

  Options
    --cmd, <span class="token parameter variable"${a}>-c</span>        Quasar <span class="token builtin class-name"${a}>command</span> <span class="token punctuation"${a}>[</span>dev<span class="token operator"${a}>|</span>build<span class="token punctuation"${a}>]</span> <span class="token punctuation"${a}>(</span>default: dev<span class="token punctuation"${a}>)</span>
    --mode, <span class="token parameter variable"${a}>-m</span>       App mode <span class="token punctuation"${a}>[</span>spa<span class="token operator"${a}>|</span>ssr<span class="token operator"${a}>|</span>pwa<span class="token operator"${a}>|</span>cordova<span class="token operator"${a}>|</span>electron<span class="token punctuation"${a}>]</span> <span class="token punctuation"${a}>(</span>default: spa<span class="token punctuation"${a}>)</span>
    --depth, <span class="token parameter variable"${a}>-d</span>      Number of levels deep <span class="token punctuation"${a}>(</span>default: <span class="token number"${a}>5</span><span class="token punctuation"${a}>)</span>
    --path, <span class="token parameter variable"${a}>-p</span>       Path of config <span class="token keyword"${a}>in</span> dot notation
                        Examples:
                          <span class="token parameter variable"${a}>-p</span> module.rules
                          <span class="token parameter variable"${a}>-p</span> plugins
    --help, <span class="token parameter variable"${a}>-h</span>       Displays this message</code></pre>`),e(u(o,{lang:"bash"},null,i,a));else return[n("pre",{class:"doc-code"},[n("code",null,[s("$ quasar inspect "),n("span",{class:"token parameter variable"},"-h"),s(`

  Description
    Inspect Quasar generated Webpack config

  Usage
    $ quasar inspect
    $ quasar inspect `),n("span",{class:"token parameter variable"},"-c"),s(` build
    $ quasar inspect `),n("span",{class:"token parameter variable"},"-m"),s(" electron "),n("span",{class:"token parameter variable"},"-p"),s(),n("span",{class:"token string"},"'module.rules'"),s(`

  Options
    --cmd, `),n("span",{class:"token parameter variable"},"-c"),s("        Quasar "),n("span",{class:"token builtin class-name"},"command"),s(),n("span",{class:"token punctuation"},"["),s("dev"),n("span",{class:"token operator"},"|"),s("build"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"("),s("default: dev"),n("span",{class:"token punctuation"},")"),s(`
    --mode, `),n("span",{class:"token parameter variable"},"-m"),s("       App mode "),n("span",{class:"token punctuation"},"["),s("spa"),n("span",{class:"token operator"},"|"),s("ssr"),n("span",{class:"token operator"},"|"),s("pwa"),n("span",{class:"token operator"},"|"),s("cordova"),n("span",{class:"token operator"},"|"),s("electron"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"("),s("default: spa"),n("span",{class:"token punctuation"},")"),s(`
    --depth, `),n("span",{class:"token parameter variable"},"-d"),s("      Number of levels deep "),n("span",{class:"token punctuation"},"("),s("default: "),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),s(`
    --path, `),n("span",{class:"token parameter variable"},"-p"),s("       Path of config "),n("span",{class:"token keyword"},"in"),s(` dot notation
                        Examples:
                          `),n("span",{class:"token parameter variable"},"-p"),s(` module.rules
                          `),n("span",{class:"token parameter variable"},"-p"),s(` plugins
    --help, `),n("span",{class:"token parameter variable"},"-h"),s("       Displays this message")])]),n(o,{lang:"bash"})]}),_:1},d,t)),l(`<h2 id="webpack-aliases" class="doc-heading doc-h2"${t}>Webpack Aliases</h2><p${t}>Quasar comes with a bunch of useful Webpack aliases preconfigured. You can use them anywhere in your project and webpack will resolve the correct path.</p>`),l(u(b,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:c((k,e,i,a)=>{if(e)e(`<thead${a}><tr${a}><th class="text-left"${a}>Alias</th><th class="text-left"${a}>Resolves to</th></tr></thead><tbody${a}><tr${a}><td${a}><code class="doc-token"${a}>src</code></td><td${a}>/src</td></tr><tr${a}><td${a}><code class="doc-token"${a}>app</code></td><td${a}>/</td></tr><tr${a}><td${a}><code class="doc-token"${a}>components</code></td><td${a}>/src/components</td></tr><tr${a}><td${a}><code class="doc-token"${a}>layouts</code></td><td${a}>/src/layouts</td></tr><tr${a}><td${a}><code class="doc-token"${a}>pages</code></td><td${a}>/src/pages</td></tr><tr${a}><td${a}><code class="doc-token"${a}>assets</code></td><td${a}>/src/assets</td></tr><tr${a}><td${a}><code class="doc-token"${a}>boot</code></td><td${a}>/src/boot</td></tr><tr${a}><td${a}><code class="doc-token"${a}>stores</code></td><td${a}>/src/stores (Pinia stores)</td></tr></tbody>`);else return[n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Alias"),n("th",{class:"text-left"},"Resolves to")])]),n("tbody",null,[n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"src")]),n("td",null,"/src")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"app")]),n("td",null,"/")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"components")]),n("td",null,"/src/components")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"layouts")]),n("td",null,"/src/layouts")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"pages")]),n("td",null,"/src/pages")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"assets")]),n("td",null,"/src/assets")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"boot")]),n("td",null,"/src/boot")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"stores")]),n("td",null,"/src/stores (Pinia stores)")])])]}),_:1},d,t)),l(`<p${t}>Also if you configure to build with the Vue compiler version (quasar.config file &gt; build &gt; vueCompiler: true), <code class="doc-token"${t}>vue$</code> resolves to <code class="doc-token"${t}>vue/dist/vue.esm.js</code>.</p><h3 id="adding-webpack-aliases" class="doc-heading doc-h3"${t}>Adding Webpack aliases</h3><p${t}>To add your own alias you can extend the webpack config and merge it with the existing alias. Use the <code class="doc-token"${t}>path.resolve</code> helper to resolve the path to your intended alias.</p>`),l(u(p(r),{title:"/quasar.config file"},{default:c((k,e,i,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>const</span> path <span class="token operator"${a}>=</span> <span class="token function"${a}>require</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;node:path&#39;</span><span class="token punctuation"${a}>)</span>

module<span class="token punctuation"${a}>.</span><span class="token function-variable function"${a}>exports</span> <span class="token operator"${a}>=</span> <span class="token keyword"${a}>function</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>ctx</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
  <span class="token keyword"${a}>return</span> <span class="token punctuation"${a}>{</span>
    <span class="token literal-property property"${a}>build</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
      <span class="token function"${a}>extendWebpack</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>cfg<span class="token punctuation"${a}>,</span> <span class="token punctuation"${a}>{</span> isServer<span class="token punctuation"${a}>,</span> isClient <span class="token punctuation"${a}>}</span></span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
        cfg<span class="token punctuation"${a}>.</span>resolve<span class="token punctuation"${a}>.</span>alias <span class="token operator"${a}>=</span> <span class="token punctuation"${a}>{</span>
          <span class="token operator"${a}>...</span>cfg<span class="token punctuation"${a}>.</span>resolve<span class="token punctuation"${a}>.</span>alias<span class="token punctuation"${a}>,</span> <span class="token comment"${a}>// This adds the existing alias</span>

          <span class="token comment"${a}>// Add your own alias like this</span>
          <span class="token literal-property property"${a}>myalias</span><span class="token operator"${a}>:</span> path<span class="token punctuation"${a}>.</span><span class="token function"${a}>resolve</span><span class="token punctuation"${a}>(</span>__dirname<span class="token punctuation"${a}>,</span> <span class="token string"${a}>&#39;./src/somefolder&#39;</span><span class="token punctuation"${a}>)</span><span class="token punctuation"${a}>,</span>
        <span class="token punctuation"${a}>}</span>
      <span class="token punctuation"${a}>}</span>
    <span class="token punctuation"${a}>}</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(u(o,null,null,i,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" path "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'node:path'"),n("span",{class:"token punctuation"},")"),s(`

module`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token function"},"extendWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("cfg"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(" isServer"),n("span",{class:"token punctuation"},","),s(" isClient "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        cfg`),n("span",{class:"token punctuation"},"."),s("resolve"),n("span",{class:"token punctuation"},"."),s("alias "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
          `),n("span",{class:"token operator"},"..."),s("cfg"),n("span",{class:"token punctuation"},"."),s("resolve"),n("span",{class:"token punctuation"},"."),s("alias"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// This adds the existing alias"),s(`

          `),n("span",{class:"token comment"},"// Add your own alias like this"),s(`
          `),n("span",{class:"token literal-property property"},"myalias"),n("span",{class:"token operator"},":"),s(" path"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"resolve"),n("span",{class:"token punctuation"},"("),s("__dirname"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'./src/somefolder'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]}),_:1},d,t)),l(`<p${t}>Equivalent with chainWebpack():</p>`),l(u(p(r),{title:"/quasar.config file"},{default:c((k,e,i,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>const</span> path <span class="token operator"${a}>=</span> <span class="token function"${a}>require</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;node:path&#39;</span><span class="token punctuation"${a}>)</span>

module<span class="token punctuation"${a}>.</span><span class="token function-variable function"${a}>exports</span> <span class="token operator"${a}>=</span> <span class="token keyword"${a}>function</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>ctx</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
  <span class="token keyword"${a}>return</span> <span class="token punctuation"${a}>{</span>
    <span class="token literal-property property"${a}>build</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
      <span class="token function"${a}>chainWebpack</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>chain<span class="token punctuation"${a}>,</span> <span class="token punctuation"${a}>{</span> isServer<span class="token punctuation"${a}>,</span> isClient <span class="token punctuation"${a}>}</span></span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
        chain<span class="token punctuation"${a}>.</span>resolve<span class="token punctuation"${a}>.</span>alias
          <span class="token punctuation"${a}>.</span><span class="token function"${a}>set</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;myalias&#39;</span><span class="token punctuation"${a}>,</span> path<span class="token punctuation"${a}>.</span><span class="token function"${a}>resolve</span><span class="token punctuation"${a}>(</span>__dirname<span class="token punctuation"${a}>,</span> <span class="token string"${a}>&#39;./src/somefolder&#39;</span><span class="token punctuation"${a}>)</span><span class="token punctuation"${a}>)</span>
      <span class="token punctuation"${a}>}</span>
    <span class="token punctuation"${a}>}</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(u(o,null,null,i,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" path "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'node:path'"),n("span",{class:"token punctuation"},")"),s(`

module`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token function"},"chainWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("chain"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(" isServer"),n("span",{class:"token punctuation"},","),s(" isClient "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        chain`),n("span",{class:"token punctuation"},"."),s("resolve"),n("span",{class:"token punctuation"},"."),s(`alias
          `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'myalias'"),n("span",{class:"token punctuation"},","),s(" path"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"resolve"),n("span",{class:"token punctuation"},"("),s("__dirname"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'./src/somefolder'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]}),_:1},d,t)),l(`<h2 id="webpack-v5-compatibility-issues" class="doc-heading doc-h2"${t}>Webpack v5 compatibility issues</h2><p${t}>Quasar App CLI is using Webpack v5. If you are moving your existing project to Quasar from a Webpack v4 project, you might have some compatibility issues with 3rd party libraries. Webpack v5 removed the Node.js polyfills for the web client builds. If you are using packages for the web client that rely on Node.js API, you will get errors saying that some packages are missing. Examples: <code class="doc-token"${t}>Buffer</code>, <code class="doc-token"${t}>crypto</code>, <code class="doc-token"${t}>os</code>, <code class="doc-token"${t}>path</code>, <code class="doc-token"${t}>stream</code>, <code class="doc-token"${t}>assert</code>.</p><p${t}>These need to be addressed by the package owners. But if you prefer not to wait and just want to run your app/website (with a bit of risk), then you can manually install <code class="doc-token"${t}>node-polyfill-webpack-plugin</code> (<code class="doc-token"${t}>yarn add --dev node-polyfill-webpack-plugin</code>) and reference it in <code class="doc-token"${t}>quasar.config file &gt; build &gt; chainWebpack</code>. Example:</p>`),l(u(p(r),{title:"/quasar.config file"},{default:c((k,e,i,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token literal-property property"${a}>build</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token function"${a}>chainWebpack</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>chain</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
    <span class="token keyword"${a}>const</span> nodePolyfillWebpackPlugin <span class="token operator"${a}>=</span> <span class="token function"${a}>require</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;node-polyfill-webpack-plugin&#39;</span><span class="token punctuation"${a}>)</span>
    chain<span class="token punctuation"${a}>.</span><span class="token function"${a}>plugin</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;node-polyfill&#39;</span><span class="token punctuation"${a}>)</span><span class="token punctuation"${a}>.</span><span class="token function"${a}>use</span><span class="token punctuation"${a}>(</span>nodePolyfillWebpackPlugin<span class="token punctuation"${a}>)</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(u(o,null,null,i,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"chainWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"chain"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" nodePolyfillWebpackPlugin "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'node-polyfill-webpack-plugin'"),n("span",{class:"token punctuation"},")"),s(`
    chain`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"plugin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'node-polyfill'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),s("nodePolyfillWebpackPlugin"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]}),_:1},d,t)),l(`<h2 id="webpack-loaders" class="doc-heading doc-h2"${t}>Webpack loaders</h2><p${t}>The build system uses Webpack, so it relies on using webpack loaders to handle different types of files (js, css, styl, scss, json, and so on). By default, the most used loaders are provided by default.</p><h3 id="installing-loaders" class="doc-heading doc-h3"${t}>Installing loaders</h3><p${t}>Let’s take an example. You want to be able to import <code class="doc-token"${t}>.json</code> files. <strong${t}>Out of the box, Quasar supplies json support so you don’t actually need to follow these steps, but for the sake of demonstrating how to add a loader, we’ll pretend Quasar doesn’t offer it.</strong></p><p${t}>So, you need a loader for it. You search Google to see what webpack loader you need. In this case, it’s “json-loader”. We first install it:</p>`),l(u(p(r),null,{default:c((k,e,i,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}>$ <span class="token function"${a}>yarn</span> <span class="token function"${a}>add</span> <span class="token parameter variable"${a}>--dev</span> json-loader</code></pre>`),e(u(o,{lang:"bash"},null,i,a));else return[n("pre",{class:"doc-code"},[n("code",null,[s("$ "),n("span",{class:"token function"},"yarn"),s(),n("span",{class:"token function"},"add"),s(),n("span",{class:"token parameter variable"},"--dev"),s(" json-loader")])]),n(o,{lang:"bash"})]}),_:1},d,t)),l(`<p${t}>After installing your new loader, we want to tell Webpack to use it. So we edit the <code class="doc-token"${t}>/quasar.config</code> file and change <code class="doc-token"${t}>build.extendWebpack()</code> to add entries to <code class="doc-token"${t}>module/rules</code> for this new loader:</p>`),l(u(p(r),{title:"/quasar.config file"},{default:c((k,e,i,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token literal-property property"${a}>build</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token function"${a}>extendWebpack</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>cfg</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
    cfg<span class="token punctuation"${a}>.</span>module<span class="token punctuation"${a}>.</span>rules<span class="token punctuation"${a}>.</span><span class="token function"${a}>push</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>{</span>
      <span class="token literal-property property"${a}>test</span><span class="token operator"${a}>:</span> <span class="token regex"${a}><span class="token regex-delimiter"${a}>/</span><span class="token regex-source language-regex"${a}>\\.json$</span><span class="token regex-delimiter"${a}>/</span></span><span class="token punctuation"${a}>,</span>
      <span class="token literal-property property"${a}>loader</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;json-loader&#39;</span>
    <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(u(o,null,null,i,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"extendWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"cfg"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    cfg`),n("span",{class:"token punctuation"},"."),s("module"),n("span",{class:"token punctuation"},"."),s("rules"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token literal-property property"},"test"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"\\.json$"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token literal-property property"},"loader"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'json-loader'"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]}),_:1},d,t)),l(`<p${t}>Equivalent with chainWebpack():</p>`),l(u(p(r),{title:"/quasar.config file"},{default:c((k,e,i,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token literal-property property"${a}>build</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token function"${a}>chainWebpack</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>chain</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
    chain<span class="token punctuation"${a}>.</span>module<span class="token punctuation"${a}>.</span><span class="token function"${a}>rule</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;json&#39;</span><span class="token punctuation"${a}>)</span>
      <span class="token punctuation"${a}>.</span><span class="token function"${a}>test</span><span class="token punctuation"${a}>(</span><span class="token regex"${a}><span class="token regex-delimiter"${a}>/</span><span class="token regex-source language-regex"${a}>\\.json$</span><span class="token regex-delimiter"${a}>/</span></span><span class="token punctuation"${a}>)</span>
      <span class="token punctuation"${a}>.</span><span class="token function"${a}>use</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;json-loader&#39;</span><span class="token punctuation"${a}>)</span>
        <span class="token punctuation"${a}>.</span><span class="token function"${a}>loader</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;json-loader&#39;</span><span class="token punctuation"${a}>)</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(u(o,null,null,i,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"chainWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"chain"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    chain`),n("span",{class:"token punctuation"},"."),s("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rule"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'json'"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"test"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"\\.json$"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'json-loader'"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"loader"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'json-loader'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]}),_:1},d,t)),l(`<p${t}>And you’re done.</p><h3 id="postcss" class="doc-heading doc-h3"${t}>PostCSS</h3><p${t}>Styles in <code class="doc-token"${t}>*.vue</code> files (and all other style files) are piped through PostCSS by default, so you don’t need to use a specific loader for it.</p><p${t}>By default, PostCSS is configured to use Autoprefixer. Take a look at <code class="doc-token"${t}>/postcss.config.cjs</code> where you can tweak it if you need to.</p><h3 id="pug" class="doc-heading doc-h3"${t}>Pug</h3><p${t}>First, you need to install some dependencies:</p>`),l(u(p(r),null,{default:c((k,e,i,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}>$ <span class="token function"${a}>yarn</span> <span class="token function"${a}>add</span> <span class="token parameter variable"${a}>--dev</span> pug pug-plain-loader</code></pre>`),e(u(o,{lang:"bash"},null,i,a));else return[n("pre",{class:"doc-code"},[n("code",null,[s("$ "),n("span",{class:"token function"},"yarn"),s(),n("span",{class:"token function"},"add"),s(),n("span",{class:"token parameter variable"},"--dev"),s(" pug pug-plain-loader")])]),n(o,{lang:"bash"})]}),_:1},d,t)),l(`<p${t}>Then you need to extend the webpack configuration through the <code class="doc-token"${t}>/quasar.config</code> file:</p>`),l(u(p(r),{title:"/quasar.config file"},{default:c((k,e,i,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token literal-property property"${a}>build</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token function"${a}>extendWebpack</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>cfg</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
    cfg<span class="token punctuation"${a}>.</span>module<span class="token punctuation"${a}>.</span>rules<span class="token punctuation"${a}>.</span><span class="token function"${a}>push</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>{</span>
      <span class="token literal-property property"${a}>test</span><span class="token operator"${a}>:</span> <span class="token regex"${a}><span class="token regex-delimiter"${a}>/</span><span class="token regex-source language-regex"${a}>\\.pug$</span><span class="token regex-delimiter"${a}>/</span></span><span class="token punctuation"${a}>,</span>
      <span class="token literal-property property"${a}>loader</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;pug-plain-loader&#39;</span>
    <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(u(o,null,null,i,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"extendWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"cfg"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    cfg`),n("span",{class:"token punctuation"},"."),s("module"),n("span",{class:"token punctuation"},"."),s("rules"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token literal-property property"},"test"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"\\.pug$"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token literal-property property"},"loader"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'pug-plain-loader'"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]}),_:1},d,t)),l(`<p${t}>Equivalent with chainWebpack():</p>`),l(u(p(r),{title:"/quasar.config file"},{default:c((k,e,i,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token literal-property property"${a}>build</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token function"${a}>chainWebpack</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>chain</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
    chain<span class="token punctuation"${a}>.</span>module<span class="token punctuation"${a}>.</span><span class="token function"${a}>rule</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;pug&#39;</span><span class="token punctuation"${a}>)</span>
      <span class="token punctuation"${a}>.</span><span class="token function"${a}>test</span><span class="token punctuation"${a}>(</span><span class="token regex"${a}><span class="token regex-delimiter"${a}>/</span><span class="token regex-source language-regex"${a}>\\.pug$</span><span class="token regex-delimiter"${a}>/</span></span><span class="token punctuation"${a}>)</span>
      <span class="token punctuation"${a}>.</span><span class="token function"${a}>use</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;pug-plain-loader&#39;</span><span class="token punctuation"${a}>)</span>
        <span class="token punctuation"${a}>.</span><span class="token function"${a}>loader</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;pug-plain-loader&#39;</span><span class="token punctuation"${a}>)</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(u(o,null,null,i,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"chainWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"chain"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    chain`),n("span",{class:"token punctuation"},"."),s("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rule"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'pug'"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"test"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"\\.pug$"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'pug-plain-loader'"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"loader"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'pug-plain-loader'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]}),_:1},d,t)),l(`<h3 id="coffeescript" class="doc-heading doc-h3"${t}>Coffeescript</h3><p${t}>If you are using Coffeescript then you need to EITHER disable ESLint OR tell ESLint which Vue components are using Coffeescript.</p><p${t}>Note that <code class="doc-token"${t}>vue-loader</code> uses <code class="doc-token"${t}>lang=&quot;coffee&quot;</code> to identify components which are using Coffeescript, but <code class="doc-token"${t}>lang=&quot;coffee&quot;</code> is not recognizable for ESLint. Fortunately, ESLint (following traditional HTML) uses <code class="doc-token"${t}>type=&quot;xxx&quot;</code> to identify the type of scripts. As long as a <code class="doc-token"${t}>&lt;script&gt;</code> tag has any <code class="doc-token"${t}>type</code> other than <code class="doc-token"${t}>javascript</code>, ESLint would mark the script as non-javascript, and skips linting it. Coffeescript’s convention is to use <code class="doc-token"${t}>type=&quot;text/coffeescript&quot;</code> to identify itself. Therefore, in your Vue components which are using Coffeescript, using both <code class="doc-token"${t}>lang</code> and <code class="doc-token"${t}>type</code> to avoid ESLint warnings:</p>`),l(u(p(r),null,{default:c((k,e,i,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;</span>template</span><span class="token punctuation"${a}>&gt;</span></span>
  ...
<span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;/</span>template</span><span class="token punctuation"${a}>&gt;</span></span>
<span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;</span>script</span> <span class="token attr-name"${a}>lang</span><span class="token attr-value"${a}><span class="token punctuation attr-equals"${a}>=</span><span class="token punctuation"${a}>&quot;</span>coffee<span class="token punctuation"${a}>&quot;</span></span> <span class="token attr-name"${a}>type</span><span class="token attr-value"${a}><span class="token punctuation attr-equals"${a}>=</span><span class="token punctuation"${a}>&quot;</span>text/coffeescript<span class="token punctuation"${a}>&quot;</span></span><span class="token punctuation"${a}>&gt;</span></span><span class="token script"${a}><span class="token language-javascript"${a}>
  <span class="token operator"${a}>...</span>
</span></span><span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;/</span>script</span><span class="token punctuation"${a}>&gt;</span></span></code></pre>`),e(u(o,null,null,i,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("template")]),n("span",{class:"token punctuation"},">")]),s(`
  ...
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("template")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("script")]),s(),n("span",{class:"token attr-name"},"lang"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("coffee"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"type"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("text/coffeescript"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"},[n("span",{class:"token language-javascript"},[s(`
  `),n("span",{class:"token operator"},"..."),s(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("script")]),n("span",{class:"token punctuation"},">")])])]),n(o)]}),_:1},d,t));else return[n("p",null,"The build system uses Webpack to create your website/app. Don’t worry if you aren’t acquainted with Webpack. Out of the box, you won’t need to configure it because it already has everything set up."),n("h2",{id:"usage-with-quasar-config-file",class:"doc-heading doc-h2",onClick:k=>p(g)("usage-with-quasar-config-file")},"Usage with quasar.config file",8,["onClick"]),n("p",null,[s("For cases where you need to tweak the default Webpack config you can do so by editing the "),n("code",{class:"doc-token"},"/quasar.config"),s(" file and configuring "),n("code",{class:"doc-token"},"build > extendWebpack (cfg)"),s(" method or "),n("code",{class:"doc-token"},"build > chainWebpack (chain)"),s(".")]),n("p",null,"Example of adding ESLint loader to Webpack (assuming you’ve installed it):"),n(p(r),{title:"/quasar.config file"},{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"extendWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("cfg"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(" isServer"),n("span",{class:"token punctuation"},","),s(" isClient "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    cfg`),n("span",{class:"token punctuation"},"."),s("module"),n("span",{class:"token punctuation"},"."),s("rules"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token literal-property property"},"enforce"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'pre'"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token literal-property property"},"test"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"\\.(js|vue)$"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token literal-property property"},"loader"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'eslint-loader'"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token literal-property property"},"exclude"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"(node_modules|quasar)"),n("span",{class:"token regex-delimiter"},"/")]),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]),_:1}),n("p",null,"Notice that you don’t need to return anything. The parameter of extendWebpack(cfg) is the Webpack configuration Object generated by Quasar for you. You can add/remove/replace anything from it, assuming you really know what you are doing."),n("p",null,"Equivalent quasar.conf for chainWebpack():"),n(p(r),{title:"/quasar.config file"},{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"chainWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("chain"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(" isServer"),n("span",{class:"token punctuation"},","),s(" isClient "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    chain`),n("span",{class:"token punctuation"},"."),s("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rule"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'eslint'"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"test"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"\\.(js|vue)$"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"enforce"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'pre'"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),s(`exclude
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"[\\\\/]node_modules[\\\\/]"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"end"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'eslint-loader'"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"loader"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'eslint-loader'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]),_:1}),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,[s("The method "),n("code",{class:"doc-token"},"chainWebpack()"),s(" supplies a "),n(y,{to:"https://github.com/neutrinojs/webpack-chain"},{default:c(()=>[s("webpack-chain")]),_:1}),s(" Object. You might want to check its documentation page.")])]),n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"WARNING"),n("p",null,[n("code",{class:"doc-token"},"chainWebpack()"),s(" gets executed "),n("strong",null,"before"),s(),n("code",{class:"doc-token"},"extendWebpack()"),s(".")]),n("p",null,"The two examples above are equivalent. Do NOT use both methods to tamper for the same thing!")]),n("h2",{id:"inspecting-webpack-config",class:"doc-heading doc-h2",onClick:k=>p(g)("inspecting-webpack-config")},"Inspecting Webpack Config",8,["onClick"]),n("p",null,"Quasar CLI offers a useful command for this:"),n(p(r),null,{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[s("$ quasar inspect "),n("span",{class:"token parameter variable"},"-h"),s(`

  Description
    Inspect Quasar generated Webpack config

  Usage
    $ quasar inspect
    $ quasar inspect `),n("span",{class:"token parameter variable"},"-c"),s(` build
    $ quasar inspect `),n("span",{class:"token parameter variable"},"-m"),s(" electron "),n("span",{class:"token parameter variable"},"-p"),s(),n("span",{class:"token string"},"'module.rules'"),s(`

  Options
    --cmd, `),n("span",{class:"token parameter variable"},"-c"),s("        Quasar "),n("span",{class:"token builtin class-name"},"command"),s(),n("span",{class:"token punctuation"},"["),s("dev"),n("span",{class:"token operator"},"|"),s("build"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"("),s("default: dev"),n("span",{class:"token punctuation"},")"),s(`
    --mode, `),n("span",{class:"token parameter variable"},"-m"),s("       App mode "),n("span",{class:"token punctuation"},"["),s("spa"),n("span",{class:"token operator"},"|"),s("ssr"),n("span",{class:"token operator"},"|"),s("pwa"),n("span",{class:"token operator"},"|"),s("cordova"),n("span",{class:"token operator"},"|"),s("electron"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"("),s("default: spa"),n("span",{class:"token punctuation"},")"),s(`
    --depth, `),n("span",{class:"token parameter variable"},"-d"),s("      Number of levels deep "),n("span",{class:"token punctuation"},"("),s("default: "),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),s(`
    --path, `),n("span",{class:"token parameter variable"},"-p"),s("       Path of config "),n("span",{class:"token keyword"},"in"),s(` dot notation
                        Examples:
                          `),n("span",{class:"token parameter variable"},"-p"),s(` module.rules
                          `),n("span",{class:"token parameter variable"},"-p"),s(` plugins
    --help, `),n("span",{class:"token parameter variable"},"-h"),s("       Displays this message")])]),n(o,{lang:"bash"})]),_:1}),n("h2",{id:"webpack-aliases",class:"doc-heading doc-h2",onClick:k=>p(g)("webpack-aliases")},"Webpack Aliases",8,["onClick"]),n("p",null,"Quasar comes with a bunch of useful Webpack aliases preconfigured. You can use them anywhere in your project and webpack will resolve the correct path."),n(b,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:c(()=>[n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Alias"),n("th",{class:"text-left"},"Resolves to")])]),n("tbody",null,[n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"src")]),n("td",null,"/src")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"app")]),n("td",null,"/")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"components")]),n("td",null,"/src/components")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"layouts")]),n("td",null,"/src/layouts")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"pages")]),n("td",null,"/src/pages")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"assets")]),n("td",null,"/src/assets")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"boot")]),n("td",null,"/src/boot")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"stores")]),n("td",null,"/src/stores (Pinia stores)")])])]),_:1}),n("p",null,[s("Also if you configure to build with the Vue compiler version (quasar.config file > build > vueCompiler: true), "),n("code",{class:"doc-token"},"vue$"),s(" resolves to "),n("code",{class:"doc-token"},"vue/dist/vue.esm.js"),s(".")]),n("h3",{id:"adding-webpack-aliases",class:"doc-heading doc-h3",onClick:k=>p(g)("adding-webpack-aliases")},"Adding Webpack aliases",8,["onClick"]),n("p",null,[s("To add your own alias you can extend the webpack config and merge it with the existing alias. Use the "),n("code",{class:"doc-token"},"path.resolve"),s(" helper to resolve the path to your intended alias.")]),n(p(r),{title:"/quasar.config file"},{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" path "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'node:path'"),n("span",{class:"token punctuation"},")"),s(`

module`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token function"},"extendWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("cfg"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(" isServer"),n("span",{class:"token punctuation"},","),s(" isClient "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        cfg`),n("span",{class:"token punctuation"},"."),s("resolve"),n("span",{class:"token punctuation"},"."),s("alias "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
          `),n("span",{class:"token operator"},"..."),s("cfg"),n("span",{class:"token punctuation"},"."),s("resolve"),n("span",{class:"token punctuation"},"."),s("alias"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// This adds the existing alias"),s(`

          `),n("span",{class:"token comment"},"// Add your own alias like this"),s(`
          `),n("span",{class:"token literal-property property"},"myalias"),n("span",{class:"token operator"},":"),s(" path"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"resolve"),n("span",{class:"token punctuation"},"("),s("__dirname"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'./src/somefolder'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]),_:1}),n("p",null,"Equivalent with chainWebpack():"),n(p(r),{title:"/quasar.config file"},{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" path "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'node:path'"),n("span",{class:"token punctuation"},")"),s(`

module`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token function"},"chainWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("chain"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(" isServer"),n("span",{class:"token punctuation"},","),s(" isClient "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        chain`),n("span",{class:"token punctuation"},"."),s("resolve"),n("span",{class:"token punctuation"},"."),s(`alias
          `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'myalias'"),n("span",{class:"token punctuation"},","),s(" path"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"resolve"),n("span",{class:"token punctuation"},"("),s("__dirname"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'./src/somefolder'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]),_:1}),n("h2",{id:"webpack-v5-compatibility-issues",class:"doc-heading doc-h2",onClick:k=>p(g)("webpack-v5-compatibility-issues")},"Webpack v5 compatibility issues",8,["onClick"]),n("p",null,[s("Quasar App CLI is using Webpack v5. If you are moving your existing project to Quasar from a Webpack v4 project, you might have some compatibility issues with 3rd party libraries. Webpack v5 removed the Node.js polyfills for the web client builds. If you are using packages for the web client that rely on Node.js API, you will get errors saying that some packages are missing. Examples: "),n("code",{class:"doc-token"},"Buffer"),s(", "),n("code",{class:"doc-token"},"crypto"),s(", "),n("code",{class:"doc-token"},"os"),s(", "),n("code",{class:"doc-token"},"path"),s(", "),n("code",{class:"doc-token"},"stream"),s(", "),n("code",{class:"doc-token"},"assert"),s(".")]),n("p",null,[s("These need to be addressed by the package owners. But if you prefer not to wait and just want to run your app/website (with a bit of risk), then you can manually install "),n("code",{class:"doc-token"},"node-polyfill-webpack-plugin"),s(" ("),n("code",{class:"doc-token"},"yarn add --dev node-polyfill-webpack-plugin"),s(") and reference it in "),n("code",{class:"doc-token"},"quasar.config file > build > chainWebpack"),s(". Example:")]),n(p(r),{title:"/quasar.config file"},{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"chainWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"chain"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" nodePolyfillWebpackPlugin "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'node-polyfill-webpack-plugin'"),n("span",{class:"token punctuation"},")"),s(`
    chain`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"plugin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'node-polyfill'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),s("nodePolyfillWebpackPlugin"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]),_:1}),n("h2",{id:"webpack-loaders",class:"doc-heading doc-h2",onClick:k=>p(g)("webpack-loaders")},"Webpack loaders",8,["onClick"]),n("p",null,"The build system uses Webpack, so it relies on using webpack loaders to handle different types of files (js, css, styl, scss, json, and so on). By default, the most used loaders are provided by default."),n("h3",{id:"installing-loaders",class:"doc-heading doc-h3",onClick:k=>p(g)("installing-loaders")},"Installing loaders",8,["onClick"]),n("p",null,[s("Let’s take an example. You want to be able to import "),n("code",{class:"doc-token"},".json"),s(" files. "),n("strong",null,"Out of the box, Quasar supplies json support so you don’t actually need to follow these steps, but for the sake of demonstrating how to add a loader, we’ll pretend Quasar doesn’t offer it.")]),n("p",null,"So, you need a loader for it. You search Google to see what webpack loader you need. In this case, it’s “json-loader”. We first install it:"),n(p(r),null,{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[s("$ "),n("span",{class:"token function"},"yarn"),s(),n("span",{class:"token function"},"add"),s(),n("span",{class:"token parameter variable"},"--dev"),s(" json-loader")])]),n(o,{lang:"bash"})]),_:1}),n("p",null,[s("After installing your new loader, we want to tell Webpack to use it. So we edit the "),n("code",{class:"doc-token"},"/quasar.config"),s(" file and change "),n("code",{class:"doc-token"},"build.extendWebpack()"),s(" to add entries to "),n("code",{class:"doc-token"},"module/rules"),s(" for this new loader:")]),n(p(r),{title:"/quasar.config file"},{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"extendWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"cfg"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    cfg`),n("span",{class:"token punctuation"},"."),s("module"),n("span",{class:"token punctuation"},"."),s("rules"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token literal-property property"},"test"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"\\.json$"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token literal-property property"},"loader"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'json-loader'"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]),_:1}),n("p",null,"Equivalent with chainWebpack():"),n(p(r),{title:"/quasar.config file"},{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"chainWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"chain"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    chain`),n("span",{class:"token punctuation"},"."),s("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rule"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'json'"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"test"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"\\.json$"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'json-loader'"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"loader"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'json-loader'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]),_:1}),n("p",null,"And you’re done."),n("h3",{id:"postcss",class:"doc-heading doc-h3",onClick:k=>p(g)("postcss")},"PostCSS",8,["onClick"]),n("p",null,[s("Styles in "),n("code",{class:"doc-token"},"*.vue"),s(" files (and all other style files) are piped through PostCSS by default, so you don’t need to use a specific loader for it.")]),n("p",null,[s("By default, PostCSS is configured to use Autoprefixer. Take a look at "),n("code",{class:"doc-token"},"/postcss.config.cjs"),s(" where you can tweak it if you need to.")]),n("h3",{id:"pug",class:"doc-heading doc-h3",onClick:k=>p(g)("pug")},"Pug",8,["onClick"]),n("p",null,"First, you need to install some dependencies:"),n(p(r),null,{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[s("$ "),n("span",{class:"token function"},"yarn"),s(),n("span",{class:"token function"},"add"),s(),n("span",{class:"token parameter variable"},"--dev"),s(" pug pug-plain-loader")])]),n(o,{lang:"bash"})]),_:1}),n("p",null,[s("Then you need to extend the webpack configuration through the "),n("code",{class:"doc-token"},"/quasar.config"),s(" file:")]),n(p(r),{title:"/quasar.config file"},{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"extendWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"cfg"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    cfg`),n("span",{class:"token punctuation"},"."),s("module"),n("span",{class:"token punctuation"},"."),s("rules"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token literal-property property"},"test"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"\\.pug$"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token literal-property property"},"loader"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'pug-plain-loader'"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]),_:1}),n("p",null,"Equivalent with chainWebpack():"),n(p(r),{title:"/quasar.config file"},{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"chainWebpack"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"chain"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    chain`),n("span",{class:"token punctuation"},"."),s("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rule"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'pug'"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"test"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"\\.pug$"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'pug-plain-loader'"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"loader"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'pug-plain-loader'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(o)]),_:1}),n("h3",{id:"coffeescript",class:"doc-heading doc-h3",onClick:k=>p(g)("coffeescript")},"Coffeescript",8,["onClick"]),n("p",null,"If you are using Coffeescript then you need to EITHER disable ESLint OR tell ESLint which Vue components are using Coffeescript."),n("p",null,[s("Note that "),n("code",{class:"doc-token"},"vue-loader"),s(" uses "),n("code",{class:"doc-token"},'lang="coffee"'),s(" to identify components which are using Coffeescript, but "),n("code",{class:"doc-token"},'lang="coffee"'),s(" is not recognizable for ESLint. Fortunately, ESLint (following traditional HTML) uses "),n("code",{class:"doc-token"},'type="xxx"'),s(" to identify the type of scripts. As long as a "),n("code",{class:"doc-token"},"<script>"),s(" tag has any "),n("code",{class:"doc-token"},"type"),s(" other than "),n("code",{class:"doc-token"},"javascript"),s(", ESLint would mark the script as non-javascript, and skips linting it. Coffeescript’s convention is to use "),n("code",{class:"doc-token"},'type="text/coffeescript"'),s(" to identify itself. Therefore, in your Vue components which are using Coffeescript, using both "),n("code",{class:"doc-token"},"lang"),s(" and "),n("code",{class:"doc-token"},"type"),s(" to avoid ESLint warnings:")]),n(p(r),null,{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("template")]),n("span",{class:"token punctuation"},">")]),s(`
  ...
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("template")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("script")]),s(),n("span",{class:"token attr-name"},"lang"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("coffee"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"type"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("text/coffeescript"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"},[n("span",{class:"token language-javascript"},[s(`
  `),n("span",{class:"token operator"},"..."),s(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("script")]),n("span",{class:"token punctuation"},">")])])]),n(o)]),_:1})]}),_:1},w))}}},x=m.setup;m.setup=(h,f)=>{const $=j();return($.modules||($.modules=new Set)).add("src/pages/quasar-cli-webpack/handling-webpack.md"),x?x(h,f):void 0};const z=E(m,[["__file","handling-webpack.md"]]);export{z as default};
