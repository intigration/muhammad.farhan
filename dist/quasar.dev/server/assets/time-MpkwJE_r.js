import{provide as C,mergeProps as T,withCtx as c,createTextVNode as o,createVNode as t,unref as u,useSSRContext as D}from"vue";import{ssrRenderComponent as a}from"vue/server-renderer";import{c as m}from"./page-utils-C-QWsEHe.js";import{D as q,a as r}from"./DocPage-DKr-0pQn.js";import{D as n}from"./DocExample-BcaABDtE.js";import{D as v}from"./DocApi-Df9ryd6x.js";import{_ as N}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const g={__name:"time",__ssrInlineRender:!0,setup(w){C("_q_ex",{name:"QTime"});const p=[{name:"Date Picker",category:"Form Components",path:"/vue-components/date"},{name:"Date Utils",category:"Genis Utils",path:"/quasar-utils/date-utils"},{name:"Field (wrapper)",category:"Form Components",path:"/vue-components/field"}],k=[{id:"qtime-api",title:"2. QTime API",deep:!0},{id:"usage",title:"3. Usage"},{id:"basic",title:"3.1. Basic",sub:!0},{id:"functionality",title:"3.2. Functionality",sub:!0},{id:"model-mask",title:"3.3. Model mask",sub:!0},{id:"custom-ad-hoc-locale",title:"3.4. Custom ad-hoc locale",sub:!0},{id:"coloring",title:"3.5. Coloring",sub:!0},{id:"limiting-options",title:"3.6. Limiting options",sub:!0},{id:"with-qinput",title:"3.7. With QInput",sub:!0},{id:"with-additional-buttons",title:"3.8. With additional buttons",sub:!0},{id:"native-form-submit",title:"3.9. Native form submit",sub:!0}];return(P,b,y,Q)=>{b(a(q,T({title:"QTime",desc:"The QTime component provides a method to input time.",heading:"","edit-link":"vue-components/time",toc:k,related:p},Q),{default:c((x,i,l,e)=>{if(i)i(`<p${e}>The QTime component provides a method to input time.</p><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>For handling date and/or time, also check out `),i(a(r,{to:"/quasar-utils/date-utils"},{default:c((d,s,h,f)=>{if(s)s("Quasar Date Utils");else return[o("Quasar Date Utils")]}),_:1},l,e)),i(".</p></div>"),i(a(v,{file:"QTime"},null,l,e)),i(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><p${e}>Notice that the model is a String only.</p><h3 id="basic" class="doc-heading doc-h3"${e}>Basic</h3>`),i(a(n,{title:"Basic",file:"Basic",overflow:""},null,l,e)),i(a(n,{title:"Landscape",file:"Landscape",overflow:""},null,l,e)),i(`<div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>For landscape mode, you can use it along with <code class="doc-token"${e}>$q.screen</code> to make QTime responsive. Example: <code class="doc-token"${e}>:landscape=&quot;$q.screen.gt.xs&quot;</code>. More info: `),i(a(r,{to:"/options/screen-plugin"},{default:c((d,s,h,f)=>{if(s)s("Quasar Screen Plugin");else return[o("Quasar Screen Plugin")]}),_:1},l,e)),i(`.</p></div><h3 id="functionality" class="doc-heading doc-h3"${e}>Functionality</h3><p${e}>The 24 hour format is applied depending on the `),i(a(r,{to:"/options/quasar-language-packs"},{default:c((d,s,h,f)=>{if(s)s("Quasar Language Pack");else return[o("Quasar Language Pack")]}),_:1},l,e)),i(" that you’ve set, but you can also force it, like in the example below.</p>"),i(a(n,{title:"24h format",file:"Format24h",overflow:""},null,l,e)),i(`<p${e}>Clicking on the “Now” button sets time to current user time:</p>`),i(a(n,{title:"Now button",file:"NowBtn",overflow:""},null,l,e)),i(a(n,{title:"Disable and readonly",file:"DisableReadonly",overflow:""},null,l,e)),i(`<h3 id="model-mask" class="doc-heading doc-h3"${e}>Model mask</h3><p${e}>The default model mask is <code class="doc-token"${e}>HH:mm</code> (or <code class="doc-token"${e}>HH:mm:ss</code> when using <code class="doc-token"${e}>with-seconds</code> prop), however you can use custom masks too.</p><p${e}>The <code class="doc-token"${e}>mask</code> prop tokens can be found at `),i(a(r,{to:"/quasar-utils/date-utils#format-for-display"},{default:c((d,s,h,f)=>{if(s)s("Quasar Utils &gt; Date utils");else return[o("Quasar Utils > Date utils")]}),_:1},l,e)),i(`.</p><div class="doc-note doc-note--warning"${e}><p class="doc-note__title"${e}>Note on SSR</p><p${e}>Using <code class="doc-token"${e}>x</code> or <code class="doc-token"${e}>X</code> (timestamps) in the mask may cause hydration errors on the client, because decoding the model String must be done with <code class="doc-token"${e}>new Date()</code> which takes into account the local timezone. As a result, if the server is in a different timezone than the client, then the rendered output of the server will differ than the one on the client so hydration will fail.</p></div><div class="doc-note doc-note--danger"${e}><p class="doc-note__title"${e}>Note on persian calendar</p><p${e}>When using the persian calendar, the mask for QTime is forced to <code class="doc-token"${e}>HH:mm</code> or <code class="doc-token"${e}>HH:mm:ss</code> (if <code class="doc-token"${e}>with-seconds</code> is specified).</p></div>`),i(a(n,{title:"Simple mask",file:"MaskSimple",overflow:""},null,l,e)),i(`<p${e}>If you want to insert strings (including <code class="doc-token"${e}>[</code> and <code class="doc-token"${e}>]</code> characters) into your mask, make sure you escape them by surrounding them with <code class="doc-token"${e}>[</code> and <code class="doc-token"${e}>]</code>, otherwise the characters might be interpreted as format tokens.</p>`),i(a(n,{title:"Mask with escaped characters",file:"MaskEscape",overflow:""},null,l,e)),i(`<p${e}>Using the mask to connect a `),i(a(r,{to:"/vue-components/date"},{default:c((d,s,h,f)=>{if(s)s("QDate");else return[o("QDate")]}),_:1},l,e)),i(" and QTime to the same model:</p>"),i(a(n,{title:"QDate and QTime on same model",file:"MaskDateTime",overflow:""},null,l,e)),i(`<h3 id="custom-ad-hoc-locale" class="doc-heading doc-h3"${e}>Custom ad-hoc locale</h3><p${e}>If, for some reason, you need to use a custom ad-hoc locale rather than the current Quasar Language Pack that has been set, you can use the <code class="doc-token"${e}>locale</code> prop:</p>`),i(a(n,{title:"Custom ad-hoc locale",file:"CustomLocale",overflow:""},null,l,e)),i(`<h3 id="coloring" class="doc-heading doc-h3"${e}>Coloring</h3>`),i(a(n,{title:"Coloring",file:"Color",overflow:""},null,l,e)),i(a(n,{title:"Force dark mode",file:"Dark",overflow:""},null,l,e)),i(`<h3 id="limiting-options" class="doc-heading doc-h3"${e}>Limiting options</h3><ul${e}><li${e}>You can use the <code class="doc-token"${e}>hour-options</code>, <code class="doc-token"${e}>minute-options</code> and <code class="doc-token"${e}>second-options</code> props to limit user selection to certain times.</li><li${e}>Alternatively, for a more in-depth way of limiting options, you can also supply a function (second example below) to <code class="doc-token"${e}>options-fn</code> prop.</li></ul>`),i(a(n,{title:"Options",file:"Options",overflow:""},null,l,e)),i(`<h3 id="with-qinput" class="doc-heading doc-h3"${e}>With QInput</h3>`),i(a(n,{title:"Input",file:"Input",overflow:""},null,l,e)),i(`<p${e}>Connecting a QDate and QTime with same model on a QInput:</p>`),i(a(n,{title:"QDate and QTime with QInput",file:"InputFull",overflow:""},null,l,e)),i(`<p${e}>The following are <strong${e}>helpers</strong> for QInput <code class="doc-token"${e}>mask</code> and <code class="doc-token"${e}>rules</code> props. You can use these for convenience or write the string specifying your `),i(a(r,{to:"/vue-components/input#mask"},{default:c((d,s,h,f)=>{if(s)s("custom needs");else return[o("custom needs")]}),_:1},l,e)),i(`.</p><ul${e}><li${e}>Property <code class="doc-token"${e}>mask</code> helpers: `),i(a(r,{to:"https://github.com/quasarframework/quasar/blob/dev/ui/src/components/input/use-mask.js#L6"},{default:c((d,s,h,f)=>{if(s)s("full list");else return[o("full list")]}),_:1},l,e)),i(`.</li><li${e}>Property <code class="doc-token"${e}>rules</code> helpers: `),i(a(r,{to:"https://github.com/quasarframework/quasar/blob/dev/ui/src/utils/patterns.js"},{default:c((d,s,h,f)=>{if(s)s("full list");else return[o("full list")]}),_:1},l,e)),i(`.</li></ul><p${e}>Examples: “date”, “time”, “fulltime”.</p><p${e}>More info: `),i(a(r,{to:"/vue-components/input"},{default:c((d,s,h,f)=>{if(s)s("QInput");else return[o("QInput")]}),_:1},l,e)),i(`.</p><h3 id="with-additional-buttons" class="doc-heading doc-h3"${e}>With additional buttons</h3><p${e}>You can use the default slot for adding buttons:</p>`),i(a(n,{title:"With additional buttons",file:"AdditionalButtons",overflow:""},null,l,e)),i(`<h3 id="native-form-submit" class="doc-heading doc-h3"${e}>Native form submit</h3><p${e}>When dealing with a native form which has an <code class="doc-token"${e}>action</code> and a <code class="doc-token"${e}>method</code> (eg. when using Quasar with ASP.NET controllers), you need to specify the <code class="doc-token"${e}>name</code> property on QTime, otherwise formData will not contain it (if it should):</p>`),i(a(n,{title:"Native form",file:"NativeForm"},null,l,e));else return[t("p",null,"The QTime component provides a method to input time."),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,[o("For handling date and/or time, also check out "),t(r,{to:"/quasar-utils/date-utils"},{default:c(()=>[o("Quasar Date Utils")]),_:1}),o(".")])]),t(v,{file:"QTime"}),t("h2",{id:"usage",class:"doc-heading doc-h2",onClick:d=>u(m)("usage")},"Usage",8,["onClick"]),t("p",null,"Notice that the model is a String only."),t("h3",{id:"basic",class:"doc-heading doc-h3",onClick:d=>u(m)("basic")},"Basic",8,["onClick"]),t(n,{title:"Basic",file:"Basic",overflow:""}),t(n,{title:"Landscape",file:"Landscape",overflow:""}),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,[o("For landscape mode, you can use it along with "),t("code",{class:"doc-token"},"$q.screen"),o(" to make QTime responsive. Example: "),t("code",{class:"doc-token"},':landscape="$q.screen.gt.xs"'),o(". More info: "),t(r,{to:"/options/screen-plugin"},{default:c(()=>[o("Quasar Screen Plugin")]),_:1}),o(".")])]),t("h3",{id:"functionality",class:"doc-heading doc-h3",onClick:d=>u(m)("functionality")},"Functionality",8,["onClick"]),t("p",null,[o("The 24 hour format is applied depending on the "),t(r,{to:"/options/quasar-language-packs"},{default:c(()=>[o("Quasar Language Pack")]),_:1}),o(" that you’ve set, but you can also force it, like in the example below.")]),t(n,{title:"24h format",file:"Format24h",overflow:""}),t("p",null,"Clicking on the “Now” button sets time to current user time:"),t(n,{title:"Now button",file:"NowBtn",overflow:""}),t(n,{title:"Disable and readonly",file:"DisableReadonly",overflow:""}),t("h3",{id:"model-mask",class:"doc-heading doc-h3",onClick:d=>u(m)("model-mask")},"Model mask",8,["onClick"]),t("p",null,[o("The default model mask is "),t("code",{class:"doc-token"},"HH:mm"),o(" (or "),t("code",{class:"doc-token"},"HH:mm:ss"),o(" when using "),t("code",{class:"doc-token"},"with-seconds"),o(" prop), however you can use custom masks too.")]),t("p",null,[o("The "),t("code",{class:"doc-token"},"mask"),o(" prop tokens can be found at "),t(r,{to:"/quasar-utils/date-utils#format-for-display"},{default:c(()=>[o("Quasar Utils > Date utils")]),_:1}),o(".")]),t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"Note on SSR"),t("p",null,[o("Using "),t("code",{class:"doc-token"},"x"),o(" or "),t("code",{class:"doc-token"},"X"),o(" (timestamps) in the mask may cause hydration errors on the client, because decoding the model String must be done with "),t("code",{class:"doc-token"},"new Date()"),o(" which takes into account the local timezone. As a result, if the server is in a different timezone than the client, then the rendered output of the server will differ than the one on the client so hydration will fail.")])]),t("div",{class:"doc-note doc-note--danger"},[t("p",{class:"doc-note__title"},"Note on persian calendar"),t("p",null,[o("When using the persian calendar, the mask for QTime is forced to "),t("code",{class:"doc-token"},"HH:mm"),o(" or "),t("code",{class:"doc-token"},"HH:mm:ss"),o(" (if "),t("code",{class:"doc-token"},"with-seconds"),o(" is specified).")])]),t(n,{title:"Simple mask",file:"MaskSimple",overflow:""}),t("p",null,[o("If you want to insert strings (including "),t("code",{class:"doc-token"},"["),o(" and "),t("code",{class:"doc-token"},"]"),o(" characters) into your mask, make sure you escape them by surrounding them with "),t("code",{class:"doc-token"},"["),o(" and "),t("code",{class:"doc-token"},"]"),o(", otherwise the characters might be interpreted as format tokens.")]),t(n,{title:"Mask with escaped characters",file:"MaskEscape",overflow:""}),t("p",null,[o("Using the mask to connect a "),t(r,{to:"/vue-components/date"},{default:c(()=>[o("QDate")]),_:1}),o(" and QTime to the same model:")]),t(n,{title:"QDate and QTime on same model",file:"MaskDateTime",overflow:""}),t("h3",{id:"custom-ad-hoc-locale",class:"doc-heading doc-h3",onClick:d=>u(m)("custom-ad-hoc-locale")},"Custom ad-hoc locale",8,["onClick"]),t("p",null,[o("If, for some reason, you need to use a custom ad-hoc locale rather than the current Quasar Language Pack that has been set, you can use the "),t("code",{class:"doc-token"},"locale"),o(" prop:")]),t(n,{title:"Custom ad-hoc locale",file:"CustomLocale",overflow:""}),t("h3",{id:"coloring",class:"doc-heading doc-h3",onClick:d=>u(m)("coloring")},"Coloring",8,["onClick"]),t(n,{title:"Coloring",file:"Color",overflow:""}),t(n,{title:"Force dark mode",file:"Dark",overflow:""}),t("h3",{id:"limiting-options",class:"doc-heading doc-h3",onClick:d=>u(m)("limiting-options")},"Limiting options",8,["onClick"]),t("ul",null,[t("li",null,[o("You can use the "),t("code",{class:"doc-token"},"hour-options"),o(", "),t("code",{class:"doc-token"},"minute-options"),o(" and "),t("code",{class:"doc-token"},"second-options"),o(" props to limit user selection to certain times.")]),t("li",null,[o("Alternatively, for a more in-depth way of limiting options, you can also supply a function (second example below) to "),t("code",{class:"doc-token"},"options-fn"),o(" prop.")])]),t(n,{title:"Options",file:"Options",overflow:""}),t("h3",{id:"with-qinput",class:"doc-heading doc-h3",onClick:d=>u(m)("with-qinput")},"With QInput",8,["onClick"]),t(n,{title:"Input",file:"Input",overflow:""}),t("p",null,"Connecting a QDate and QTime with same model on a QInput:"),t(n,{title:"QDate and QTime with QInput",file:"InputFull",overflow:""}),t("p",null,[o("The following are "),t("strong",null,"helpers"),o(" for QInput "),t("code",{class:"doc-token"},"mask"),o(" and "),t("code",{class:"doc-token"},"rules"),o(" props. You can use these for convenience or write the string specifying your "),t(r,{to:"/vue-components/input#mask"},{default:c(()=>[o("custom needs")]),_:1}),o(".")]),t("ul",null,[t("li",null,[o("Property "),t("code",{class:"doc-token"},"mask"),o(" helpers: "),t(r,{to:"https://github.com/quasarframework/quasar/blob/dev/ui/src/components/input/use-mask.js#L6"},{default:c(()=>[o("full list")]),_:1}),o(".")]),t("li",null,[o("Property "),t("code",{class:"doc-token"},"rules"),o(" helpers: "),t(r,{to:"https://github.com/quasarframework/quasar/blob/dev/ui/src/utils/patterns.js"},{default:c(()=>[o("full list")]),_:1}),o(".")])]),t("p",null,"Examples: “date”, “time”, “fulltime”."),t("p",null,[o("More info: "),t(r,{to:"/vue-components/input"},{default:c(()=>[o("QInput")]),_:1}),o(".")]),t("h3",{id:"with-additional-buttons",class:"doc-heading doc-h3",onClick:d=>u(m)("with-additional-buttons")},"With additional buttons",8,["onClick"]),t("p",null,"You can use the default slot for adding buttons:"),t(n,{title:"With additional buttons",file:"AdditionalButtons",overflow:""}),t("h3",{id:"native-form-submit",class:"doc-heading doc-h3",onClick:d=>u(m)("native-form-submit")},"Native form submit",8,["onClick"]),t("p",null,[o("When dealing with a native form which has an "),t("code",{class:"doc-token"},"action"),o(" and a "),t("code",{class:"doc-token"},"method"),o(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),t("code",{class:"doc-token"},"name"),o(" property on QTime, otherwise formData will not contain it (if it should):")]),t(n,{title:"Native form",file:"NativeForm"})]}),_:1},y))}}},$=g.setup;g.setup=(w,p)=>{const k=D();return(k.modules||(k.modules=new Set)).add("src/pages/vue-components/time.md"),$?$(w,p):void 0};const Z=N(g,[["__file","time.md"]]);export{Z as default};
