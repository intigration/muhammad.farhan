import{provide as h,mergeProps as f,withCtx as S,createVNode as t,unref as v,useSSRContext as y}from"vue";import{ssrRenderComponent as r}from"vue/server-renderer";import{c as C}from"./page-utils-C-QWsEHe.js";import{D as Q}from"./DocPage-DKr-0pQn.js";import{D as i}from"./DocExample-BcaABDtE.js";import{D as a}from"./DocApi-Df9ryd6x.js";import{_ as b}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const p={__name:"spinners",__ssrInlineRender:!0,setup(m){h("_q_ex",{name:"QSpinner"});const l=[{name:"Linear Progress",category:"Vue Components",path:"/vue-components/linear-progress"},{name:"Circular Progress",category:"Vue Components",path:"/vue-components/circular-progress"},{name:"Skeleton",category:"Vue Components",path:"/vue-components/skeleton"},{name:"Inner Loading",category:"Vue Components",path:"/vue-components/inner-loading"},{name:"Loading",category:"Quasar Plugins",path:"/quasar-plugins/loading"},{name:"Loading Bar",category:"Quasar Plugins",path:"/quasar-plugins/loading-bar"}],s=[{id:"qspinner-api",title:"2. QSpinner API",deep:!0},{id:"qspinnercube-api",title:"3. QSpinnerCube API",deep:!0},{id:"usage",title:"4. Usage"}];return(w,c,g,d)=>{c(r(Q,f({title:"Spinners",desc:"The QSpinner and its derived Vue components are used to show the user a timely process is currently taking place. It gives the user the feeling the system is continuing to work for longer term activities.",heading:"","edit-link":"vue-components/spinners",toc:s,related:l},d),{default:S((P,n,o,e)=>{if(n)n(`<p${e}>A Spinner is used to show the user a timely process is currently taking place. It is an important UX feature, which gives the user the feeling the system is continuing to work for longer term activities, like grabbing data from the server or some heavy calculations.</p>`),n(r(a,{file:"QSpinner"},null,o,e)),n(`<div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>The API below applies to all spinners, except for QSpinner. Making an example with QSpinnerCube.</p></div>`),n(r(a,{file:"QSpinnerCube",title:"Other Spinners API"},null,o,e)),n(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2>`),n(r(i,{title:"QSpinner",file:"Default"},null,o,e)),n(`<p${e}>In the example below, hover over the spinners to see their names.</p>`),n(r(i,{title:"Other spinners",file:"Others"},null,o,e)),n(r(i,{title:"Coloring",file:"Color"},null,o,e)),n(`<p${e}>Please note that by default, QSpinner and all other spinners inherit the font-size of the parent and applies it as its size.</p>`),n(r(i,{title:"Size",file:"Size"},null,o,e)),n(r(i,{title:"Standard sizes",file:"StandardSizes"},null,o,e));else return[t("p",null,"A Spinner is used to show the user a timely process is currently taking place. It is an important UX feature, which gives the user the feeling the system is continuing to work for longer term activities, like grabbing data from the server or some heavy calculations."),t(a,{file:"QSpinner"}),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,"The API below applies to all spinners, except for QSpinner. Making an example with QSpinnerCube.")]),t(a,{file:"QSpinnerCube",title:"Other Spinners API"}),t("h2",{id:"usage",class:"doc-heading doc-h2",onClick:k=>v(C)("usage")},"Usage",8,["onClick"]),t(i,{title:"QSpinner",file:"Default"}),t("p",null,"In the example below, hover over the spinners to see their names."),t(i,{title:"Other spinners",file:"Others"}),t(i,{title:"Coloring",file:"Color"}),t("p",null,"Please note that by default, QSpinner and all other spinners inherit the font-size of the parent and applies it as its size."),t(i,{title:"Size",file:"Size"}),t(i,{title:"Standard sizes",file:"StandardSizes"})]}),_:1},g))}}},u=p.setup;p.setup=(m,l)=>{const s=y();return(s.modules||(s.modules=new Set)).add("src/pages/vue-components/spinners.md"),u?u(m,l):void 0};const F=b(p,[["__file","spinners.md"]]);export{F as default};
