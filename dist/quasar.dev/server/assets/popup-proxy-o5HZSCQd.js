import{provide as w,mergeProps as C,withCtx as i,createTextVNode as o,createVNode as t,unref as m,useSSRContext as $}from"vue";import{ssrRenderComponent as s}from"vue/server-renderer";import{c as h}from"./page-utils-C-QWsEHe.js";import{D,a as r}from"./DocPage-DKr-0pQn.js";import{D as d}from"./DocExample-BcaABDtE.js";import{D as Q}from"./DocApi-Df9ryd6x.js";import{_ as M}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const x={__name:"popup-proxy",__ssrInlineRender:!0,setup(v){w("_q_ex",{name:"QPopupProxy"});const g=[{name:"Menu",category:"Vue Components",path:"/vue-components/menu"},{name:"Dialog",category:"Vue Components",path:"/vue-components/dialog"},{name:"Close Popup",category:"Vue Directives",path:"/vue-directives/close-popup"}],f=[{id:"qpopupproxy-api",title:"2. QPopupProxy API",deep:!0},{id:"usage",title:"3. Usage"},{id:"standard",title:"3.1. Standard",sub:!0},{id:"context-menu",title:"3.2. Context menu",sub:!0},{id:"breakpoint",title:"3.3. Breakpoint",sub:!0},{id:"pass-through-props",title:"3.4. Pass-through props",sub:!0}];return(S,k,y,b)=>{k(s(D,C({title:"Popup Proxy",desc:"The QPopupProxy is a Vue component that should be used when you need either a QMenu or a QDialog (on smaller screens) to be displayed.",heading:"","edit-link":"vue-components/popup-proxy",toc:f,related:g},b),{default:i((T,n,l,e)=>{if(n)n(`<p${e}>QPopupProxy should be used when you need either a `),n(s(r,{to:"/vue-components/menu"},{default:i((c,a,p,u)=>{if(a)a("QMenu");else return[o("QMenu")]}),_:1},l,e)),n(" (on bigger screens) or a "),n(s(r,{to:"/vue-components/dialog"},{default:i((c,a,p,u)=>{if(a)a("QDialog");else return[o("QDialog")]}),_:1},l,e)),n(" (on smaller screens) to be displayed. It acts as a proxy which picks either of the two components to use. QPopupProxy also handles context-menus.</p>"),n(s(Q,{file:"QPopupProxy"},null,l,e)),n(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>Use your browsers development tools to toggle the device between mobile or desktop (with browser refresh after each change) or, physically resize your browser’s window to watch the QPopupProxy component switch between either a QMenu or a QDialog before clicking/tapping on its container. The default breakpoint is set at 450px.</p></div><h3 id="standard" class="doc-heading doc-h3"${e}>Standard</h3>`),n(s(d,{title:"Standard",file:"Standard"},null,l,e)),n(`<h3 id="context-menu" class="doc-heading doc-h3"${e}>Context menu</h3>`),n(s(d,{title:"Context menu (right click / long tap)",file:"ContextMenu"},null,l,e)),n(`<h3 id="breakpoint" class="doc-heading doc-h3"${e}>Breakpoint</h3><p${e}>On the example below, click on the icon in the input.</p>`),n(s(d,{title:"Breakpoint @600px",file:"Breakpoint"},null,l,e)),n(`<h3 id="pass-through-props" class="doc-heading doc-h3"${e}>Pass-through props</h3><p${e}>Keep in mind that all props from both `),n(s(r,{to:"/vue-components/menu"},{default:i((c,a,p,u)=>{if(a)a("QMenu");else return[o("QMenu")]}),_:1},l,e)),n(" and "),n(s(r,{to:"/vue-components/dialog"},{default:i((c,a,p,u)=>{if(a)a("QDialog");else return[o("QDialog")]}),_:1},l,e)),n(` are passed through via this component. So props like <code class="doc-token"${e}>offset</code> or <code class="doc-token"${e}>transition-show</code> (as a mere example) can be used in conjunction with QPopupProxy.</p>`),n(s(d,{title:"Props from QMenu or QDialog",file:"Passthrough"},null,l,e)),n(`<div class="doc-note doc-note--warning"${e}><p class="doc-note__title"${e}>WARNING</p><p${e}>QPopupProxy treats some components (`),n(s(r,{to:"/vue-components/date"},{default:i((c,a,p,u)=>{if(a)a("QDate");else return[o("QDate")]}),_:1},l,e)),n(", "),n(s(r,{to:"/vue-components/time"},{default:i((c,a,p,u)=>{if(a)a("QTime");else return[o("QTime")]}),_:1},l,e)),n(", "),n(s(r,{to:"/vue-components/carousel"},{default:i((c,a,p,u)=>{if(a)a("QCarousel");else return[o("QCarousel")]}),_:1},l,e)),n(" and "),n(s(r,{to:"/vue-components/color-picker"},{default:i((c,a,p,u)=>{if(a)a("QColor");else return[o("QColor")]}),_:1},l,e)),n(`) as special ones and forces <code class="doc-token"${e}>cover: true</code> and <code class="doc-token"${e}>maxHeight: &#39;99vh&#39;</code> on them. If you don’t want this behavior just place a <code class="doc-token"${e}>div</code> as the first level child of QPopupProxy.</p></div>`);else return[t("p",null,[o("QPopupProxy should be used when you need either a "),t(r,{to:"/vue-components/menu"},{default:i(()=>[o("QMenu")]),_:1}),o(" (on bigger screens) or a "),t(r,{to:"/vue-components/dialog"},{default:i(()=>[o("QDialog")]),_:1}),o(" (on smaller screens) to be displayed. It acts as a proxy which picks either of the two components to use. QPopupProxy also handles context-menus.")]),t(Q,{file:"QPopupProxy"}),t("h2",{id:"usage",class:"doc-heading doc-h2",onClick:c=>m(h)("usage")},"Usage",8,["onClick"]),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,"Use your browsers development tools to toggle the device between mobile or desktop (with browser refresh after each change) or, physically resize your browser’s window to watch the QPopupProxy component switch between either a QMenu or a QDialog before clicking/tapping on its container. The default breakpoint is set at 450px.")]),t("h3",{id:"standard",class:"doc-heading doc-h3",onClick:c=>m(h)("standard")},"Standard",8,["onClick"]),t(d,{title:"Standard",file:"Standard"}),t("h3",{id:"context-menu",class:"doc-heading doc-h3",onClick:c=>m(h)("context-menu")},"Context menu",8,["onClick"]),t(d,{title:"Context menu (right click / long tap)",file:"ContextMenu"}),t("h3",{id:"breakpoint",class:"doc-heading doc-h3",onClick:c=>m(h)("breakpoint")},"Breakpoint",8,["onClick"]),t("p",null,"On the example below, click on the icon in the input."),t(d,{title:"Breakpoint @600px",file:"Breakpoint"}),t("h3",{id:"pass-through-props",class:"doc-heading doc-h3",onClick:c=>m(h)("pass-through-props")},"Pass-through props",8,["onClick"]),t("p",null,[o("Keep in mind that all props from both "),t(r,{to:"/vue-components/menu"},{default:i(()=>[o("QMenu")]),_:1}),o(" and "),t(r,{to:"/vue-components/dialog"},{default:i(()=>[o("QDialog")]),_:1}),o(" are passed through via this component. So props like "),t("code",{class:"doc-token"},"offset"),o(" or "),t("code",{class:"doc-token"},"transition-show"),o(" (as a mere example) can be used in conjunction with QPopupProxy.")]),t(d,{title:"Props from QMenu or QDialog",file:"Passthrough"}),t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"WARNING"),t("p",null,[o("QPopupProxy treats some components ("),t(r,{to:"/vue-components/date"},{default:i(()=>[o("QDate")]),_:1}),o(", "),t(r,{to:"/vue-components/time"},{default:i(()=>[o("QTime")]),_:1}),o(", "),t(r,{to:"/vue-components/carousel"},{default:i(()=>[o("QCarousel")]),_:1}),o(" and "),t(r,{to:"/vue-components/color-picker"},{default:i(()=>[o("QColor")]),_:1}),o(") as special ones and forces "),t("code",{class:"doc-token"},"cover: true"),o(" and "),t("code",{class:"doc-token"},"maxHeight: '99vh'"),o(" on them. If you don’t want this behavior just place a "),t("code",{class:"doc-token"},"div"),o(" as the first level child of QPopupProxy.")])])]}),_:1},y))}}},P=x.setup;x.setup=(v,g)=>{const f=$();return(f.modules||(f.modules=new Set)).add("src/pages/vue-components/popup-proxy.md"),P?P(v,g):void 0};const Z=M(x,[["__file","popup-proxy.md"]]);export{Z as default};
