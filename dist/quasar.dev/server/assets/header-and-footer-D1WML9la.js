import{provide as L,resolveComponent as x,mergeProps as $,withCtx as y,createTextVNode as n,createVNode as o,unref as d,useSSRContext as C}from"vue";import{ssrRenderComponent as l}from"vue/server-renderer";import{c as s}from"./page-utils-C-QWsEHe.js";import{D as B,a as g}from"./DocPage-DKr-0pQn.js";import{D as a}from"./DocExample-BcaABDtE.js";import{D as c}from"./DocApi-Df9ryd6x.js";import{_ as S}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const f={__name:"header-and-footer",__ssrInlineRender:!0,setup(h){L("_q_ex",{name:"QHeader"});const p=[{name:"Layout",category:"Layout and Grid",path:"/layout/layout"},{name:"Layout Page",category:"Layout and Grid",path:"/layout/page"},{name:"Toolbar",category:"Vue Components",path:"/vue-components/toolbar"},{name:"Breadcrumbs",category:"Vue Components",path:"/vue-components/breadcrumbs"},{name:"Tabs",category:"Vue Components",path:"/vue-components/tabs"},{name:"Bar",category:"Vue Components",path:"/vue-components/bar"}],u=[{id:"qheader-api",title:"2. QHeader API",deep:!0},{id:"qfooter-api",title:"3. QFooter API",deep:!0},{id:"layout-builder",title:"4. Layout Builder"},{id:"usage",title:"5. Usage"},{id:"various-content",title:"5.1. Various content",sub:!0},{id:"reveal-property",title:"5.2. Reveal property",sub:!0},{id:"ios-look-and-feel",title:"5.3. iOS look and feel",sub:!0},{id:"desktop-app-look-and-feel",title:"5.4. Desktop app look and feel",sub:!0}];return(T,v,Q,w)=>{const m=x("q-btn");v(l(B,$({title:"Layout Header and Footer",desc:"How to use the QHeader and QFooter components. The top and bottom bars of your Quasar app.",heading:"","edit-link":"layout/header-and-footer",toc:u,related:p},w),{default:y((H,t,i,e)=>{if(t)t(`<p${e}>QLayout allows you to configure your views as a 3x3 matrix, containing an optional Header and/or Footer (mostly used for navbar, but can be anything). If you haven’t already, please read `),t(l(g,{to:"/layout/layout"},{default:y((r,b,P,D)=>{if(b)b("QLayout");else return[n("QLayout")]}),_:1},i,e)),t(" documentation page first.</p>"),t(l(c,{file:"QHeader"},null,i,e)),t(l(c,{file:"QFooter"},null,i,e)),t(`<h2 id="layout-builder" class="doc-heading doc-h2"${e}>Layout Builder</h2><p${e}>Scaffold your layout(s) by clicking on the button below.</p>`),t(l(m,{"icon-right":"launch",label:"Layout Builder",href:"/layout-builder",target:"_blank"},null,i,e)),t(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>Since the header and footer needs a layout and QLayout by default manages the entire window, then for demoing purposes we are going to use containerized QLayouts. But remember that by no means you are required to use containerized QLayouts for QHeader or QFooter.</p></div>`),t(l(a,{title:"Basic",file:"Basic"},null,i,e)),t(`<p${e}>You can use <code class="doc-token"${e}>glossy</code> class on toolbars in header and footer.</p>`),t(l(a,{title:"Glossy",file:"Glossy"},null,i,e)),t(`<h3 id="various-content" class="doc-heading doc-h3"${e}>Various content</h3>`),t(l(a,{title:"Playing with QToolbar",file:"Extended"},null,i,e)),t(l(a,{title:"Playing with QBreadcrumb",file:"Breadcrumbs"},null,i,e)),t(l(a,{title:"Playing with QTabs",file:"Tabs"},null,i,e)),t(`<h3 id="reveal-property" class="doc-heading doc-h3"${e}>Reveal property</h3><p${e}>In the example below, scroll the page to see the QHeader and QFooter behavior.</p>`),t(l(a,{title:"Reveal",file:"Reveal"},null,i,e)),t(`<h3 id="ios-look-and-feel" class="doc-heading doc-h3"${e}>iOS look and feel</h3><p${e}>In the example below, you could use Ionicons icons (v4) with <code class="doc-token"${e}>ion-ios-</code> prefix for QTabs, which would perfectly match the iOS look and feel.</p>`),t(l(a,{title:"iOS-like",file:"LookingIOS"},null,i,e)),t(`<h3 id="desktop-app-look-and-feel" class="doc-heading doc-h3"${e}>Desktop app look and feel</h3><p${e}>The example below is especially useful if you build an Electron app and you hide the default app frame.</p>`),t(l(a,{title:"Desktop app-like",file:"AppLike"},null,i,e));else return[o("p",null,[n("QLayout allows you to configure your views as a 3x3 matrix, containing an optional Header and/or Footer (mostly used for navbar, but can be anything). If you haven’t already, please read "),o(g,{to:"/layout/layout"},{default:y(()=>[n("QLayout")]),_:1}),n(" documentation page first.")]),o(c,{file:"QHeader"}),o(c,{file:"QFooter"}),o("h2",{id:"layout-builder",class:"doc-heading doc-h2",onClick:r=>d(s)("layout-builder")},"Layout Builder",8,["onClick"]),o("p",null,"Scaffold your layout(s) by clicking on the button below."),o(m,{"icon-right":"launch",label:"Layout Builder",href:"/layout-builder",target:"_blank"}),o("h2",{id:"usage",class:"doc-heading doc-h2",onClick:r=>d(s)("usage")},"Usage",8,["onClick"]),o("div",{class:"doc-note doc-note--tip"},[o("p",{class:"doc-note__title"},"TIP"),o("p",null,"Since the header and footer needs a layout and QLayout by default manages the entire window, then for demoing purposes we are going to use containerized QLayouts. But remember that by no means you are required to use containerized QLayouts for QHeader or QFooter.")]),o(a,{title:"Basic",file:"Basic"}),o("p",null,[n("You can use "),o("code",{class:"doc-token"},"glossy"),n(" class on toolbars in header and footer.")]),o(a,{title:"Glossy",file:"Glossy"}),o("h3",{id:"various-content",class:"doc-heading doc-h3",onClick:r=>d(s)("various-content")},"Various content",8,["onClick"]),o(a,{title:"Playing with QToolbar",file:"Extended"}),o(a,{title:"Playing with QBreadcrumb",file:"Breadcrumbs"}),o(a,{title:"Playing with QTabs",file:"Tabs"}),o("h3",{id:"reveal-property",class:"doc-heading doc-h3",onClick:r=>d(s)("reveal-property")},"Reveal property",8,["onClick"]),o("p",null,"In the example below, scroll the page to see the QHeader and QFooter behavior."),o(a,{title:"Reveal",file:"Reveal"}),o("h3",{id:"ios-look-and-feel",class:"doc-heading doc-h3",onClick:r=>d(s)("ios-look-and-feel")},"iOS look and feel",8,["onClick"]),o("p",null,[n("In the example below, you could use Ionicons icons (v4) with "),o("code",{class:"doc-token"},"ion-ios-"),n(" prefix for QTabs, which would perfectly match the iOS look and feel.")]),o(a,{title:"iOS-like",file:"LookingIOS"}),o("h3",{id:"desktop-app-look-and-feel",class:"doc-heading doc-h3",onClick:r=>d(s)("desktop-app-look-and-feel")},"Desktop app look and feel",8,["onClick"]),o("p",null,"The example below is especially useful if you build an Electron app and you hide the default app frame."),o(a,{title:"Desktop app-like",file:"AppLike"})]}),_:1},Q))}}},k=f.setup;f.setup=(h,p)=>{const u=C();return(u.modules||(u.modules=new Set)).add("src/pages/layout/header-and-footer.md"),k?k(h,p):void 0};const _=S(f,[["__file","header-and-footer.md"]]);export{_ as default};
