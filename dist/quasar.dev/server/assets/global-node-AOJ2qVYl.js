import{mergeProps as w,withCtx as i,unref as s,createVNode as n,createTextVNode as o,useSSRContext as x}from"vue";import{ssrRenderComponent as c}from"vue/server-renderer";import{c as f}from"./page-utils-C-QWsEHe.js";import{D as q}from"./DocPage-DKr-0pQn.js";import{D as g}from"./DocPrerender-DPOnWPFO.js";import{C as u}from"./CopyButton-l3ndfN49.js";import{_ as D}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const d={__name:"global-node",__ssrInlineRender:!0,setup(k){const e=[{id:"installation",title:"2. Installation"},{id:"configuration",title:"3. Configuration"}];return(l,$,h,b)=>{$(c(q,w({title:"Global node generation",desc:"Some Quasar components and plugins to show floating elements will create global nodes appending them to the body.",heading:"","edit-link":"options/global-node",toc:e},b),{default:i((S,r,C,t)=>{if(r)r(`<p${t}>You can define custom className for this global node elements.</p><h2 id="installation" class="doc-heading doc-h2"${t}>Installation</h2><p${t}>You don’t need to do anything.</p><h2 id="configuration" class="doc-heading doc-h2"${t}>Configuration</h2><p${t}>In order to define custom class for global nodes, edit your /quasar.config file like below.</p>`),r(c(s(g),{title:"/quasar.config file"},{default:i((m,p,N,a)=>{if(p)p(`<pre class="doc-code"${a}><code${a}><span class="token literal-property property"${a}>framework</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>config</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
    <span class="token literal-property property"${a}>globalNode</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
      <span class="token literal-property property"${a}>className</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;my-class&#39;</span>
    <span class="token punctuation"${a}>}</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),p(c(u,null,null,N,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"framework"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"{"),o(`
  `),n("span",{class:"token literal-property property"},"config"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"{"),o(`
    `),n("span",{class:"token literal-property property"},"globalNode"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"{"),o(`
      `),n("span",{class:"token literal-property property"},"className"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token string"},"'my-class'"),o(`
    `),n("span",{class:"token punctuation"},"}"),o(`
  `),n("span",{class:"token punctuation"},"}"),o(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},C,t));else return[n("p",null,"You can define custom className for this global node elements."),n("h2",{id:"installation",class:"doc-heading doc-h2",onClick:m=>s(f)("installation")},"Installation",8,["onClick"]),n("p",null,"You don’t need to do anything."),n("h2",{id:"configuration",class:"doc-heading doc-h2",onClick:m=>s(f)("configuration")},"Configuration",8,["onClick"]),n("p",null,"In order to define custom class for global nodes, edit your /quasar.config file like below."),n(s(g),{title:"/quasar.config file"},{default:i(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"framework"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"{"),o(`
  `),n("span",{class:"token literal-property property"},"config"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"{"),o(`
    `),n("span",{class:"token literal-property property"},"globalNode"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"{"),o(`
      `),n("span",{class:"token literal-property property"},"className"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token string"},"'my-class'"),o(`
    `),n("span",{class:"token punctuation"},"}"),o(`
  `),n("span",{class:"token punctuation"},"}"),o(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1})]}),_:1},h))}}},y=d.setup;d.setup=(k,e)=>{const l=x();return(l.modules||(l.modules=new Set)).add("src/pages/options/global-node.md"),y?y(k,e):void 0};const F=D(d,[["__file","global-node.md"]]);export{F as default};
