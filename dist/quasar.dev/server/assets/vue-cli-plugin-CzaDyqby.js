import{mergeProps as C,withCtx as i,createTextVNode as a,unref as r,createVNode as e,useSSRContext as V}from"vue";import{ssrRenderComponent as u}from"vue/server-renderer";import{c as Q}from"./page-utils-C-QWsEHe.js";import{D as L,a as v}from"./DocPage-DKr-0pQn.js";import{D as d}from"./DocPrerender-DPOnWPFO.js";import{C as l}from"./CopyButton-l3ndfN49.js";import{_ as x}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const g={__name:"vue-cli-plugin",__ssrInlineRender:!0,setup(y){const m=[{id:"add-vue-cli-quasar-plugin",title:"2. Add Vue CLI Quasar Plugin"}];return(f,b,k,$)=>{b(u(L,C({title:"Vue CLI Quasar Plugin",desc:"How to embed Quasar into a Vue CLI app.",heading:"","edit-link":"start/vue-cli-plugin",toc:m},$),{default:i((T,s,p,n)=>{if(s)s(`<div class="doc-note doc-note--warning"${n}><p class="doc-note__title"${n}>WARNING</p><p${n}>Cross-platform support with Vue CLI is handled by a number of community plugins. This means, putting together what Quasar offers out-of-the-box will take you extra time and effort, will not guarantee you the best experience and you won’t have access to a number of features which only Quasar CLI has. Quasar was also not specifically tested with these plugins and thus you could possibly run into issues. This, however, will be valid for any component library, unless they specifically mention having tested their components with third-party plugins.</p><p${n}>So, before you begin on this path of development with Quasar, we’d like you to understand the following. To guarantee you the best developer experience with Quasar, we highly recommend using Quasar’s CLI and building your project with it, because you won’t miss any feature that Vue CLI has. You’ll get the full range of features offered by Quasar, like full cross-platform build support (but this is just the tip of the iceberg) and you can still do practically everything you’d like to do with Vue too, i.e. use Vue plugins via Quasar’s `),s(u(v,{to:"/quasar-cli/boot-files#Anatomy-of-an-boot-file"},{default:i((h,o,c,t)=>{if(o)o("Boot Files");else return[a("Boot Files")]}),_:1},p,n)),s(`.</p></div><p${n}>To work with Quasar via its Vue CLI plugin, you will need to make sure you have @vue/cli installed globally. To make sure you have the right version, use this command:</p>`),s(u(r(d),null,{default:i((h,o,c,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}>$ vue <span class="token parameter variable"${t}>--version</span></code></pre>`),o(u(l,{lang:"bash"},null,c,t));else return[e("pre",{class:"doc-code"},[e("code",null,[a("$ vue "),e("span",{class:"token parameter variable"},"--version")])]),e(l,{lang:"bash"})]}),_:1},p,n)),s(`<p${n}>Should you have Vue CLI 2.x.x. installed, you’ll need to uninstall it with:</p>`),s(u(r(d),null,{default:i((h,o,c,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}>$ <span class="token function"${t}>npm</span> uninstall <span class="token parameter variable"${t}>-g</span> vue-cli
<span class="token comment"${t}># or (depending with which you&#39;ve installed it)</span>
$ <span class="token function"${t}>yarn</span> global remove vue-cli</code></pre>`),o(u(l,{lang:"bash"},null,c,t));else return[e("pre",{class:"doc-code"},[e("code",null,[a("$ "),e("span",{class:"token function"},"npm"),a(" uninstall "),e("span",{class:"token parameter variable"},"-g"),a(` vue-cli
`),e("span",{class:"token comment"},"# or (depending with which you've installed it)"),a(`
$ `),e("span",{class:"token function"},"yarn"),a(" global remove vue-cli")])]),e(l,{lang:"bash"})]}),_:1},p,n)),s(`<p${n}>Install Vue CLI (v4.5.11+) as follows:</p>`),s(u(r(d),null,{default:i((h,o,c,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}>$ <span class="token function"${t}>npm</span> <span class="token function"${t}>install</span> <span class="token parameter variable"${t}>-g</span> @vue/cli</code></pre>`),o(u(l,{lang:"bash"},null,c,t));else return[e("pre",{class:"doc-code"},[e("code",null,[a("$ "),e("span",{class:"token function"},"npm"),a(),e("span",{class:"token function"},"install"),a(),e("span",{class:"token parameter variable"},"-g"),a(" @vue/cli")])]),e(l,{lang:"bash"})]}),_:1},p,n)),s(`<p${n}>If you don’t yet have a project created with @vue/cli, then do so with the command below. <strong${n}>Make sure that you checkmark on Babel from the Vue CLI feature list prompt that will appear on screen</strong>.</p>`),s(u(r(d),null,{default:i((h,o,c,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token comment"${t}># make sure to pick Vue 3 when asked:</span>
$ vue create my-app</code></pre>`),o(u(l,{lang:"bash"},null,c,t));else return[e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token comment"},"# make sure to pick Vue 3 when asked:"),a(`
$ vue create my-app`)])]),e(l,{lang:"bash"})]}),_:1},p,n)),s(`<h2 id="add-vue-cli-quasar-plugin" class="doc-heading doc-h2"${n}>Add Vue CLI Quasar Plugin</h2><p${n}>Navigate to the newly created project folder and add the cli plugin. Before installing it, make sure to commit your current changes should you wish to revert them later.</p><div class="doc-note doc-note--warning"${n}><p class="doc-note__title"${n}>WARNING</p><p${n}>Cross-platform support with Vue CLI is handled by community plugins. These are not tightly integrated with Quasar as with Quasar CLI and may have issues.</p></div>`),s(u(r(d),null,{default:i((h,o,c,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}>$ <span class="token builtin class-name"${t}>cd</span> my-app
$ vue <span class="token function"${t}>add</span> quasar</code></pre>`),o(u(l,{lang:"bash"},null,c,t));else return[e("pre",{class:"doc-code"},[e("code",null,[a("$ "),e("span",{class:"token builtin class-name"},"cd"),a(` my-app
$ vue `),e("span",{class:"token function"},"add"),a(" quasar")])]),e(l,{lang:"bash"})]}),_:1},p,n)),s(`<p${n}>The CLI will ask you if you want the plugin to replace some existing files. It is recommended that you do this, if you wish to have an example, so you can quickly develop your app.</p><p${n}>Your Vue config (in package.json or vue.config.js file, depending on what you chose when you created your vue app) will also contain a <code class="doc-token"${n}>quasar</code> object with some basic Quasar configuration.</p>`);else return[e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,"Cross-platform support with Vue CLI is handled by a number of community plugins. This means, putting together what Quasar offers out-of-the-box will take you extra time and effort, will not guarantee you the best experience and you won’t have access to a number of features which only Quasar CLI has. Quasar was also not specifically tested with these plugins and thus you could possibly run into issues. This, however, will be valid for any component library, unless they specifically mention having tested their components with third-party plugins."),e("p",null,[a("So, before you begin on this path of development with Quasar, we’d like you to understand the following. To guarantee you the best developer experience with Quasar, we highly recommend using Quasar’s CLI and building your project with it, because you won’t miss any feature that Vue CLI has. You’ll get the full range of features offered by Quasar, like full cross-platform build support (but this is just the tip of the iceberg) and you can still do practically everything you’d like to do with Vue too, i.e. use Vue plugins via Quasar’s "),e(v,{to:"/quasar-cli/boot-files#Anatomy-of-an-boot-file"},{default:i(()=>[a("Boot Files")]),_:1}),a(".")])]),e("p",null,"To work with Quasar via its Vue CLI plugin, you will need to make sure you have @vue/cli installed globally. To make sure you have the right version, use this command:"),e(r(d),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[a("$ vue "),e("span",{class:"token parameter variable"},"--version")])]),e(l,{lang:"bash"})]),_:1}),e("p",null,"Should you have Vue CLI 2.x.x. installed, you’ll need to uninstall it with:"),e(r(d),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[a("$ "),e("span",{class:"token function"},"npm"),a(" uninstall "),e("span",{class:"token parameter variable"},"-g"),a(` vue-cli
`),e("span",{class:"token comment"},"# or (depending with which you've installed it)"),a(`
$ `),e("span",{class:"token function"},"yarn"),a(" global remove vue-cli")])]),e(l,{lang:"bash"})]),_:1}),e("p",null,"Install Vue CLI (v4.5.11+) as follows:"),e(r(d),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[a("$ "),e("span",{class:"token function"},"npm"),a(),e("span",{class:"token function"},"install"),a(),e("span",{class:"token parameter variable"},"-g"),a(" @vue/cli")])]),e(l,{lang:"bash"})]),_:1}),e("p",null,[a("If you don’t yet have a project created with @vue/cli, then do so with the command below. "),e("strong",null,"Make sure that you checkmark on Babel from the Vue CLI feature list prompt that will appear on screen"),a(".")]),e(r(d),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token comment"},"# make sure to pick Vue 3 when asked:"),a(`
$ vue create my-app`)])]),e(l,{lang:"bash"})]),_:1}),e("h2",{id:"add-vue-cli-quasar-plugin",class:"doc-heading doc-h2",onClick:h=>r(Q)("add-vue-cli-quasar-plugin")},"Add Vue CLI Quasar Plugin",8,["onClick"]),e("p",null,"Navigate to the newly created project folder and add the cli plugin. Before installing it, make sure to commit your current changes should you wish to revert them later."),e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,"Cross-platform support with Vue CLI is handled by community plugins. These are not tightly integrated with Quasar as with Quasar CLI and may have issues.")]),e(r(d),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[a("$ "),e("span",{class:"token builtin class-name"},"cd"),a(` my-app
$ vue `),e("span",{class:"token function"},"add"),a(" quasar")])]),e(l,{lang:"bash"})]),_:1}),e("p",null,"The CLI will ask you if you want the plugin to replace some existing files. It is recommended that you do this, if you wish to have an example, so you can quickly develop your app."),e("p",null,[a("Your Vue config (in package.json or vue.config.js file, depending on what you chose when you created your vue app) will also contain a "),e("code",{class:"doc-token"},"quasar"),a(" object with some basic Quasar configuration.")])]}),_:1},k))}}},w=g.setup;g.setup=(y,m)=>{const f=V();return(f.modules||(f.modules=new Set)).add("src/pages/start/vue-cli-plugin.md"),w?w(y,m):void 0};const M=x(g,[["__file","vue-cli-plugin.md"]]);export{M as default};
