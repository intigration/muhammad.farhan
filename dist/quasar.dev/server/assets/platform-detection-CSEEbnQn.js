import{provide as x,resolveComponent as C,mergeProps as M,withCtx as l,createTextVNode as a,unref as u,createVNode as n,useSSRContext as R}from"vue";import{ssrRenderComponent as r}from"vue/server-renderer";import{c as f}from"./page-utils-C-QWsEHe.js";import{D as E,a as m}from"./DocPage-DKr-0pQn.js";import{D as y}from"./DocExample-BcaABDtE.js";import{D as v}from"./DocApi-Df9ryd6x.js";import{D as k}from"./DocPrerender-DPOnWPFO.js";import{C as i}from"./CopyButton-l3ndfN49.js";import{_ as F}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const g={__name:"platform-detection",__ssrInlineRender:!0,setup(w){x("_q_ex",{name:"Platform"});const $=[{id:"platform-api",title:"2. Platform API",deep:!0},{id:"usage",title:"3. Usage"},{id:"properties",title:"4. Properties"},{id:"note-about-ssr",title:"5. Note about SSR"}];return(h,B,q,S)=>{const b=C("q-markup-table");B(r(E,M({title:"Platform Detection",desc:"How to detect the platform under which a Quasar app is running.",heading:"","edit-link":"options/platform-detection",toc:$},S),{default:l((O,s,p,e)=>{if(s)s(`<p${e}>Helpers are built into Quasar to detect the Platform (and its capabilities) within the context of which the code is running.</p><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>Based on your needs, you might also want to check the `),s(r(m,{to:"/style/visibility"},{default:l((d,o,c,t)=>{if(o)o("Style &amp; Identity &gt; Visibility");else return[a("Style & Identity > Visibility")]}),_:1},p,e)),s(" page to see how you can achieve the same effect using CSS alone. This latter method will render your DOM elements or components regardless of platform though, so choose wisely on how you want to handle the performance of your app.</p></div>"),s(r(v,{file:"Platform"},null,p,e)),s(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><p${e}>Usage inside a Vue component JS:</p>`),s(r(u(k),null,{default:l((d,o,c,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> useQuasar <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar&#39;</span>

<span class="token function"${t}>setup</span> <span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>)</span> <span class="token punctuation"${t}>{</span>
  <span class="token keyword"${t}>const</span> $q <span class="token operator"${t}>=</span> <span class="token function"${t}>useQuasar</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>)</span>

  $q<span class="token punctuation"${t}>.</span>platform<span class="token punctuation"${t}>.</span>is<span class="token punctuation"${t}>.</span>mobile
<span class="token punctuation"${t}>}</span></code></pre>`),o(r(i,null,null,c,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" useQuasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token function"},"setup"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" $q "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`

  $q`),n("span",{class:"token punctuation"},"."),a("platform"),n("span",{class:"token punctuation"},"."),a("is"),n("span",{class:"token punctuation"},"."),a(`mobile
`),n("span",{class:"token punctuation"},"}")])]),n(i)]}),_:1},p,e)),s(`<p${e}>Usage inside a Vue component template:</p>`),s(r(u(k),null,{default:l((d,o,c,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}>$q<span class="token punctuation"${t}>.</span>platform<span class="token punctuation"${t}>.</span>is<span class="token punctuation"${t}>.</span>cordova</code></pre>`),o(r(i,null,null,c,t));else return[n("pre",{class:"doc-code"},[n("code",null,[a("$q"),n("span",{class:"token punctuation"},"."),a("platform"),n("span",{class:"token punctuation"},"."),a("is"),n("span",{class:"token punctuation"},"."),a("cordova")])]),n(i)]}),_:1},p,e)),s(`<p${e}>You must import it when you use it outside of a Vue component :</p>`),s(r(u(k),null,{default:l((d,o,c,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> Platform <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar&#39;</span></code></pre>`),o(r(i,null,null,c,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Platform "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'")])]),n(i)]}),_:1},p,e)),s(`<p${e}><code class="doc-token"${e}>Platform.is</code> by itself returns an object containing details about the current platform. For example when running Chrome on a MacOS desktop machine, <code class="doc-token"${e}>Platform.is</code> would return something similar to:</p>`),s(r(u(k),null,{default:l((d,o,c,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token punctuation"${t}>{</span>
  <span class="token literal-property property"${t}>chrome</span><span class="token operator"${t}>:</span> <span class="token boolean"${t}>true</span><span class="token punctuation"${t}>,</span>
  <span class="token literal-property property"${t}>desktop</span><span class="token operator"${t}>:</span> <span class="token boolean"${t}>true</span><span class="token punctuation"${t}>,</span>
  <span class="token literal-property property"${t}>mac</span><span class="token operator"${t}>:</span> <span class="token boolean"${t}>true</span><span class="token punctuation"${t}>,</span>
  <span class="token literal-property property"${t}>name</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&quot;chrome&quot;</span><span class="token punctuation"${t}>,</span>
  <span class="token literal-property property"${t}>platform</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&quot;mac&quot;</span><span class="token punctuation"${t}>,</span>
  <span class="token literal-property property"${t}>version</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&quot;70.0.3538.110&quot;</span><span class="token punctuation"${t}>,</span>
  <span class="token literal-property property"${t}>versionNumber</span><span class="token operator"${t}>:</span> <span class="token number"${t}>70</span><span class="token punctuation"${t}>,</span>
  <span class="token literal-property property"${t}>webkit</span><span class="token operator"${t}>:</span> <span class="token boolean"${t}>true</span>
<span class="token punctuation"${t}>}</span></code></pre>`),o(r(i,null,null,c,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token literal-property property"},"chrome"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token literal-property property"},"desktop"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token literal-property property"},"mac"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},'"chrome"'),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token literal-property property"},"platform"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},'"mac"'),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token literal-property property"},"version"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},'"70.0.3538.110"'),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token literal-property property"},"versionNumber"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token number"},"70"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token literal-property property"},"webkit"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token boolean"},"true"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(i)]}),_:1},p,e)),s(`<p${e}>Now, letâ€™s say we want to render different components or DOM elements, based on the platform that the code is running under. We want to show something on desktop and something else on mobile. We would proceed like this:</p>`),s(r(u(k),null,{default:l((d,o,c,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token tag"${t}><span class="token tag"${t}><span class="token punctuation"${t}>&lt;</span>div</span> <span class="token attr-name"${t}>v-if</span><span class="token attr-value"${t}><span class="token punctuation attr-equals"${t}>=</span><span class="token punctuation"${t}>&quot;</span>$q.platform.is.desktop<span class="token punctuation"${t}>&quot;</span></span><span class="token punctuation"${t}>&gt;</span></span>
  I&#39;m only rendered on desktop!
<span class="token tag"${t}><span class="token tag"${t}><span class="token punctuation"${t}>&lt;/</span>div</span><span class="token punctuation"${t}>&gt;</span></span>

<span class="token tag"${t}><span class="token tag"${t}><span class="token punctuation"${t}>&lt;</span>div</span> <span class="token attr-name"${t}>v-if</span><span class="token attr-value"${t}><span class="token punctuation attr-equals"${t}>=</span><span class="token punctuation"${t}>&quot;</span>$q.platform.is.mobile<span class="token punctuation"${t}>&quot;</span></span><span class="token punctuation"${t}>&gt;</span></span>
  I&#39;m only rendered on mobile!
<span class="token tag"${t}><span class="token tag"${t}><span class="token punctuation"${t}>&lt;/</span>div</span><span class="token punctuation"${t}>&gt;</span></span>

<span class="token tag"${t}><span class="token tag"${t}><span class="token punctuation"${t}>&lt;</span>div</span> <span class="token attr-name"${t}>v-if</span><span class="token attr-value"${t}><span class="token punctuation attr-equals"${t}>=</span><span class="token punctuation"${t}>&quot;</span>$q.platform.is.electron<span class="token punctuation"${t}>&quot;</span></span><span class="token punctuation"${t}>&gt;</span></span>
  I&#39;m only rendered on Electron!
<span class="token tag"${t}><span class="token tag"${t}><span class="token punctuation"${t}>&lt;/</span>div</span><span class="token punctuation"${t}>&gt;</span></span></code></pre>`),o(r(i,null,null,c,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"v-if"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("$q.platform.is.desktop"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
  I'm only rendered on desktop!
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`

`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"v-if"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("$q.platform.is.mobile"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
  I'm only rendered on mobile!
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`

`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"v-if"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("$q.platform.is.electron"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
  I'm only rendered on Electron!
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")])])]),n(i)]}),_:1},p,e)),s(r(y,{title:"Your device",file:"Basic"},null,p,e)),s(`<h2 id="properties" class="doc-heading doc-h2"${e}>Properties</h2><p${e}>The following properties are available to the Platform object. Itâ€™s not an exhaustive list though. See the API section below for more details.</p>`),s(r(b,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:l((d,o,c,t)=>{if(o)o(`<thead${t}><tr${t}><th class="text-left"${t}>Property</th><th class="text-left"${t}>Type</th><th class="text-left"${t}>Meaning</th></tr></thead><tbody${t}><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.mobile</code></td><td${t}>Boolean</td><td${t}>Is the code running on a mobile device?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.cordova</code></td><td${t}>Boolean</td><td${t}>Is the code running within Cordova?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.capacitor</code></td><td${t}>Boolean</td><td${t}>Is the code running within Capacitor?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.nativeMobile</code></td><td${t}>Boolean</td><td${t}>Is the code running within a native mobile wrapper(<em${t}>Cordova/Capacitor</em>)?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.nativeMobileWrapper</code></td><td${t}>String</td><td${t}>Name of the native mobile wrapper(<em${t}><code class="doc-token"${t}>&#39;cordova&#39;</code>, <code class="doc-token"${t}>&#39;capacitor&#39;</code>, or <code class="doc-token"${t}>undefined</code></em>)</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.electron</code></td><td${t}>Boolean</td><td${t}>Is the code running within Electron?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.desktop</code></td><td${t}>Boolean</td><td${t}>Is the code running on a desktop browser?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.bex</code></td><td${t}>Boolean</td><td${t}>Is the code running in a browser extension?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.android</code></td><td${t}>Boolean</td><td${t}>Is the app running on an Android device?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.blackberry</code></td><td${t}>Boolean</td><td${t}>Is the app running on a Blackberry device?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.cros</code></td><td${t}>Boolean</td><td${t}>Is the app running on device with the Chrome OS operating system?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.ios</code></td><td${t}>Boolean</td><td${t}>Is the app running on an iOS device?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.ipad</code></td><td${t}>Boolean</td><td${t}>Is the app running on an iPad?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.iphone</code></td><td${t}>Boolean</td><td${t}>Is the app running on an iPhone?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.ipod</code></td><td${t}>Boolean</td><td${t}>Is the app running on an iPod?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.kindle</code></td><td${t}>Boolean</td><td${t}>Is the app running on a Kindle device?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.linux</code></td><td${t}>Boolean</td><td${t}>Is the code running on a device with the Linux operating system?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.mac</code></td><td${t}>Boolean</td><td${t}>Is the code running on a device with the MacOS operating system?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.win</code></td><td${t}>Boolean</td><td${t}>Is the code running on a device with the Windows operating system?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.winphone</code></td><td${t}>Boolean</td><td${t}>Is the code running on a Windows Phone device?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.playbook</code></td><td${t}>Boolean</td><td${t}>Is the code running on a Blackberry Playbook device?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.silk</code></td><td${t}>Boolean</td><td${t}>Is the code running the Kindle Silk browser?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.chrome</code></td><td${t}>Boolean</td><td${t}>Is the code running inside the Google Chrome browser?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.opera</code></td><td${t}>Boolean</td><td${t}>Is the code running inside the Opera browser?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.safari</code></td><td${t}>Boolean</td><td${t}>Is the code running inside the Apple Safari browser?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.edge</code></td><td${t}>Boolean</td><td${t}>Is the code running inside the Microsoft Edge browser?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.is.ie</code></td><td${t}>Boolean</td><td${t}>Is the code running inside the Microsoft Internet Explorer browser?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.has.touch</code></td><td${t}>Boolean</td><td${t}>Is the code running on a touch capable screen?</td></tr><tr${t}><td${t}><code class="doc-token"${t}>Platform.within.iframe</code></td><td${t}>Boolean</td><td${t}>Is the app running within an IFRAME?</td></tr></tbody>`);else return[n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Property"),n("th",{class:"text-left"},"Type"),n("th",{class:"text-left"},"Meaning")])]),n("tbody",null,[n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.mobile")]),n("td",null,"Boolean"),n("td",null,"Is the code running on a mobile device?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.cordova")]),n("td",null,"Boolean"),n("td",null,"Is the code running within Cordova?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.capacitor")]),n("td",null,"Boolean"),n("td",null,"Is the code running within Capacitor?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.nativeMobile")]),n("td",null,"Boolean"),n("td",null,[a("Is the code running within a native mobile wrapper("),n("em",null,"Cordova/Capacitor"),a(")?")])]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.nativeMobileWrapper")]),n("td",null,"String"),n("td",null,[a("Name of the native mobile wrapper("),n("em",null,[n("code",{class:"doc-token"},"'cordova'"),a(", "),n("code",{class:"doc-token"},"'capacitor'"),a(", or "),n("code",{class:"doc-token"},"undefined")]),a(")")])]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.electron")]),n("td",null,"Boolean"),n("td",null,"Is the code running within Electron?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.desktop")]),n("td",null,"Boolean"),n("td",null,"Is the code running on a desktop browser?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.bex")]),n("td",null,"Boolean"),n("td",null,"Is the code running in a browser extension?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.android")]),n("td",null,"Boolean"),n("td",null,"Is the app running on an Android device?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.blackberry")]),n("td",null,"Boolean"),n("td",null,"Is the app running on a Blackberry device?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.cros")]),n("td",null,"Boolean"),n("td",null,"Is the app running on device with the Chrome OS operating system?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.ios")]),n("td",null,"Boolean"),n("td",null,"Is the app running on an iOS device?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.ipad")]),n("td",null,"Boolean"),n("td",null,"Is the app running on an iPad?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.iphone")]),n("td",null,"Boolean"),n("td",null,"Is the app running on an iPhone?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.ipod")]),n("td",null,"Boolean"),n("td",null,"Is the app running on an iPod?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.kindle")]),n("td",null,"Boolean"),n("td",null,"Is the app running on a Kindle device?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.linux")]),n("td",null,"Boolean"),n("td",null,"Is the code running on a device with the Linux operating system?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.mac")]),n("td",null,"Boolean"),n("td",null,"Is the code running on a device with the MacOS operating system?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.win")]),n("td",null,"Boolean"),n("td",null,"Is the code running on a device with the Windows operating system?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.winphone")]),n("td",null,"Boolean"),n("td",null,"Is the code running on a Windows Phone device?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.playbook")]),n("td",null,"Boolean"),n("td",null,"Is the code running on a Blackberry Playbook device?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.silk")]),n("td",null,"Boolean"),n("td",null,"Is the code running the Kindle Silk browser?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.chrome")]),n("td",null,"Boolean"),n("td",null,"Is the code running inside the Google Chrome browser?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.opera")]),n("td",null,"Boolean"),n("td",null,"Is the code running inside the Opera browser?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.safari")]),n("td",null,"Boolean"),n("td",null,"Is the code running inside the Apple Safari browser?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.edge")]),n("td",null,"Boolean"),n("td",null,"Is the code running inside the Microsoft Edge browser?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.ie")]),n("td",null,"Boolean"),n("td",null,"Is the code running inside the Microsoft Internet Explorer browser?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.has.touch")]),n("td",null,"Boolean"),n("td",null,"Is the code running on a touch capable screen?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.within.iframe")]),n("td",null,"Boolean"),n("td",null,"Is the app running within an IFRAME?")])])]}),_:1},p,e)),s(`<div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>Running on mobile means you can have this code running on a mobile device (phone or tablet) but with a browser, not within a Cordova wrapper.</p></div><h2 id="note-about-ssr" class="doc-heading doc-h2"${e}>Note about SSR</h2><p${e}>When building for SSR, use only the <code class="doc-token"${e}>$q.platform</code> form. Alternatively, when on server-side, this is one more example of how you can use it:</p>`),s(r(u(k),null,{default:l((d,o,c,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> Platform <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar&#39;</span>

<span class="token comment"${t}>// you need access to \`ssrContext\`</span>
<span class="token keyword"${t}>function</span> <span class="token punctuation"${t}>(</span><span class="token parameter"${t}>ssrContext</span><span class="token punctuation"${t}>)</span> <span class="token punctuation"${t}>{</span>
  <span class="token keyword"${t}>const</span> platform <span class="token operator"${t}>=</span> process<span class="token punctuation"${t}>.</span>env<span class="token punctuation"${t}>.</span><span class="token constant"${t}>SERVER</span>
    <span class="token operator"${t}>?</span> Platform<span class="token punctuation"${t}>.</span><span class="token function"${t}>parseSSR</span><span class="token punctuation"${t}>(</span>ssrContext<span class="token punctuation"${t}>)</span>
    <span class="token operator"${t}>:</span> Platform <span class="token comment"${t}>// otherwise we&#39;re on client</span>

  <span class="token comment"${t}>// platform is equivalent to the global import as in non-SSR builds</span>
<span class="token punctuation"${t}>}</span></code></pre>`),o(r(i,null,null,c,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Platform "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token comment"},"// you need access to `ssrContext`"),a(`
`),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ssrContext"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" platform "),n("span",{class:"token operator"},"="),a(" process"),n("span",{class:"token punctuation"},"."),a("env"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"SERVER"),a(`
    `),n("span",{class:"token operator"},"?"),a(" Platform"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"parseSSR"),n("span",{class:"token punctuation"},"("),a("ssrContext"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token operator"},":"),a(" Platform "),n("span",{class:"token comment"},"// otherwise we're on client"),a(`

  `),n("span",{class:"token comment"},"// platform is equivalent to the global import as in non-SSR builds"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(i)]}),_:1},p,e)),s(`<p${e}>The <code class="doc-token"${e}>ssrContext</code> is available in `),s(r(m,{to:"/quasar-cli-vite/boot-files"},{default:l((d,o,c,t)=>{if(o)o("@quasar/app-vite Boot File");else return[a("@quasar/app-vite Boot File")]}),_:1},p,e)),s(" or "),s(r(m,{to:"/quasar-cli-webpack/boot-files"},{default:l((d,o,c,t)=>{if(o)o("@quasar/app-webpack Boot File");else return[a("@quasar/app-webpack Boot File")]}),_:1},p,e)),s(". And also in the "),s(r(m,{to:"/quasar-cli-vite/prefetch-feature"},{default:l((d,o,c,t)=>{if(o)o("@quasar/app-vite preFetch");else return[a("@quasar/app-vite preFetch")]}),_:1},p,e)),s(" or "),s(r(m,{to:"/quasar-cli-webpack/prefetch-feature"},{default:l((d,o,c,t)=>{if(o)o("@quasar/app-webpack preFetch");else return[a("@quasar/app-webpack preFetch")]}),_:1},p,e)),s(` feature, where it is supplied as a parameter.</p><p${e}>The reason for all this is that in a client-only app, every user will be using a fresh instance of the app in their browser. For server-side rendering we want the same: each request should have a fresh, isolated app instance so that there is no cross-request state pollution. So Platform needs to be bound to each request separately.</p>`);else return[n("p",null,"Helpers are built into Quasar to detect the Platform (and its capabilities) within the context of which the code is running."),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,[a("Based on your needs, you might also want to check the "),n(m,{to:"/style/visibility"},{default:l(()=>[a("Style & Identity > Visibility")]),_:1}),a(" page to see how you can achieve the same effect using CSS alone. This latter method will render your DOM elements or components regardless of platform though, so choose wisely on how you want to handle the performance of your app.")])]),n(v,{file:"Platform"}),n("h2",{id:"usage",class:"doc-heading doc-h2",onClick:d=>u(f)("usage")},"Usage",8,["onClick"]),n("p",null,"Usage inside a Vue component JS:"),n(u(k),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" useQuasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token function"},"setup"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" $q "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`

  $q`),n("span",{class:"token punctuation"},"."),a("platform"),n("span",{class:"token punctuation"},"."),a("is"),n("span",{class:"token punctuation"},"."),a(`mobile
`),n("span",{class:"token punctuation"},"}")])]),n(i)]),_:1}),n("p",null,"Usage inside a Vue component template:"),n(u(k),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[a("$q"),n("span",{class:"token punctuation"},"."),a("platform"),n("span",{class:"token punctuation"},"."),a("is"),n("span",{class:"token punctuation"},"."),a("cordova")])]),n(i)]),_:1}),n("p",null,"You must import it when you use it outside of a Vue component :"),n(u(k),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Platform "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'")])]),n(i)]),_:1}),n("p",null,[n("code",{class:"doc-token"},"Platform.is"),a(" by itself returns an object containing details about the current platform. For example when running Chrome on a MacOS desktop machine, "),n("code",{class:"doc-token"},"Platform.is"),a(" would return something similar to:")]),n(u(k),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token literal-property property"},"chrome"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token literal-property property"},"desktop"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token literal-property property"},"mac"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},'"chrome"'),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token literal-property property"},"platform"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},'"mac"'),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token literal-property property"},"version"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},'"70.0.3538.110"'),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token literal-property property"},"versionNumber"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token number"},"70"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token literal-property property"},"webkit"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token boolean"},"true"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(i)]),_:1}),n("p",null,"Now, letâ€™s say we want to render different components or DOM elements, based on the platform that the code is running under. We want to show something on desktop and something else on mobile. We would proceed like this:"),n(u(k),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"v-if"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("$q.platform.is.desktop"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
  I'm only rendered on desktop!
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`

`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"v-if"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("$q.platform.is.mobile"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
  I'm only rendered on mobile!
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`

`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"v-if"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("$q.platform.is.electron"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
  I'm only rendered on Electron!
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")])])]),n(i)]),_:1}),n(y,{title:"Your device",file:"Basic"}),n("h2",{id:"properties",class:"doc-heading doc-h2",onClick:d=>u(f)("properties")},"Properties",8,["onClick"]),n("p",null,"The following properties are available to the Platform object. Itâ€™s not an exhaustive list though. See the API section below for more details."),n(b,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:l(()=>[n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Property"),n("th",{class:"text-left"},"Type"),n("th",{class:"text-left"},"Meaning")])]),n("tbody",null,[n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.mobile")]),n("td",null,"Boolean"),n("td",null,"Is the code running on a mobile device?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.cordova")]),n("td",null,"Boolean"),n("td",null,"Is the code running within Cordova?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.capacitor")]),n("td",null,"Boolean"),n("td",null,"Is the code running within Capacitor?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.nativeMobile")]),n("td",null,"Boolean"),n("td",null,[a("Is the code running within a native mobile wrapper("),n("em",null,"Cordova/Capacitor"),a(")?")])]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.nativeMobileWrapper")]),n("td",null,"String"),n("td",null,[a("Name of the native mobile wrapper("),n("em",null,[n("code",{class:"doc-token"},"'cordova'"),a(", "),n("code",{class:"doc-token"},"'capacitor'"),a(", or "),n("code",{class:"doc-token"},"undefined")]),a(")")])]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.electron")]),n("td",null,"Boolean"),n("td",null,"Is the code running within Electron?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.desktop")]),n("td",null,"Boolean"),n("td",null,"Is the code running on a desktop browser?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.bex")]),n("td",null,"Boolean"),n("td",null,"Is the code running in a browser extension?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.android")]),n("td",null,"Boolean"),n("td",null,"Is the app running on an Android device?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.blackberry")]),n("td",null,"Boolean"),n("td",null,"Is the app running on a Blackberry device?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.cros")]),n("td",null,"Boolean"),n("td",null,"Is the app running on device with the Chrome OS operating system?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.ios")]),n("td",null,"Boolean"),n("td",null,"Is the app running on an iOS device?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.ipad")]),n("td",null,"Boolean"),n("td",null,"Is the app running on an iPad?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.iphone")]),n("td",null,"Boolean"),n("td",null,"Is the app running on an iPhone?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.ipod")]),n("td",null,"Boolean"),n("td",null,"Is the app running on an iPod?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.kindle")]),n("td",null,"Boolean"),n("td",null,"Is the app running on a Kindle device?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.linux")]),n("td",null,"Boolean"),n("td",null,"Is the code running on a device with the Linux operating system?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.mac")]),n("td",null,"Boolean"),n("td",null,"Is the code running on a device with the MacOS operating system?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.win")]),n("td",null,"Boolean"),n("td",null,"Is the code running on a device with the Windows operating system?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.winphone")]),n("td",null,"Boolean"),n("td",null,"Is the code running on a Windows Phone device?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.playbook")]),n("td",null,"Boolean"),n("td",null,"Is the code running on a Blackberry Playbook device?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.silk")]),n("td",null,"Boolean"),n("td",null,"Is the code running the Kindle Silk browser?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.chrome")]),n("td",null,"Boolean"),n("td",null,"Is the code running inside the Google Chrome browser?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.opera")]),n("td",null,"Boolean"),n("td",null,"Is the code running inside the Opera browser?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.safari")]),n("td",null,"Boolean"),n("td",null,"Is the code running inside the Apple Safari browser?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.edge")]),n("td",null,"Boolean"),n("td",null,"Is the code running inside the Microsoft Edge browser?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.is.ie")]),n("td",null,"Boolean"),n("td",null,"Is the code running inside the Microsoft Internet Explorer browser?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.has.touch")]),n("td",null,"Boolean"),n("td",null,"Is the code running on a touch capable screen?")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"Platform.within.iframe")]),n("td",null,"Boolean"),n("td",null,"Is the app running within an IFRAME?")])])]),_:1}),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,"Running on mobile means you can have this code running on a mobile device (phone or tablet) but with a browser, not within a Cordova wrapper.")]),n("h2",{id:"note-about-ssr",class:"doc-heading doc-h2",onClick:d=>u(f)("note-about-ssr")},"Note about SSR",8,["onClick"]),n("p",null,[a("When building for SSR, use only the "),n("code",{class:"doc-token"},"$q.platform"),a(" form. Alternatively, when on server-side, this is one more example of how you can use it:")]),n(u(k),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Platform "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token comment"},"// you need access to `ssrContext`"),a(`
`),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ssrContext"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" platform "),n("span",{class:"token operator"},"="),a(" process"),n("span",{class:"token punctuation"},"."),a("env"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"SERVER"),a(`
    `),n("span",{class:"token operator"},"?"),a(" Platform"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"parseSSR"),n("span",{class:"token punctuation"},"("),a("ssrContext"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token operator"},":"),a(" Platform "),n("span",{class:"token comment"},"// otherwise we're on client"),a(`

  `),n("span",{class:"token comment"},"// platform is equivalent to the global import as in non-SSR builds"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(i)]),_:1}),n("p",null,[a("The "),n("code",{class:"doc-token"},"ssrContext"),a(" is available in "),n(m,{to:"/quasar-cli-vite/boot-files"},{default:l(()=>[a("@quasar/app-vite Boot File")]),_:1}),a(" or "),n(m,{to:"/quasar-cli-webpack/boot-files"},{default:l(()=>[a("@quasar/app-webpack Boot File")]),_:1}),a(". And also in the "),n(m,{to:"/quasar-cli-vite/prefetch-feature"},{default:l(()=>[a("@quasar/app-vite preFetch")]),_:1}),a(" or "),n(m,{to:"/quasar-cli-webpack/prefetch-feature"},{default:l(()=>[a("@quasar/app-webpack preFetch")]),_:1}),a(" feature, where it is supplied as a parameter.")]),n("p",null,"The reason for all this is that in a client-only app, every user will be using a fresh instance of the app in their browser. For server-side rendering we want the same: each request should have a fresh, isolated app instance so that there is no cross-request state pollution. So Platform needs to be bound to each request separately.")]}),_:1},q))}}},P=g.setup;g.setup=(w,$)=>{const h=R();return(h.modules||(h.modules=new Set)).add("src/pages/options/platform-detection.md"),P?P(w,$):void 0};const tn=F(g,[["__file","platform-detection.md"]]);export{tn as default};
