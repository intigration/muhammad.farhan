import{resolveComponent as V,mergeProps as A,withCtx as p,createTextVNode as a,createVNode as n,unref as l,useSSRContext as j}from"vue";import{ssrRenderComponent as i}from"vue/server-renderer";import{c as f}from"./page-utils-C-QWsEHe.js";import{D as S,a as $}from"./DocPage-DKr-0pQn.js";import{D as u}from"./DocPrerender-DPOnWPFO.js";import{C as e}from"./CopyButton-l3ndfN49.js";import{_ as C}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const y={__name:"boot-files",__ssrInlineRender:!0,setup(g){const h=[{name:"The quasar.config file",category:"Quasar CLI (with Webpack)",path:"/quasar-cli-webpack/quasar-config-file"}],d=[{id:"anatomy-of-a-boot-file",title:"2. Anatomy of a boot file"},{id:"when-to-use-boot-files",title:"3. When to use boot files"},{id:"examples-of-appropriate-usage-of-boot-files",title:"3.1. Examples of appropriate usage of boot files",sub:!0},{id:"example-of-unneeded-usage-of-boot-files",title:"3.2. Example of unneeded usage of boot files",sub:!0},{id:"usage-of-boot-files",title:"4. Usage of boot files"},{id:"redirecting-to-another-page",title:"4.1. Redirecting to another page",sub:!0},{id:"quasar-app-flow",title:"4.2. Quasar App Flow",sub:!0},{id:"examples-of-boot-files",title:"5. Examples of boot files"},{id:"axios",title:"5.1. Axios",sub:!0},{id:"vue-i18n",title:"5.2. vue-i18n",sub:!0},{id:"router-authentication",title:"5.3. Router authentication",sub:!0},{id:"accessing-data-from-boot-files",title:"6. Accessing data from boot files"}];return(O,v,P,R)=>{const w=V("q-markup-table");v(i(S,A({title:"Boot files",desc:"(@quasar/app-webpack) Managing your startup code in a Quasar app.",overline:"Quasar CLI with Webpack - @quasar/app-webpack",heading:"","edit-link":"quasar-cli-webpack/boot-files",toc:d,related:h},R),{default:p((q,c,m,s)=>{if(c)c(`<p${s}>A common use case for Quasar applications is to <strong${s}>run code before the root Vue app instance is instantiated</strong>, like injecting and initializing your own dependencies (examples: Vue components, libraries…) or simply configuring some startup code of your app.</p><p${s}>Since you won’t have access to any <code class="doc-token"${s}>/main.js</code> file (so that Quasar CLI can seamlessly initialize and build same codebase for SPA/PWA/SSR/Cordova/Electron) Quasar provides an elegant solution to that problem by allowing users to define so-called boot files.</p><p${s}>In earlier Quasar versions, to run code before the root Vue instance was instantiated, you could alter the <code class="doc-token"${s}>/src/main.js</code> file and add any code you needed to execute.</p><p${s}>There is a major problem with this approach: with a growing project, your <code class="doc-token"${s}>main.js</code> file was very likely to get cluttered and challenging to maintain, which breaks with Quasar’s concept of encouraging developers to write maintainable and elegant cross-platform applications.</p><p${s}>With boot files, it is possible to split each of your dependencies into self-contained, easy to maintain files. It is also trivial to disable any of the boot files or even contextually determine which of the boot files get into the build through the <code class="doc-token"${s}>/quasar.config</code> file configuration.</p><h2 id="anatomy-of-a-boot-file" class="doc-heading doc-h2"${s}>Anatomy of a boot file</h2><p${s}>A boot file is a simple JavaScript file which can optionally export a function. Quasar will then call the exported function when it boots the application and additionally pass <strong${s}>an object</strong> with the following properties to the function:</p>`),c(i(w,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:p((k,o,r,t)=>{if(o)o(`<thead${t}><tr${t}><th class="text-left"${t}>Prop name</th><th class="text-left"${t}>Description</th></tr></thead><tbody${t}><tr${t}><td${t}><code class="doc-token"${t}>app</code></td><td${t}>Vue app instance</td></tr><tr${t}><td${t}><code class="doc-token"${t}>router</code></td><td${t}>Instance of Vue Router from ‘src/router/index.js’</td></tr><tr${t}><td${t}><code class="doc-token"${t}>store</code></td><td${t}>Instance of the Pinia or the Vuex store - <strong${t}>store only will be passed if your project uses Pinia (you have src/stores) or Vuex (you have src/store)</strong></td></tr><tr${t}><td${t}><code class="doc-token"${t}>ssrContext</code></td><td${t}>Available only on server-side, if building for SSR. `),o(i($,{to:"/quasar-cli-webpack/developing-ssr/ssr-context"},{default:p((T,b,L,U)=>{if(b)b("More info");else return[a("More info")]}),_:1},r,t)),o(`</td></tr><tr${t}><td${t}><code class="doc-token"${t}>urlPath</code></td><td${t}>The pathname (path + search) part of the URL. It also contains the hash on client-side.</td></tr><tr${t}><td${t}><code class="doc-token"${t}>publicPath</code></td><td${t}>The configured public path.</td></tr><tr${t}><td${t}><code class="doc-token"${t}>redirect</code></td><td${t}>Function to call to redirect to another URL. Accepts String (full URL) or a Vue Router location String or Object.</td></tr></tbody>`);else return[n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Prop name"),n("th",{class:"text-left"},"Description")])]),n("tbody",null,[n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"app")]),n("td",null,"Vue app instance")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"router")]),n("td",null,"Instance of Vue Router from ‘src/router/index.js’")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"store")]),n("td",null,[a("Instance of the Pinia or the Vuex store - "),n("strong",null,"store only will be passed if your project uses Pinia (you have src/stores) or Vuex (you have src/store)")])]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"ssrContext")]),n("td",null,[a("Available only on server-side, if building for SSR. "),n($,{to:"/quasar-cli-webpack/developing-ssr/ssr-context"},{default:p(()=>[a("More info")]),_:1})])]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"urlPath")]),n("td",null,"The pathname (path + search) part of the URL. It also contains the hash on client-side.")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"publicPath")]),n("td",null,"The configured public path.")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"redirect")]),n("td",null,"Function to call to redirect to another URL. Accepts String (full URL) or a Vue Router location String or Object.")])])]}),_:1},m,s)),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>export</span> <span class="token keyword"${t}>default</span> <span class="token punctuation"${t}>(</span><span class="token parameter"${t}><span class="token punctuation"${t}>{</span> app<span class="token punctuation"${t}>,</span> router<span class="token punctuation"${t}>,</span> store <span class="token punctuation"${t}>}</span></span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
  <span class="token comment"${t}>// something to do</span>
<span class="token punctuation"${t}>}</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" app"),n("span",{class:"token punctuation"},","),a(" router"),n("span",{class:"token punctuation"},","),a(" store "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// something to do"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]}),_:1},m,s)),c(`<p${s}>Boot files can also be async:</p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>export</span> <span class="token keyword"${t}>default</span> <span class="token keyword"${t}>async</span> <span class="token punctuation"${t}>(</span><span class="token parameter"${t}><span class="token punctuation"${t}>{</span> app<span class="token punctuation"${t}>,</span> router<span class="token punctuation"${t}>,</span> store <span class="token punctuation"${t}>}</span></span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
  <span class="token comment"${t}>// something to do</span>
  <span class="token keyword"${t}>await</span> <span class="token function"${t}>something</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>)</span>
<span class="token punctuation"${t}>}</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" app"),n("span",{class:"token punctuation"},","),a(" router"),n("span",{class:"token punctuation"},","),a(" store "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// something to do"),a(`
  `),n("span",{class:"token keyword"},"await"),a(),n("span",{class:"token function"},"something"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]}),_:1},m,s)),c(`<p${s}>You can wrap the returned function with <code class="doc-token"${s}>boot</code> helper to get a better IDE autocomplete experience (through Typescript):</p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> boot <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar/wrappers&#39;</span>

<span class="token keyword"${t}>export</span> <span class="token keyword"${t}>default</span> <span class="token function"${t}>boot</span><span class="token punctuation"${t}>(</span><span class="token keyword"${t}>async</span> <span class="token punctuation"${t}>(</span><span class="token parameter"${t}><span class="token punctuation"${t}>{</span> app<span class="token punctuation"${t}>,</span> router<span class="token punctuation"${t}>,</span> store <span class="token punctuation"${t}>}</span></span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
  <span class="token comment"${t}>// something to do</span>
  <span class="token keyword"${t}>await</span> <span class="token function"${t}>something</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>)</span>
<span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" boot "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/wrappers'"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token function"},"boot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" app"),n("span",{class:"token punctuation"},","),a(" router"),n("span",{class:"token punctuation"},","),a(" store "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// something to do"),a(`
  `),n("span",{class:"token keyword"},"await"),a(),n("span",{class:"token function"},"something"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]}),_:1},m,s)),c(`<p${s}>Notice we are using the `),c(i($,{to:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"},{default:p((k,o,r,t)=>{if(o)o("ES6 destructuring assignment");else return[a("ES6 destructuring assignment")]}),_:1},m,s)),c(`. Only assign what you actually need/use.</p><p${s}>You may ask yourself why we need to export a function. This is actually optional, but before you decide to remove the default export, you need to understand when you need it:</p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token comment"${t}>// Outside of default export:</span>
<span class="token comment"${t}>//  - Code here gets executed immediately,</span>
<span class="token comment"${t}>//  - Good place for import statements,</span>
<span class="token comment"${t}>//  - No access to router, Vuex store, ...</span>

<span class="token keyword"${t}>export</span> <span class="token keyword"${t}>default</span> <span class="token keyword"${t}>async</span> <span class="token punctuation"${t}>(</span><span class="token parameter"${t}><span class="token punctuation"${t}>{</span> app<span class="token punctuation"${t}>,</span> router<span class="token punctuation"${t}>,</span> store <span class="token punctuation"${t}>}</span></span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
  <span class="token comment"${t}>// Code here has access to the Object param above, connecting</span>
  <span class="token comment"${t}>// with other parts of your app;</span>

  <span class="token comment"${t}>// Code here can be async (use async/await or directly return a Promise);</span>

  <span class="token comment"${t}>// Code here gets executed by Quasar CLI at the correct time in app&#39;s lifecycle:</span>
  <span class="token comment"${t}>//  - we have a Router instantiated,</span>
  <span class="token comment"${t}>//  - we have the optional Vuex store instantiated,</span>
  <span class="token comment"${t}>//  - we have the root app&#39;s component [&quot;app&quot; prop in Object param] Object with</span>
  <span class="token comment"${t}>//      which Quasar will instantiate the Vue app</span>
  <span class="token comment"${t}>//      (&quot;new Vue(app)&quot; -- do NOT call this by yourself),</span>
  <span class="token comment"${t}>//  - ...</span>
<span class="token punctuation"${t}>}</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// Outside of default export:"),a(`
`),n("span",{class:"token comment"},"//  - Code here gets executed immediately,"),a(`
`),n("span",{class:"token comment"},"//  - Good place for import statements,"),a(`
`),n("span",{class:"token comment"},"//  - No access to router, Vuex store, ..."),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" app"),n("span",{class:"token punctuation"},","),a(" router"),n("span",{class:"token punctuation"},","),a(" store "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// Code here has access to the Object param above, connecting"),a(`
  `),n("span",{class:"token comment"},"// with other parts of your app;"),a(`

  `),n("span",{class:"token comment"},"// Code here can be async (use async/await or directly return a Promise);"),a(`

  `),n("span",{class:"token comment"},"// Code here gets executed by Quasar CLI at the correct time in app's lifecycle:"),a(`
  `),n("span",{class:"token comment"},"//  - we have a Router instantiated,"),a(`
  `),n("span",{class:"token comment"},"//  - we have the optional Vuex store instantiated,"),a(`
  `),n("span",{class:"token comment"},`//  - we have the root app's component ["app" prop in Object param] Object with`),a(`
  `),n("span",{class:"token comment"},"//      which Quasar will instantiate the Vue app"),a(`
  `),n("span",{class:"token comment"},'//      ("new Vue(app)" -- do NOT call this by yourself),'),a(`
  `),n("span",{class:"token comment"},"//  - ..."),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]}),_:1},m,s)),c(`<h2 id="when-to-use-boot-files" class="doc-heading doc-h2"${s}>When to use boot files</h2><div class="doc-note doc-note--warning"${s}><p class="doc-note__title"${s}>WARNING</p><p${s}>Please make sure you understand what problem boot files solve and when it is appropriate to use them, to avoid applying them in cases where they are not needed.</p></div><p${s}>Boot files fulfill one special purpose: they run code <strong${s}>before</strong> the App’s Vue root component is instantiated while giving you access to certain variables, which is required if you need to initialize a library, interfere with Vue Router, inject Vue prototype or inject the root instance of the Vue app.</p><h3 id="examples-of-appropriate-usage-of-boot-files" class="doc-heading doc-h3"${s}>Examples of appropriate usage of boot files</h3><ul${s}><li${s}>Your Vue plugin has installation instructions, like needing to call <code class="doc-token"${s}>app.use()</code> on it.</li><li${s}>Your Vue plugin requires instantiation of data that is added to the root instance - An example would be `),c(i($,{to:"https://github.com/kazupon/vue-i18n/"},{default:p((k,o,r,t)=>{if(o)o("vue-i18n");else return[a("vue-i18n")]}),_:1},m,s)),c(`.</li><li${s}>You want to add a global mixin using <code class="doc-token"${s}>app.mixin()</code>.</li><li${s}>You want to add something to the Vue app globalProperties for convenient access - An example would be to conveniently use <code class="doc-token"${s}>this.$axios</code> (for Options API) inside your Vue files instead of importing Axios in each such file.</li><li${s}>You want to interfere with the router - An example would be to use <code class="doc-token"${s}>router.beforeEach</code> for authentication</li><li${s}>You want to interfere with Pinia or the Vuex store instance - An example would be to use <code class="doc-token"${s}>vuex-router-sync</code> package</li><li${s}>Configure aspects of libraries - An example would be to create an instance of Axios with a base URL; you can then inject it into Vue prototype and/or export it (so you can import the instance from anywhere else in your app)</li></ul><h3 id="example-of-unneeded-usage-of-boot-files" class="doc-heading doc-h3"${s}>Example of unneeded usage of boot files</h3><ul${s}><li${s}>For plain JavaScript libraries like Lodash, which don’t need any initialization prior to their usage. Lodash, for example, might make sense to use as a boot file only if you want to inject Vue prototype with it, like being able to use <code class="doc-token"${s}>this.$_</code> inside your Vue files.</li></ul><h2 id="usage-of-boot-files" class="doc-heading doc-h2"${s}>Usage of boot files</h2><p${s}>The first step is always to generate a new boot file using Quasar CLI:</p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}>$ quasar new boot <span class="token operator"${t}>&lt;</span>name<span class="token operator"${t}>&gt;</span> <span class="token punctuation"${t}>[</span>--format ts<span class="token punctuation"${t}>]</span></code></pre>`),o(i(e,{lang:"bash"},null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[a("$ quasar new boot "),n("span",{class:"token operator"},"<"),a("name"),n("span",{class:"token operator"},">"),a(),n("span",{class:"token punctuation"},"["),a("--format ts"),n("span",{class:"token punctuation"},"]")])]),n(e,{lang:"bash"})]}),_:1},m,s)),c(`<p${s}>Where <code class="doc-token"${s}>&lt;name&gt;</code> should be exchanged by a suitable name for your boot file.</p><p${s}>This command creates a new file: <code class="doc-token"${s}>/src/boot/&lt;name&gt;.js</code> with the following content:</p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token comment"${t}>// import something here</span>

<span class="token comment"${t}>// &quot;async&quot; is optional!</span>
<span class="token comment"${t}>// remove it if you don&#39;t need it</span>
<span class="token keyword"${t}>export</span> <span class="token keyword"${t}>default</span> <span class="token keyword"${t}>async</span> <span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>{</span> <span class="token comment"${t}>/* app, router, store */</span> <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
  <span class="token comment"${t}>// something to do</span>
<span class="token punctuation"${t}>}</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// import something here"),a(`

`),n("span",{class:"token comment"},'// "async" is optional!'),a(`
`),n("span",{class:"token comment"},"// remove it if you don't need it"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token comment"},"/* app, router, store */"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// something to do"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]}),_:1},m,s)),c(`<p${s}>You can also return a Promise:</p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token comment"${t}>// import something here</span>

<span class="token keyword"${t}>export</span> <span class="token keyword"${t}>default</span> <span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>{</span> <span class="token comment"${t}>/* app, router, store */</span> <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
  <span class="token keyword"${t}>return</span> <span class="token keyword"${t}>new</span> <span class="token class-name"${t}>Promise</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>(</span><span class="token parameter"${t}>resolve<span class="token punctuation"${t}>,</span> reject</span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
    <span class="token comment"${t}>// do something</span>
  <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span>
<span class="token punctuation"${t}>}</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// import something here"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token comment"},"/* app, router, store */"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token class-name"},"Promise"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[a("resolve"),n("span",{class:"token punctuation"},","),a(" reject")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// do something"),a(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]}),_:1},m,s)),c(`<div class="doc-note doc-note--tip"${s}><p class="doc-note__title"${s}>TIP</p><p${s}>The default export can be left out of the boot file if you don’t need it. These are the cases where you don’t need to access the “app”, “router”, “store” and so on.</p></div><p${s}>You can now add content to that file depending on the intended use of your boot file.</p><blockquote class="doc-note"${s}><p${s}>Do not forget that your default export needs to be a function. However, you can have as many named exports as you want, should the boot file expose something for later usage. In this case, you can import any of these named exports anywhere in your app.</p></blockquote><p${s}>The last step is to tell Quasar to use your new boot file. For this to happen you need to add the file in the <code class="doc-token"${s}>/quasar.config</code> file:</p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token literal-property property"${t}>boot</span><span class="token operator"${t}>:</span> <span class="token punctuation"${t}>[</span>
  <span class="token comment"${t}>// references /src/boot/&lt;name&gt;.js</span>
  <span class="token string"${t}>&#39;&lt;name&gt;&#39;</span>
<span class="token punctuation"${t}>]</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"["),a(`
  `),n("span",{class:"token comment"},"// references /src/boot/<name>.js"),a(`
  `),n("span",{class:"token string"},"'<name>'"),a(`
`),n("span",{class:"token punctuation"},"]")])]),n(e)]}),_:1},m,s)),c(`<p${s}>When building a SSR app, you may want some boot files to run only on the server or only on the client, in which case you can do so like below:</p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token literal-property property"${t}>boot</span><span class="token operator"${t}>:</span> <span class="token punctuation"${t}>[</span>
  <span class="token punctuation"${t}>{</span>
    <span class="token literal-property property"${t}>server</span><span class="token operator"${t}>:</span> <span class="token boolean"${t}>false</span><span class="token punctuation"${t}>,</span> <span class="token comment"${t}>// run on client-side only!</span>
    <span class="token literal-property property"${t}>path</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;&lt;name&gt;&#39;</span> <span class="token comment"${t}>// references /src/boot/&lt;name&gt;.js</span>
  <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>,</span>
  <span class="token punctuation"${t}>{</span>
    <span class="token literal-property property"${t}>client</span><span class="token operator"${t}>:</span> <span class="token boolean"${t}>false</span><span class="token punctuation"${t}>,</span> <span class="token comment"${t}>// run on server-side only!</span>
    <span class="token literal-property property"${t}>path</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;&lt;name&gt;&#39;</span> <span class="token comment"${t}>// references /src/boot/&lt;name&gt;.js</span>
  <span class="token punctuation"${t}>}</span>
<span class="token punctuation"${t}>]</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"["),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token literal-property property"},"server"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token comment"},"// run on client-side only!"),a(`
    `),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'<name>'"),a(),n("span",{class:"token comment"},"// references /src/boot/<name>.js"),a(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token literal-property property"},"client"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token comment"},"// run on server-side only!"),a(`
    `),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'<name>'"),a(),n("span",{class:"token comment"},"// references /src/boot/<name>.js"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"]")])]),n(e)]}),_:1},m,s)),c(`<p${s}>In case you want to specify boot files from node_modules, you can do so by prepending the path with <code class="doc-token"${s}>~</code> (tilde) character:</p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token literal-property property"${t}>boot</span><span class="token operator"${t}>:</span> <span class="token punctuation"${t}>[</span>
  <span class="token comment"${t}>// boot file from an npm package</span>
  <span class="token string"${t}>&#39;~my-npm-package/some/file&#39;</span>
<span class="token punctuation"${t}>]</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"["),a(`
  `),n("span",{class:"token comment"},"// boot file from an npm package"),a(`
  `),n("span",{class:"token string"},"'~my-npm-package/some/file'"),a(`
`),n("span",{class:"token punctuation"},"]")])]),n(e)]}),_:1},m,s)),c(`<p${s}>If you want a boot file to be injected into your app only for a specific build type:</p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token literal-property property"${t}>boot</span><span class="token operator"${t}>:</span> <span class="token punctuation"${t}>[</span>
  ctx<span class="token punctuation"${t}>.</span>mode<span class="token punctuation"${t}>.</span>electron <span class="token operator"${t}>?</span> <span class="token string"${t}>&#39;some-file&#39;</span> <span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;&#39;</span>
<span class="token punctuation"${t}>]</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"["),a(`
  ctx`),n("span",{class:"token punctuation"},"."),a("mode"),n("span",{class:"token punctuation"},"."),a("electron "),n("span",{class:"token operator"},"?"),a(),n("span",{class:"token string"},"'some-file'"),a(),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"''"),a(`
`),n("span",{class:"token punctuation"},"]")])]),n(e)]}),_:1},m,s)),c(`<h3 id="redirecting-to-another-page" class="doc-heading doc-h3"${s}>Redirecting to another page</h3><div class="doc-note doc-note--warning"${s}><p class="doc-note__title"${s}>WARNING</p><p${s}>Please be mindful when redirecting as you might configure the app to go into an infinite redirect loop.</p></div>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>export</span> <span class="token keyword"${t}>default</span> <span class="token punctuation"${t}>(</span><span class="token parameter"${t}><span class="token punctuation"${t}>{</span> urlPath<span class="token punctuation"${t}>,</span> redirect <span class="token punctuation"${t}>}</span></span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
  <span class="token comment"${t}>// ...</span>
  <span class="token keyword"${t}>const</span> isAuthorized <span class="token operator"${t}>=</span> <span class="token comment"${t}>// ...</span>
  <span class="token keyword"${t}>if</span> <span class="token punctuation"${t}>(</span><span class="token operator"${t}>!</span>isAuthorized <span class="token operator"${t}>&amp;&amp;</span> <span class="token operator"${t}>!</span>urlPath<span class="token punctuation"${t}>.</span><span class="token function"${t}>startsWith</span><span class="token punctuation"${t}>(</span><span class="token string"${t}>&#39;/login&#39;</span><span class="token punctuation"${t}>)</span><span class="token punctuation"${t}>)</span> <span class="token punctuation"${t}>{</span>
    <span class="token function"${t}>redirect</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>{</span> <span class="token literal-property property"${t}>path</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;/login&#39;</span> <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span>
    <span class="token keyword"${t}>return</span>
  <span class="token punctuation"${t}>}</span>
  <span class="token comment"${t}>// ...</span>
<span class="token punctuation"${t}>}</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" urlPath"),n("span",{class:"token punctuation"},","),a(" redirect "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// ..."),a(`
  `),n("span",{class:"token keyword"},"const"),a(" isAuthorized "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token comment"},"// ..."),a(`
  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),a("isAuthorized "),n("span",{class:"token operator"},"&&"),a(),n("span",{class:"token operator"},"!"),a("urlPath"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/login'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'/login'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token keyword"},"return"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token comment"},"// ..."),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]}),_:1},m,s)),c(`<p${s}>The <code class="doc-token"${s}>redirect()</code> method accepts a String (full URL) or a Vue Router location String or Object. On SSR it can receive a second parameter which should be a Number for any of the HTTP STATUS codes that redirect the browser (3xx ones).</p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token comment"${t}>// Examples for redirect() with a Vue Router location:</span>
<span class="token function"${t}>redirect</span><span class="token punctuation"${t}>(</span><span class="token string"${t}>&#39;/1&#39;</span><span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// Vue Router location as String</span>
<span class="token function"${t}>redirect</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>{</span> <span class="token literal-property property"${t}>path</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;/1&#39;</span> <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// Vue Router location as Object</span>

<span class="token comment"${t}>// Example for redirect() with a URL:</span>
<span class="token function"${t}>redirect</span><span class="token punctuation"${t}>(</span><span class="token string"${t}>&#39;https://quasar.dev&#39;</span><span class="token punctuation"${t}>)</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// Examples for redirect() with a Vue Router location:"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/1'"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// Vue Router location as String"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'/1'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// Vue Router location as Object"),a(`

`),n("span",{class:"token comment"},"// Example for redirect() with a URL:"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'https://quasar.dev'"),n("span",{class:"token punctuation"},")")])]),n(e)]}),_:1},m,s)),c(`<div class="doc-note doc-note--warning"${s}><p class="doc-note__title"${s}>IMPORTANT!</p><p${s}>The Vue Router location (in String or Object form) does not refer to URL path (and hash), but to the actual Vue Router routes that you have defined. So <strong${s}>don’t add the publicPath</strong> to it and if you’re using the Vue Router hash mode then don’t add the hash to it.</p><p${s}><br${s}>Let’s say that we have this Vue Router route defined:<br${s}><br${s}></p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token punctuation"${t}>{</span>
  <span class="token literal-property property"${t}>path</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;/one&#39;</span><span class="token punctuation"${t}>,</span>
  <span class="token literal-property property"${t}>component</span><span class="token operator"${t}>:</span> PageOne
<span class="token punctuation"${t}>}</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'/one'"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token literal-property property"},"component"),n("span",{class:"token operator"},":"),a(` PageOne
`),n("span",{class:"token punctuation"},"}")])]),n(e)]}),_:1},m,s)),c(`<p${s}><br${s}>Then <strong${s}>regardless of our publicPath</strong> we can call <code class="doc-token"${s}>redirect()</code> like this:<br${s}><br${s}></p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token comment"${t}>// publicPath: /wiki; vueRouterMode: history</span>
<span class="token function"${t}>redirect</span><span class="token punctuation"${t}>(</span><span class="token string"${t}>&#39;/one&#39;</span><span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// good way</span>
<span class="token function"${t}>redirect</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>{</span> <span class="token literal-property property"${t}>path</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;/one&#39;</span> <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// good way</span>
<span class="token function"${t}>redirect</span><span class="token punctuation"${t}>(</span><span class="token string"${t}>&#39;/wiki/one&#39;</span><span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// WRONG!</span>

<span class="token comment"${t}>// publicPath: /wiki; vueRouterMode: hash</span>
<span class="token function"${t}>redirect</span><span class="token punctuation"${t}>(</span><span class="token string"${t}>&#39;/one&#39;</span><span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// good way</span>
<span class="token function"${t}>redirect</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>{</span> <span class="token literal-property property"${t}>path</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;/one&#39;</span> <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// good way</span>
<span class="token function"${t}>redirect</span><span class="token punctuation"${t}>(</span><span class="token string"${t}>&#39;/wiki/#/one&#39;</span><span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// WRONG!</span>

<span class="token comment"${t}>// no publicPath; vueRouterMode: hash</span>
<span class="token function"${t}>redirect</span><span class="token punctuation"${t}>(</span><span class="token string"${t}>&#39;/one&#39;</span><span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// good way</span>
<span class="token function"${t}>redirect</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>{</span> <span class="token literal-property property"${t}>path</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;/one&#39;</span> <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// good way</span>
<span class="token function"${t}>redirect</span><span class="token punctuation"${t}>(</span><span class="token string"${t}>&#39;/#/one&#39;</span><span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// WRONG!</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// publicPath: /wiki; vueRouterMode: history"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/one'"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// good way"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'/one'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// good way"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/wiki/one'"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// WRONG!"),a(`

`),n("span",{class:"token comment"},"// publicPath: /wiki; vueRouterMode: hash"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/one'"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// good way"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'/one'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// good way"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/wiki/#/one'"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// WRONG!"),a(`

`),n("span",{class:"token comment"},"// no publicPath; vueRouterMode: hash"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/one'"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// good way"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'/one'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// good way"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/#/one'"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// WRONG!")])]),n(e)]}),_:1},m,s)),c(`</div><p${s}>As it was mentioned in the previous sections, the default export of a boot file can return a Promise. If this Promise gets rejected with an Object that contains a “url” property, then Quasar CLI will redirect the user to that URL:</p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>export</span> <span class="token keyword"${t}>default</span> <span class="token punctuation"${t}>(</span><span class="token parameter"${t}><span class="token punctuation"${t}>{</span> urlPath <span class="token punctuation"${t}>}</span></span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
  <span class="token keyword"${t}>return</span> <span class="token keyword"${t}>new</span> <span class="token class-name"${t}>Promise</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>(</span><span class="token parameter"${t}>resolve<span class="token punctuation"${t}>,</span> reject</span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
    <span class="token comment"${t}>// ...</span>
    <span class="token keyword"${t}>const</span> isAuthorized <span class="token operator"${t}>=</span> <span class="token comment"${t}>// ...</span>
    <span class="token keyword"${t}>if</span> <span class="token punctuation"${t}>(</span><span class="token operator"${t}>!</span>isAuthorized <span class="token operator"${t}>&amp;&amp;</span> <span class="token operator"${t}>!</span>urlPath<span class="token punctuation"${t}>.</span><span class="token function"${t}>startsWith</span><span class="token punctuation"${t}>(</span><span class="token string"${t}>&#39;/login&#39;</span><span class="token punctuation"${t}>)</span><span class="token punctuation"${t}>)</span> <span class="token punctuation"${t}>{</span>
      <span class="token comment"${t}>// the &quot;url&quot; param here is of the same type</span>
      <span class="token comment"${t}>// as for &quot;redirect&quot; above</span>
      <span class="token function"${t}>reject</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>{</span> <span class="token literal-property property"${t}>url</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;/login&#39;</span> <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span>
      <span class="token keyword"${t}>return</span>
    <span class="token punctuation"${t}>}</span>
    <span class="token comment"${t}>// ...</span>
  <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span>
<span class="token punctuation"${t}>}</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" urlPath "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token class-name"},"Promise"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[a("resolve"),n("span",{class:"token punctuation"},","),a(" reject")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// ..."),a(`
    `),n("span",{class:"token keyword"},"const"),a(" isAuthorized "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token comment"},"// ..."),a(`
    `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),a("isAuthorized "),n("span",{class:"token operator"},"&&"),a(),n("span",{class:"token operator"},"!"),a("urlPath"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/login'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
      `),n("span",{class:"token comment"},'// the "url" param here is of the same type'),a(`
      `),n("span",{class:"token comment"},'// as for "redirect" above'),a(`
      `),n("span",{class:"token function"},"reject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"url"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'/login'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
      `),n("span",{class:"token keyword"},"return"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token comment"},"// ..."),a(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]}),_:1},m,s)),c(`<p${s}>Or a simpler equivalent:</p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>export</span> <span class="token keyword"${t}>default</span> <span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
  <span class="token comment"${t}>// ...</span>
  <span class="token keyword"${t}>const</span> isAuthorized <span class="token operator"${t}>=</span> <span class="token comment"${t}>// ...</span>
  <span class="token keyword"${t}>if</span> <span class="token punctuation"${t}>(</span><span class="token operator"${t}>!</span>isAuthorized <span class="token operator"${t}>&amp;&amp;</span> <span class="token operator"${t}>!</span>urlPath<span class="token punctuation"${t}>.</span><span class="token function"${t}>startsWith</span><span class="token punctuation"${t}>(</span><span class="token string"${t}>&#39;/login&#39;</span><span class="token punctuation"${t}>)</span><span class="token punctuation"${t}>)</span> <span class="token punctuation"${t}>{</span>
    <span class="token keyword"${t}>return</span> Promise<span class="token punctuation"${t}>.</span><span class="token function"${t}>reject</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>{</span> <span class="token literal-property property"${t}>url</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;/login&#39;</span> <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span>
  <span class="token punctuation"${t}>}</span>
  <span class="token comment"${t}>// ...</span>
<span class="token punctuation"${t}>}</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// ..."),a(`
  `),n("span",{class:"token keyword"},"const"),a(" isAuthorized "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token comment"},"// ..."),a(`
  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),a("isAuthorized "),n("span",{class:"token operator"},"&&"),a(),n("span",{class:"token operator"},"!"),a("urlPath"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/login'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" Promise"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"url"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'/login'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token comment"},"// ..."),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]}),_:1},m,s)),c(`<h3 id="quasar-app-flow" class="doc-heading doc-h3"${s}>Quasar App Flow</h3><p${s}>In order to better understand how a boot file works and what it does, you need to understand how your website/app boots:</p><ol${s}><li${s}>Quasar is initialized (components, directives, plugins, Quasar i18n, Quasar icon sets)</li><li${s}>Quasar Extras get imported (Roboto font – if used, icons, animations, …)</li><li${s}>Quasar CSS &amp; your app’s global CSS are imported</li><li${s}>App.vue is loaded (not yet being used)</li><li${s}>Store is imported (if using Pinia in src/stores or Vuex in src/store)</li><li${s}>Pinia (if using) is injected into the Vue app instance</li><li${s}>Router is imported (in src/router)</li><li${s}>Boot files are imported</li><li${s}>Router default export function executed</li><li${s}>Boot files get their default export function executed</li><li${s}>(if on Electron mode) Electron is imported and injected into Vue prototype</li><li${s}>(if on Cordova mode) Listening for “deviceready” event and only then continuing with following steps</li><li${s}>Instantiating Vue with root component and attaching to DOM</li></ol><h2 id="examples-of-boot-files" class="doc-heading doc-h2"${s}>Examples of boot files</h2><h3 id="axios" class="doc-heading doc-h3"${s}>Axios</h3>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> boot <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar/wrappers&#39;</span>
<span class="token keyword"${t}>import</span> axios <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;axios&#39;</span>

<span class="token keyword"${t}>const</span> api <span class="token operator"${t}>=</span> axios<span class="token punctuation"${t}>.</span><span class="token function"${t}>create</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>{</span> <span class="token literal-property property"${t}>baseURL</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;https://api.example.com&#39;</span> <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span>

<span class="token keyword"${t}>export</span> <span class="token keyword"${t}>default</span> <span class="token function"${t}>boot</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>(</span><span class="token parameter"${t}><span class="token punctuation"${t}>{</span> app <span class="token punctuation"${t}>}</span></span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
  <span class="token comment"${t}>// for use inside Vue files (Options API) through this.$axios and this.$api</span>

  app<span class="token punctuation"${t}>.</span>config<span class="token punctuation"${t}>.</span>globalProperties<span class="token punctuation"${t}>.</span>$axios <span class="token operator"${t}>=</span> axios
  <span class="token comment"${t}>// ^ ^ ^ this will allow you to use this.$axios (for Vue Options API form)</span>
  <span class="token comment"${t}>//       so you won&#39;t necessarily have to import axios in each vue file</span>

  app<span class="token punctuation"${t}>.</span>config<span class="token punctuation"${t}>.</span>globalProperties<span class="token punctuation"${t}>.</span>$api <span class="token operator"${t}>=</span> api
  <span class="token comment"${t}>// ^ ^ ^ this will allow you to use this.$api (for Vue Options API form)</span>
  <span class="token comment"${t}>//       so you can easily perform requests against your app&#39;s API</span>
<span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span>

<span class="token keyword"${t}>export</span> <span class="token punctuation"${t}>{</span> axios<span class="token punctuation"${t}>,</span> api <span class="token punctuation"${t}>}</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" boot "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/wrappers'"),a(`
`),n("span",{class:"token keyword"},"import"),a(" axios "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'axios'"),a(`

`),n("span",{class:"token keyword"},"const"),a(" api "),n("span",{class:"token operator"},"="),a(" axios"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"create"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"baseURL"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'https://api.example.com'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token function"},"boot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" app "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// for use inside Vue files (Options API) through this.$axios and this.$api"),a(`

  app`),n("span",{class:"token punctuation"},"."),a("config"),n("span",{class:"token punctuation"},"."),a("globalProperties"),n("span",{class:"token punctuation"},"."),a("$axios "),n("span",{class:"token operator"},"="),a(` axios
  `),n("span",{class:"token comment"},"// ^ ^ ^ this will allow you to use this.$axios (for Vue Options API form)"),a(`
  `),n("span",{class:"token comment"},"//       so you won't necessarily have to import axios in each vue file"),a(`

  app`),n("span",{class:"token punctuation"},"."),a("config"),n("span",{class:"token punctuation"},"."),a("globalProperties"),n("span",{class:"token punctuation"},"."),a("$api "),n("span",{class:"token operator"},"="),a(` api
  `),n("span",{class:"token comment"},"// ^ ^ ^ this will allow you to use this.$api (for Vue Options API form)"),a(`
  `),n("span",{class:"token comment"},"//       so you can easily perform requests against your app's API"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token punctuation"},"{"),a(" axios"),n("span",{class:"token punctuation"},","),a(" api "),n("span",{class:"token punctuation"},"}")])]),n(e)]}),_:1},m,s)),c(`<h3 id="vue-i18n" class="doc-heading doc-h3"${s}>vue-i18n</h3>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> boot <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar/wrappers&#39;</span>
<span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> createI18n <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;vue-i18n&#39;</span>
<span class="token keyword"${t}>import</span> messages <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;src/i18n&#39;</span>

<span class="token keyword"${t}>export</span> <span class="token keyword"${t}>default</span> <span class="token function"${t}>boot</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>(</span><span class="token parameter"${t}><span class="token punctuation"${t}>{</span> app <span class="token punctuation"${t}>}</span></span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
  <span class="token comment"${t}>// Create I18n instance</span>
  <span class="token keyword"${t}>const</span> i18n <span class="token operator"${t}>=</span> <span class="token function"${t}>createI18n</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>{</span>
    <span class="token literal-property property"${t}>locale</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;en-US&#39;</span><span class="token punctuation"${t}>,</span>
    messages
  <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span>

  <span class="token comment"${t}>// Tell app to use the I18n instance</span>
  app<span class="token punctuation"${t}>.</span><span class="token function"${t}>use</span><span class="token punctuation"${t}>(</span>i18n<span class="token punctuation"${t}>)</span>
<span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" boot "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/wrappers'"),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" createI18n "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'vue-i18n'"),a(`
`),n("span",{class:"token keyword"},"import"),a(" messages "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'src/i18n'"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token function"},"boot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" app "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// Create I18n instance"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" i18n "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"createI18n"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token literal-property property"},"locale"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'en-US'"),n("span",{class:"token punctuation"},","),a(`
    messages
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

  `),n("span",{class:"token comment"},"// Tell app to use the I18n instance"),a(`
  app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),a("i18n"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]}),_:1},m,s)),c(`<h3 id="router-authentication" class="doc-heading doc-h3"${s}>Router authentication</h3><p${s}>Some boot files might need to interfere with Vue Router configuration:</p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> boot <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar/wrappers&#39;</span>

<span class="token keyword"${t}>export</span> <span class="token keyword"${t}>default</span> <span class="token function"${t}>boot</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>(</span><span class="token parameter"${t}><span class="token punctuation"${t}>{</span> router<span class="token punctuation"${t}>,</span> store <span class="token punctuation"${t}>}</span></span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
  router<span class="token punctuation"${t}>.</span><span class="token function"${t}>beforeEach</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>(</span><span class="token parameter"${t}>to<span class="token punctuation"${t}>,</span> from<span class="token punctuation"${t}>,</span> next</span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
    <span class="token comment"${t}>// Now you need to add your authentication logic here, like calling an API endpoint</span>
  <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span>
<span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" boot "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/wrappers'"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token function"},"boot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" router"),n("span",{class:"token punctuation"},","),a(" store "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  router`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"beforeEach"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[a("to"),n("span",{class:"token punctuation"},","),a(" from"),n("span",{class:"token punctuation"},","),a(" next")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Now you need to add your authentication logic here, like calling an API endpoint"),a(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]}),_:1},m,s)),c(`<h2 id="accessing-data-from-boot-files" class="doc-heading doc-h2"${s}>Accessing data from boot files</h2><p${s}>Sometimes you want to access data that you configure in your boot file in files where you don’t have access to the root Vue instance.</p><p${s}>Fortunately, because boot files are just normal JavaScript files you can add as many named exports to your boot file as you want.</p><p${s}>Let’s take the example of Axios. Sometimes you want to access your Axios instance inside your JavaScript files, but you cannot access the root Vue instance. To solve this you can export the Axios instance in your boot file and import it elsewhere.</p><p${s}>Consider the following boot file for axios:</p>`),c(i(l(u),{title:"Axios boot file (src/boot/axios.js)"},{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> axios <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;axios&#39;</span>

<span class="token comment"${t}>// We create our own axios instance and set a custom base URL.</span>
<span class="token comment"${t}>// Note that if we wouldn&#39;t set any config here we do not need</span>
<span class="token comment"${t}>// a named export, as we could just \`import axios from &#39;axios&#39;\`</span>
<span class="token keyword"${t}>const</span> api <span class="token operator"${t}>=</span> axios<span class="token punctuation"${t}>.</span><span class="token function"${t}>create</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>{</span>
  <span class="token literal-property property"${t}>baseURL</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;https://api.example.com&#39;</span>
<span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span>

<span class="token comment"${t}>// for use inside Vue files through this.$axios and this.$api</span>
<span class="token comment"${t}>// (only in Vue Options API form)</span>
<span class="token keyword"${t}>export</span> <span class="token keyword"${t}>default</span> <span class="token punctuation"${t}>(</span><span class="token parameter"${t}><span class="token punctuation"${t}>{</span> app <span class="token punctuation"${t}>}</span></span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
  app<span class="token punctuation"${t}>.</span>config<span class="token punctuation"${t}>.</span>globalProperties<span class="token punctuation"${t}>.</span>$axios <span class="token operator"${t}>=</span> axios
  app<span class="token punctuation"${t}>.</span>config<span class="token punctuation"${t}>.</span>globalProperties<span class="token punctuation"${t}>.</span>$api <span class="token operator"${t}>=</span> api
<span class="token punctuation"${t}>}</span>

<span class="token comment"${t}>// Here we define a named export</span>
<span class="token comment"${t}>// that we can later use inside .js files:</span>
<span class="token keyword"${t}>export</span> <span class="token punctuation"${t}>{</span> axios<span class="token punctuation"${t}>,</span> api <span class="token punctuation"${t}>}</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(" axios "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'axios'"),a(`

`),n("span",{class:"token comment"},"// We create our own axios instance and set a custom base URL."),a(`
`),n("span",{class:"token comment"},"// Note that if we wouldn't set any config here we do not need"),a(`
`),n("span",{class:"token comment"},"// a named export, as we could just `import axios from 'axios'`"),a(`
`),n("span",{class:"token keyword"},"const"),a(" api "),n("span",{class:"token operator"},"="),a(" axios"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"create"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token literal-property property"},"baseURL"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'https://api.example.com'"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token comment"},"// for use inside Vue files through this.$axios and this.$api"),a(`
`),n("span",{class:"token comment"},"// (only in Vue Options API form)"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" app "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  app`),n("span",{class:"token punctuation"},"."),a("config"),n("span",{class:"token punctuation"},"."),a("globalProperties"),n("span",{class:"token punctuation"},"."),a("$axios "),n("span",{class:"token operator"},"="),a(` axios
  app`),n("span",{class:"token punctuation"},"."),a("config"),n("span",{class:"token punctuation"},"."),a("globalProperties"),n("span",{class:"token punctuation"},"."),a("$api "),n("span",{class:"token operator"},"="),a(` api
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token comment"},"// Here we define a named export"),a(`
`),n("span",{class:"token comment"},"// that we can later use inside .js files:"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token punctuation"},"{"),a(" axios"),n("span",{class:"token punctuation"},","),a(" api "),n("span",{class:"token punctuation"},"}")])]),n(e)]}),_:1},m,s)),c(`<p${s}>In any JavaScript file, you’ll be able to import the axios instance like this.</p>`),c(i(l(u),null,{default:p((k,o,r,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token comment"${t}>// we import one of the named exports from src/boot/axios.js</span>
<span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> api <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;boot/axios&#39;</span></code></pre>`),o(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// we import one of the named exports from src/boot/axios.js"),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" api "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'boot/axios'")])]),n(e)]}),_:1},m,s)),c(`<p${s}>Further reading on syntax: `),c(i($,{to:"https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/import"},{default:p((k,o,r,t)=>{if(o)o("ES6 import");else return[a("ES6 import")]}),_:1},m,s)),c(", "),c(i($,{to:"https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export"},{default:p((k,o,r,t)=>{if(o)o("ES6 export");else return[a("ES6 export")]}),_:1},m,s)),c(".</p>");else return[n("p",null,[a("A common use case for Quasar applications is to "),n("strong",null,"run code before the root Vue app instance is instantiated"),a(", like injecting and initializing your own dependencies (examples: Vue components, libraries…) or simply configuring some startup code of your app.")]),n("p",null,[a("Since you won’t have access to any "),n("code",{class:"doc-token"},"/main.js"),a(" file (so that Quasar CLI can seamlessly initialize and build same codebase for SPA/PWA/SSR/Cordova/Electron) Quasar provides an elegant solution to that problem by allowing users to define so-called boot files.")]),n("p",null,[a("In earlier Quasar versions, to run code before the root Vue instance was instantiated, you could alter the "),n("code",{class:"doc-token"},"/src/main.js"),a(" file and add any code you needed to execute.")]),n("p",null,[a("There is a major problem with this approach: with a growing project, your "),n("code",{class:"doc-token"},"main.js"),a(" file was very likely to get cluttered and challenging to maintain, which breaks with Quasar’s concept of encouraging developers to write maintainable and elegant cross-platform applications.")]),n("p",null,[a("With boot files, it is possible to split each of your dependencies into self-contained, easy to maintain files. It is also trivial to disable any of the boot files or even contextually determine which of the boot files get into the build through the "),n("code",{class:"doc-token"},"/quasar.config"),a(" file configuration.")]),n("h2",{id:"anatomy-of-a-boot-file",class:"doc-heading doc-h2",onClick:k=>l(f)("anatomy-of-a-boot-file")},"Anatomy of a boot file",8,["onClick"]),n("p",null,[a("A boot file is a simple JavaScript file which can optionally export a function. Quasar will then call the exported function when it boots the application and additionally pass "),n("strong",null,"an object"),a(" with the following properties to the function:")]),n(w,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:p(()=>[n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Prop name"),n("th",{class:"text-left"},"Description")])]),n("tbody",null,[n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"app")]),n("td",null,"Vue app instance")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"router")]),n("td",null,"Instance of Vue Router from ‘src/router/index.js’")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"store")]),n("td",null,[a("Instance of the Pinia or the Vuex store - "),n("strong",null,"store only will be passed if your project uses Pinia (you have src/stores) or Vuex (you have src/store)")])]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"ssrContext")]),n("td",null,[a("Available only on server-side, if building for SSR. "),n($,{to:"/quasar-cli-webpack/developing-ssr/ssr-context"},{default:p(()=>[a("More info")]),_:1})])]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"urlPath")]),n("td",null,"The pathname (path + search) part of the URL. It also contains the hash on client-side.")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"publicPath")]),n("td",null,"The configured public path.")]),n("tr",null,[n("td",null,[n("code",{class:"doc-token"},"redirect")]),n("td",null,"Function to call to redirect to another URL. Accepts String (full URL) or a Vue Router location String or Object.")])])]),_:1}),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" app"),n("span",{class:"token punctuation"},","),a(" router"),n("span",{class:"token punctuation"},","),a(" store "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// something to do"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]),_:1}),n("p",null,"Boot files can also be async:"),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" app"),n("span",{class:"token punctuation"},","),a(" router"),n("span",{class:"token punctuation"},","),a(" store "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// something to do"),a(`
  `),n("span",{class:"token keyword"},"await"),a(),n("span",{class:"token function"},"something"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]),_:1}),n("p",null,[a("You can wrap the returned function with "),n("code",{class:"doc-token"},"boot"),a(" helper to get a better IDE autocomplete experience (through Typescript):")]),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" boot "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/wrappers'"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token function"},"boot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" app"),n("span",{class:"token punctuation"},","),a(" router"),n("span",{class:"token punctuation"},","),a(" store "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// something to do"),a(`
  `),n("span",{class:"token keyword"},"await"),a(),n("span",{class:"token function"},"something"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]),_:1}),n("p",null,[a("Notice we are using the "),n($,{to:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"},{default:p(()=>[a("ES6 destructuring assignment")]),_:1}),a(". Only assign what you actually need/use.")]),n("p",null,"You may ask yourself why we need to export a function. This is actually optional, but before you decide to remove the default export, you need to understand when you need it:"),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// Outside of default export:"),a(`
`),n("span",{class:"token comment"},"//  - Code here gets executed immediately,"),a(`
`),n("span",{class:"token comment"},"//  - Good place for import statements,"),a(`
`),n("span",{class:"token comment"},"//  - No access to router, Vuex store, ..."),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" app"),n("span",{class:"token punctuation"},","),a(" router"),n("span",{class:"token punctuation"},","),a(" store "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// Code here has access to the Object param above, connecting"),a(`
  `),n("span",{class:"token comment"},"// with other parts of your app;"),a(`

  `),n("span",{class:"token comment"},"// Code here can be async (use async/await or directly return a Promise);"),a(`

  `),n("span",{class:"token comment"},"// Code here gets executed by Quasar CLI at the correct time in app's lifecycle:"),a(`
  `),n("span",{class:"token comment"},"//  - we have a Router instantiated,"),a(`
  `),n("span",{class:"token comment"},"//  - we have the optional Vuex store instantiated,"),a(`
  `),n("span",{class:"token comment"},`//  - we have the root app's component ["app" prop in Object param] Object with`),a(`
  `),n("span",{class:"token comment"},"//      which Quasar will instantiate the Vue app"),a(`
  `),n("span",{class:"token comment"},'//      ("new Vue(app)" -- do NOT call this by yourself),'),a(`
  `),n("span",{class:"token comment"},"//  - ..."),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]),_:1}),n("h2",{id:"when-to-use-boot-files",class:"doc-heading doc-h2",onClick:k=>l(f)("when-to-use-boot-files")},"When to use boot files",8,["onClick"]),n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"WARNING"),n("p",null,"Please make sure you understand what problem boot files solve and when it is appropriate to use them, to avoid applying them in cases where they are not needed.")]),n("p",null,[a("Boot files fulfill one special purpose: they run code "),n("strong",null,"before"),a(" the App’s Vue root component is instantiated while giving you access to certain variables, which is required if you need to initialize a library, interfere with Vue Router, inject Vue prototype or inject the root instance of the Vue app.")]),n("h3",{id:"examples-of-appropriate-usage-of-boot-files",class:"doc-heading doc-h3",onClick:k=>l(f)("examples-of-appropriate-usage-of-boot-files")},"Examples of appropriate usage of boot files",8,["onClick"]),n("ul",null,[n("li",null,[a("Your Vue plugin has installation instructions, like needing to call "),n("code",{class:"doc-token"},"app.use()"),a(" on it.")]),n("li",null,[a("Your Vue plugin requires instantiation of data that is added to the root instance - An example would be "),n($,{to:"https://github.com/kazupon/vue-i18n/"},{default:p(()=>[a("vue-i18n")]),_:1}),a(".")]),n("li",null,[a("You want to add a global mixin using "),n("code",{class:"doc-token"},"app.mixin()"),a(".")]),n("li",null,[a("You want to add something to the Vue app globalProperties for convenient access - An example would be to conveniently use "),n("code",{class:"doc-token"},"this.$axios"),a(" (for Options API) inside your Vue files instead of importing Axios in each such file.")]),n("li",null,[a("You want to interfere with the router - An example would be to use "),n("code",{class:"doc-token"},"router.beforeEach"),a(" for authentication")]),n("li",null,[a("You want to interfere with Pinia or the Vuex store instance - An example would be to use "),n("code",{class:"doc-token"},"vuex-router-sync"),a(" package")]),n("li",null,"Configure aspects of libraries - An example would be to create an instance of Axios with a base URL; you can then inject it into Vue prototype and/or export it (so you can import the instance from anywhere else in your app)")]),n("h3",{id:"example-of-unneeded-usage-of-boot-files",class:"doc-heading doc-h3",onClick:k=>l(f)("example-of-unneeded-usage-of-boot-files")},"Example of unneeded usage of boot files",8,["onClick"]),n("ul",null,[n("li",null,[a("For plain JavaScript libraries like Lodash, which don’t need any initialization prior to their usage. Lodash, for example, might make sense to use as a boot file only if you want to inject Vue prototype with it, like being able to use "),n("code",{class:"doc-token"},"this.$_"),a(" inside your Vue files.")])]),n("h2",{id:"usage-of-boot-files",class:"doc-heading doc-h2",onClick:k=>l(f)("usage-of-boot-files")},"Usage of boot files",8,["onClick"]),n("p",null,"The first step is always to generate a new boot file using Quasar CLI:"),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[a("$ quasar new boot "),n("span",{class:"token operator"},"<"),a("name"),n("span",{class:"token operator"},">"),a(),n("span",{class:"token punctuation"},"["),a("--format ts"),n("span",{class:"token punctuation"},"]")])]),n(e,{lang:"bash"})]),_:1}),n("p",null,[a("Where "),n("code",{class:"doc-token"},"<name>"),a(" should be exchanged by a suitable name for your boot file.")]),n("p",null,[a("This command creates a new file: "),n("code",{class:"doc-token"},"/src/boot/<name>.js"),a(" with the following content:")]),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// import something here"),a(`

`),n("span",{class:"token comment"},'// "async" is optional!'),a(`
`),n("span",{class:"token comment"},"// remove it if you don't need it"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token comment"},"/* app, router, store */"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// something to do"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]),_:1}),n("p",null,"You can also return a Promise:"),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// import something here"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token comment"},"/* app, router, store */"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token class-name"},"Promise"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[a("resolve"),n("span",{class:"token punctuation"},","),a(" reject")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// do something"),a(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]),_:1}),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,"The default export can be left out of the boot file if you don’t need it. These are the cases where you don’t need to access the “app”, “router”, “store” and so on.")]),n("p",null,"You can now add content to that file depending on the intended use of your boot file."),n("blockquote",{class:"doc-note"},[n("p",null,"Do not forget that your default export needs to be a function. However, you can have as many named exports as you want, should the boot file expose something for later usage. In this case, you can import any of these named exports anywhere in your app.")]),n("p",null,[a("The last step is to tell Quasar to use your new boot file. For this to happen you need to add the file in the "),n("code",{class:"doc-token"},"/quasar.config"),a(" file:")]),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"["),a(`
  `),n("span",{class:"token comment"},"// references /src/boot/<name>.js"),a(`
  `),n("span",{class:"token string"},"'<name>'"),a(`
`),n("span",{class:"token punctuation"},"]")])]),n(e)]),_:1}),n("p",null,"When building a SSR app, you may want some boot files to run only on the server or only on the client, in which case you can do so like below:"),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"["),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token literal-property property"},"server"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token comment"},"// run on client-side only!"),a(`
    `),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'<name>'"),a(),n("span",{class:"token comment"},"// references /src/boot/<name>.js"),a(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token literal-property property"},"client"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token comment"},"// run on server-side only!"),a(`
    `),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'<name>'"),a(),n("span",{class:"token comment"},"// references /src/boot/<name>.js"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"]")])]),n(e)]),_:1}),n("p",null,[a("In case you want to specify boot files from node_modules, you can do so by prepending the path with "),n("code",{class:"doc-token"},"~"),a(" (tilde) character:")]),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"["),a(`
  `),n("span",{class:"token comment"},"// boot file from an npm package"),a(`
  `),n("span",{class:"token string"},"'~my-npm-package/some/file'"),a(`
`),n("span",{class:"token punctuation"},"]")])]),n(e)]),_:1}),n("p",null,"If you want a boot file to be injected into your app only for a specific build type:"),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"["),a(`
  ctx`),n("span",{class:"token punctuation"},"."),a("mode"),n("span",{class:"token punctuation"},"."),a("electron "),n("span",{class:"token operator"},"?"),a(),n("span",{class:"token string"},"'some-file'"),a(),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"''"),a(`
`),n("span",{class:"token punctuation"},"]")])]),n(e)]),_:1}),n("h3",{id:"redirecting-to-another-page",class:"doc-heading doc-h3",onClick:k=>l(f)("redirecting-to-another-page")},"Redirecting to another page",8,["onClick"]),n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"WARNING"),n("p",null,"Please be mindful when redirecting as you might configure the app to go into an infinite redirect loop.")]),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" urlPath"),n("span",{class:"token punctuation"},","),a(" redirect "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// ..."),a(`
  `),n("span",{class:"token keyword"},"const"),a(" isAuthorized "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token comment"},"// ..."),a(`
  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),a("isAuthorized "),n("span",{class:"token operator"},"&&"),a(),n("span",{class:"token operator"},"!"),a("urlPath"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/login'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'/login'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token keyword"},"return"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token comment"},"// ..."),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]),_:1}),n("p",null,[a("The "),n("code",{class:"doc-token"},"redirect()"),a(" method accepts a String (full URL) or a Vue Router location String or Object. On SSR it can receive a second parameter which should be a Number for any of the HTTP STATUS codes that redirect the browser (3xx ones).")]),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// Examples for redirect() with a Vue Router location:"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/1'"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// Vue Router location as String"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'/1'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// Vue Router location as Object"),a(`

`),n("span",{class:"token comment"},"// Example for redirect() with a URL:"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'https://quasar.dev'"),n("span",{class:"token punctuation"},")")])]),n(e)]),_:1}),n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"IMPORTANT!"),n("p",null,[a("The Vue Router location (in String or Object form) does not refer to URL path (and hash), but to the actual Vue Router routes that you have defined. So "),n("strong",null,"don’t add the publicPath"),a(" to it and if you’re using the Vue Router hash mode then don’t add the hash to it.")]),n("p",null,[n("br"),a("Let’s say that we have this Vue Router route defined:"),n("br"),n("br")]),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'/one'"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token literal-property property"},"component"),n("span",{class:"token operator"},":"),a(` PageOne
`),n("span",{class:"token punctuation"},"}")])]),n(e)]),_:1}),n("p",null,[n("br"),a("Then "),n("strong",null,"regardless of our publicPath"),a(" we can call "),n("code",{class:"doc-token"},"redirect()"),a(" like this:"),n("br"),n("br")]),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// publicPath: /wiki; vueRouterMode: history"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/one'"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// good way"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'/one'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// good way"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/wiki/one'"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// WRONG!"),a(`

`),n("span",{class:"token comment"},"// publicPath: /wiki; vueRouterMode: hash"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/one'"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// good way"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'/one'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// good way"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/wiki/#/one'"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// WRONG!"),a(`

`),n("span",{class:"token comment"},"// no publicPath; vueRouterMode: hash"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/one'"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// good way"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'/one'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// good way"),a(`
`),n("span",{class:"token function"},"redirect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/#/one'"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// WRONG!")])]),n(e)]),_:1})]),n("p",null,"As it was mentioned in the previous sections, the default export of a boot file can return a Promise. If this Promise gets rejected with an Object that contains a “url” property, then Quasar CLI will redirect the user to that URL:"),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" urlPath "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token class-name"},"Promise"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[a("resolve"),n("span",{class:"token punctuation"},","),a(" reject")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// ..."),a(`
    `),n("span",{class:"token keyword"},"const"),a(" isAuthorized "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token comment"},"// ..."),a(`
    `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),a("isAuthorized "),n("span",{class:"token operator"},"&&"),a(),n("span",{class:"token operator"},"!"),a("urlPath"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/login'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
      `),n("span",{class:"token comment"},'// the "url" param here is of the same type'),a(`
      `),n("span",{class:"token comment"},'// as for "redirect" above'),a(`
      `),n("span",{class:"token function"},"reject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"url"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'/login'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
      `),n("span",{class:"token keyword"},"return"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token comment"},"// ..."),a(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]),_:1}),n("p",null,"Or a simpler equivalent:"),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// ..."),a(`
  `),n("span",{class:"token keyword"},"const"),a(" isAuthorized "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token comment"},"// ..."),a(`
  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),a("isAuthorized "),n("span",{class:"token operator"},"&&"),a(),n("span",{class:"token operator"},"!"),a("urlPath"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/login'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" Promise"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"url"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'/login'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token comment"},"// ..."),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]),_:1}),n("h3",{id:"quasar-app-flow",class:"doc-heading doc-h3",onClick:k=>l(f)("quasar-app-flow")},"Quasar App Flow",8,["onClick"]),n("p",null,"In order to better understand how a boot file works and what it does, you need to understand how your website/app boots:"),n("ol",null,[n("li",null,"Quasar is initialized (components, directives, plugins, Quasar i18n, Quasar icon sets)"),n("li",null,"Quasar Extras get imported (Roboto font – if used, icons, animations, …)"),n("li",null,"Quasar CSS & your app’s global CSS are imported"),n("li",null,"App.vue is loaded (not yet being used)"),n("li",null,"Store is imported (if using Pinia in src/stores or Vuex in src/store)"),n("li",null,"Pinia (if using) is injected into the Vue app instance"),n("li",null,"Router is imported (in src/router)"),n("li",null,"Boot files are imported"),n("li",null,"Router default export function executed"),n("li",null,"Boot files get their default export function executed"),n("li",null,"(if on Electron mode) Electron is imported and injected into Vue prototype"),n("li",null,"(if on Cordova mode) Listening for “deviceready” event and only then continuing with following steps"),n("li",null,"Instantiating Vue with root component and attaching to DOM")]),n("h2",{id:"examples-of-boot-files",class:"doc-heading doc-h2",onClick:k=>l(f)("examples-of-boot-files")},"Examples of boot files",8,["onClick"]),n("h3",{id:"axios",class:"doc-heading doc-h3",onClick:k=>l(f)("axios")},"Axios",8,["onClick"]),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" boot "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/wrappers'"),a(`
`),n("span",{class:"token keyword"},"import"),a(" axios "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'axios'"),a(`

`),n("span",{class:"token keyword"},"const"),a(" api "),n("span",{class:"token operator"},"="),a(" axios"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"create"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"baseURL"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'https://api.example.com'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token function"},"boot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" app "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// for use inside Vue files (Options API) through this.$axios and this.$api"),a(`

  app`),n("span",{class:"token punctuation"},"."),a("config"),n("span",{class:"token punctuation"},"."),a("globalProperties"),n("span",{class:"token punctuation"},"."),a("$axios "),n("span",{class:"token operator"},"="),a(` axios
  `),n("span",{class:"token comment"},"// ^ ^ ^ this will allow you to use this.$axios (for Vue Options API form)"),a(`
  `),n("span",{class:"token comment"},"//       so you won't necessarily have to import axios in each vue file"),a(`

  app`),n("span",{class:"token punctuation"},"."),a("config"),n("span",{class:"token punctuation"},"."),a("globalProperties"),n("span",{class:"token punctuation"},"."),a("$api "),n("span",{class:"token operator"},"="),a(` api
  `),n("span",{class:"token comment"},"// ^ ^ ^ this will allow you to use this.$api (for Vue Options API form)"),a(`
  `),n("span",{class:"token comment"},"//       so you can easily perform requests against your app's API"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token punctuation"},"{"),a(" axios"),n("span",{class:"token punctuation"},","),a(" api "),n("span",{class:"token punctuation"},"}")])]),n(e)]),_:1}),n("h3",{id:"vue-i18n",class:"doc-heading doc-h3",onClick:k=>l(f)("vue-i18n")},"vue-i18n",8,["onClick"]),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" boot "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/wrappers'"),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" createI18n "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'vue-i18n'"),a(`
`),n("span",{class:"token keyword"},"import"),a(" messages "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'src/i18n'"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token function"},"boot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" app "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// Create I18n instance"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" i18n "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"createI18n"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token literal-property property"},"locale"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'en-US'"),n("span",{class:"token punctuation"},","),a(`
    messages
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

  `),n("span",{class:"token comment"},"// Tell app to use the I18n instance"),a(`
  app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),a("i18n"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]),_:1}),n("h3",{id:"router-authentication",class:"doc-heading doc-h3",onClick:k=>l(f)("router-authentication")},"Router authentication",8,["onClick"]),n("p",null,"Some boot files might need to interfere with Vue Router configuration:"),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" boot "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/wrappers'"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token function"},"boot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" router"),n("span",{class:"token punctuation"},","),a(" store "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  router`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"beforeEach"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[a("to"),n("span",{class:"token punctuation"},","),a(" from"),n("span",{class:"token punctuation"},","),a(" next")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Now you need to add your authentication logic here, like calling an API endpoint"),a(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]),_:1}),n("h2",{id:"accessing-data-from-boot-files",class:"doc-heading doc-h2",onClick:k=>l(f)("accessing-data-from-boot-files")},"Accessing data from boot files",8,["onClick"]),n("p",null,"Sometimes you want to access data that you configure in your boot file in files where you don’t have access to the root Vue instance."),n("p",null,"Fortunately, because boot files are just normal JavaScript files you can add as many named exports to your boot file as you want."),n("p",null,"Let’s take the example of Axios. Sometimes you want to access your Axios instance inside your JavaScript files, but you cannot access the root Vue instance. To solve this you can export the Axios instance in your boot file and import it elsewhere."),n("p",null,"Consider the following boot file for axios:"),n(l(u),{title:"Axios boot file (src/boot/axios.js)"},{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(" axios "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'axios'"),a(`

`),n("span",{class:"token comment"},"// We create our own axios instance and set a custom base URL."),a(`
`),n("span",{class:"token comment"},"// Note that if we wouldn't set any config here we do not need"),a(`
`),n("span",{class:"token comment"},"// a named export, as we could just `import axios from 'axios'`"),a(`
`),n("span",{class:"token keyword"},"const"),a(" api "),n("span",{class:"token operator"},"="),a(" axios"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"create"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token literal-property property"},"baseURL"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'https://api.example.com'"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token comment"},"// for use inside Vue files through this.$axios and this.$api"),a(`
`),n("span",{class:"token comment"},"// (only in Vue Options API form)"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" app "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  app`),n("span",{class:"token punctuation"},"."),a("config"),n("span",{class:"token punctuation"},"."),a("globalProperties"),n("span",{class:"token punctuation"},"."),a("$axios "),n("span",{class:"token operator"},"="),a(` axios
  app`),n("span",{class:"token punctuation"},"."),a("config"),n("span",{class:"token punctuation"},"."),a("globalProperties"),n("span",{class:"token punctuation"},"."),a("$api "),n("span",{class:"token operator"},"="),a(` api
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token comment"},"// Here we define a named export"),a(`
`),n("span",{class:"token comment"},"// that we can later use inside .js files:"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token punctuation"},"{"),a(" axios"),n("span",{class:"token punctuation"},","),a(" api "),n("span",{class:"token punctuation"},"}")])]),n(e)]),_:1}),n("p",null,"In any JavaScript file, you’ll be able to import the axios instance like this."),n(l(u),null,{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// we import one of the named exports from src/boot/axios.js"),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" api "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'boot/axios'")])]),n(e)]),_:1}),n("p",null,[a("Further reading on syntax: "),n($,{to:"https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/import"},{default:p(()=>[a("ES6 import")]),_:1}),a(", "),n($,{to:"https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export"},{default:p(()=>[a("ES6 export")]),_:1}),a(".")])]}),_:1},P))}}},x=y.setup;y.setup=(g,h)=>{const d=j();return(d.modules||(d.modules=new Set)).add("src/pages/quasar-cli-webpack/boot-files.md"),x?x(g,h):void 0};const X=C(y,[["__file","boot-files.md"]]);export{X as default};
