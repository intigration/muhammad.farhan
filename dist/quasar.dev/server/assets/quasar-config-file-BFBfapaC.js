import{resolveComponent as P,mergeProps as A,withCtx as s,createTextVNode as t,unref as d,createVNode as n,useSSRContext as Q}from"vue";import{ssrRenderComponent as p}from"vue/server-renderer";import{c as h}from"./page-utils-C-QWsEHe.js";import{D as F,a as l}from"./DocPage-DKr-0pQn.js";import{D as m}from"./DocPrerender-DPOnWPFO.js";import{C as u}from"./CopyButton-l3ndfN49.js";import{_ as W}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const x={__name:"quasar-config-file",__ssrInlineRender:!0,setup(S){const v=[{id:"structure",title:"2. Structure"},{id:"the-basics",title:"2.1. The basics",sub:!0},{id:"ide-autocompletion",title:"2.2. IDE autocompletion",sub:!0},{id:"options-to-configure",title:"3. Options to Configure"},{id:"property-css",title:"3.1. Property: css",sub:!0},{id:"property-vendor",title:"3.2. Property: vendor",sub:!0},{id:"property-framework",title:"3.3. Property: framework",sub:!0},{id:"property-devserver",title:"3.4. Property: devServer",sub:!0},{id:"property-build",title:"3.5. Property: build",sub:!0},{id:"property-htmlvariables",title:"3.6. Property: htmlVariables",sub:!0},{id:"property-sourcefiles",title:"3.7. Property: sourceFiles",sub:!0},{id:"example-setting-env-for-dev-build",title:"3.8. Example setting env for dev/build",sub:!0},{id:"handling-webpack-configuration",title:"3.9. Handling Webpack configuration",sub:!0}];return(w,C,O,j)=>{const b=P("q-markup-table");C(p(F,A({title:"Configuring quasar.config file",desc:"(@quasar/app-webpack) Where, how and what you can configure in a Quasar app.",overline:"Quasar CLI with Webpack - @quasar/app-webpack",heading:"","edit-link":"quasar-cli-webpack/quasar-config-file",toc:v},j),{default:s((B,r,f,o)=>{if(r)r(`<p${o}>Quasar makes use of some awesome development tools under its hood, like `),r(p(l,{to:"https://webpack.js.org/"},{default:s((i,e,c,a)=>{if(e)e("Webpack");else return[t("Webpack")]}),_:1},f,o)),r(`. One of the great things about Quasar is its handling of most of the complex configuration needed by the underlying tools for you. As a result, you don’t even need to know Webpack or any of the other development tools in order to use Quasar.</p><p${o}>So what can you configure through the <code class="doc-token"${o}>/quasar.config</code> file?</p><ul${o}><li${o}>Quasar components, directives and plugins that you’ll be using in your website/app</li><li${o}>Default `),r(p(l,{to:"/options/quasar-language-packs"},{default:s((i,e,c,a)=>{if(e)e("Quasar Language Pack");else return[t("Quasar Language Pack")]}),_:1},f,o)),r(`</li><li${o}>`),r(p(l,{to:"/options/installing-icon-libraries"},{default:s((i,e,c,a)=>{if(e)e("Icon libraries");else return[t("Icon libraries")]}),_:1},f,o)),r(` that you wish to use</li><li${o}>Default `),r(p(l,{to:"/options/quasar-icon-sets"},{default:s((i,e,c,a)=>{if(e)e("Quasar Icon Set");else return[t("Quasar Icon Set")]}),_:1},f,o)),r(` for Quasar components</li><li${o}>Development server port, HTTPS mode, hostname and so on</li><li${o}>`),r(p(l,{to:"/options/animations"},{default:s((i,e,c,a)=>{if(e)e("CSS animations");else return[t("CSS animations")]}),_:1},f,o)),r(` that you wish to use</li><li${o}>`),r(p(l,{to:"/quasar-cli-webpack/boot-files"},{default:s((i,e,c,a)=>{if(e)e("Boot Files");else return[t("Boot Files")]}),_:1},f,o)),r(` list (that determines order of execution too) – which are files in <code class="doc-token"${o}>/src/boot</code> that tell how your app is initialized before mounting the root Vue component</li><li${o}>Global CSS/Sass/… files to be included in the bundle</li><li${o}>PWA `),r(p(l,{to:"/quasar-cli-webpack/developing-pwa/configuring-pwa#Configuring-Manifest-File"},{default:s((i,e,c,a)=>{if(e)e("manifest");else return[t("manifest")]}),_:1},f,o)),r(" and "),r(p(l,{to:"/quasar-cli-webpack/developing-pwa/configuring-pwa#quasar-config-file"},{default:s((i,e,c,a)=>{if(e)e("Workbox options");else return[t("Workbox options")]}),_:1},f,o)),r(`</li><li${o}>`),r(p(l,{to:"/quasar-cli-webpack/developing-electron-apps/configuring-electron#quasar-config-file"},{default:s((i,e,c,a)=>{if(e)e("Electron Packager");else return[t("Electron Packager")]}),_:1},f,o)),r(" and/or "),r(p(l,{to:"/quasar-cli-webpack/developing-electron-apps/configuring-electron#quasar-config-file"},{default:s((i,e,c,a)=>{if(e)e("Electron Builder");else return[t("Electron Builder")]}),_:1},f,o)),r(`</li><li${o}>Extend Webpack config</li></ul><div class="doc-note doc-note--tip"${o}><p class="doc-note__title"${o}>TIP</p><p${o}>You’ll notice that changing any of these settings does not require you to manually reload the dev server. Quasar detects and reloads the necessary processes. You won’t lose your development flow, because you can just sit back while Quasar CLI quickly reloads the changed code, even keeping the current state. This saves tons of your time!</p></div><div class="doc-note doc-note--warning"${o}><p class="doc-note__title"${o}>WARNING</p><p${o}>The <code class="doc-token"${o}>/quasar.config</code> file is run by the Quasar CLI build system, so this code runs under Node directly, not in the context of your app. This means you can require modules like ‘fs’, ‘path’, ‘webpack’, and so on. Make sure the ES features that you want to use in this file are `),r(p(l,{to:"https://node.green/"},{default:s((i,e,c,a)=>{if(e)e("supported by your Node version");else return[t("supported by your Node version")]}),_:1},f,o)),r(` (which should be &gt;= 14).</p></div><h2 id="structure" class="doc-heading doc-h2"${o}>Structure</h2><h3 id="the-basics" class="doc-heading doc-h3"${o}>The basics</h3><p${o}>You’ll notice that the <code class="doc-token"${o}>/quasar.config</code> file exports a function that takes a <code class="doc-token"${o}>ctx</code> (context) parameter and returns an Object. This allows you to dynamically change your website/app config based on this context:</p>`),r(p(d(m),null,{default:s((i,e,c,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}>module<span class="token punctuation"${a}>.</span><span class="token function-variable function"${a}>exports</span> <span class="token operator"${a}>=</span> <span class="token keyword"${a}>function</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>ctx</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span> <span class="token comment"${a}>// can be async too</span>
  console<span class="token punctuation"${a}>.</span><span class="token function"${a}>log</span><span class="token punctuation"${a}>(</span>ctx<span class="token punctuation"${a}>)</span>

  <span class="token comment"${a}>// Example output on console:</span>
  <span class="token punctuation"${a}>{</span>
    <span class="token literal-property property"${a}>dev</span><span class="token operator"${a}>:</span> <span class="token boolean"${a}>true</span><span class="token punctuation"${a}>,</span>
    <span class="token literal-property property"${a}>prod</span><span class="token operator"${a}>:</span> <span class="token boolean"${a}>false</span><span class="token punctuation"${a}>,</span>
    <span class="token literal-property property"${a}>mode</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span> <span class="token literal-property property"${a}>spa</span><span class="token operator"${a}>:</span> <span class="token boolean"${a}>true</span> <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>,</span>
    <span class="token literal-property property"${a}>modeName</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;spa&#39;</span><span class="token punctuation"${a}>,</span>
    <span class="token literal-property property"${a}>target</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span><span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>,</span>
    <span class="token literal-property property"${a}>targetName</span><span class="token operator"${a}>:</span> <span class="token keyword"${a}>undefined</span><span class="token punctuation"${a}>,</span>
    <span class="token literal-property property"${a}>arch</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span><span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>,</span>
    <span class="token literal-property property"${a}>archName</span><span class="token operator"${a}>:</span> <span class="token keyword"${a}>undefined</span><span class="token punctuation"${a}>,</span>
    <span class="token literal-property property"${a}>debug</span><span class="token operator"${a}>:</span> <span class="token keyword"${a}>undefined</span>
  <span class="token punctuation"${a}>}</span>

  <span class="token comment"${a}>// context gets generated based on the parameters</span>
  <span class="token comment"${a}>// with which you run &quot;quasar dev&quot; or &quot;quasar build&quot;</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(p(u,null,null,c,a));else return[n("pre",{class:"doc-code"},[n("code",null,[t("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token comment"},"// can be async too"),t(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),t("ctx"),n("span",{class:"token punctuation"},")"),t(`

  `),n("span",{class:"token comment"},"// Example output on console:"),t(`
  `),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token literal-property property"},"dev"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"prod"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"mode"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token literal-property property"},"spa"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token boolean"},"true"),t(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"modeName"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'spa'"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"target"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"targetName"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token keyword"},"undefined"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"arch"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"archName"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token keyword"},"undefined"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"debug"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token keyword"},"undefined"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`

  `),n("span",{class:"token comment"},"// context gets generated based on the parameters"),t(`
  `),n("span",{class:"token comment"},'// with which you run "quasar dev" or "quasar build"'),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},f,o)),r(`<p${o}>What this means is that, as an example, you can load a font when building for a certain mode (like PWA), and pick another one for the others:</p>`),r(p(d(m),null,{default:s((i,e,c,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}>module<span class="token punctuation"${a}>.</span><span class="token function-variable function"${a}>exports</span> <span class="token operator"${a}>=</span> <span class="token keyword"${a}>function</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>ctx</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>extras</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>[</span>
    ctx<span class="token punctuation"${a}>.</span>mode<span class="token punctuation"${a}>.</span>pwa <span class="token comment"${a}>// we&#39;re adding only if working on a PWA</span>
      <span class="token operator"${a}>?</span> <span class="token string"${a}>&#39;roboto-font&#39;</span>
      <span class="token operator"${a}>:</span> <span class="token keyword"${a}>null</span>
  <span class="token punctuation"${a}>]</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(p(u,null,null,c,a));else return[n("pre",{class:"doc-code"},[n("code",null,[t("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"extras"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(`
    ctx`),n("span",{class:"token punctuation"},"."),t("mode"),n("span",{class:"token punctuation"},"."),t("pwa "),n("span",{class:"token comment"},"// we're adding only if working on a PWA"),t(`
      `),n("span",{class:"token operator"},"?"),t(),n("span",{class:"token string"},"'roboto-font'"),t(`
      `),n("span",{class:"token operator"},":"),t(),n("span",{class:"token keyword"},"null"),t(`
  `),n("span",{class:"token punctuation"},"]"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},f,o)),r(`<p${o}>Or you can use a global CSS file for SPA mode and another one for Cordova mode while avoiding loading any such file for the other modes.</p>`),r(p(d(m),null,{default:s((i,e,c,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}>module<span class="token punctuation"${a}>.</span><span class="token function-variable function"${a}>exports</span> <span class="token operator"${a}>=</span> <span class="token keyword"${a}>function</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>ctx</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>css</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>[</span>
    ctx<span class="token punctuation"${a}>.</span>mode<span class="token punctuation"${a}>.</span>spa <span class="token operator"${a}>?</span> <span class="token string"${a}>&#39;app-spa.sass&#39;</span> <span class="token operator"${a}>:</span> <span class="token keyword"${a}>null</span><span class="token punctuation"${a}>,</span> <span class="token comment"${a}>// looks for /src/css/app-spa.sass</span>
    ctx<span class="token punctuation"${a}>.</span>mode<span class="token punctuation"${a}>.</span>cordova <span class="token operator"${a}>?</span> <span class="token string"${a}>&#39;app-cordova.sass&#39;</span> <span class="token operator"${a}>:</span> <span class="token keyword"${a}>null</span>  <span class="token comment"${a}>// looks for /src/css/app-cordova.sass</span>
  <span class="token punctuation"${a}>]</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(p(u,null,null,c,a));else return[n("pre",{class:"doc-code"},[n("code",null,[t("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"css"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(`
    ctx`),n("span",{class:"token punctuation"},"."),t("mode"),n("span",{class:"token punctuation"},"."),t("spa "),n("span",{class:"token operator"},"?"),t(),n("span",{class:"token string"},"'app-spa.sass'"),t(),n("span",{class:"token operator"},":"),t(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token comment"},"// looks for /src/css/app-spa.sass"),t(`
    ctx`),n("span",{class:"token punctuation"},"."),t("mode"),n("span",{class:"token punctuation"},"."),t("cordova "),n("span",{class:"token operator"},"?"),t(),n("span",{class:"token string"},"'app-cordova.sass'"),t(),n("span",{class:"token operator"},":"),t(),n("span",{class:"token keyword"},"null"),t("  "),n("span",{class:"token comment"},"// looks for /src/css/app-cordova.sass"),t(`
  `),n("span",{class:"token punctuation"},"]"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},f,o)),r(`<p${o}>Or you can configure the dev server to run on port 8000 for SPA mode, on port 9000 for PWA mode or on port 9090 for the other modes:</p>`),r(p(d(m),null,{default:s((i,e,c,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}>module<span class="token punctuation"${a}>.</span><span class="token function-variable function"${a}>exports</span> <span class="token operator"${a}>=</span> <span class="token keyword"${a}>function</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>ctx</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>devServer</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
    <span class="token literal-property property"${a}>port</span><span class="token operator"${a}>:</span> ctx<span class="token punctuation"${a}>.</span>mode<span class="token punctuation"${a}>.</span>spa
      <span class="token operator"${a}>?</span> <span class="token number"${a}>8000</span>
      <span class="token operator"${a}>:</span> <span class="token punctuation"${a}>(</span>ctx<span class="token punctuation"${a}>.</span>mode<span class="token punctuation"${a}>.</span>pwa <span class="token operator"${a}>?</span> <span class="token number"${a}>9000</span> <span class="token operator"${a}>:</span> <span class="token number"${a}>9090</span><span class="token punctuation"${a}>)</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(p(u,null,null,c,a));else return[n("pre",{class:"doc-code"},[n("code",null,[t("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"devServer"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token literal-property property"},"port"),n("span",{class:"token operator"},":"),t(" ctx"),n("span",{class:"token punctuation"},"."),t("mode"),n("span",{class:"token punctuation"},"."),t(`spa
      `),n("span",{class:"token operator"},"?"),t(),n("span",{class:"token number"},"8000"),t(`
      `),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"("),t("ctx"),n("span",{class:"token punctuation"},"."),t("mode"),n("span",{class:"token punctuation"},"."),t("pwa "),n("span",{class:"token operator"},"?"),t(),n("span",{class:"token number"},"9000"),t(),n("span",{class:"token operator"},":"),t(),n("span",{class:"token number"},"9090"),n("span",{class:"token punctuation"},")"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},f,o)),r(`<p${o}>You can also do async work before returning the quasar configuration:</p>`),r(p(d(m),null,{default:s((i,e,c,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}>module<span class="token punctuation"${a}>.</span><span class="token function-variable function"${a}>exports</span> <span class="token operator"${a}>=</span> <span class="token keyword"${a}>async</span> <span class="token keyword"${a}>function</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>ctx</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
  <span class="token keyword"${a}>const</span> data <span class="token operator"${a}>=</span> <span class="token keyword"${a}>await</span> <span class="token function"${a}>someAsyncFunction</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span>
  <span class="token keyword"${a}>return</span> <span class="token punctuation"${a}>{</span>
    <span class="token comment"${a}>// ... use &quot;data&quot;</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span>

<span class="token comment"${a}>// or:</span>
module<span class="token punctuation"${a}>.</span><span class="token function-variable function"${a}>exports</span> <span class="token operator"${a}>=</span> <span class="token keyword"${a}>function</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>ctx</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
  <span class="token keyword"${a}>return</span> <span class="token keyword"${a}>new</span> <span class="token class-name"${a}>Promise</span><span class="token punctuation"${a}>(</span><span class="token parameter"${a}>resolve</span> <span class="token operator"${a}>=&gt;</span> <span class="token punctuation"${a}>{</span>
    <span class="token comment"${a}>// some async work then:</span>
    <span class="token comment"${a}>// resolve() with the quasar config</span>
    <span class="token function"${a}>resolve</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>{</span>
      <span class="token comment"${a}>//</span>
    <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span>
  <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(p(u,null,null,c,a));else return[n("pre",{class:"doc-code"},[n("code",null,[t("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"async"),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token keyword"},"const"),t(" data "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"await"),t(),n("span",{class:"token function"},"someAsyncFunction"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(`
  `),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token comment"},'// ... use "data"'),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`

`),n("span",{class:"token comment"},"// or:"),t(`
module`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token keyword"},"new"),t(),n("span",{class:"token class-name"},"Promise"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"resolve"),t(),n("span",{class:"token operator"},"=>"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token comment"},"// some async work then:"),t(`
    `),n("span",{class:"token comment"},"// resolve() with the quasar config"),t(`
    `),n("span",{class:"token function"},"resolve"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),t(`
      `),n("span",{class:"token comment"},"//"),t(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},f,o)),r(`<p${o}>The possibilities are endless.</p><h3 id="ide-autocompletion" class="doc-heading doc-h3"${o}>IDE autocompletion</h3><p${o}>You can wrap the returned function with <code class="doc-token"${o}>configure()</code> helper to get a better IDE autocomplete experience (through Typescript):</p>`),r(p(d(m),null,{default:s((i,e,c,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>const</span> <span class="token punctuation"${a}>{</span> configure <span class="token punctuation"${a}>}</span> <span class="token operator"${a}>=</span> <span class="token function"${a}>require</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;quasar/wrappers&#39;</span><span class="token punctuation"${a}>)</span>

module<span class="token punctuation"${a}>.</span>exports <span class="token operator"${a}>=</span> <span class="token function"${a}>configure</span><span class="token punctuation"${a}>(</span><span class="token keyword"${a}>function</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>ctx</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
  <span class="token comment"${a}>/* configuration options */</span>
<span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span></code></pre>`),e(p(u,null,null,c,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"const"),t(),n("span",{class:"token punctuation"},"{"),t(" configure "),n("span",{class:"token punctuation"},"}"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'quasar/wrappers'"),n("span",{class:"token punctuation"},")"),t(`

module`),n("span",{class:"token punctuation"},"."),t("exports "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token function"},"configure"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token comment"},"/* configuration options */"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(u)]}),_:1},f,o)),r(`<h2 id="options-to-configure" class="doc-heading doc-h2"${o}>Options to Configure</h2><p${o}>Let’s take each option one by one:</p>`),r(p(b,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:s((i,e,c,a)=>{if(e)e(`<thead${a}><tr${a}><th class="text-left"${a}>Property</th><th class="text-left"${a}>Type</th><th class="text-left"${a}>Description</th></tr></thead><tbody${a}><tr${a}><td${a}>css</td><td${a}>Array</td><td${a}>Global CSS/Sass/… files from <code class="doc-token"${a}>/src/css/</code>, except for theme files, which are included by default.</td></tr><tr${a}><td${a}>preFetch</td><td${a}>Boolean</td><td${a}>Enable `),e(p(l,{to:"/quasar-cli-webpack/prefetch-feature"},{default:s((y,k,g,$)=>{if(k)k("PreFetch Feature");else return[t("PreFetch Feature")]}),_:1},c,a)),e(`.</td></tr><tr${a}><td${a}>extras</td><td${a}>Array</td><td${a}>What to import from `),e(p(l,{to:"https://github.com/quasarframework/quasar/tree/dev/extras"},{default:s((y,k,g,$)=>{if(k)k("@quasar/extras");else return[t("@quasar/extras")]}),_:1},c,a)),e(` package. Example: <em${a}>[‘material-icons’, ‘roboto-font’, ‘ionicons-v4’]</em></td></tr><tr${a}><td${a}>vendor</td><td${a}>Object</td><td${a}>Add/remove files/3rd party libraries to/from vendor chunk: { add: […], remove: […] }.</td></tr><tr${a}><td${a}>supportTS</td><td${a}>Boolean/Object</td><td${a}>Add support for TypeScript. `),e(p(l,{to:"/quasar-cli-webpack/supporting-ts"},{default:s((y,k,g,$)=>{if(k)k("More info");else return[t("More info")]}),_:1},c,a)),e(`</td></tr><tr${a}><td${a}>htmlVariables</td><td${a}>Object</td><td${a}>Add variables that you can use in /index.html or /src/index.template.html.</td></tr><tr${a}><td${a}>framework</td><td${a}>Object/String</td><td${a}>What Quasar components/directives/plugins to import, what Quasar language pack to use, what Quasar icon set to use for Quasar components.</td></tr><tr${a}><td${a}>animations</td><td${a}>Object/String</td><td${a}>What `),e(p(l,{to:"/options/animations"},{default:s((y,k,g,$)=>{if(k)k("CSS animations");else return[t("CSS animations")]}),_:1},c,a)),e(` to import. Example: <em${a}>[‘bounceInLeft’, ‘bounceOutRight’]</em></td></tr><tr${a}><td${a}>devServer</td><td${a}>Object</td><td${a}>Webpack devServer options. Some properties are overwritten based on the Quasar mode you’re using in order to ensure a correct config. Note: if you’re proxying the development server (i.e. using a cloud IDE), set the <code class="doc-token"${a}>public</code> setting to your public application URL.</td></tr><tr${a}><td${a}>build</td><td${a}>Object</td><td${a}>Build configuration options.</td></tr><tr${a}><td${a}>sourceFiles</td><td${a}>Object</td><td${a}>Change the default name of parts of your app.</td></tr><tr${a}><td${a}>cordova</td><td${a}>Object</td><td${a}>Cordova specific `),e(p(l,{to:"/quasar-cli-webpack/developing-cordova-apps/configuring-cordova"},{default:s((y,k,g,$)=>{if(k)k("config");else return[t("config")]}),_:1},c,a)),e(`.</td></tr><tr${a}><td${a}>capacitor</td><td${a}>Object</td><td${a}>Quasar CLI Capacitor specific `),e(p(l,{to:"/quasar-cli-webpack/developing-capacitor-apps/configuring-capacitor"},{default:s((y,k,g,$)=>{if(k)k("config");else return[t("config")]}),_:1},c,a)),e(`.</td></tr><tr${a}><td${a}>pwa</td><td${a}>Object</td><td${a}>PWA specific `),e(p(l,{to:"/quasar-cli-webpack/developing-pwa/configuring-pwa"},{default:s((y,k,g,$)=>{if(k)k("config");else return[t("config")]}),_:1},c,a)),e(`.</td></tr><tr${a}><td${a}>ssr</td><td${a}>Object</td><td${a}>SSR specific `),e(p(l,{to:"/quasar-cli-webpack/developing-ssr/configuring-ssr"},{default:s((y,k,g,$)=>{if(k)k("config");else return[t("config")]}),_:1},c,a)),e(`.</td></tr><tr${a}><td${a}>electron</td><td${a}>Object</td><td${a}>Electron specific `),e(p(l,{to:"/quasar-cli-webpack/developing-electron-apps/configuring-electron"},{default:s((y,k,g,$)=>{if(k)k("config");else return[t("config")]}),_:1},c,a)),e(".</td></tr></tbody>");else return[n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Property"),n("th",{class:"text-left"},"Type"),n("th",{class:"text-left"},"Description")])]),n("tbody",null,[n("tr",null,[n("td",null,"css"),n("td",null,"Array"),n("td",null,[t("Global CSS/Sass/… files from "),n("code",{class:"doc-token"},"/src/css/"),t(", except for theme files, which are included by default.")])]),n("tr",null,[n("td",null,"preFetch"),n("td",null,"Boolean"),n("td",null,[t("Enable "),n(l,{to:"/quasar-cli-webpack/prefetch-feature"},{default:s(()=>[t("PreFetch Feature")]),_:1}),t(".")])]),n("tr",null,[n("td",null,"extras"),n("td",null,"Array"),n("td",null,[t("What to import from "),n(l,{to:"https://github.com/quasarframework/quasar/tree/dev/extras"},{default:s(()=>[t("@quasar/extras")]),_:1}),t(" package. Example: "),n("em",null,"[‘material-icons’, ‘roboto-font’, ‘ionicons-v4’]")])]),n("tr",null,[n("td",null,"vendor"),n("td",null,"Object"),n("td",null,"Add/remove files/3rd party libraries to/from vendor chunk: { add: […], remove: […] }.")]),n("tr",null,[n("td",null,"supportTS"),n("td",null,"Boolean/Object"),n("td",null,[t("Add support for TypeScript. "),n(l,{to:"/quasar-cli-webpack/supporting-ts"},{default:s(()=>[t("More info")]),_:1})])]),n("tr",null,[n("td",null,"htmlVariables"),n("td",null,"Object"),n("td",null,"Add variables that you can use in /index.html or /src/index.template.html.")]),n("tr",null,[n("td",null,"framework"),n("td",null,"Object/String"),n("td",null,"What Quasar components/directives/plugins to import, what Quasar language pack to use, what Quasar icon set to use for Quasar components.")]),n("tr",null,[n("td",null,"animations"),n("td",null,"Object/String"),n("td",null,[t("What "),n(l,{to:"/options/animations"},{default:s(()=>[t("CSS animations")]),_:1}),t(" to import. Example: "),n("em",null,"[‘bounceInLeft’, ‘bounceOutRight’]")])]),n("tr",null,[n("td",null,"devServer"),n("td",null,"Object"),n("td",null,[t("Webpack devServer options. Some properties are overwritten based on the Quasar mode you’re using in order to ensure a correct config. Note: if you’re proxying the development server (i.e. using a cloud IDE), set the "),n("code",{class:"doc-token"},"public"),t(" setting to your public application URL.")])]),n("tr",null,[n("td",null,"build"),n("td",null,"Object"),n("td",null,"Build configuration options.")]),n("tr",null,[n("td",null,"sourceFiles"),n("td",null,"Object"),n("td",null,"Change the default name of parts of your app.")]),n("tr",null,[n("td",null,"cordova"),n("td",null,"Object"),n("td",null,[t("Cordova specific "),n(l,{to:"/quasar-cli-webpack/developing-cordova-apps/configuring-cordova"},{default:s(()=>[t("config")]),_:1}),t(".")])]),n("tr",null,[n("td",null,"capacitor"),n("td",null,"Object"),n("td",null,[t("Quasar CLI Capacitor specific "),n(l,{to:"/quasar-cli-webpack/developing-capacitor-apps/configuring-capacitor"},{default:s(()=>[t("config")]),_:1}),t(".")])]),n("tr",null,[n("td",null,"pwa"),n("td",null,"Object"),n("td",null,[t("PWA specific "),n(l,{to:"/quasar-cli-webpack/developing-pwa/configuring-pwa"},{default:s(()=>[t("config")]),_:1}),t(".")])]),n("tr",null,[n("td",null,"ssr"),n("td",null,"Object"),n("td",null,[t("SSR specific "),n(l,{to:"/quasar-cli-webpack/developing-ssr/configuring-ssr"},{default:s(()=>[t("config")]),_:1}),t(".")])]),n("tr",null,[n("td",null,"electron"),n("td",null,"Object"),n("td",null,[t("Electron specific "),n(l,{to:"/quasar-cli-webpack/developing-electron-apps/configuring-electron"},{default:s(()=>[t("config")]),_:1}),t(".")])])])]}),_:1},f,o)),r(`<h3 id="property-css" class="doc-heading doc-h3"${o}>Property: css</h3><p${o}>Global CSS/Sass/… files from <code class="doc-token"${o}>/src/css/</code>, except for theme files, which are included by default.</p>`),r(p(d(m),{title:"/quasar.config file"},{default:s((i,e,c,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>return</span> <span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>css</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>[</span>
    <span class="token string"${a}>&#39;app.sass&#39;</span><span class="token punctuation"${a}>,</span> <span class="token comment"${a}>// referring to /src/css/app.sass</span>
    <span class="token string"${a}>&#39;~some-library/style.css&#39;</span> <span class="token comment"${a}>// referring to node_modules/some-library/style.css</span>
  <span class="token punctuation"${a}>]</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(p(u,null,null,c,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"css"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(`
    `),n("span",{class:"token string"},"'app.sass'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token comment"},"// referring to /src/css/app.sass"),t(`
    `),n("span",{class:"token string"},"'~some-library/style.css'"),t(),n("span",{class:"token comment"},"// referring to node_modules/some-library/style.css"),t(`
  `),n("span",{class:"token punctuation"},"]"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},f,o)),r(`<h3 id="property-vendor" class="doc-heading doc-h3"${o}>Property: vendor</h3><p${o}>By default, everything that comes from <code class="doc-token"${o}>node_modules</code> will be injected into the vendor chunk for performance &amp; caching reasons. However, should you wish to add or remove something from this special chunk, you can do so:</p>`),r(p(d(m),{title:"/quasar.config file"},{default:s((i,e,c,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>return</span> <span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>vendor</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
    <span class="token comment"${a}>/* optional;
       disables vendor chunk: */</span> <span class="token literal-property property"${a}>disable</span><span class="token operator"${a}>:</span> <span class="token boolean"${a}>true</span><span class="token punctuation"${a}>,</span>

    <span class="token literal-property property"${a}>add</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>[</span> <span class="token string"${a}>&#39;src/plugins/my-special-plugin&#39;</span> <span class="token punctuation"${a}>]</span><span class="token punctuation"${a}>,</span>
    <span class="token literal-property property"${a}>remove</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>[</span><span class="token string"${a}>&#39;axios&#39;</span><span class="token punctuation"${a}>,</span> <span class="token string"${a}>&#39;vue$&#39;</span><span class="token punctuation"${a}>]</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(p(u,null,null,c,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"vendor"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token comment"},`/* optional;
       disables vendor chunk: */`),t(),n("span",{class:"token literal-property property"},"disable"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),t(`

    `),n("span",{class:"token literal-property property"},"add"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(),n("span",{class:"token string"},"'src/plugins/my-special-plugin'"),t(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"remove"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'axios'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token string"},"'vue$'"),n("span",{class:"token punctuation"},"]"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},f,o)),r(`<h3 id="property-framework" class="doc-heading doc-h3"${o}>Property: framework</h3><p${o}>Tells the CLI what Quasar components/directives/plugins to import, what Quasar I18n language pack to use, what icon set to use for Quasar components and more.</p><p${o}>Filling “components” and “directives” is required only if “all” is set to <code class="doc-token"${o}>false</code>.</p>`),r(p(d(m),{title:"/quasar.config file"},{default:s((i,e,c,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>return</span> <span class="token punctuation"${a}>{</span>
  <span class="token comment"${a}>// a list with all options (all are optional)</span>
  <span class="token literal-property property"${a}>framework</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
    <span class="token comment"${a}>// is using &quot;auto&quot; import strategy, you can also configure:</span>
    <span class="token literal-property property"${a}>autoImportComponentCase</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;pascal&#39;</span><span class="token punctuation"${a}>,</span> <span class="token comment"${a}>// or &#39;kebab&#39; (default) or &#39;combined&#39;</span>

    <span class="token comment"${a}>// For special cases outside of where auto-import can have an impact</span>
    <span class="token comment"${a}>// (example: vue components written in .js files instead of .vue),</span>
    <span class="token comment"${a}>// you can manually specify Quasar components/directives to be available everywhere:</span>
    <span class="token comment"${a}>//</span>
    <span class="token comment"${a}>// components: [],</span>
    <span class="token comment"${a}>// directives: [],</span>

    <span class="token comment"${a}>// Quasar plugins</span>
    <span class="token literal-property property"${a}>plugins</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>[</span><span class="token string"${a}>&#39;Notify&#39;</span> <span class="token comment"${a}>/* ... */</span><span class="token punctuation"${a}>]</span><span class="token punctuation"${a}>,</span>

    <span class="token comment"${a}>// Quasar config</span>
    <span class="token comment"${a}>// You&#39;ll see this mentioned for components/directives/plugins which use it</span>
    <span class="token literal-property property"${a}>config</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span> <span class="token comment"${a}>/* ... */</span> <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>,</span>

    <span class="token literal-property property"${a}>iconSet</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;fontawesome-v6&#39;</span><span class="token punctuation"${a}>,</span> <span class="token comment"${a}>// requires icon library to be specified in &quot;extras&quot; section too,</span>
    <span class="token literal-property property"${a}>lang</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;de&#39;</span><span class="token punctuation"${a}>,</span> <span class="token comment"${a}>// Tell Quasar which language pack to use for its own components</span>

    <span class="token literal-property property"${a}>cssAddon</span><span class="token operator"${a}>:</span> <span class="token boolean"${a}>true</span> <span class="token comment"${a}>// Adds the flex responsive++ CSS classes (noticeable bump in footprint)</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(p(u,null,null,c,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token comment"},"// a list with all options (all are optional)"),t(`
  `),n("span",{class:"token literal-property property"},"framework"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token comment"},'// is using "auto" import strategy, you can also configure:'),t(`
    `),n("span",{class:"token literal-property property"},"autoImportComponentCase"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'pascal'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token comment"},"// or 'kebab' (default) or 'combined'"),t(`

    `),n("span",{class:"token comment"},"// For special cases outside of where auto-import can have an impact"),t(`
    `),n("span",{class:"token comment"},"// (example: vue components written in .js files instead of .vue),"),t(`
    `),n("span",{class:"token comment"},"// you can manually specify Quasar components/directives to be available everywhere:"),t(`
    `),n("span",{class:"token comment"},"//"),t(`
    `),n("span",{class:"token comment"},"// components: [],"),t(`
    `),n("span",{class:"token comment"},"// directives: [],"),t(`

    `),n("span",{class:"token comment"},"// Quasar plugins"),t(`
    `),n("span",{class:"token literal-property property"},"plugins"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'Notify'"),t(),n("span",{class:"token comment"},"/* ... */"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),t(`

    `),n("span",{class:"token comment"},"// Quasar config"),t(`
    `),n("span",{class:"token comment"},"// You'll see this mentioned for components/directives/plugins which use it"),t(`
    `),n("span",{class:"token literal-property property"},"config"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token comment"},"/* ... */"),t(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`

    `),n("span",{class:"token literal-property property"},"iconSet"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'fontawesome-v6'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token comment"},'// requires icon library to be specified in "extras" section too,'),t(`
    `),n("span",{class:"token literal-property property"},"lang"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'de'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token comment"},"// Tell Quasar which language pack to use for its own components"),t(`

    `),n("span",{class:"token literal-property property"},"cssAddon"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token boolean"},"true"),t(),n("span",{class:"token comment"},"// Adds the flex responsive++ CSS classes (noticeable bump in footprint)"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},f,o)),r(`<p${o}>More on cssAddon `),r(p(l,{to:"/layout/grid/introduction-to-flexbox#flex-addons"},{default:s((i,e,c,a)=>{if(e)e("here");else return[t("here")]}),_:1},f,o)),r(`.</p><h3 id="property-devserver" class="doc-heading doc-h3"${o}>Property: devServer</h3><p${o}><strong${o}>Webpack devServer options</strong>. Take a look at the `),r(p(l,{to:"https://webpack.js.org/configuration/dev-server/"},{default:s((i,e,c,a)=>{if(e)e("full list");else return[t("full list")]}),_:1},f,o)),r(` of options. Some are overwritten by Quasar CLI based on “quasar dev” parameters and Quasar mode in order to ensure that everything is setup correctly. Note: if you’re proxying the development server (i.e. using a cloud IDE or local tunnel), set the <code class="doc-token"${o}>webSocketURL</code> setting in the <code class="doc-token"${o}>client</code> section to your public application URL to allow features like Live Reload and Hot Module Replacement to work as `),r(p(l,{to:"https://webpack.js.org/configuration/dev-server/#websocketurl"},{default:s((i,e,c,a)=>{if(e)e("described here");else return[t("described here")]}),_:1},f,o)),r(`.</p><p${o}>Most used properties are:</p>`),r(p(b,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:s((i,e,c,a)=>{if(e)e(`<thead${a}><tr${a}><th class="text-left"${a}>Property</th><th class="text-left"${a}>Type</th><th class="text-left"${a}>Description</th></tr></thead><tbody${a}><tr${a}><td${a}>port</td><td${a}>Number</td><td${a}>Port of dev server</td></tr><tr${a}><td${a}>host</td><td${a}>String</td><td${a}>Local IP/Host to use for dev server</td></tr><tr${a}><td${a}>open</td><td${a}>Boolean/Object</td><td${a}>Unless it’s set to <code class="doc-token"${a}>false</code>, Quasar will open up a browser pointing to dev server address automatically. Applies to SPA, PWA and SSR modes. Uses `),e(p(l,{to:"https://github.com/sindresorhus/open#usage"},{default:s((y,k,g,$)=>{if(k)k("open");else return[t("open")]}),_:1},c,a)),e(` package params. For more details, please see below.</td></tr><tr${a}><td${a}>proxy</td><td${a}>Object/Array</td><td${a}>Proxying some URLs can be useful when you have a separate API backend development server and you want to send API requests on the same domain.</td></tr><tr${a}><td${a}>devMiddleware</td><td${a}>Object</td><td${a}>Configuration supplied to webpack-dev-middleware v4</td></tr><tr${a}><td${a}>server</td><td${a}>Object</td><td${a}>Here you can configure HTTPS instead of HTTP (see below)</td></tr><tr${a}><td${a}>onBeforeSetupMiddleware</td><td${a}>Function</td><td${a}>Configure the dev middlewares before webpack-dev-server applies its own config.</td></tr><tr${a}><td${a}>onAfterSetupMiddleware</td><td${a}>Function</td><td${a}>Configure the dev middlewares after webpack-dev-server applies its own config.</td></tr></tbody>`);else return[n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Property"),n("th",{class:"text-left"},"Type"),n("th",{class:"text-left"},"Description")])]),n("tbody",null,[n("tr",null,[n("td",null,"port"),n("td",null,"Number"),n("td",null,"Port of dev server")]),n("tr",null,[n("td",null,"host"),n("td",null,"String"),n("td",null,"Local IP/Host to use for dev server")]),n("tr",null,[n("td",null,"open"),n("td",null,"Boolean/Object"),n("td",null,[t("Unless it’s set to "),n("code",{class:"doc-token"},"false"),t(", Quasar will open up a browser pointing to dev server address automatically. Applies to SPA, PWA and SSR modes. Uses "),n(l,{to:"https://github.com/sindresorhus/open#usage"},{default:s(()=>[t("open")]),_:1}),t(" package params. For more details, please see below.")])]),n("tr",null,[n("td",null,"proxy"),n("td",null,"Object/Array"),n("td",null,"Proxying some URLs can be useful when you have a separate API backend development server and you want to send API requests on the same domain.")]),n("tr",null,[n("td",null,"devMiddleware"),n("td",null,"Object"),n("td",null,"Configuration supplied to webpack-dev-middleware v4")]),n("tr",null,[n("td",null,"server"),n("td",null,"Object"),n("td",null,"Here you can configure HTTPS instead of HTTP (see below)")]),n("tr",null,[n("td",null,"onBeforeSetupMiddleware"),n("td",null,"Function"),n("td",null,"Configure the dev middlewares before webpack-dev-server applies its own config.")]),n("tr",null,[n("td",null,"onAfterSetupMiddleware"),n("td",null,"Function"),n("td",null,"Configure the dev middlewares after webpack-dev-server applies its own config.")])])]}),_:1},f,o)),r(`<p${o}>Using <code class="doc-token"${o}>open</code> prop to open with a specific browser and not with the default browser of your OS (check `),r(p(l,{to:"https://github.com/sindresorhus/open#options"},{default:s((i,e,c,a)=>{if(e)e("supported values");else return[t("supported values")]}),_:1},f,o)),r(`). The <code class="doc-token"${o}>options</code> param described in previous link is what you should configure quasar.config file &gt; devSever &gt; open with. Some examples:</p>`),r(p(d(m),{title:"/quasar.config file"},{default:s((i,e,c,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token comment"${a}>// (syntax below requires @quasar/app-webpack v3.3+)</span>

<span class="token comment"${a}>// opens Google Chrome</span>
<span class="token literal-property property"${a}>devServer</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>open</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
    <span class="token literal-property property"${a}>app</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span> <span class="token literal-property property"${a}>name</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;google chrome&#39;</span> <span class="token punctuation"${a}>}</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span>

<span class="token comment"${a}>// opens Firefox</span>
<span class="token literal-property property"${a}>devServer</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>open</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
    <span class="token literal-property property"${a}>app</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span> <span class="token literal-property property"${a}>name</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;firefox&#39;</span> <span class="token punctuation"${a}>}</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span>

<span class="token comment"${a}>// opens Google Chrome and automatically deals with cross-platform issues:</span>
<span class="token keyword"${a}>const</span> open <span class="token operator"${a}>=</span> <span class="token function"${a}>require</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;open&#39;</span><span class="token punctuation"${a}>)</span>

<span class="token literal-property property"${a}>devServer</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>open</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
    <span class="token literal-property property"${a}>app</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span> <span class="token literal-property property"${a}>name</span><span class="token operator"${a}>:</span> open<span class="token punctuation"${a}>.</span>apps<span class="token punctuation"${a}>.</span>chrome <span class="token punctuation"${a}>}</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(p(u,null,null,c,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// (syntax below requires @quasar/app-webpack v3.3+)"),t(`

`),n("span",{class:"token comment"},"// opens Google Chrome"),t(`
`),n("span",{class:"token literal-property property"},"devServer"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"open"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token literal-property property"},"app"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'google chrome'"),t(),n("span",{class:"token punctuation"},"}"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`

`),n("span",{class:"token comment"},"// opens Firefox"),t(`
`),n("span",{class:"token literal-property property"},"devServer"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"open"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token literal-property property"},"app"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'firefox'"),t(),n("span",{class:"token punctuation"},"}"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`

`),n("span",{class:"token comment"},"// opens Google Chrome and automatically deals with cross-platform issues:"),t(`
`),n("span",{class:"token keyword"},"const"),t(" open "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'open'"),n("span",{class:"token punctuation"},")"),t(`

`),n("span",{class:"token literal-property property"},"devServer"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"open"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token literal-property property"},"app"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),t(" open"),n("span",{class:"token punctuation"},"."),t("apps"),n("span",{class:"token punctuation"},"."),t("chrome "),n("span",{class:"token punctuation"},"}"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},f,o)),r(`<p${o}>When you set <code class="doc-token"${o}>devServer &gt; server &gt; type: &#39;https&#39;</code> in your the <code class="doc-token"${o}>/quasar.config</code> file, Quasar will auto-generate a SSL certificate for you. However, if you want to create one yourself for your localhost, then check out this blog post by `),r(p(l,{to:"https://blog.filippo.io/mkcert-valid-https-certificates-for-localhost/"},{default:s((i,e,c,a)=>{if(e)e("Filippo");else return[t("Filippo")]}),_:1},f,o)),r(`. Then your <code class="doc-token"${o}>quasar.config file &gt; devServer &gt; server</code> should look like this:</p>`),r(p(d(m),{title:"/quasar.config file"},{default:s((i,e,c,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token literal-property property"${a}>devServer</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>server</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
    <span class="token literal-property property"${a}>type</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;https&#39;</span><span class="token punctuation"${a}>,</span> <span class="token comment"${a}>// NECESSARY (alternative is type &#39;http&#39;)</span>

    <span class="token literal-property property"${a}>options</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
      <span class="token comment"${a}>// Use ABSOLUTE paths or path.join(__dirname, &#39;root/relative/path&#39;)</span>
      <span class="token literal-property property"${a}>key</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&quot;/path/to/server.key&quot;</span><span class="token punctuation"${a}>,</span>
      <span class="token literal-property property"${a}>pfx</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&quot;/path/to/server.pfx&quot;</span><span class="token punctuation"${a}>,</span>
      <span class="token literal-property property"${a}>cert</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&quot;/path/to/server.crt&quot;</span><span class="token punctuation"${a}>,</span>
      <span class="token literal-property property"${a}>ca</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&quot;/path/to/ca.pem&quot;</span><span class="token punctuation"${a}>,</span>
      <span class="token literal-property property"${a}>passphrase</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;webpack-dev-server&#39;</span> <span class="token comment"${a}>// do you need it?</span>
    <span class="token punctuation"${a}>}</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(p(u,null,null,c,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"devServer"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"server"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token literal-property property"},"type"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'https'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token comment"},"// NECESSARY (alternative is type 'http')"),t(`

    `),n("span",{class:"token literal-property property"},"options"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
      `),n("span",{class:"token comment"},"// Use ABSOLUTE paths or path.join(__dirname, 'root/relative/path')"),t(`
      `),n("span",{class:"token literal-property property"},"key"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},'"/path/to/server.key"'),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token literal-property property"},"pfx"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},'"/path/to/server.pfx"'),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token literal-property property"},"cert"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},'"/path/to/server.crt"'),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token literal-property property"},"ca"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},'"/path/to/ca.pem"'),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token literal-property property"},"passphrase"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'webpack-dev-server'"),t(),n("span",{class:"token comment"},"// do you need it?"),t(`
    `),n("span",{class:"token punctuation"},"}"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},f,o)),r(`<p${o}>You can also configure automatically opening remote Vue Devtools:</p>`),r(p(d(m),{title:"/quasar.config file"},{default:s((i,e,c,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token literal-property property"${a}>devServer</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>vueDevtools</span><span class="token operator"${a}>:</span> <span class="token boolean"${a}>true</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(p(u,null,null,c,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"devServer"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"vueDevtools"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token boolean"},"true"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},f,o)),r(`<h4 id="docker-and-wsl-issues-with-hmr" class="doc-heading doc-h4"${o}>Docker and WSL Issues with HMR</h4><p${o}>If you are using a Docker Container, you may find HMR stops working. HMR relies on the operating system to give notifications about changed files which may not work for your Docker Container.</p><p${o}>A stop-gap solution can be achieved by using the polling mode to check for filesystem changes. This can be enabled with:</p>`),r(p(d(m),{title:"/quasar.config file"},{default:s((i,e,c,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token literal-property property"${a}>build</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token comment"${a}>// ...</span>
  <span class="token function"${a}>extendWebpack</span><span class="token punctuation"${a}>(</span><span class="token parameter"${a}>cfg</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
    cfg<span class="token punctuation"${a}>.</span>watchOptions <span class="token operator"${a}>=</span> <span class="token punctuation"${a}>{</span>
      <span class="token literal-property property"${a}>aggregateTimeout</span><span class="token operator"${a}>:</span> <span class="token number"${a}>200</span><span class="token punctuation"${a}>,</span>
      <span class="token literal-property property"${a}>poll</span><span class="token operator"${a}>:</span> <span class="token number"${a}>1000</span><span class="token punctuation"${a}>,</span>
    <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>;</span>
  <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>,</span>
<span class="token comment"${a}>// ...</span></code></pre>`),e(p(u,null,null,c,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token comment"},"// ..."),t(`
  `),n("span",{class:"token function"},"extendWebpack"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"cfg"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
    cfg`),n("span",{class:"token punctuation"},"."),t("watchOptions "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token punctuation"},"{"),t(`
      `),n("span",{class:"token literal-property property"},"aggregateTimeout"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token literal-property property"},"poll"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token number"},"1000"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),t(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`
`),n("span",{class:"token comment"},"// ...")])]),n(u)]}),_:1},f,o)),r(`<h3 id="property-build" class="doc-heading doc-h3"${o}>Property: build</h3>`),r(p(b,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:s((i,e,c,a)=>{if(e)e(`<thead${a}><tr${a}><th class="text-left"${a}>Property</th><th class="text-left"${a}>Type</th><th class="text-left"${a}>Description</th></tr></thead><tbody${a}><tr${a}><td${a}>transpile</td><td${a}>Boolean</td><td${a}>Enables or disables Babel transpiling.</td></tr><tr${a}><td${a}>transpileDependencies</td><td${a}>Array of Regex</td><td${a}>Does not applies if “transpile” is set to “false”. Add dependencies for transpiling with Babel (from node_modules, which are by default not transpiled). Example: <code class="doc-token"${a}>[ /my-dependency/, ...]</code></td></tr><tr${a}><td${a}>showProgress</td><td${a}>Boolean</td><td${a}>Show a progress bar while compiling.</td></tr><tr${a}><td${a}>transformAssetUrls</td><td${a}>Object</td><td${a}>Add support for also referencing assets for custom tags props. Example: <code class="doc-token"${a}>{ &#39;my-img-comp&#39;: &#39;src&#39;, &#39;my-avatar&#39;: [ &#39;src&#39;, &#39;placeholder-src&#39; ]}</code></td></tr><tr${a}><td${a}>extendWebpack(cfg)</td><td${a}>Function</td><td${a}>Extend Webpack config generated by Quasar CLI. Equivalent to chainWebpack(), but you have direct access to the Webpack config object.</td></tr><tr${a}><td${a}>chainWebpack(chain)</td><td${a}>Function</td><td${a}>Extend Webpack config generated by Quasar CLI. Equivalent to extendWebpack(), but using `),e(p(l,{to:"https://github.com/neutrinojs/webpack-chain"},{default:s((y,k,g,$)=>{if(k)k("webpack-chain");else return[t("webpack-chain")]}),_:1},c,a)),e(` instead.</td></tr><tr${a}><td${a}>beforeDev({ quasarConf })</td><td${a}>Function</td><td${a}>Prepare external services before <code class="doc-token"${a}>$ quasar dev</code> command runs, like starting some backend or any other service that the app relies on. Can use async/await or directly return a Promise.</td></tr><tr${a}><td${a}>afterDev({ quasarConf })</td><td${a}>Function</td><td${a}>Run hook after Quasar dev server is started (<code class="doc-token"${a}>$ quasar dev</code>). At this point, the dev server has been started and is available should you wish to do something with it. Can use async/await or directly return a Promise.</td></tr><tr${a}><td${a}>beforeBuild({ quasarConf })</td><td${a}>Function</td><td${a}>Run hook before Quasar builds app for production (<code class="doc-token"${a}>$ quasar build</code>). At this point, the distributables folder hasn’t been created yet. Can use async/await or directly return a Promise.</td></tr><tr${a}><td${a}>afterBuild({ quasarConf })</td><td${a}>Function</td><td${a}>Run hook after Quasar built app for production (<code class="doc-token"${a}>$ quasar build</code>). At this point, the distributables folder has been created and is available should you wish to do something with it. Can use async/await or directly return a Promise.</td></tr><tr${a}><td${a}>onPublish(opts)</td><td${a}>Function</td><td${a}>Run hook if publishing was requested (<code class="doc-token"${a}>$ quasar build -P</code>), after Quasar built app for production and the afterBuild hook (if specified) was executed. Can use async/await or directly return a Promise. <code class="doc-token"${a}>opts</code> is Object of form <code class="doc-token"${a}>{arg, distDir}</code>, where “arg” is the argument supplied (if any) to -P parameter.</td></tr><tr${a}><td${a}>publicPath</td><td${a}>String</td><td${a}>Public path of your app. By default, it uses the root. Use it when your public path is something else, like “&lt;protocol&gt;://&lt;domain&gt;/some/nested/folder” – in this case, it means the distributables are in “some/nested/folder” on your webserver.</td></tr><tr${a}><td${a}>appBase</td><td${a}>String</td><td${a}>Force app base tag with your custom value; configure only if you <strong${a}>really</strong> know what you are doing, otherwise you can easily break your app. Highly recommended is to leave this computed by @quasar/app-webpack.</td></tr><tr${a}><td${a}>vueRouterBase</td><td${a}>String</td><td${a}>Force vue router base with your custom value; configure only if you <strong${a}>really</strong> know what you are doing, otherwise you can easily break your app. Highly recommended is to leave this computed by @quasar/app-webpack.</td></tr><tr${a}><td${a}>vueRouterMode</td><td${a}>String</td><td${a}>Sets `),e(p(l,{to:"https://router.vuejs.org/guide/essentials/history-mode.html"},{default:s((y,k,g,$)=>{if(k)k("Vue Router mode");else return[t("Vue Router mode")]}),_:1},c,a)),e(`: ‘hash’ or ‘history’. Pick wisely. History mode requires configuration on your deployment web server too.</td></tr><tr${a}><td${a}>htmlFilename</td><td${a}>String</td><td${a}>Default is ‘index.html’.</td></tr><tr${a}><td${a}>ssrPwaHtmlFilename</td><td${a}>String</td><td${a}>Used for SSR+PWA mode. Default is ‘offline.html’.</td></tr><tr${a}><td${a}>productName</td><td${a}>String</td><td${a}>Default value is taken from package.json &gt; productName field.</td></tr><tr${a}><td${a}>distDir</td><td${a}>String</td><td${a}>Folder where Quasar CLI should generate the distributables. Relative path to project root directory. Default is ‘dist/{ctx.modeName}’. Applies to all Modes except for Cordova (which is forced to <code class="doc-token"${a}>src-cordova/www</code>).</td></tr><tr${a}><td${a}>ignorePublicFolder</td><td${a}>Boolean</td><td${a}>Ignores the /public folder. If you depend on a statics folder then you will need to configure it yourself (outside of Quasar or through the extendWebpack/chainWebpack), so make sure that you know what you are doing.</td></tr><tr${a}><td${a}>devtool</td><td${a}>String</td><td${a}>Source map `),e(p(l,{to:"https://webpack.js.org/configuration/devtool/"},{default:s((y,k,g,$)=>{if(k)k("strategy");else return[t("strategy")]}),_:1},c,a)),e(` to use.</td></tr><tr${a}><td${a}>env</td><td${a}>Object</td><td${a}>Add properties to <code class="doc-token"${a}>process.env</code> that you can use in your website/app JS code.</td></tr><tr${a}><td${a}>gzip</td><td${a}>Boolean/Object</td><td${a}>Gzip the distributables. Useful when the web server with which you are serving the content does not have gzip. If using as Object, it represents the compression-webpack-plugin config Object.</td></tr><tr${a}><td${a}>analyze</td><td${a}>Boolean/Object</td><td${a}>Show analysis of build bundle with webpack-bundle-analyzer. If using as Object, it represents the webpack-bundle-analyzer config Object.</td></tr><tr${a}><td${a}>vueCompiler</td><td${a}>Boolean</td><td${a}>Include vue runtime + compiler version, instead of default Vue runtime-only</td></tr><tr${a}><td${a}>uglifyOptions</td><td${a}>Object</td><td${a}>JS minification options. `),e(p(l,{to:"https://github.com/webpack-contrib/terser-webpack-plugin/#minify"},{default:s((y,k,g,$)=>{if(k)k("Full list");else return[t("Full list")]}),_:1},c,a)),e(`</td></tr><tr${a}><td${a}>htmlMinifyOptions</td><td${a}>Object</td><td${a}>(requires @quasar/app-webpack v3.10.2+) Minification options for html-minifier. `),e(p(l,{to:"https://github.com/kangax/html-minifier"},{default:s((y,k,g,$)=>{if(k)k("Full list");else return[t("Full list")]}),_:1},c,a)),e(`</td></tr><tr${a}><td${a}>vueLoaderOptions</td><td${a}>Object</td><td${a}>Options (compilerOptions, compiler, transformAssetUrls, etc) for `),e(p(l,{to:"https://vue-loader.vuejs.org/options.html"},{default:s((y,k,g,$)=>{if(k)k("vue-loader");else return[t("vue-loader")]}),_:1},c,a)),e(`.</td></tr><tr${a}><td${a}>scssLoaderOptions</td><td${a}>Object</td><td${a}>Options to supply to <code class="doc-token"${a}>sass-loader</code> for <code class="doc-token"${a}>.scss</code> files. Example: scssLoaderOptions: { additionalData: ‘@import “src/css/abstracts/_mixins.scss”;’}</td></tr><tr${a}><td${a}>sassLoaderOptions</td><td${a}>Object</td><td${a}>Options to supply to <code class="doc-token"${a}>sass-loader</code> for <code class="doc-token"${a}>.sass</code> files.</td></tr><tr${a}><td${a}>stylusLoaderOptions</td><td${a}>Object</td><td${a}>Options to supply to <code class="doc-token"${a}>stylus-loader</code>.</td></tr><tr${a}><td${a}>lessLoaderOptions</td><td${a}>Object</td><td${a}>Options to supply to <code class="doc-token"${a}>less-loader</code>.</td></tr></tbody>`);else return[n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Property"),n("th",{class:"text-left"},"Type"),n("th",{class:"text-left"},"Description")])]),n("tbody",null,[n("tr",null,[n("td",null,"transpile"),n("td",null,"Boolean"),n("td",null,"Enables or disables Babel transpiling.")]),n("tr",null,[n("td",null,"transpileDependencies"),n("td",null,"Array of Regex"),n("td",null,[t("Does not applies if “transpile” is set to “false”. Add dependencies for transpiling with Babel (from node_modules, which are by default not transpiled). Example: "),n("code",{class:"doc-token"},"[ /my-dependency/, ...]")])]),n("tr",null,[n("td",null,"showProgress"),n("td",null,"Boolean"),n("td",null,"Show a progress bar while compiling.")]),n("tr",null,[n("td",null,"transformAssetUrls"),n("td",null,"Object"),n("td",null,[t("Add support for also referencing assets for custom tags props. Example: "),n("code",{class:"doc-token"},"{ 'my-img-comp': 'src', 'my-avatar': [ 'src', 'placeholder-src' ]}")])]),n("tr",null,[n("td",null,"extendWebpack(cfg)"),n("td",null,"Function"),n("td",null,"Extend Webpack config generated by Quasar CLI. Equivalent to chainWebpack(), but you have direct access to the Webpack config object.")]),n("tr",null,[n("td",null,"chainWebpack(chain)"),n("td",null,"Function"),n("td",null,[t("Extend Webpack config generated by Quasar CLI. Equivalent to extendWebpack(), but using "),n(l,{to:"https://github.com/neutrinojs/webpack-chain"},{default:s(()=>[t("webpack-chain")]),_:1}),t(" instead.")])]),n("tr",null,[n("td",null,"beforeDev({ quasarConf })"),n("td",null,"Function"),n("td",null,[t("Prepare external services before "),n("code",{class:"doc-token"},"$ quasar dev"),t(" command runs, like starting some backend or any other service that the app relies on. Can use async/await or directly return a Promise.")])]),n("tr",null,[n("td",null,"afterDev({ quasarConf })"),n("td",null,"Function"),n("td",null,[t("Run hook after Quasar dev server is started ("),n("code",{class:"doc-token"},"$ quasar dev"),t("). At this point, the dev server has been started and is available should you wish to do something with it. Can use async/await or directly return a Promise.")])]),n("tr",null,[n("td",null,"beforeBuild({ quasarConf })"),n("td",null,"Function"),n("td",null,[t("Run hook before Quasar builds app for production ("),n("code",{class:"doc-token"},"$ quasar build"),t("). At this point, the distributables folder hasn’t been created yet. Can use async/await or directly return a Promise.")])]),n("tr",null,[n("td",null,"afterBuild({ quasarConf })"),n("td",null,"Function"),n("td",null,[t("Run hook after Quasar built app for production ("),n("code",{class:"doc-token"},"$ quasar build"),t("). At this point, the distributables folder has been created and is available should you wish to do something with it. Can use async/await or directly return a Promise.")])]),n("tr",null,[n("td",null,"onPublish(opts)"),n("td",null,"Function"),n("td",null,[t("Run hook if publishing was requested ("),n("code",{class:"doc-token"},"$ quasar build -P"),t("), after Quasar built app for production and the afterBuild hook (if specified) was executed. Can use async/await or directly return a Promise. "),n("code",{class:"doc-token"},"opts"),t(" is Object of form "),n("code",{class:"doc-token"},"{arg, distDir}"),t(", where “arg” is the argument supplied (if any) to -P parameter.")])]),n("tr",null,[n("td",null,"publicPath"),n("td",null,"String"),n("td",null,"Public path of your app. By default, it uses the root. Use it when your public path is something else, like “<protocol>://<domain>/some/nested/folder” – in this case, it means the distributables are in “some/nested/folder” on your webserver.")]),n("tr",null,[n("td",null,"appBase"),n("td",null,"String"),n("td",null,[t("Force app base tag with your custom value; configure only if you "),n("strong",null,"really"),t(" know what you are doing, otherwise you can easily break your app. Highly recommended is to leave this computed by @quasar/app-webpack.")])]),n("tr",null,[n("td",null,"vueRouterBase"),n("td",null,"String"),n("td",null,[t("Force vue router base with your custom value; configure only if you "),n("strong",null,"really"),t(" know what you are doing, otherwise you can easily break your app. Highly recommended is to leave this computed by @quasar/app-webpack.")])]),n("tr",null,[n("td",null,"vueRouterMode"),n("td",null,"String"),n("td",null,[t("Sets "),n(l,{to:"https://router.vuejs.org/guide/essentials/history-mode.html"},{default:s(()=>[t("Vue Router mode")]),_:1}),t(": ‘hash’ or ‘history’. Pick wisely. History mode requires configuration on your deployment web server too.")])]),n("tr",null,[n("td",null,"htmlFilename"),n("td",null,"String"),n("td",null,"Default is ‘index.html’.")]),n("tr",null,[n("td",null,"ssrPwaHtmlFilename"),n("td",null,"String"),n("td",null,"Used for SSR+PWA mode. Default is ‘offline.html’.")]),n("tr",null,[n("td",null,"productName"),n("td",null,"String"),n("td",null,"Default value is taken from package.json > productName field.")]),n("tr",null,[n("td",null,"distDir"),n("td",null,"String"),n("td",null,[t("Folder where Quasar CLI should generate the distributables. Relative path to project root directory. Default is ‘dist/{ctx.modeName}’. Applies to all Modes except for Cordova (which is forced to "),n("code",{class:"doc-token"},"src-cordova/www"),t(").")])]),n("tr",null,[n("td",null,"ignorePublicFolder"),n("td",null,"Boolean"),n("td",null,"Ignores the /public folder. If you depend on a statics folder then you will need to configure it yourself (outside of Quasar or through the extendWebpack/chainWebpack), so make sure that you know what you are doing.")]),n("tr",null,[n("td",null,"devtool"),n("td",null,"String"),n("td",null,[t("Source map "),n(l,{to:"https://webpack.js.org/configuration/devtool/"},{default:s(()=>[t("strategy")]),_:1}),t(" to use.")])]),n("tr",null,[n("td",null,"env"),n("td",null,"Object"),n("td",null,[t("Add properties to "),n("code",{class:"doc-token"},"process.env"),t(" that you can use in your website/app JS code.")])]),n("tr",null,[n("td",null,"gzip"),n("td",null,"Boolean/Object"),n("td",null,"Gzip the distributables. Useful when the web server with which you are serving the content does not have gzip. If using as Object, it represents the compression-webpack-plugin config Object.")]),n("tr",null,[n("td",null,"analyze"),n("td",null,"Boolean/Object"),n("td",null,"Show analysis of build bundle with webpack-bundle-analyzer. If using as Object, it represents the webpack-bundle-analyzer config Object.")]),n("tr",null,[n("td",null,"vueCompiler"),n("td",null,"Boolean"),n("td",null,"Include vue runtime + compiler version, instead of default Vue runtime-only")]),n("tr",null,[n("td",null,"uglifyOptions"),n("td",null,"Object"),n("td",null,[t("JS minification options. "),n(l,{to:"https://github.com/webpack-contrib/terser-webpack-plugin/#minify"},{default:s(()=>[t("Full list")]),_:1})])]),n("tr",null,[n("td",null,"htmlMinifyOptions"),n("td",null,"Object"),n("td",null,[t("(requires @quasar/app-webpack v3.10.2+) Minification options for html-minifier. "),n(l,{to:"https://github.com/kangax/html-minifier"},{default:s(()=>[t("Full list")]),_:1})])]),n("tr",null,[n("td",null,"vueLoaderOptions"),n("td",null,"Object"),n("td",null,[t("Options (compilerOptions, compiler, transformAssetUrls, etc) for "),n(l,{to:"https://vue-loader.vuejs.org/options.html"},{default:s(()=>[t("vue-loader")]),_:1}),t(".")])]),n("tr",null,[n("td",null,"scssLoaderOptions"),n("td",null,"Object"),n("td",null,[t("Options to supply to "),n("code",{class:"doc-token"},"sass-loader"),t(" for "),n("code",{class:"doc-token"},".scss"),t(" files. Example: scssLoaderOptions: { additionalData: ‘@import “src/css/abstracts/_mixins.scss”;’}")])]),n("tr",null,[n("td",null,"sassLoaderOptions"),n("td",null,"Object"),n("td",null,[t("Options to supply to "),n("code",{class:"doc-token"},"sass-loader"),t(" for "),n("code",{class:"doc-token"},".sass"),t(" files.")])]),n("tr",null,[n("td",null,"stylusLoaderOptions"),n("td",null,"Object"),n("td",null,[t("Options to supply to "),n("code",{class:"doc-token"},"stylus-loader"),t(".")])]),n("tr",null,[n("td",null,"lessLoaderOptions"),n("td",null,"Object"),n("td",null,[t("Options to supply to "),n("code",{class:"doc-token"},"less-loader"),t(".")])])])]}),_:1},f,o)),r(`<p${o}>The following properties of <code class="doc-token"${o}>build</code> are automatically configured by Quasar CLI depending on dev/build commands and Quasar mode. But if you like to override some (make sure you know what you are doing), you can do so:</p>`),r(p(b,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:s((i,e,c,a)=>{if(e)e(`<thead${a}><tr${a}><th class="text-left"${a}>Property</th><th class="text-left"${a}>Type</th><th class="text-left"${a}>Description</th></tr></thead><tbody${a}><tr${a}><td${a}>extractCSS</td><td${a}>Boolean</td><td${a}>Extract CSS from Vue files</td></tr><tr${a}><td${a}>sourceMap</td><td${a}>Boolean</td><td${a}>Use source maps</td></tr><tr${a}><td${a}>minify</td><td${a}>Boolean</td><td${a}>Minify code (html, js, css)</td></tr></tbody>`);else return[n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Property"),n("th",{class:"text-left"},"Type"),n("th",{class:"text-left"},"Description")])]),n("tbody",null,[n("tr",null,[n("td",null,"extractCSS"),n("td",null,"Boolean"),n("td",null,"Extract CSS from Vue files")]),n("tr",null,[n("td",null,"sourceMap"),n("td",null,"Boolean"),n("td",null,"Use source maps")]),n("tr",null,[n("td",null,"minify"),n("td",null,"Boolean"),n("td",null,"Minify code (html, js, css)")])])]}),_:1},f,o)),r(`<p${o}>If, for example, you run “quasar build --debug”, sourceMap and extractCSS will be set to “true” regardless of what you configure.</p><h3 id="property-htmlvariables" class="doc-heading doc-h3"${o}>Property: htmlVariables</h3><p${o}>You can define and then reference variables in /index.html or /src/index.template.html, like this:</p>`),r(p(d(m),{title:"/quasar.config file"},{default:s((i,e,c,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}>module<span class="token punctuation"${a}>.</span><span class="token function-variable function"${a}>exports</span> <span class="token operator"${a}>=</span> <span class="token keyword"${a}>function</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>ctx</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
  <span class="token keyword"${a}>return</span> <span class="token punctuation"${a}>{</span>
    <span class="token literal-property property"${a}>htmlVariables</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
      <span class="token literal-property property"${a}>title</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;test name&#39;</span><span class="token punctuation"${a}>,</span>
      <span class="token literal-property property"${a}>some</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
        <span class="token literal-property property"${a}>prop</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;my-prop&#39;</span>
      <span class="token punctuation"${a}>}</span>
    <span class="token punctuation"${a}>}</span></code></pre>`),e(p(u,null,null,c,a));else return[n("pre",{class:"doc-code"},[n("code",null,[t("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token literal-property property"},"htmlVariables"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
      `),n("span",{class:"token literal-property property"},"title"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'test name'"),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token literal-property property"},"some"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
        `),n("span",{class:"token literal-property property"},"prop"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'my-prop'"),t(`
      `),n("span",{class:"token punctuation"},"}"),t(`
    `),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},f,o)),r(`<p${o}>Then (just an example showing you how to reference a variable defined above, in this case <code class="doc-token"${o}>title</code>):</p>`),r(p(d(m),{title:"/index.html or /src/index.template.html"},{default:s((i,e,c,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}>&lt;%= title %&gt;
&lt;%= some.prop %&gt;</code></pre>`),e(p(u,null,null,c,a));else return[n("pre",{class:"doc-code"},[n("code",null,`<%= title %>
<%= some.prop %>`)]),n(u)]}),_:1},f,o)),r(`<h3 id="property-sourcefiles" class="doc-heading doc-h3"${o}>Property: sourceFiles</h3><p${o}>Use this property to change the default names of some files of your website/app if you have to. All paths must be relative to the root folder of your project.</p>`),r(p(d(m),{title:"/quasar.config file"},{default:s((i,e,c,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token comment"${a}>// default values:</span>
<span class="token literal-property property"${a}>sourceFiles</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>rootComponent</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;src/App.vue&#39;</span><span class="token punctuation"${a}>,</span>
  <span class="token literal-property property"${a}>router</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;src/router&#39;</span><span class="token punctuation"${a}>,</span>
  <span class="token literal-property property"${a}>store</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;src/store&#39;</span><span class="token punctuation"${a}>,</span>
  <span class="token literal-property property"${a}>indexHtmlTemplate</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;src/index.template.html&#39;</span><span class="token punctuation"${a}>,</span>
  <span class="token literal-property property"${a}>registerServiceWorker</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;src-pwa/register-service-worker.js&#39;</span><span class="token punctuation"${a}>,</span>
  <span class="token literal-property property"${a}>serviceWorker</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;src-pwa/custom-service-worker.js&#39;</span><span class="token punctuation"${a}>,</span>
  <span class="token literal-property property"${a}>electronMain</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;src-electron/electron-main.js&#39;</span><span class="token punctuation"${a}>,</span>
  <span class="token literal-property property"${a}>electronPreload</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;src-electron/electron-preload.js&#39;</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(p(u,null,null,c,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// default values:"),t(`
`),n("span",{class:"token literal-property property"},"sourceFiles"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"rootComponent"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src/App.vue'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"router"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src/router'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"store"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src/store'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"indexHtmlTemplate"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src/index.template.html'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"registerServiceWorker"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src-pwa/register-service-worker.js'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"serviceWorker"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src-pwa/custom-service-worker.js'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"electronMain"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src-electron/electron-main.js'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"electronPreload"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src-electron/electron-preload.js'"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},f,o)),r(`<h3 id="example-setting-env-for-dev-build" class="doc-heading doc-h3"${o}>Example setting env for dev/build</h3><p${o}>Please refer to `),r(p(l,{to:"/quasar-cli-webpack/handling-process-env#adding-to-process-env"},{default:s((i,e,c,a)=>{if(e)e("Adding to process.env");else return[t("Adding to process.env")]}),_:1},f,o)),r(` section in our docs.</p><h3 id="handling-webpack-configuration" class="doc-heading doc-h3"${o}>Handling Webpack configuration</h3><p${o}>In depth analysis on `),r(p(l,{to:"/quasar-cli-webpack/handling-webpack"},{default:s((i,e,c,a)=>{if(e)e("Handling Webpack");else return[t("Handling Webpack")]}),_:1},f,o)),r(" documentation page.</p>");else return[n("p",null,[t("Quasar makes use of some awesome development tools under its hood, like "),n(l,{to:"https://webpack.js.org/"},{default:s(()=>[t("Webpack")]),_:1}),t(". One of the great things about Quasar is its handling of most of the complex configuration needed by the underlying tools for you. As a result, you don’t even need to know Webpack or any of the other development tools in order to use Quasar.")]),n("p",null,[t("So what can you configure through the "),n("code",{class:"doc-token"},"/quasar.config"),t(" file?")]),n("ul",null,[n("li",null,"Quasar components, directives and plugins that you’ll be using in your website/app"),n("li",null,[t("Default "),n(l,{to:"/options/quasar-language-packs"},{default:s(()=>[t("Quasar Language Pack")]),_:1})]),n("li",null,[n(l,{to:"/options/installing-icon-libraries"},{default:s(()=>[t("Icon libraries")]),_:1}),t(" that you wish to use")]),n("li",null,[t("Default "),n(l,{to:"/options/quasar-icon-sets"},{default:s(()=>[t("Quasar Icon Set")]),_:1}),t(" for Quasar components")]),n("li",null,"Development server port, HTTPS mode, hostname and so on"),n("li",null,[n(l,{to:"/options/animations"},{default:s(()=>[t("CSS animations")]),_:1}),t(" that you wish to use")]),n("li",null,[n(l,{to:"/quasar-cli-webpack/boot-files"},{default:s(()=>[t("Boot Files")]),_:1}),t(" list (that determines order of execution too) – which are files in "),n("code",{class:"doc-token"},"/src/boot"),t(" that tell how your app is initialized before mounting the root Vue component")]),n("li",null,"Global CSS/Sass/… files to be included in the bundle"),n("li",null,[t("PWA "),n(l,{to:"/quasar-cli-webpack/developing-pwa/configuring-pwa#Configuring-Manifest-File"},{default:s(()=>[t("manifest")]),_:1}),t(" and "),n(l,{to:"/quasar-cli-webpack/developing-pwa/configuring-pwa#quasar-config-file"},{default:s(()=>[t("Workbox options")]),_:1})]),n("li",null,[n(l,{to:"/quasar-cli-webpack/developing-electron-apps/configuring-electron#quasar-config-file"},{default:s(()=>[t("Electron Packager")]),_:1}),t(" and/or "),n(l,{to:"/quasar-cli-webpack/developing-electron-apps/configuring-electron#quasar-config-file"},{default:s(()=>[t("Electron Builder")]),_:1})]),n("li",null,"Extend Webpack config")]),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,"You’ll notice that changing any of these settings does not require you to manually reload the dev server. Quasar detects and reloads the necessary processes. You won’t lose your development flow, because you can just sit back while Quasar CLI quickly reloads the changed code, even keeping the current state. This saves tons of your time!")]),n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"WARNING"),n("p",null,[t("The "),n("code",{class:"doc-token"},"/quasar.config"),t(" file is run by the Quasar CLI build system, so this code runs under Node directly, not in the context of your app. This means you can require modules like ‘fs’, ‘path’, ‘webpack’, and so on. Make sure the ES features that you want to use in this file are "),n(l,{to:"https://node.green/"},{default:s(()=>[t("supported by your Node version")]),_:1}),t(" (which should be >= 14).")])]),n("h2",{id:"structure",class:"doc-heading doc-h2",onClick:i=>d(h)("structure")},"Structure",8,["onClick"]),n("h3",{id:"the-basics",class:"doc-heading doc-h3",onClick:i=>d(h)("the-basics")},"The basics",8,["onClick"]),n("p",null,[t("You’ll notice that the "),n("code",{class:"doc-token"},"/quasar.config"),t(" file exports a function that takes a "),n("code",{class:"doc-token"},"ctx"),t(" (context) parameter and returns an Object. This allows you to dynamically change your website/app config based on this context:")]),n(d(m),null,{default:s(()=>[n("pre",{class:"doc-code"},[n("code",null,[t("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token comment"},"// can be async too"),t(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),t("ctx"),n("span",{class:"token punctuation"},")"),t(`

  `),n("span",{class:"token comment"},"// Example output on console:"),t(`
  `),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token literal-property property"},"dev"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"prod"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"mode"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token literal-property property"},"spa"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token boolean"},"true"),t(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"modeName"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'spa'"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"target"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"targetName"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token keyword"},"undefined"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"arch"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"archName"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token keyword"},"undefined"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"debug"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token keyword"},"undefined"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`

  `),n("span",{class:"token comment"},"// context gets generated based on the parameters"),t(`
  `),n("span",{class:"token comment"},'// with which you run "quasar dev" or "quasar build"'),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n("p",null,"What this means is that, as an example, you can load a font when building for a certain mode (like PWA), and pick another one for the others:"),n(d(m),null,{default:s(()=>[n("pre",{class:"doc-code"},[n("code",null,[t("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"extras"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(`
    ctx`),n("span",{class:"token punctuation"},"."),t("mode"),n("span",{class:"token punctuation"},"."),t("pwa "),n("span",{class:"token comment"},"// we're adding only if working on a PWA"),t(`
      `),n("span",{class:"token operator"},"?"),t(),n("span",{class:"token string"},"'roboto-font'"),t(`
      `),n("span",{class:"token operator"},":"),t(),n("span",{class:"token keyword"},"null"),t(`
  `),n("span",{class:"token punctuation"},"]"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n("p",null,"Or you can use a global CSS file for SPA mode and another one for Cordova mode while avoiding loading any such file for the other modes."),n(d(m),null,{default:s(()=>[n("pre",{class:"doc-code"},[n("code",null,[t("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"css"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(`
    ctx`),n("span",{class:"token punctuation"},"."),t("mode"),n("span",{class:"token punctuation"},"."),t("spa "),n("span",{class:"token operator"},"?"),t(),n("span",{class:"token string"},"'app-spa.sass'"),t(),n("span",{class:"token operator"},":"),t(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token comment"},"// looks for /src/css/app-spa.sass"),t(`
    ctx`),n("span",{class:"token punctuation"},"."),t("mode"),n("span",{class:"token punctuation"},"."),t("cordova "),n("span",{class:"token operator"},"?"),t(),n("span",{class:"token string"},"'app-cordova.sass'"),t(),n("span",{class:"token operator"},":"),t(),n("span",{class:"token keyword"},"null"),t("  "),n("span",{class:"token comment"},"// looks for /src/css/app-cordova.sass"),t(`
  `),n("span",{class:"token punctuation"},"]"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n("p",null,"Or you can configure the dev server to run on port 8000 for SPA mode, on port 9000 for PWA mode or on port 9090 for the other modes:"),n(d(m),null,{default:s(()=>[n("pre",{class:"doc-code"},[n("code",null,[t("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"devServer"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token literal-property property"},"port"),n("span",{class:"token operator"},":"),t(" ctx"),n("span",{class:"token punctuation"},"."),t("mode"),n("span",{class:"token punctuation"},"."),t(`spa
      `),n("span",{class:"token operator"},"?"),t(),n("span",{class:"token number"},"8000"),t(`
      `),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"("),t("ctx"),n("span",{class:"token punctuation"},"."),t("mode"),n("span",{class:"token punctuation"},"."),t("pwa "),n("span",{class:"token operator"},"?"),t(),n("span",{class:"token number"},"9000"),t(),n("span",{class:"token operator"},":"),t(),n("span",{class:"token number"},"9090"),n("span",{class:"token punctuation"},")"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n("p",null,"You can also do async work before returning the quasar configuration:"),n(d(m),null,{default:s(()=>[n("pre",{class:"doc-code"},[n("code",null,[t("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"async"),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token keyword"},"const"),t(" data "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"await"),t(),n("span",{class:"token function"},"someAsyncFunction"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(`
  `),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token comment"},'// ... use "data"'),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`

`),n("span",{class:"token comment"},"// or:"),t(`
module`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token keyword"},"new"),t(),n("span",{class:"token class-name"},"Promise"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"resolve"),t(),n("span",{class:"token operator"},"=>"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token comment"},"// some async work then:"),t(`
    `),n("span",{class:"token comment"},"// resolve() with the quasar config"),t(`
    `),n("span",{class:"token function"},"resolve"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),t(`
      `),n("span",{class:"token comment"},"//"),t(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n("p",null,"The possibilities are endless."),n("h3",{id:"ide-autocompletion",class:"doc-heading doc-h3",onClick:i=>d(h)("ide-autocompletion")},"IDE autocompletion",8,["onClick"]),n("p",null,[t("You can wrap the returned function with "),n("code",{class:"doc-token"},"configure()"),t(" helper to get a better IDE autocomplete experience (through Typescript):")]),n(d(m),null,{default:s(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"const"),t(),n("span",{class:"token punctuation"},"{"),t(" configure "),n("span",{class:"token punctuation"},"}"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'quasar/wrappers'"),n("span",{class:"token punctuation"},")"),t(`

module`),n("span",{class:"token punctuation"},"."),t("exports "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token function"},"configure"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token comment"},"/* configuration options */"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(u)]),_:1}),n("h2",{id:"options-to-configure",class:"doc-heading doc-h2",onClick:i=>d(h)("options-to-configure")},"Options to Configure",8,["onClick"]),n("p",null,"Let’s take each option one by one:"),n(b,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:s(()=>[n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Property"),n("th",{class:"text-left"},"Type"),n("th",{class:"text-left"},"Description")])]),n("tbody",null,[n("tr",null,[n("td",null,"css"),n("td",null,"Array"),n("td",null,[t("Global CSS/Sass/… files from "),n("code",{class:"doc-token"},"/src/css/"),t(", except for theme files, which are included by default.")])]),n("tr",null,[n("td",null,"preFetch"),n("td",null,"Boolean"),n("td",null,[t("Enable "),n(l,{to:"/quasar-cli-webpack/prefetch-feature"},{default:s(()=>[t("PreFetch Feature")]),_:1}),t(".")])]),n("tr",null,[n("td",null,"extras"),n("td",null,"Array"),n("td",null,[t("What to import from "),n(l,{to:"https://github.com/quasarframework/quasar/tree/dev/extras"},{default:s(()=>[t("@quasar/extras")]),_:1}),t(" package. Example: "),n("em",null,"[‘material-icons’, ‘roboto-font’, ‘ionicons-v4’]")])]),n("tr",null,[n("td",null,"vendor"),n("td",null,"Object"),n("td",null,"Add/remove files/3rd party libraries to/from vendor chunk: { add: […], remove: […] }.")]),n("tr",null,[n("td",null,"supportTS"),n("td",null,"Boolean/Object"),n("td",null,[t("Add support for TypeScript. "),n(l,{to:"/quasar-cli-webpack/supporting-ts"},{default:s(()=>[t("More info")]),_:1})])]),n("tr",null,[n("td",null,"htmlVariables"),n("td",null,"Object"),n("td",null,"Add variables that you can use in /index.html or /src/index.template.html.")]),n("tr",null,[n("td",null,"framework"),n("td",null,"Object/String"),n("td",null,"What Quasar components/directives/plugins to import, what Quasar language pack to use, what Quasar icon set to use for Quasar components.")]),n("tr",null,[n("td",null,"animations"),n("td",null,"Object/String"),n("td",null,[t("What "),n(l,{to:"/options/animations"},{default:s(()=>[t("CSS animations")]),_:1}),t(" to import. Example: "),n("em",null,"[‘bounceInLeft’, ‘bounceOutRight’]")])]),n("tr",null,[n("td",null,"devServer"),n("td",null,"Object"),n("td",null,[t("Webpack devServer options. Some properties are overwritten based on the Quasar mode you’re using in order to ensure a correct config. Note: if you’re proxying the development server (i.e. using a cloud IDE), set the "),n("code",{class:"doc-token"},"public"),t(" setting to your public application URL.")])]),n("tr",null,[n("td",null,"build"),n("td",null,"Object"),n("td",null,"Build configuration options.")]),n("tr",null,[n("td",null,"sourceFiles"),n("td",null,"Object"),n("td",null,"Change the default name of parts of your app.")]),n("tr",null,[n("td",null,"cordova"),n("td",null,"Object"),n("td",null,[t("Cordova specific "),n(l,{to:"/quasar-cli-webpack/developing-cordova-apps/configuring-cordova"},{default:s(()=>[t("config")]),_:1}),t(".")])]),n("tr",null,[n("td",null,"capacitor"),n("td",null,"Object"),n("td",null,[t("Quasar CLI Capacitor specific "),n(l,{to:"/quasar-cli-webpack/developing-capacitor-apps/configuring-capacitor"},{default:s(()=>[t("config")]),_:1}),t(".")])]),n("tr",null,[n("td",null,"pwa"),n("td",null,"Object"),n("td",null,[t("PWA specific "),n(l,{to:"/quasar-cli-webpack/developing-pwa/configuring-pwa"},{default:s(()=>[t("config")]),_:1}),t(".")])]),n("tr",null,[n("td",null,"ssr"),n("td",null,"Object"),n("td",null,[t("SSR specific "),n(l,{to:"/quasar-cli-webpack/developing-ssr/configuring-ssr"},{default:s(()=>[t("config")]),_:1}),t(".")])]),n("tr",null,[n("td",null,"electron"),n("td",null,"Object"),n("td",null,[t("Electron specific "),n(l,{to:"/quasar-cli-webpack/developing-electron-apps/configuring-electron"},{default:s(()=>[t("config")]),_:1}),t(".")])])])]),_:1}),n("h3",{id:"property-css",class:"doc-heading doc-h3",onClick:i=>d(h)("property-css")},"Property: css",8,["onClick"]),n("p",null,[t("Global CSS/Sass/… files from "),n("code",{class:"doc-token"},"/src/css/"),t(", except for theme files, which are included by default.")]),n(d(m),{title:"/quasar.config file"},{default:s(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"css"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(`
    `),n("span",{class:"token string"},"'app.sass'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token comment"},"// referring to /src/css/app.sass"),t(`
    `),n("span",{class:"token string"},"'~some-library/style.css'"),t(),n("span",{class:"token comment"},"// referring to node_modules/some-library/style.css"),t(`
  `),n("span",{class:"token punctuation"},"]"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n("h3",{id:"property-vendor",class:"doc-heading doc-h3",onClick:i=>d(h)("property-vendor")},"Property: vendor",8,["onClick"]),n("p",null,[t("By default, everything that comes from "),n("code",{class:"doc-token"},"node_modules"),t(" will be injected into the vendor chunk for performance & caching reasons. However, should you wish to add or remove something from this special chunk, you can do so:")]),n(d(m),{title:"/quasar.config file"},{default:s(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"vendor"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token comment"},`/* optional;
       disables vendor chunk: */`),t(),n("span",{class:"token literal-property property"},"disable"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),t(`

    `),n("span",{class:"token literal-property property"},"add"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(),n("span",{class:"token string"},"'src/plugins/my-special-plugin'"),t(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"remove"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'axios'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token string"},"'vue$'"),n("span",{class:"token punctuation"},"]"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n("h3",{id:"property-framework",class:"doc-heading doc-h3",onClick:i=>d(h)("property-framework")},"Property: framework",8,["onClick"]),n("p",null,"Tells the CLI what Quasar components/directives/plugins to import, what Quasar I18n language pack to use, what icon set to use for Quasar components and more."),n("p",null,[t("Filling “components” and “directives” is required only if “all” is set to "),n("code",{class:"doc-token"},"false"),t(".")]),n(d(m),{title:"/quasar.config file"},{default:s(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token comment"},"// a list with all options (all are optional)"),t(`
  `),n("span",{class:"token literal-property property"},"framework"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token comment"},'// is using "auto" import strategy, you can also configure:'),t(`
    `),n("span",{class:"token literal-property property"},"autoImportComponentCase"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'pascal'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token comment"},"// or 'kebab' (default) or 'combined'"),t(`

    `),n("span",{class:"token comment"},"// For special cases outside of where auto-import can have an impact"),t(`
    `),n("span",{class:"token comment"},"// (example: vue components written in .js files instead of .vue),"),t(`
    `),n("span",{class:"token comment"},"// you can manually specify Quasar components/directives to be available everywhere:"),t(`
    `),n("span",{class:"token comment"},"//"),t(`
    `),n("span",{class:"token comment"},"// components: [],"),t(`
    `),n("span",{class:"token comment"},"// directives: [],"),t(`

    `),n("span",{class:"token comment"},"// Quasar plugins"),t(`
    `),n("span",{class:"token literal-property property"},"plugins"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'Notify'"),t(),n("span",{class:"token comment"},"/* ... */"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),t(`

    `),n("span",{class:"token comment"},"// Quasar config"),t(`
    `),n("span",{class:"token comment"},"// You'll see this mentioned for components/directives/plugins which use it"),t(`
    `),n("span",{class:"token literal-property property"},"config"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token comment"},"/* ... */"),t(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`

    `),n("span",{class:"token literal-property property"},"iconSet"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'fontawesome-v6'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token comment"},'// requires icon library to be specified in "extras" section too,'),t(`
    `),n("span",{class:"token literal-property property"},"lang"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'de'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token comment"},"// Tell Quasar which language pack to use for its own components"),t(`

    `),n("span",{class:"token literal-property property"},"cssAddon"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token boolean"},"true"),t(),n("span",{class:"token comment"},"// Adds the flex responsive++ CSS classes (noticeable bump in footprint)"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n("p",null,[t("More on cssAddon "),n(l,{to:"/layout/grid/introduction-to-flexbox#flex-addons"},{default:s(()=>[t("here")]),_:1}),t(".")]),n("h3",{id:"property-devserver",class:"doc-heading doc-h3",onClick:i=>d(h)("property-devserver")},"Property: devServer",8,["onClick"]),n("p",null,[n("strong",null,"Webpack devServer options"),t(". Take a look at the "),n(l,{to:"https://webpack.js.org/configuration/dev-server/"},{default:s(()=>[t("full list")]),_:1}),t(" of options. Some are overwritten by Quasar CLI based on “quasar dev” parameters and Quasar mode in order to ensure that everything is setup correctly. Note: if you’re proxying the development server (i.e. using a cloud IDE or local tunnel), set the "),n("code",{class:"doc-token"},"webSocketURL"),t(" setting in the "),n("code",{class:"doc-token"},"client"),t(" section to your public application URL to allow features like Live Reload and Hot Module Replacement to work as "),n(l,{to:"https://webpack.js.org/configuration/dev-server/#websocketurl"},{default:s(()=>[t("described here")]),_:1}),t(".")]),n("p",null,"Most used properties are:"),n(b,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:s(()=>[n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Property"),n("th",{class:"text-left"},"Type"),n("th",{class:"text-left"},"Description")])]),n("tbody",null,[n("tr",null,[n("td",null,"port"),n("td",null,"Number"),n("td",null,"Port of dev server")]),n("tr",null,[n("td",null,"host"),n("td",null,"String"),n("td",null,"Local IP/Host to use for dev server")]),n("tr",null,[n("td",null,"open"),n("td",null,"Boolean/Object"),n("td",null,[t("Unless it’s set to "),n("code",{class:"doc-token"},"false"),t(", Quasar will open up a browser pointing to dev server address automatically. Applies to SPA, PWA and SSR modes. Uses "),n(l,{to:"https://github.com/sindresorhus/open#usage"},{default:s(()=>[t("open")]),_:1}),t(" package params. For more details, please see below.")])]),n("tr",null,[n("td",null,"proxy"),n("td",null,"Object/Array"),n("td",null,"Proxying some URLs can be useful when you have a separate API backend development server and you want to send API requests on the same domain.")]),n("tr",null,[n("td",null,"devMiddleware"),n("td",null,"Object"),n("td",null,"Configuration supplied to webpack-dev-middleware v4")]),n("tr",null,[n("td",null,"server"),n("td",null,"Object"),n("td",null,"Here you can configure HTTPS instead of HTTP (see below)")]),n("tr",null,[n("td",null,"onBeforeSetupMiddleware"),n("td",null,"Function"),n("td",null,"Configure the dev middlewares before webpack-dev-server applies its own config.")]),n("tr",null,[n("td",null,"onAfterSetupMiddleware"),n("td",null,"Function"),n("td",null,"Configure the dev middlewares after webpack-dev-server applies its own config.")])])]),_:1}),n("p",null,[t("Using "),n("code",{class:"doc-token"},"open"),t(" prop to open with a specific browser and not with the default browser of your OS (check "),n(l,{to:"https://github.com/sindresorhus/open#options"},{default:s(()=>[t("supported values")]),_:1}),t("). The "),n("code",{class:"doc-token"},"options"),t(" param described in previous link is what you should configure quasar.config file > devSever > open with. Some examples:")]),n(d(m),{title:"/quasar.config file"},{default:s(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// (syntax below requires @quasar/app-webpack v3.3+)"),t(`

`),n("span",{class:"token comment"},"// opens Google Chrome"),t(`
`),n("span",{class:"token literal-property property"},"devServer"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"open"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token literal-property property"},"app"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'google chrome'"),t(),n("span",{class:"token punctuation"},"}"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`

`),n("span",{class:"token comment"},"// opens Firefox"),t(`
`),n("span",{class:"token literal-property property"},"devServer"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"open"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token literal-property property"},"app"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'firefox'"),t(),n("span",{class:"token punctuation"},"}"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`

`),n("span",{class:"token comment"},"// opens Google Chrome and automatically deals with cross-platform issues:"),t(`
`),n("span",{class:"token keyword"},"const"),t(" open "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'open'"),n("span",{class:"token punctuation"},")"),t(`

`),n("span",{class:"token literal-property property"},"devServer"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"open"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token literal-property property"},"app"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),t(" open"),n("span",{class:"token punctuation"},"."),t("apps"),n("span",{class:"token punctuation"},"."),t("chrome "),n("span",{class:"token punctuation"},"}"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n("p",null,[t("When you set "),n("code",{class:"doc-token"},"devServer > server > type: 'https'"),t(" in your the "),n("code",{class:"doc-token"},"/quasar.config"),t(" file, Quasar will auto-generate a SSL certificate for you. However, if you want to create one yourself for your localhost, then check out this blog post by "),n(l,{to:"https://blog.filippo.io/mkcert-valid-https-certificates-for-localhost/"},{default:s(()=>[t("Filippo")]),_:1}),t(". Then your "),n("code",{class:"doc-token"},"quasar.config file > devServer > server"),t(" should look like this:")]),n(d(m),{title:"/quasar.config file"},{default:s(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"devServer"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"server"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token literal-property property"},"type"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'https'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token comment"},"// NECESSARY (alternative is type 'http')"),t(`

    `),n("span",{class:"token literal-property property"},"options"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
      `),n("span",{class:"token comment"},"// Use ABSOLUTE paths or path.join(__dirname, 'root/relative/path')"),t(`
      `),n("span",{class:"token literal-property property"},"key"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},'"/path/to/server.key"'),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token literal-property property"},"pfx"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},'"/path/to/server.pfx"'),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token literal-property property"},"cert"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},'"/path/to/server.crt"'),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token literal-property property"},"ca"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},'"/path/to/ca.pem"'),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token literal-property property"},"passphrase"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'webpack-dev-server'"),t(),n("span",{class:"token comment"},"// do you need it?"),t(`
    `),n("span",{class:"token punctuation"},"}"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n("p",null,"You can also configure automatically opening remote Vue Devtools:"),n(d(m),{title:"/quasar.config file"},{default:s(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"devServer"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"vueDevtools"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token boolean"},"true"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n("h4",{id:"docker-and-wsl-issues-with-hmr",class:"doc-heading doc-h4",onClick:i=>d(h)("docker-and-wsl-issues-with-hmr")},"Docker and WSL Issues with HMR",8,["onClick"]),n("p",null,"If you are using a Docker Container, you may find HMR stops working. HMR relies on the operating system to give notifications about changed files which may not work for your Docker Container."),n("p",null,"A stop-gap solution can be achieved by using the polling mode to check for filesystem changes. This can be enabled with:"),n(d(m),{title:"/quasar.config file"},{default:s(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token comment"},"// ..."),t(`
  `),n("span",{class:"token function"},"extendWebpack"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"cfg"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
    cfg`),n("span",{class:"token punctuation"},"."),t("watchOptions "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token punctuation"},"{"),t(`
      `),n("span",{class:"token literal-property property"},"aggregateTimeout"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token literal-property property"},"poll"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token number"},"1000"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),t(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`
`),n("span",{class:"token comment"},"// ...")])]),n(u)]),_:1}),n("h3",{id:"property-build",class:"doc-heading doc-h3",onClick:i=>d(h)("property-build")},"Property: build",8,["onClick"]),n(b,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:s(()=>[n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Property"),n("th",{class:"text-left"},"Type"),n("th",{class:"text-left"},"Description")])]),n("tbody",null,[n("tr",null,[n("td",null,"transpile"),n("td",null,"Boolean"),n("td",null,"Enables or disables Babel transpiling.")]),n("tr",null,[n("td",null,"transpileDependencies"),n("td",null,"Array of Regex"),n("td",null,[t("Does not applies if “transpile” is set to “false”. Add dependencies for transpiling with Babel (from node_modules, which are by default not transpiled). Example: "),n("code",{class:"doc-token"},"[ /my-dependency/, ...]")])]),n("tr",null,[n("td",null,"showProgress"),n("td",null,"Boolean"),n("td",null,"Show a progress bar while compiling.")]),n("tr",null,[n("td",null,"transformAssetUrls"),n("td",null,"Object"),n("td",null,[t("Add support for also referencing assets for custom tags props. Example: "),n("code",{class:"doc-token"},"{ 'my-img-comp': 'src', 'my-avatar': [ 'src', 'placeholder-src' ]}")])]),n("tr",null,[n("td",null,"extendWebpack(cfg)"),n("td",null,"Function"),n("td",null,"Extend Webpack config generated by Quasar CLI. Equivalent to chainWebpack(), but you have direct access to the Webpack config object.")]),n("tr",null,[n("td",null,"chainWebpack(chain)"),n("td",null,"Function"),n("td",null,[t("Extend Webpack config generated by Quasar CLI. Equivalent to extendWebpack(), but using "),n(l,{to:"https://github.com/neutrinojs/webpack-chain"},{default:s(()=>[t("webpack-chain")]),_:1}),t(" instead.")])]),n("tr",null,[n("td",null,"beforeDev({ quasarConf })"),n("td",null,"Function"),n("td",null,[t("Prepare external services before "),n("code",{class:"doc-token"},"$ quasar dev"),t(" command runs, like starting some backend or any other service that the app relies on. Can use async/await or directly return a Promise.")])]),n("tr",null,[n("td",null,"afterDev({ quasarConf })"),n("td",null,"Function"),n("td",null,[t("Run hook after Quasar dev server is started ("),n("code",{class:"doc-token"},"$ quasar dev"),t("). At this point, the dev server has been started and is available should you wish to do something with it. Can use async/await or directly return a Promise.")])]),n("tr",null,[n("td",null,"beforeBuild({ quasarConf })"),n("td",null,"Function"),n("td",null,[t("Run hook before Quasar builds app for production ("),n("code",{class:"doc-token"},"$ quasar build"),t("). At this point, the distributables folder hasn’t been created yet. Can use async/await or directly return a Promise.")])]),n("tr",null,[n("td",null,"afterBuild({ quasarConf })"),n("td",null,"Function"),n("td",null,[t("Run hook after Quasar built app for production ("),n("code",{class:"doc-token"},"$ quasar build"),t("). At this point, the distributables folder has been created and is available should you wish to do something with it. Can use async/await or directly return a Promise.")])]),n("tr",null,[n("td",null,"onPublish(opts)"),n("td",null,"Function"),n("td",null,[t("Run hook if publishing was requested ("),n("code",{class:"doc-token"},"$ quasar build -P"),t("), after Quasar built app for production and the afterBuild hook (if specified) was executed. Can use async/await or directly return a Promise. "),n("code",{class:"doc-token"},"opts"),t(" is Object of form "),n("code",{class:"doc-token"},"{arg, distDir}"),t(", where “arg” is the argument supplied (if any) to -P parameter.")])]),n("tr",null,[n("td",null,"publicPath"),n("td",null,"String"),n("td",null,"Public path of your app. By default, it uses the root. Use it when your public path is something else, like “<protocol>://<domain>/some/nested/folder” – in this case, it means the distributables are in “some/nested/folder” on your webserver.")]),n("tr",null,[n("td",null,"appBase"),n("td",null,"String"),n("td",null,[t("Force app base tag with your custom value; configure only if you "),n("strong",null,"really"),t(" know what you are doing, otherwise you can easily break your app. Highly recommended is to leave this computed by @quasar/app-webpack.")])]),n("tr",null,[n("td",null,"vueRouterBase"),n("td",null,"String"),n("td",null,[t("Force vue router base with your custom value; configure only if you "),n("strong",null,"really"),t(" know what you are doing, otherwise you can easily break your app. Highly recommended is to leave this computed by @quasar/app-webpack.")])]),n("tr",null,[n("td",null,"vueRouterMode"),n("td",null,"String"),n("td",null,[t("Sets "),n(l,{to:"https://router.vuejs.org/guide/essentials/history-mode.html"},{default:s(()=>[t("Vue Router mode")]),_:1}),t(": ‘hash’ or ‘history’. Pick wisely. History mode requires configuration on your deployment web server too.")])]),n("tr",null,[n("td",null,"htmlFilename"),n("td",null,"String"),n("td",null,"Default is ‘index.html’.")]),n("tr",null,[n("td",null,"ssrPwaHtmlFilename"),n("td",null,"String"),n("td",null,"Used for SSR+PWA mode. Default is ‘offline.html’.")]),n("tr",null,[n("td",null,"productName"),n("td",null,"String"),n("td",null,"Default value is taken from package.json > productName field.")]),n("tr",null,[n("td",null,"distDir"),n("td",null,"String"),n("td",null,[t("Folder where Quasar CLI should generate the distributables. Relative path to project root directory. Default is ‘dist/{ctx.modeName}’. Applies to all Modes except for Cordova (which is forced to "),n("code",{class:"doc-token"},"src-cordova/www"),t(").")])]),n("tr",null,[n("td",null,"ignorePublicFolder"),n("td",null,"Boolean"),n("td",null,"Ignores the /public folder. If you depend on a statics folder then you will need to configure it yourself (outside of Quasar or through the extendWebpack/chainWebpack), so make sure that you know what you are doing.")]),n("tr",null,[n("td",null,"devtool"),n("td",null,"String"),n("td",null,[t("Source map "),n(l,{to:"https://webpack.js.org/configuration/devtool/"},{default:s(()=>[t("strategy")]),_:1}),t(" to use.")])]),n("tr",null,[n("td",null,"env"),n("td",null,"Object"),n("td",null,[t("Add properties to "),n("code",{class:"doc-token"},"process.env"),t(" that you can use in your website/app JS code.")])]),n("tr",null,[n("td",null,"gzip"),n("td",null,"Boolean/Object"),n("td",null,"Gzip the distributables. Useful when the web server with which you are serving the content does not have gzip. If using as Object, it represents the compression-webpack-plugin config Object.")]),n("tr",null,[n("td",null,"analyze"),n("td",null,"Boolean/Object"),n("td",null,"Show analysis of build bundle with webpack-bundle-analyzer. If using as Object, it represents the webpack-bundle-analyzer config Object.")]),n("tr",null,[n("td",null,"vueCompiler"),n("td",null,"Boolean"),n("td",null,"Include vue runtime + compiler version, instead of default Vue runtime-only")]),n("tr",null,[n("td",null,"uglifyOptions"),n("td",null,"Object"),n("td",null,[t("JS minification options. "),n(l,{to:"https://github.com/webpack-contrib/terser-webpack-plugin/#minify"},{default:s(()=>[t("Full list")]),_:1})])]),n("tr",null,[n("td",null,"htmlMinifyOptions"),n("td",null,"Object"),n("td",null,[t("(requires @quasar/app-webpack v3.10.2+) Minification options for html-minifier. "),n(l,{to:"https://github.com/kangax/html-minifier"},{default:s(()=>[t("Full list")]),_:1})])]),n("tr",null,[n("td",null,"vueLoaderOptions"),n("td",null,"Object"),n("td",null,[t("Options (compilerOptions, compiler, transformAssetUrls, etc) for "),n(l,{to:"https://vue-loader.vuejs.org/options.html"},{default:s(()=>[t("vue-loader")]),_:1}),t(".")])]),n("tr",null,[n("td",null,"scssLoaderOptions"),n("td",null,"Object"),n("td",null,[t("Options to supply to "),n("code",{class:"doc-token"},"sass-loader"),t(" for "),n("code",{class:"doc-token"},".scss"),t(" files. Example: scssLoaderOptions: { additionalData: ‘@import “src/css/abstracts/_mixins.scss”;’}")])]),n("tr",null,[n("td",null,"sassLoaderOptions"),n("td",null,"Object"),n("td",null,[t("Options to supply to "),n("code",{class:"doc-token"},"sass-loader"),t(" for "),n("code",{class:"doc-token"},".sass"),t(" files.")])]),n("tr",null,[n("td",null,"stylusLoaderOptions"),n("td",null,"Object"),n("td",null,[t("Options to supply to "),n("code",{class:"doc-token"},"stylus-loader"),t(".")])]),n("tr",null,[n("td",null,"lessLoaderOptions"),n("td",null,"Object"),n("td",null,[t("Options to supply to "),n("code",{class:"doc-token"},"less-loader"),t(".")])])])]),_:1}),n("p",null,[t("The following properties of "),n("code",{class:"doc-token"},"build"),t(" are automatically configured by Quasar CLI depending on dev/build commands and Quasar mode. But if you like to override some (make sure you know what you are doing), you can do so:")]),n(b,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:s(()=>[n("thead",null,[n("tr",null,[n("th",{class:"text-left"},"Property"),n("th",{class:"text-left"},"Type"),n("th",{class:"text-left"},"Description")])]),n("tbody",null,[n("tr",null,[n("td",null,"extractCSS"),n("td",null,"Boolean"),n("td",null,"Extract CSS from Vue files")]),n("tr",null,[n("td",null,"sourceMap"),n("td",null,"Boolean"),n("td",null,"Use source maps")]),n("tr",null,[n("td",null,"minify"),n("td",null,"Boolean"),n("td",null,"Minify code (html, js, css)")])])]),_:1}),n("p",null,"If, for example, you run “quasar build --debug”, sourceMap and extractCSS will be set to “true” regardless of what you configure."),n("h3",{id:"property-htmlvariables",class:"doc-heading doc-h3",onClick:i=>d(h)("property-htmlvariables")},"Property: htmlVariables",8,["onClick"]),n("p",null,"You can define and then reference variables in /index.html or /src/index.template.html, like this:"),n(d(m),{title:"/quasar.config file"},{default:s(()=>[n("pre",{class:"doc-code"},[n("code",null,[t("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token literal-property property"},"htmlVariables"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
      `),n("span",{class:"token literal-property property"},"title"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'test name'"),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token literal-property property"},"some"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
        `),n("span",{class:"token literal-property property"},"prop"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'my-prop'"),t(`
      `),n("span",{class:"token punctuation"},"}"),t(`
    `),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n("p",null,[t("Then (just an example showing you how to reference a variable defined above, in this case "),n("code",{class:"doc-token"},"title"),t("):")]),n(d(m),{title:"/index.html or /src/index.template.html"},{default:s(()=>[n("pre",{class:"doc-code"},[n("code",null,`<%= title %>
<%= some.prop %>`)]),n(u)]),_:1}),n("h3",{id:"property-sourcefiles",class:"doc-heading doc-h3",onClick:i=>d(h)("property-sourcefiles")},"Property: sourceFiles",8,["onClick"]),n("p",null,"Use this property to change the default names of some files of your website/app if you have to. All paths must be relative to the root folder of your project."),n(d(m),{title:"/quasar.config file"},{default:s(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// default values:"),t(`
`),n("span",{class:"token literal-property property"},"sourceFiles"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"rootComponent"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src/App.vue'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"router"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src/router'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"store"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src/store'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"indexHtmlTemplate"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src/index.template.html'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"registerServiceWorker"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src-pwa/register-service-worker.js'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"serviceWorker"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src-pwa/custom-service-worker.js'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"electronMain"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src-electron/electron-main.js'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"electronPreload"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'src-electron/electron-preload.js'"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n("h3",{id:"example-setting-env-for-dev-build",class:"doc-heading doc-h3",onClick:i=>d(h)("example-setting-env-for-dev-build")},"Example setting env for dev/build",8,["onClick"]),n("p",null,[t("Please refer to "),n(l,{to:"/quasar-cli-webpack/handling-process-env#adding-to-process-env"},{default:s(()=>[t("Adding to process.env")]),_:1}),t(" section in our docs.")]),n("h3",{id:"handling-webpack-configuration",class:"doc-heading doc-h3",onClick:i=>d(h)("handling-webpack-configuration")},"Handling Webpack configuration",8,["onClick"]),n("p",null,[t("In depth analysis on "),n(l,{to:"/quasar-cli-webpack/handling-webpack"},{default:s(()=>[t("Handling Webpack")]),_:1}),t(" documentation page.")])]}),_:1},O))}}},q=x.setup;x.setup=(S,v)=>{const w=Q();return(w.modules||(w.modules=new Set)).add("src/pages/quasar-cli-webpack/quasar-config-file.md"),q?q(S,v):void 0};const K=W(x,[["__file","quasar-config-file.md"]]);export{K as default};
