import{mergeProps as p,withCtx as u,createVNode as o,createTextVNode as t,useSSRContext as m}from"vue";import{ssrRenderComponent as f}from"vue/server-renderer";import"quasar";import{D as h}from"./DocPage-DKr-0pQn.js";import{_ as k}from"../server-entry.js";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const c={__name:"electron-with-typescript",__ssrInlineRender:!0,setup(r){return(s,n,a,d)=>{n(f(h,p({title:"Electron with Typescript",desc:"(@quasar/app-vite) How to use Typescript with Electron in Quasar",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/developing-electron-apps/electron-with-typescript"},d),{default:u((y,i,g,e)=>{if(i)i(`<p${e}>In order to support Electron with Typescript, you will need to rename the extension for your files in /src-electron from <code class="doc-token"${e}>.js</code> to <code class="doc-token"${e}>.ts</code> and make the necessary TS code changes.</p><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}><code class="doc-token"${e}>electron-packager</code> and <code class="doc-token"${e}>electron-builder</code> export their configuration types from their own packages. Since autocomplete into the <code class="doc-token"${e}>quasar.config</code> file relies on those types, properties <code class="doc-token"${e}>electron.packager</code> and <code class="doc-token"${e}>electron.builder</code> will be fully typed only after the respective package is installed. You can force the installation of the selected bundler (depending on your <code class="doc-token"${e}>electron.bundler</code> option) by running a build command in Electron mode: <code class="doc-token"${e}>quasar build -m electron</code></p></div>`);else return[o("p",null,[t("In order to support Electron with Typescript, you will need to rename the extension for your files in /src-electron from "),o("code",{class:"doc-token"},".js"),t(" to "),o("code",{class:"doc-token"},".ts"),t(" and make the necessary TS code changes.")]),o("div",{class:"doc-note doc-note--tip"},[o("p",{class:"doc-note__title"},"TIP"),o("p",null,[o("code",{class:"doc-token"},"electron-packager"),t(" and "),o("code",{class:"doc-token"},"electron-builder"),t(" export their configuration types from their own packages. Since autocomplete into the "),o("code",{class:"doc-token"},"quasar.config"),t(" file relies on those types, properties "),o("code",{class:"doc-token"},"electron.packager"),t(" and "),o("code",{class:"doc-token"},"electron.builder"),t(" will be fully typed only after the respective package is installed. You can force the installation of the selected bundler (depending on your "),o("code",{class:"doc-token"},"electron.bundler"),t(" option) by running a build command in Electron mode: "),o("code",{class:"doc-token"},"quasar build -m electron")])])]}),_:1},a))}}},l=c.setup;c.setup=(r,s)=>{const n=m();return(n.modules||(n.modules=new Set)).add("src/pages/quasar-cli-vite/developing-electron-apps/electron-with-typescript.md"),l?l(r,s):void 0};const P=k(c,[["__file","electron-with-typescript.md"]]);export{P as default};
