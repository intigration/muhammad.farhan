import{provide as D,mergeProps as Q,withCtx as u,createTextVNode as l,createVNode as o,unref as c,useSSRContext as N}from"vue";import{ssrRenderComponent as a}from"vue/server-renderer";import{c as s}from"./page-utils-C-QWsEHe.js";import{D as x,a as h}from"./DocPage-DKr-0pQn.js";import{D as i}from"./DocExample-BcaABDtE.js";import{D as g}from"./DocApi-Df9ryd6x.js";import{_ as q}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const k={__name:"color-picker",__ssrInlineRender:!0,setup(C){D("_q_ex",{name:"QColor"});const m=[{name:"Color Utils",category:"Genis Utils",path:"/quasar-utils/color-utils"}],f=[{id:"qcolor-api",title:"2. QColor API",deep:!0},{id:"usage",title:"3. Usage"},{id:"basic",title:"3.1. Basic",sub:!0},{id:"with-qinput",title:"3.2. With QInput",sub:!0},{id:"no-header-or-footer",title:"3.3. No header or footer",sub:!0},{id:"custom-default-view",title:"3.4. Custom default view",sub:!0},{id:"custom-palette",title:"3.5. Custom palette",sub:!0},{id:"force-dark-mode",title:"3.6. Force dark mode",sub:!0},{id:"default-value",title:"3.7. Default value",sub:!0},{id:"lazy-update",title:"3.8. Lazy update",sub:!0},{id:"disable-and-readonly",title:"3.9. Disable and readonly",sub:!0},{id:"native-form-submit",title:"3.10. Native form submit",sub:!0}];return(P,b,y,$)=>{b(a(x,Q({title:"Color Picker",desc:"The QColorPicker Vue component provides a way for the user to input colors.",heading:"","edit-link":"vue-components/color-picker",toc:f,related:m},$),{default:u((T,t,n,e)=>{if(t)t(`<p${e}>The QColor component provides a method to input colors.</p><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>For handling colors, also check out `),t(a(h,{to:"/quasar-utils/color-utils"},{default:u((r,d,p,v)=>{if(d)d("Quasar Color Utils");else return[l("Quasar Color Utils")]}),_:1},n,e)),t(".</p></div>"),t(a(g,{file:"QColor"},null,n,e)),t(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><h3 id="basic" class="doc-heading doc-h3"${e}>Basic</h3>`),t(a(i,{title:"Basic",file:"Basic"},null,n,e)),t(`<h3 id="with-qinput" class="doc-heading doc-h3"${e}>With QInput</h3>`),t(a(i,{title:"Input",file:"Input"},null,n,e)),t(`<p${e}>There are <strong${e}>helpers</strong> for QInput <code class="doc-token"${e}>rules</code> prop: `),t(a(h,{to:"https://github.com/quasarframework/quasar/blob/dev/ui/src/utils/patterns.js"},{default:u((r,d,p,v)=>{if(d)d("full list");else return[l("full list")]}),_:1},n,e)),t(". You can use these for convenience or write the string specifying your "),t(a(h,{to:"/vue-components/input#internal-validation"},{default:u((r,d,p,v)=>{if(d)d("custom needs");else return[l("custom needs")]}),_:1},n,e)),t(`.</p><p${e}>Examples: “hexColor”, “rgbOrRgbaColor”, “anyColor”.</p><p${e}>More info: `),t(a(h,{to:"/vue-components/input"},{default:u((r,d,p,v)=>{if(d)d("QInput");else return[l("QInput")]}),_:1},n,e)),t(`.</p><h3 id="no-header-or-footer" class="doc-heading doc-h3"${e}>No header or footer</h3><p${e}>You can choose if you don’t want to render the header and/or footer, like in example below:</p>`),t(a(i,{title:"No header/footer",file:"NoHeaderFooter"},null,n,e)),t(`<h3 id="custom-default-view" class="doc-heading doc-h3"${e}>Custom default view</h3><p${e}>You can also pick the default view, like in example below, where we also specify we don’t want to render the header and footer. The end result generates a nice color palette that the user can pick from:</p>`),t(a(i,{title:"Custom default view",file:"CustomDefaultView"},null,n,e)),t(`<h3 id="custom-palette" class="doc-heading doc-h3"${e}>Custom palette</h3>`),t(a(i,{title:"Custom palette",file:"CustomPalette"},null,n,e)),t(`<h3 id="force-dark-mode" class="doc-heading doc-h3"${e}>Force dark mode</h3>`),t(a(i,{title:"Force dark mode",file:"Dark"},null,n,e)),t(`<h3 id="default-value" class="doc-heading doc-h3"${e}>Default value</h3>`),t(a(i,{title:"Default value",file:"DefaultValue"},null,n,e)),t(`<h3 id="lazy-update" class="doc-heading doc-h3"${e}>Lazy update</h3>`),t(a(i,{title:"Lazy model",file:"LazyModel"},null,n,e)),t(`<h3 id="disable-and-readonly" class="doc-heading doc-h3"${e}>Disable and readonly</h3>`),t(a(i,{title:"Disable and readonly",file:"DisableReadonly"},null,n,e)),t(`<h3 id="native-form-submit" class="doc-heading doc-h3"${e}>Native form submit</h3><p${e}>When dealing with a native form which has an <code class="doc-token"${e}>action</code> and a <code class="doc-token"${e}>method</code> (eg. when using Quasar with ASP.NET controllers), you need to specify the <code class="doc-token"${e}>name</code> property on QColor, otherwise formData will not contain it (if it should):</p>`),t(a(i,{title:"Native form",file:"NativeForm"},null,n,e));else return[o("p",null,"The QColor component provides a method to input colors."),o("div",{class:"doc-note doc-note--tip"},[o("p",{class:"doc-note__title"},"TIP"),o("p",null,[l("For handling colors, also check out "),o(h,{to:"/quasar-utils/color-utils"},{default:u(()=>[l("Quasar Color Utils")]),_:1}),l(".")])]),o(g,{file:"QColor"}),o("h2",{id:"usage",class:"doc-heading doc-h2",onClick:r=>c(s)("usage")},"Usage",8,["onClick"]),o("h3",{id:"basic",class:"doc-heading doc-h3",onClick:r=>c(s)("basic")},"Basic",8,["onClick"]),o(i,{title:"Basic",file:"Basic"}),o("h3",{id:"with-qinput",class:"doc-heading doc-h3",onClick:r=>c(s)("with-qinput")},"With QInput",8,["onClick"]),o(i,{title:"Input",file:"Input"}),o("p",null,[l("There are "),o("strong",null,"helpers"),l(" for QInput "),o("code",{class:"doc-token"},"rules"),l(" prop: "),o(h,{to:"https://github.com/quasarframework/quasar/blob/dev/ui/src/utils/patterns.js"},{default:u(()=>[l("full list")]),_:1}),l(". You can use these for convenience or write the string specifying your "),o(h,{to:"/vue-components/input#internal-validation"},{default:u(()=>[l("custom needs")]),_:1}),l(".")]),o("p",null,"Examples: “hexColor”, “rgbOrRgbaColor”, “anyColor”."),o("p",null,[l("More info: "),o(h,{to:"/vue-components/input"},{default:u(()=>[l("QInput")]),_:1}),l(".")]),o("h3",{id:"no-header-or-footer",class:"doc-heading doc-h3",onClick:r=>c(s)("no-header-or-footer")},"No header or footer",8,["onClick"]),o("p",null,"You can choose if you don’t want to render the header and/or footer, like in example below:"),o(i,{title:"No header/footer",file:"NoHeaderFooter"}),o("h3",{id:"custom-default-view",class:"doc-heading doc-h3",onClick:r=>c(s)("custom-default-view")},"Custom default view",8,["onClick"]),o("p",null,"You can also pick the default view, like in example below, where we also specify we don’t want to render the header and footer. The end result generates a nice color palette that the user can pick from:"),o(i,{title:"Custom default view",file:"CustomDefaultView"}),o("h3",{id:"custom-palette",class:"doc-heading doc-h3",onClick:r=>c(s)("custom-palette")},"Custom palette",8,["onClick"]),o(i,{title:"Custom palette",file:"CustomPalette"}),o("h3",{id:"force-dark-mode",class:"doc-heading doc-h3",onClick:r=>c(s)("force-dark-mode")},"Force dark mode",8,["onClick"]),o(i,{title:"Force dark mode",file:"Dark"}),o("h3",{id:"default-value",class:"doc-heading doc-h3",onClick:r=>c(s)("default-value")},"Default value",8,["onClick"]),o(i,{title:"Default value",file:"DefaultValue"}),o("h3",{id:"lazy-update",class:"doc-heading doc-h3",onClick:r=>c(s)("lazy-update")},"Lazy update",8,["onClick"]),o(i,{title:"Lazy model",file:"LazyModel"}),o("h3",{id:"disable-and-readonly",class:"doc-heading doc-h3",onClick:r=>c(s)("disable-and-readonly")},"Disable and readonly",8,["onClick"]),o(i,{title:"Disable and readonly",file:"DisableReadonly"}),o("h3",{id:"native-form-submit",class:"doc-heading doc-h3",onClick:r=>c(s)("native-form-submit")},"Native form submit",8,["onClick"]),o("p",null,[l("When dealing with a native form which has an "),o("code",{class:"doc-token"},"action"),l(" and a "),o("code",{class:"doc-token"},"method"),l(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),o("code",{class:"doc-token"},"name"),l(" property on QColor, otherwise formData will not contain it (if it should):")]),o(i,{title:"Native form",file:"NativeForm"})]}),_:1},y))}}},w=k.setup;k.setup=(C,m)=>{const f=N();return(f.modules||(f.modules=new Set)).add("src/pages/vue-components/color-picker.md"),w?w(C,m):void 0};const Z=q(k,[["__file","color-picker.md"]]);export{Z as default};
