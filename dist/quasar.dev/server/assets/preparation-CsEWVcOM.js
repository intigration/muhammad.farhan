import{mergeProps as O,withCtx as l,unref as d,createVNode as a,createTextVNode as e,useSSRContext as y}from"vue";import{ssrRenderComponent as i,ssrRenderStyle as w}from"vue/server-renderer";import{c as h}from"./page-utils-C-QWsEHe.js";import{D as R,a as u}from"./DocPage-DKr-0pQn.js";import{D as k}from"./DocPrerender-DPOnWPFO.js";import{C as p}from"./CopyButton-l3ndfN49.js";import{_ as q}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const b={__name:"preparation",__ssrInlineRender:!0,setup(f){const v=[{id:"step-1-installation",title:"2. Step 1: Installation"},{id:"android-setup",title:"2.1. Android Setup",sub:!0},{id:"ios-setup",title:"2.2. iOS Setup",sub:!0},{id:"step-2-add-cordova-quasar-mode",title:"3. Step 2: Add Cordova Quasar Mode"},{id:"step-3-add-platform",title:"4. Step 3: Add Platform"},{id:"switching-to-ios-wkwebview",title:"4.1. Switching to iOS WkWebView",sub:!0},{id:"step-4-start-developing",title:"5. Step 4: Start Developing"}];return(g,D,S,A)=>{D(i(R,O({title:"Preparation for Cordova App",desc:"(@quasar/app-webpack) What you need to do before developing a Quasar hybrid mobile app with Cordova.",overline:"Quasar CLI with Webpack - @quasar/app-webpack",heading:"","edit-link":"quasar-cli-webpack/developing-cordova-apps/preparation",toc:v},A),{default:l((T,s,m,t)=>{if(s)s(`<p${t}>Before we dive into the actual development, we need to do some preparation work.</p><h2 id="step-1-installation" class="doc-heading doc-h2"${t}>Step 1: Installation</h2><p${t}>The first step is to make sure you got the Cordova CLI installed and the necessary SDKs.</p>`),s(i(d(k),null,{default:l((r,o,c,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}>$ <span class="token function"${n}>npm</span> <span class="token function"${n}>install</span> <span class="token parameter variable"${n}>-g</span> cordova</code></pre>`),o(i(p,{lang:"bash"},null,c,n));else return[a("pre",{class:"doc-code"},[a("code",null,[e("$ "),a("span",{class:"token function"},"npm"),e(),a("span",{class:"token function"},"install"),e(),a("span",{class:"token parameter variable"},"-g"),e(" cordova")])]),a(p,{lang:"bash"})]}),_:1},m,t)),s(`<div class="doc-note doc-note--warning"${t}><p class="doc-note__title"${t}>WARNING</p><p${t}>Depending on your version of Android Studio, you might need to re-enable the “Android SDK Tools”. You can do this by going to “Tools &gt; SDK Manager &gt; SDK Tools” then un-ticking “Hide Obsolete Packages” and ticking “Android SDK Tools (Obsolete)”. <strong${t}>The instructions below assume this has been done.</strong></p></div><div class="doc-note doc-note--warning"${t}><p class="doc-note__title"${t}>WARNING</p><p${t}>The environmental variable <code class="doc-token"${t}>ANDROID_HOME</code> has been deprecated and replaced with <code class="doc-token"${t}>ANDROID_SDK_ROOT</code>. Depending on your version of Android Studio you may need one or the other. It doesn’t hurt to have both set.</p></div><h3 id="android-setup" class="doc-heading doc-h3"${t}>Android Setup</h3><ul${t}><li${t}><p${t}>After this step you will need to install the Android platform SDK on your machine. You can `),s(i(u,{to:"https://developer.android.com/studio"},{default:l((r,o,c,n)=>{if(o)o("download the Android Studio here");else return[e("download the Android Studio here")]}),_:1},m,t)),s(" and follow these "),s(i(u,{to:"https://developer.android.com/studio/install"},{default:l((r,o,c,n)=>{if(o)o("installation steps");else return[e("installation steps")]}),_:1},m,t)),s(` afterward.</p></li><li${t}><p${t}>Make sure that after you install the Android SDK you then accept its licenses. Open the terminal and go to the folder where the SDK was installed, in tools/bin, and call <code class="doc-token"${t}>sdkmanager --licenses</code>.</p></li><li${t}><p${t}>Add Android installation to your path:</p></li></ul><h4 id="unix-macos-linux-" class="doc-heading doc-h4"${t}>Unix (macOS, Linux)</h4>`),s(i(d(k),null,{default:l((r,o,c,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}><span class="token builtin class-name"${n}>export</span> <span class="token assign-left variable"${n}>ANDROID_HOME</span><span class="token operator"${n}>=</span><span class="token string"${n}>&quot;<span class="token environment constant"${n}>$HOME</span>/Android/Sdk&quot;</span>
<span class="token builtin class-name"${n}>export</span> <span class="token assign-left variable"${n}>ANDROID_SDK_ROOT</span><span class="token operator"${n}>=</span><span class="token string"${n}>&quot;<span class="token environment constant"${n}>$HOME</span>/Android/Sdk&quot;</span>
<span class="token builtin class-name"${n}>export</span> <span class="token assign-left variable"${n}><span class="token environment constant"${n}>PATH</span></span><span class="token operator"${n}>=</span><span class="token environment constant"${n}>$PATH</span><span class="token builtin class-name"${n}>:</span><span class="token variable"${n}>$ANDROID_SDK_ROOT</span>/tools<span class="token punctuation"${n}>;</span> <span class="token assign-left variable"${n}><span class="token environment constant"${n}>PATH</span></span><span class="token operator"${n}>=</span><span class="token environment constant"${n}>$PATH</span><span class="token builtin class-name"${n}>:</span><span class="token variable"${n}>$ANDROID_SDK_ROOT</span>/platform-tools</code></pre>`),o(i(p,{lang:"bash"},null,c,n));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token builtin class-name"},"export"),e(),a("span",{class:"token assign-left variable"},"ANDROID_HOME"),a("span",{class:"token operator"},"="),a("span",{class:"token string"},[e('"'),a("span",{class:"token environment constant"},"$HOME"),e('/Android/Sdk"')]),e(`
`),a("span",{class:"token builtin class-name"},"export"),e(),a("span",{class:"token assign-left variable"},"ANDROID_SDK_ROOT"),a("span",{class:"token operator"},"="),a("span",{class:"token string"},[e('"'),a("span",{class:"token environment constant"},"$HOME"),e('/Android/Sdk"')]),e(`
`),a("span",{class:"token builtin class-name"},"export"),e(),a("span",{class:"token assign-left variable"},[a("span",{class:"token environment constant"},"PATH")]),a("span",{class:"token operator"},"="),a("span",{class:"token environment constant"},"$PATH"),a("span",{class:"token builtin class-name"},":"),a("span",{class:"token variable"},"$ANDROID_SDK_ROOT"),e("/tools"),a("span",{class:"token punctuation"},";"),e(),a("span",{class:"token assign-left variable"},[a("span",{class:"token environment constant"},"PATH")]),a("span",{class:"token operator"},"="),a("span",{class:"token environment constant"},"$PATH"),a("span",{class:"token builtin class-name"},":"),a("span",{class:"token variable"},"$ANDROID_SDK_ROOT"),e("/platform-tools")])]),a(p,{lang:"bash"})]}),_:1},m,t)),s(`<blockquote class="doc-note"${t}><p${t}>Please note that sometimes the <code class="doc-token"${t}>/Android/Sdk</code> folder is added inside <code class="doc-token"${t}>/Library/</code> inside your user folder. Check your user folder and if the <code class="doc-token"${t}>/Android/</code> folder is only inside <code class="doc-token"${t}>/Library/</code> do: <code class="doc-token"${t}>export ANDROID_SDK_ROOT=&quot;$HOME/Library/Android/Sdk&quot;</code> or <code class="doc-token"${t}>export ANDROID_HOME=&quot;$HOME/Library/Android/Sdk&quot;</code> instead.</p></blockquote><h4 id="windows" class="doc-heading doc-h4"${t}>Windows</h4><p${t}>After installing Android Studio, you need to install two more pieces of software:</p><ul${t}><li${t}>JDK from Oracle. It can be found `),s(i(u,{to:"https://www.oracle.com/java/technologies/downloads/#java8"},{default:l((r,o,c,n)=>{if(o)o("here");else return[e("here")]}),_:1},m,t)),s(`</li><li${t}>Gradle. It used to be usable from Android Studio but now you have to install it separately. There is a particular version that Cordova requires. You can download it `),s(i(u,{to:"https://gradle.org/next-steps/?version=4.10.3&format=all"},{default:l((r,o,c,n)=>{if(o)o("here");else return[e("here")]}),_:1},m,t)),s(`</li></ul><p${t}>Then you will have to set environment variables. You will need to set the following variables. Cordova has a good guide for it already. It can be found `),s(i(u,{to:"https://cordova.apache.org/docs/en/latest/guide/platforms/android/#setting-environment-variables"},{default:l((r,o,c,n)=>{if(o)o("here");else return[e("here")]}),_:1},m,t)),s(`. You need to:</p><ul${t}><li${t}>add <code class="doc-token"${t}>ANDROID_SDK_ROOT</code>. It can safely be set to: “%USERPROFILE%\\AppData\\Local\\Android\\Sdk”</li><li${t}>add two <code class="doc-token"${t}>ANDROID_SDK_ROOT</code> directories to your path: %ANDROID_SDK_ROOT%\\tools;%ANDROID_SDK_ROOT%\\platform-tools</li><li${t}>add Gradle to your path. Note that Gradle does not have an installer. You just put the binary files where you want them, then add the bin directory to your path.</li><li${t}>add <code class="doc-token"${t}>JAVA_HOME</code>. Its value depends on where you installed it. You can `),s(i(u,{to:"https://www.oracle.com/java/technologies/downloads/"},{default:l((r,o,c,n)=>{if(o)o("download the JDK here");else return[e("download the JDK here")]}),_:1},m,t)),s(`</li></ul><blockquote class="doc-note"${t}><p${t}>You can check the value of an environment variable by typing in console <code class="doc-token"${t}>echo %ENVIRONMENT_VARIABLE%</code>.</p></blockquote><p${t}>If you have an init script for your command prompt or powershell, you can try this:</p>`),s(i(d(k),null,{default:l((r,o,c,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}>setx ANDROID_HOME <span class="token string"${n}>&quot;%USERPROFILE%\\AppData\\Local\\Android\\Sdk&quot;</span>
setx ANDROID_SDK_ROOT <span class="token string"${n}>&quot;%USERPROFILE%\\AppData\\Local\\Android\\Sdk&quot;</span>
setx path <span class="token string"${n}>&quot;%path%;%ANDROID_SDK_ROOT%<span class="token entity" title="\\t"${n}>\\t</span>ools;%ANDROID_SDK_ROOT%\\platform-tools;&lt;gradle_path&gt;<span class="token entity" title="\\b"${n}>\\b</span>in;&quot;</span></code></pre>`),o(i(p,{lang:"bash"},null,c,n));else return[a("pre",{class:"doc-code"},[a("code",null,[e("setx ANDROID_HOME "),a("span",{class:"token string"},'"%USERPROFILE%\\AppData\\Local\\Android\\Sdk"'),e(`
setx ANDROID_SDK_ROOT `),a("span",{class:"token string"},'"%USERPROFILE%\\AppData\\Local\\Android\\Sdk"'),e(`
setx path `),a("span",{class:"token string"},[e('"%path%;%ANDROID_SDK_ROOT%'),a("span",{class:"token entity",title:"\\t"},"\\t"),e("ools;%ANDROID_SDK_ROOT%\\platform-tools;<gradle_path>"),a("span",{class:"token entity",title:"\\b"},"\\b"),e('in;"')])])]),a(p,{lang:"bash"})]}),_:1},m,t)),s(`<p${t}>After the tools are installed, set up Android Studio with the correct SDK and create a virtual machine.</p><ul${t}><li${t}><p${t}>Start Android Studio (check the executable in the folder that you installed it in). The next step is to install the individual SDKs:</p></li><li${t}><p${t}>Open the “Configure” menu at the bottom of the window:</p><p${t}><img src="https://cdn.quasar.dev/img/Android-Studio-SDK-Menu.png" alt="" title="SDK manager" class="doc-img"${t}></p></li><li${t}><p${t}>Select the desired SDKs. As of December 2019, Cordova requires android-28 (Android 9.0 - Pie) so be sure to include it. Click on “Apply” to install the SDKs.</p><p${t}><img src="https://cdn.quasar.dev/img/Android-Studio-SDK-selection.png" alt="" title="SDK selection" class="doc-img"${t}></p></li></ul><h3 id="ios-setup" class="doc-heading doc-h3"${t}>iOS Setup</h3><p${t}>You will need a macOS with `),s(i(u,{to:"https://developer.apple.com/xcode/"},{default:l((r,o,c,n)=>{if(o)o("Xcode");else return[e("Xcode")]}),_:1},m,t)),s(` installed. After you’ve installed it, open Xcode in order to get the license prompt. Accept the license, then you can close it.</p><h2 id="step-2-add-cordova-quasar-mode" class="doc-heading doc-h2"${t}>Step 2: Add Cordova Quasar Mode</h2><p${t}>In order to develop/build a Mobile app, we need to add the Cordova mode to our Quasar project. What this does is that it uses Cordova CLI to generate a Cordova project in the <code class="doc-token"${t}>/src-cordova</code> folder. The <code class="doc-token"${t}>/src-cordova/www</code> folder will be overwritten each time you build.</p>`),s(i(d(k),null,{default:l((r,o,c,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}>$ quasar mode <span class="token function"${n}>add</span> cordova</code></pre>`),o(i(p,{lang:"bash"},null,c,n));else return[a("pre",{class:"doc-code"},[a("code",null,[e("$ quasar mode "),a("span",{class:"token function"},"add"),e(" cordova")])]),a(p,{lang:"bash"})]}),_:1},m,t)),s(`<h2 id="step-3-add-platform" class="doc-heading doc-h2"${t}>Step 3: Add Platform</h2><p${t}>To switch to the Cordova project, type:</p>`),s(i(d(k),null,{default:l((r,o,c,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}>$ <span class="token builtin class-name"${n}>cd</span> src-cordova</code></pre>`),o(i(p,{lang:"bash"},null,c,n));else return[a("pre",{class:"doc-code"},[a("code",null,[e("$ "),a("span",{class:"token builtin class-name"},"cd"),e(" src-cordova")])]),a(p,{lang:"bash"})]}),_:1},m,t)),s(`<p${t}>Target platforms get installed on demand by Quasar CLI. However, if you want to add a platform manually, type:</p>`),s(i(d(k),null,{default:l((r,o,c,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}>$ cordova platform <span class="token function"${n}>add</span> <span class="token punctuation"${n}>[</span>android<span class="token operator"${n}>|</span>ios<span class="token punctuation"${n}>]</span></code></pre>`),o(i(p,{lang:"bash"},null,c,n));else return[a("pre",{class:"doc-code"},[a("code",null,[e("$ cordova platform "),a("span",{class:"token function"},"add"),e(),a("span",{class:"token punctuation"},"["),e("android"),a("span",{class:"token operator"},"|"),e("ios"),a("span",{class:"token punctuation"},"]")])]),a(p,{lang:"bash"})]}),_:1},m,t)),s(`<p${t}>To verify that everything is in order, type:</p>`),s(i(d(k),null,{default:l((r,o,c,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}>$ cordova requirements</code></pre>`),o(i(p,{lang:"bash"},null,c,n));else return[a("pre",{class:"doc-code"},[a("code",null,"$ cordova requirements")]),a(p,{lang:"bash"})]}),_:1},m,t)),s(`<blockquote class="doc-note"${t}><p${t}>On some newer Debian-based operating systems you might face a very persistent problem when running <code class="doc-token"${t}>cordova requirements</code>. Please see the `),s(i(u,{to:"/quasar-cli-vite/developing-cordova-apps/troubleshooting-and-tips#Android-SDK-not-found-after-installation-of-the-SDK"},{default:l((r,o,c,n)=>{if(o)o("“Android SDK not found” after installation");else return[e("“Android SDK not found” after installation")]}),_:1},m,t)),s(` section for assistance.</p></blockquote><h3 id="switching-to-ios-wkwebview" class="doc-heading doc-h3"${t}>Switching to iOS WkWebView</h3><p${t}>Switching to WKWebView is highly recommended (but optional!) as UIWebView has been deprecated in iOS 12.0 as described in this Cordova blog post: `),s(i(u,{to:"https://cordova.apache.org/news/2018/08/01/future-cordova-ios-webview.html"},{default:l((r,o,c,n)=>{if(o)o("https://cordova.apache.org/news/2018/08/01/future-cordova-ios-webview.html");else return[e("https://cordova.apache.org/news/2018/08/01/future-cordova-ios-webview.html")]}),_:1},m,t)),s(`.</p><p${t}><strong${t}>However, choose wisely if you want to replace the default Web View. Each comes with its own caveats.</strong> Make sure that you visit the link above.</p><h4 id="option-1-ionic-webview-plugin" class="doc-heading doc-h4"${t}>Option 1: Ionic Webview Plugin</h4><ol${t}><li${t}>Install Ionic Webview Plugin</li></ol>`),s(i(d(k),null,{default:l((r,o,c,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}><span class="token comment"${n}># from /src-cordova</span>
$ cordova plugin <span class="token function"${n}>add</span> cordova-plugin-ionic-webview</code></pre>`),o(i(p,{lang:"bash"},null,c,n));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# from /src-cordova"),e(`
$ cordova plugin `),a("span",{class:"token function"},"add"),e(" cordova-plugin-ionic-webview")])]),a(p,{lang:"bash"})]}),_:1},m,t)),s(`<ol start="2"${t}><li${t}>Add <code class="doc-token"${t}>ScrollEnabled</code> preference to <code class="doc-token"${t}>Config.xml</code></li></ol>`),s(i(d(k),null,{default:l((r,o,c,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}><span class="token tag"${n}><span class="token tag"${n}><span class="token punctuation"${n}>&lt;</span>platform</span> <span class="token attr-name"${n}>name</span><span class="token attr-value"${n}><span class="token punctuation attr-equals"${n}>=</span><span class="token punctuation"${n}>&quot;</span>ios<span class="token punctuation"${n}>&quot;</span></span><span class="token punctuation"${n}>&gt;</span></span>
  <span class="token tag"${n}><span class="token tag"${n}><span class="token punctuation"${n}>&lt;</span>preference</span> <span class="token attr-name"${n}>name</span><span class="token attr-value"${n}><span class="token punctuation attr-equals"${n}>=</span><span class="token punctuation"${n}>&quot;</span>ScrollEnabled<span class="token punctuation"${n}>&quot;</span></span> <span class="token attr-name"${n}>value</span><span class="token attr-value"${n}><span class="token punctuation attr-equals"${n}>=</span><span class="token punctuation"${n}>&quot;</span>true<span class="token punctuation"${n}>&quot;</span></span> <span class="token punctuation"${n}>/&gt;</span></span>
<span class="token tag"${n}><span class="token tag"${n}><span class="token punctuation"${n}>&lt;/</span>platform</span><span class="token punctuation"${n}>&gt;</span></span></code></pre>`),o(i(p,null,null,c,n));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),e("platform")]),e(),a("span",{class:"token attr-name"},"name"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),e("ios"),a("span",{class:"token punctuation"},'"')]),a("span",{class:"token punctuation"},">")]),e(`
  `),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),e("preference")]),e(),a("span",{class:"token attr-name"},"name"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),e("ScrollEnabled"),a("span",{class:"token punctuation"},'"')]),e(),a("span",{class:"token attr-name"},"value"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),e("true"),a("span",{class:"token punctuation"},'"')]),e(),a("span",{class:"token punctuation"},"/>")]),e(`
`),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),e("platform")]),a("span",{class:"token punctuation"},">")])])]),a(p)]}),_:1},m,t)),s(`<ol start="3"${t}><li${t}>Consult Ionic Docs for caveats on WkWebViewPlugin</li></ol><ul${t}><li${t}>`),s(i(u,{to:"https://beta.ionicframework.com/docs/building/webview"},{default:l((r,o,c,n)=>{if(o)o("https://beta.ionicframework.com/docs/building/webview");else return[e("https://beta.ionicframework.com/docs/building/webview")]}),_:1},m,t)),s(`</li><li${t}>`),s(i(u,{to:"https://github.com/ionic-team/cordova-plugin-ionic-webview"},{default:l((r,o,c,n)=>{if(o)o("https://github.com/ionic-team/cordova-plugin-ionic-webview");else return[e("https://github.com/ionic-team/cordova-plugin-ionic-webview")]}),_:1},m,t)),s(`</li></ul><h4 id="option-2-cordova-wkwebviewengine-plugin" class="doc-heading doc-h4"${t}>Option 2: Cordova WkWebviewEngine Plugin</h4><ol${t}><li${t}>Install Cordova WkWebviewEngine Plugin</li></ol>`),s(i(d(k),null,{default:l((r,o,c,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}><span class="token comment"${n}># from /src-cordova</span>
$ cordova plugin <span class="token function"${n}>add</span> cordova-plugin-wkwebview-engine</code></pre>`),o(i(p,{lang:"bash"},null,c,n));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# from /src-cordova"),e(`
$ cordova plugin `),a("span",{class:"token function"},"add"),e(" cordova-plugin-wkwebview-engine")])]),a(p,{lang:"bash"})]}),_:1},m,t)),s(`<ol start="2"${t}><li${t}>For caveats and more info, visit: `),s(i(u,{to:"https://github.com/apache/cordova-plugin-wkwebview-engine"},{default:l((r,o,c,n)=>{if(o)o("https://github.com/apache/cordova-plugin-wkwebview-engine");else return[e("https://github.com/apache/cordova-plugin-wkwebview-engine")]}),_:1},m,t)),s(`</li></ol><h2 id="step-4-start-developing" class="doc-heading doc-h2"${t}>Step 4: Start Developing</h2><p${t}>You can start the development server with the command below:</p>`),s(i(d(k),null,{default:l((r,o,c,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}>$ quasar dev <span class="token parameter variable"${n}>-m</span> cordova <span class="token parameter variable"${n}>-T</span> <span class="token punctuation"${n}>[</span>android<span class="token operator"${n}>|</span>ios<span class="token punctuation"${n}>]</span>

<span class="token comment"${n}># passing extra parameters and/or options to</span>
<span class="token comment"${n}># underlying &quot;cordova&quot; executable:</span>
$ quasar dev <span class="token parameter variable"${n}>-m</span> ios -- some params <span class="token parameter variable"${n}>--and</span> options <span class="token parameter variable"${n}>--here</span>
<span class="token comment"${n}># when on Windows and using PowerShell:</span>
$ quasar dev <span class="token parameter variable"${n}>-m</span> ios <span class="token string"${n}>&#39;--&#39;</span> some params <span class="token parameter variable"${n}>--and</span> options <span class="token parameter variable"${n}>--here</span></code></pre>`),o(i(p,{lang:"bash"},null,c,n));else return[a("pre",{class:"doc-code"},[a("code",null,[e("$ quasar dev "),a("span",{class:"token parameter variable"},"-m"),e(" cordova "),a("span",{class:"token parameter variable"},"-T"),e(),a("span",{class:"token punctuation"},"["),e("android"),a("span",{class:"token operator"},"|"),e("ios"),a("span",{class:"token punctuation"},"]"),e(`

`),a("span",{class:"token comment"},"# passing extra parameters and/or options to"),e(`
`),a("span",{class:"token comment"},'# underlying "cordova" executable:'),e(`
$ quasar dev `),a("span",{class:"token parameter variable"},"-m"),e(" ios -- some params "),a("span",{class:"token parameter variable"},"--and"),e(" options "),a("span",{class:"token parameter variable"},"--here"),e(`
`),a("span",{class:"token comment"},"# when on Windows and using PowerShell:"),e(`
$ quasar dev `),a("span",{class:"token parameter variable"},"-m"),e(" ios "),a("span",{class:"token string"},"'--'"),e(" some params "),a("span",{class:"token parameter variable"},"--and"),e(" options "),a("span",{class:"token parameter variable"},"--here")])]),a(p,{lang:"bash"})]}),_:1},m,t)),s(`<p${t}>This will also add Cordova mode and install the related Cordova platform automatically if it is missing.</p><p${t}>You will be able to run the app on your mobile device if you have one, or through the emulator. See `),s(i(u,{to:"https://quasar.dev/quasar-cli-vite/developing-cordova-apps/build-commands#developing"},{default:l((r,o,c,n)=>{if(o)o("Mobile App Build Commands &gt; Developing");else return[e("Mobile App Build Commands > Developing")]}),_:1},m,t)),s(` for more information.</p><div class="doc-note doc-note--warning"${t}><p class="doc-note__title"${t}>WARNING</p><p${t}>In Android Studio, you will be greeted with a message recommending to upgrade the Gradle version. <strong${t}>DO NOT UPGRADE GRADLE</strong> as it will break the Cordova project. The same goes for any other requested upgrades.</p><img src="https://cdn.quasar.dev/img/gradle-upgrade-notice.png" alt="Gradle upgrade" class="q-my-md rounded-borders" style="${w({"max-width":"350px"})}"${t}><p${t}>If you encounter any IDE errors then click on File &gt; Invalidate caches and restart.</p><img src="https://cdn.quasar.dev/img/gradle-invalidate-cache.png" alt="Gradle upgrade" class="q-mt-md rounded-borders" style="${w({"max-width":"350px"})}"${t}></div>`);else return[a("p",null,"Before we dive into the actual development, we need to do some preparation work."),a("h2",{id:"step-1-installation",class:"doc-heading doc-h2",onClick:r=>d(h)("step-1-installation")},"Step 1: Installation",8,["onClick"]),a("p",null,"The first step is to make sure you got the Cordova CLI installed and the necessary SDKs."),a(d(k),null,{default:l(()=>[a("pre",{class:"doc-code"},[a("code",null,[e("$ "),a("span",{class:"token function"},"npm"),e(),a("span",{class:"token function"},"install"),e(),a("span",{class:"token parameter variable"},"-g"),e(" cordova")])]),a(p,{lang:"bash"})]),_:1}),a("div",{class:"doc-note doc-note--warning"},[a("p",{class:"doc-note__title"},"WARNING"),a("p",null,[e("Depending on your version of Android Studio, you might need to re-enable the “Android SDK Tools”. You can do this by going to “Tools > SDK Manager > SDK Tools” then un-ticking “Hide Obsolete Packages” and ticking “Android SDK Tools (Obsolete)”. "),a("strong",null,"The instructions below assume this has been done.")])]),a("div",{class:"doc-note doc-note--warning"},[a("p",{class:"doc-note__title"},"WARNING"),a("p",null,[e("The environmental variable "),a("code",{class:"doc-token"},"ANDROID_HOME"),e(" has been deprecated and replaced with "),a("code",{class:"doc-token"},"ANDROID_SDK_ROOT"),e(". Depending on your version of Android Studio you may need one or the other. It doesn’t hurt to have both set.")])]),a("h3",{id:"android-setup",class:"doc-heading doc-h3",onClick:r=>d(h)("android-setup")},"Android Setup",8,["onClick"]),a("ul",null,[a("li",null,[a("p",null,[e("After this step you will need to install the Android platform SDK on your machine. You can "),a(u,{to:"https://developer.android.com/studio"},{default:l(()=>[e("download the Android Studio here")]),_:1}),e(" and follow these "),a(u,{to:"https://developer.android.com/studio/install"},{default:l(()=>[e("installation steps")]),_:1}),e(" afterward.")])]),a("li",null,[a("p",null,[e("Make sure that after you install the Android SDK you then accept its licenses. Open the terminal and go to the folder where the SDK was installed, in tools/bin, and call "),a("code",{class:"doc-token"},"sdkmanager --licenses"),e(".")])]),a("li",null,[a("p",null,"Add Android installation to your path:")])]),a("h4",{id:"unix-macos-linux-",class:"doc-heading doc-h4",onClick:r=>d(h)("unix-macos-linux-")},"Unix (macOS, Linux)",8,["onClick"]),a(d(k),null,{default:l(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token builtin class-name"},"export"),e(),a("span",{class:"token assign-left variable"},"ANDROID_HOME"),a("span",{class:"token operator"},"="),a("span",{class:"token string"},[e('"'),a("span",{class:"token environment constant"},"$HOME"),e('/Android/Sdk"')]),e(`
`),a("span",{class:"token builtin class-name"},"export"),e(),a("span",{class:"token assign-left variable"},"ANDROID_SDK_ROOT"),a("span",{class:"token operator"},"="),a("span",{class:"token string"},[e('"'),a("span",{class:"token environment constant"},"$HOME"),e('/Android/Sdk"')]),e(`
`),a("span",{class:"token builtin class-name"},"export"),e(),a("span",{class:"token assign-left variable"},[a("span",{class:"token environment constant"},"PATH")]),a("span",{class:"token operator"},"="),a("span",{class:"token environment constant"},"$PATH"),a("span",{class:"token builtin class-name"},":"),a("span",{class:"token variable"},"$ANDROID_SDK_ROOT"),e("/tools"),a("span",{class:"token punctuation"},";"),e(),a("span",{class:"token assign-left variable"},[a("span",{class:"token environment constant"},"PATH")]),a("span",{class:"token operator"},"="),a("span",{class:"token environment constant"},"$PATH"),a("span",{class:"token builtin class-name"},":"),a("span",{class:"token variable"},"$ANDROID_SDK_ROOT"),e("/platform-tools")])]),a(p,{lang:"bash"})]),_:1}),a("blockquote",{class:"doc-note"},[a("p",null,[e("Please note that sometimes the "),a("code",{class:"doc-token"},"/Android/Sdk"),e(" folder is added inside "),a("code",{class:"doc-token"},"/Library/"),e(" inside your user folder. Check your user folder and if the "),a("code",{class:"doc-token"},"/Android/"),e(" folder is only inside "),a("code",{class:"doc-token"},"/Library/"),e(" do: "),a("code",{class:"doc-token"},'export ANDROID_SDK_ROOT="$HOME/Library/Android/Sdk"'),e(" or "),a("code",{class:"doc-token"},'export ANDROID_HOME="$HOME/Library/Android/Sdk"'),e(" instead.")])]),a("h4",{id:"windows",class:"doc-heading doc-h4",onClick:r=>d(h)("windows")},"Windows",8,["onClick"]),a("p",null,"After installing Android Studio, you need to install two more pieces of software:"),a("ul",null,[a("li",null,[e("JDK from Oracle. It can be found "),a(u,{to:"https://www.oracle.com/java/technologies/downloads/#java8"},{default:l(()=>[e("here")]),_:1})]),a("li",null,[e("Gradle. It used to be usable from Android Studio but now you have to install it separately. There is a particular version that Cordova requires. You can download it "),a(u,{to:"https://gradle.org/next-steps/?version=4.10.3&format=all"},{default:l(()=>[e("here")]),_:1})])]),a("p",null,[e("Then you will have to set environment variables. You will need to set the following variables. Cordova has a good guide for it already. It can be found "),a(u,{to:"https://cordova.apache.org/docs/en/latest/guide/platforms/android/#setting-environment-variables"},{default:l(()=>[e("here")]),_:1}),e(". You need to:")]),a("ul",null,[a("li",null,[e("add "),a("code",{class:"doc-token"},"ANDROID_SDK_ROOT"),e(". It can safely be set to: “%USERPROFILE%\\AppData\\Local\\Android\\Sdk”")]),a("li",null,[e("add two "),a("code",{class:"doc-token"},"ANDROID_SDK_ROOT"),e(" directories to your path: %ANDROID_SDK_ROOT%\\tools;%ANDROID_SDK_ROOT%\\platform-tools")]),a("li",null,"add Gradle to your path. Note that Gradle does not have an installer. You just put the binary files where you want them, then add the bin directory to your path."),a("li",null,[e("add "),a("code",{class:"doc-token"},"JAVA_HOME"),e(". Its value depends on where you installed it. You can "),a(u,{to:"https://www.oracle.com/java/technologies/downloads/"},{default:l(()=>[e("download the JDK here")]),_:1})])]),a("blockquote",{class:"doc-note"},[a("p",null,[e("You can check the value of an environment variable by typing in console "),a("code",{class:"doc-token"},"echo %ENVIRONMENT_VARIABLE%"),e(".")])]),a("p",null,"If you have an init script for your command prompt or powershell, you can try this:"),a(d(k),null,{default:l(()=>[a("pre",{class:"doc-code"},[a("code",null,[e("setx ANDROID_HOME "),a("span",{class:"token string"},'"%USERPROFILE%\\AppData\\Local\\Android\\Sdk"'),e(`
setx ANDROID_SDK_ROOT `),a("span",{class:"token string"},'"%USERPROFILE%\\AppData\\Local\\Android\\Sdk"'),e(`
setx path `),a("span",{class:"token string"},[e('"%path%;%ANDROID_SDK_ROOT%'),a("span",{class:"token entity",title:"\\t"},"\\t"),e("ools;%ANDROID_SDK_ROOT%\\platform-tools;<gradle_path>"),a("span",{class:"token entity",title:"\\b"},"\\b"),e('in;"')])])]),a(p,{lang:"bash"})]),_:1}),a("p",null,"After the tools are installed, set up Android Studio with the correct SDK and create a virtual machine."),a("ul",null,[a("li",null,[a("p",null,"Start Android Studio (check the executable in the folder that you installed it in). The next step is to install the individual SDKs:")]),a("li",null,[a("p",null,"Open the “Configure” menu at the bottom of the window:"),a("p",null,[a("img",{src:"https://cdn.quasar.dev/img/Android-Studio-SDK-Menu.png",alt:"",title:"SDK manager",class:"doc-img"})])]),a("li",null,[a("p",null,"Select the desired SDKs. As of December 2019, Cordova requires android-28 (Android 9.0 - Pie) so be sure to include it. Click on “Apply” to install the SDKs."),a("p",null,[a("img",{src:"https://cdn.quasar.dev/img/Android-Studio-SDK-selection.png",alt:"",title:"SDK selection",class:"doc-img"})])])]),a("h3",{id:"ios-setup",class:"doc-heading doc-h3",onClick:r=>d(h)("ios-setup")},"iOS Setup",8,["onClick"]),a("p",null,[e("You will need a macOS with "),a(u,{to:"https://developer.apple.com/xcode/"},{default:l(()=>[e("Xcode")]),_:1}),e(" installed. After you’ve installed it, open Xcode in order to get the license prompt. Accept the license, then you can close it.")]),a("h2",{id:"step-2-add-cordova-quasar-mode",class:"doc-heading doc-h2",onClick:r=>d(h)("step-2-add-cordova-quasar-mode")},"Step 2: Add Cordova Quasar Mode",8,["onClick"]),a("p",null,[e("In order to develop/build a Mobile app, we need to add the Cordova mode to our Quasar project. What this does is that it uses Cordova CLI to generate a Cordova project in the "),a("code",{class:"doc-token"},"/src-cordova"),e(" folder. The "),a("code",{class:"doc-token"},"/src-cordova/www"),e(" folder will be overwritten each time you build.")]),a(d(k),null,{default:l(()=>[a("pre",{class:"doc-code"},[a("code",null,[e("$ quasar mode "),a("span",{class:"token function"},"add"),e(" cordova")])]),a(p,{lang:"bash"})]),_:1}),a("h2",{id:"step-3-add-platform",class:"doc-heading doc-h2",onClick:r=>d(h)("step-3-add-platform")},"Step 3: Add Platform",8,["onClick"]),a("p",null,"To switch to the Cordova project, type:"),a(d(k),null,{default:l(()=>[a("pre",{class:"doc-code"},[a("code",null,[e("$ "),a("span",{class:"token builtin class-name"},"cd"),e(" src-cordova")])]),a(p,{lang:"bash"})]),_:1}),a("p",null,"Target platforms get installed on demand by Quasar CLI. However, if you want to add a platform manually, type:"),a(d(k),null,{default:l(()=>[a("pre",{class:"doc-code"},[a("code",null,[e("$ cordova platform "),a("span",{class:"token function"},"add"),e(),a("span",{class:"token punctuation"},"["),e("android"),a("span",{class:"token operator"},"|"),e("ios"),a("span",{class:"token punctuation"},"]")])]),a(p,{lang:"bash"})]),_:1}),a("p",null,"To verify that everything is in order, type:"),a(d(k),null,{default:l(()=>[a("pre",{class:"doc-code"},[a("code",null,"$ cordova requirements")]),a(p,{lang:"bash"})]),_:1}),a("blockquote",{class:"doc-note"},[a("p",null,[e("On some newer Debian-based operating systems you might face a very persistent problem when running "),a("code",{class:"doc-token"},"cordova requirements"),e(". Please see the "),a(u,{to:"/quasar-cli-vite/developing-cordova-apps/troubleshooting-and-tips#Android-SDK-not-found-after-installation-of-the-SDK"},{default:l(()=>[e("“Android SDK not found” after installation")]),_:1}),e(" section for assistance.")])]),a("h3",{id:"switching-to-ios-wkwebview",class:"doc-heading doc-h3",onClick:r=>d(h)("switching-to-ios-wkwebview")},"Switching to iOS WkWebView",8,["onClick"]),a("p",null,[e("Switching to WKWebView is highly recommended (but optional!) as UIWebView has been deprecated in iOS 12.0 as described in this Cordova blog post: "),a(u,{to:"https://cordova.apache.org/news/2018/08/01/future-cordova-ios-webview.html"},{default:l(()=>[e("https://cordova.apache.org/news/2018/08/01/future-cordova-ios-webview.html")]),_:1}),e(".")]),a("p",null,[a("strong",null,"However, choose wisely if you want to replace the default Web View. Each comes with its own caveats."),e(" Make sure that you visit the link above.")]),a("h4",{id:"option-1-ionic-webview-plugin",class:"doc-heading doc-h4",onClick:r=>d(h)("option-1-ionic-webview-plugin")},"Option 1: Ionic Webview Plugin",8,["onClick"]),a("ol",null,[a("li",null,"Install Ionic Webview Plugin")]),a(d(k),null,{default:l(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# from /src-cordova"),e(`
$ cordova plugin `),a("span",{class:"token function"},"add"),e(" cordova-plugin-ionic-webview")])]),a(p,{lang:"bash"})]),_:1}),a("ol",{start:"2"},[a("li",null,[e("Add "),a("code",{class:"doc-token"},"ScrollEnabled"),e(" preference to "),a("code",{class:"doc-token"},"Config.xml")])]),a(d(k),null,{default:l(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),e("platform")]),e(),a("span",{class:"token attr-name"},"name"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),e("ios"),a("span",{class:"token punctuation"},'"')]),a("span",{class:"token punctuation"},">")]),e(`
  `),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),e("preference")]),e(),a("span",{class:"token attr-name"},"name"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),e("ScrollEnabled"),a("span",{class:"token punctuation"},'"')]),e(),a("span",{class:"token attr-name"},"value"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),e("true"),a("span",{class:"token punctuation"},'"')]),e(),a("span",{class:"token punctuation"},"/>")]),e(`
`),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),e("platform")]),a("span",{class:"token punctuation"},">")])])]),a(p)]),_:1}),a("ol",{start:"3"},[a("li",null,"Consult Ionic Docs for caveats on WkWebViewPlugin")]),a("ul",null,[a("li",null,[a(u,{to:"https://beta.ionicframework.com/docs/building/webview"},{default:l(()=>[e("https://beta.ionicframework.com/docs/building/webview")]),_:1})]),a("li",null,[a(u,{to:"https://github.com/ionic-team/cordova-plugin-ionic-webview"},{default:l(()=>[e("https://github.com/ionic-team/cordova-plugin-ionic-webview")]),_:1})])]),a("h4",{id:"option-2-cordova-wkwebviewengine-plugin",class:"doc-heading doc-h4",onClick:r=>d(h)("option-2-cordova-wkwebviewengine-plugin")},"Option 2: Cordova WkWebviewEngine Plugin",8,["onClick"]),a("ol",null,[a("li",null,"Install Cordova WkWebviewEngine Plugin")]),a(d(k),null,{default:l(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# from /src-cordova"),e(`
$ cordova plugin `),a("span",{class:"token function"},"add"),e(" cordova-plugin-wkwebview-engine")])]),a(p,{lang:"bash"})]),_:1}),a("ol",{start:"2"},[a("li",null,[e("For caveats and more info, visit: "),a(u,{to:"https://github.com/apache/cordova-plugin-wkwebview-engine"},{default:l(()=>[e("https://github.com/apache/cordova-plugin-wkwebview-engine")]),_:1})])]),a("h2",{id:"step-4-start-developing",class:"doc-heading doc-h2",onClick:r=>d(h)("step-4-start-developing")},"Step 4: Start Developing",8,["onClick"]),a("p",null,"You can start the development server with the command below:"),a(d(k),null,{default:l(()=>[a("pre",{class:"doc-code"},[a("code",null,[e("$ quasar dev "),a("span",{class:"token parameter variable"},"-m"),e(" cordova "),a("span",{class:"token parameter variable"},"-T"),e(),a("span",{class:"token punctuation"},"["),e("android"),a("span",{class:"token operator"},"|"),e("ios"),a("span",{class:"token punctuation"},"]"),e(`

`),a("span",{class:"token comment"},"# passing extra parameters and/or options to"),e(`
`),a("span",{class:"token comment"},'# underlying "cordova" executable:'),e(`
$ quasar dev `),a("span",{class:"token parameter variable"},"-m"),e(" ios -- some params "),a("span",{class:"token parameter variable"},"--and"),e(" options "),a("span",{class:"token parameter variable"},"--here"),e(`
`),a("span",{class:"token comment"},"# when on Windows and using PowerShell:"),e(`
$ quasar dev `),a("span",{class:"token parameter variable"},"-m"),e(" ios "),a("span",{class:"token string"},"'--'"),e(" some params "),a("span",{class:"token parameter variable"},"--and"),e(" options "),a("span",{class:"token parameter variable"},"--here")])]),a(p,{lang:"bash"})]),_:1}),a("p",null,"This will also add Cordova mode and install the related Cordova platform automatically if it is missing."),a("p",null,[e("You will be able to run the app on your mobile device if you have one, or through the emulator. See "),a(u,{to:"https://quasar.dev/quasar-cli-vite/developing-cordova-apps/build-commands#developing"},{default:l(()=>[e("Mobile App Build Commands > Developing")]),_:1}),e(" for more information.")]),a("div",{class:"doc-note doc-note--warning"},[a("p",{class:"doc-note__title"},"WARNING"),a("p",null,[e("In Android Studio, you will be greeted with a message recommending to upgrade the Gradle version. "),a("strong",null,"DO NOT UPGRADE GRADLE"),e(" as it will break the Cordova project. The same goes for any other requested upgrades.")]),a("img",{src:"https://cdn.quasar.dev/img/gradle-upgrade-notice.png",alt:"Gradle upgrade",class:"q-my-md rounded-borders",style:{"max-width":"350px"}}),a("p",null,"If you encounter any IDE errors then click on File > Invalidate caches and restart."),a("img",{src:"https://cdn.quasar.dev/img/gradle-invalidate-cache.png",alt:"Gradle upgrade",class:"q-mt-md rounded-borders",style:{"max-width":"350px"}})])]}),_:1},S))}}},$=b.setup;b.setup=(f,v)=>{const g=y();return(g.modules||(g.modules=new Set)).add("src/pages/quasar-cli-webpack/developing-cordova-apps/preparation.md"),$?$(f,v):void 0};const U=q(b,[["__file","preparation.md"]]);export{U as default};
