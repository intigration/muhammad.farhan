import{provide as w,mergeProps as y,withCtx as x,createVNode as e,unref as l,useSSRContext as v}from"vue";import{ssrRenderComponent as o}from"vue/server-renderer";import{c as s}from"./page-utils-C-QWsEHe.js";import{D as k}from"./DocPage-DKr-0pQn.js";import{D as i}from"./DocExample-BcaABDtE.js";import{D as c}from"./DocApi-Df9ryd6x.js";import{_ as C}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const h={__name:"pagination",__ssrInlineRender:!0,setup(u){w("_q_ex",{name:"QPagination"});const d=[{id:"qpagination-api",title:"2. QPagination API",deep:!0},{id:"usage",title:"3. Usage"},{id:"design",title:"3.1. Design",sub:!0},{id:"custom-icons",title:"3.2. Custom icons",sub:!0},{id:"with-input",title:"3.3. With input",sub:!0},{id:"max-pages-shown",title:"3.4. Max pages shown",sub:!0},{id:"handling-boundary",title:"3.5. Handling boundary",sub:!0}];return(g,p,f,b)=>{p(o(k,y({title:"Pagination",desc:"The QPagination Vue component allows you to easily display a pagination control on a page.",heading:"","edit-link":"vue-components/pagination",toc:d},b),{default:x((P,n,a,t)=>{if(n)n(`<p${t}>The QPagination component is available for whenever a pagination system is required. It offers the user a simple UI for moving between items or pages.</p><p${t}>There are two modes in which QPagination operates: with buttons only or with an inputbox. The latter allows the user to go to a specific page by clicking/tapping on the inputbox, typing the page number then hitting Enter key. If the new page number is within valid limits, the model will be changed accordingly.</p>`),n(o(c,{file:"QPagination"},null,a,t)),n(`<h2 id="usage" class="doc-heading doc-h2"${t}>Usage</h2><h3 id="design" class="doc-heading doc-h3"${t}>Design</h3>`),n(o(i,{title:"Standard",file:"Standard"},null,a,t)),n(`<p${t}>The following are a few examples, but not an exhaustive list:</p>`),n(o(i,{title:"Button design (v2.10+)",file:"BtnDesign"},null,a,t)),n(o(i,{title:"Gutter (v2.10+)",file:"BtnGutter"},null,a,t)),n(`<h3 id="custom-icons" class="doc-heading doc-h3"${t}>Custom icons</h3>`),n(o(i,{title:"With icon replacement",file:"Icons"},null,a,t)),n(`<h3 id="with-input" class="doc-heading doc-h3"${t}>With input</h3>`),n(o(i,{title:"With input",file:"Input"},null,a,t)),n(o(i,{title:"With input color",file:"InputColor"},null,a,t)),n(`<h3 id="max-pages-shown" class="doc-heading doc-h3"${t}>Max pages shown</h3>`),n(o(i,{title:"Maximum pages shown",file:"MaxPages"},null,a,t)),n(o(i,{title:"Removing ellipses",file:"Ellipses"},null,a,t)),n(`<h3 id="handling-boundary" class="doc-heading doc-h3"${t}>Handling boundary</h3>`),n(o(i,{title:"With boundary numbers",file:"BoundaryNumbers"},null,a,t)),n(o(i,{title:"With boundary links",file:"BoundaryLinks"},null,a,t)),n(o(i,{title:"With direction links",file:"DirectionLinks"},null,a,t));else return[e("p",null,"The QPagination component is available for whenever a pagination system is required. It offers the user a simple UI for moving between items or pages."),e("p",null,"There are two modes in which QPagination operates: with buttons only or with an inputbox. The latter allows the user to go to a specific page by clicking/tapping on the inputbox, typing the page number then hitting Enter key. If the new page number is within valid limits, the model will be changed accordingly."),e(c,{file:"QPagination"}),e("h2",{id:"usage",class:"doc-heading doc-h2",onClick:r=>l(s)("usage")},"Usage",8,["onClick"]),e("h3",{id:"design",class:"doc-heading doc-h3",onClick:r=>l(s)("design")},"Design",8,["onClick"]),e(i,{title:"Standard",file:"Standard"}),e("p",null,"The following are a few examples, but not an exhaustive list:"),e(i,{title:"Button design (v2.10+)",file:"BtnDesign"}),e(i,{title:"Gutter (v2.10+)",file:"BtnGutter"}),e("h3",{id:"custom-icons",class:"doc-heading doc-h3",onClick:r=>l(s)("custom-icons")},"Custom icons",8,["onClick"]),e(i,{title:"With icon replacement",file:"Icons"}),e("h3",{id:"with-input",class:"doc-heading doc-h3",onClick:r=>l(s)("with-input")},"With input",8,["onClick"]),e(i,{title:"With input",file:"Input"}),e(i,{title:"With input color",file:"InputColor"}),e("h3",{id:"max-pages-shown",class:"doc-heading doc-h3",onClick:r=>l(s)("max-pages-shown")},"Max pages shown",8,["onClick"]),e(i,{title:"Maximum pages shown",file:"MaxPages"}),e(i,{title:"Removing ellipses",file:"Ellipses"}),e("h3",{id:"handling-boundary",class:"doc-heading doc-h3",onClick:r=>l(s)("handling-boundary")},"Handling boundary",8,["onClick"]),e(i,{title:"With boundary numbers",file:"BoundaryNumbers"}),e(i,{title:"With boundary links",file:"BoundaryLinks"}),e(i,{title:"With direction links",file:"DirectionLinks"})]}),_:1},f))}}},m=h.setup;h.setup=(u,d)=>{const g=v();return(g.modules||(g.modules=new Set)).add("src/pages/vue-components/pagination.md"),m?m(u,d):void 0};const F=C(h,[["__file","pagination.md"]]);export{F as default};
