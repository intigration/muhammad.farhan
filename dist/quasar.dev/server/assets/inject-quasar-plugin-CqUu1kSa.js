import{mergeProps as v,withCtx as p,createTextVNode as a,unref as f,createVNode as n,useSSRContext as C}from"vue";import{ssrRenderComponent as i}from"vue/server-renderer";import"quasar";import{D as j,a as c}from"./DocPage-DKr-0pQn.js";import{D as h}from"./DocTree-Kz2iQlb5.js";import{D as d}from"./DocPrerender-DPOnWPFO.js";import{C as r}from"./CopyButton-l3ndfN49.js";import{_ as A}from"../server-entry.js";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const $={__name:"inject-quasar-plugin",__ssrInlineRender:!0,setup(w){const m={tree:{l:".",c:[{l:"package.json"},{l:"src",c:[{l:"index.js",e:"Described in Index API"}]}]}};return(g,b,y,q)=>{b(i(j,v({title:"Injecting Quasar Plugin",desc:"Tips and tricks on how to use a Quasar App Extension to configure the host app to use a Quasar Plugin.",heading:"","edit-link":"app-extensions/tips-and-tricks/inject-quasar-plugin"},q),{default:p((Q,o,u,e)=>{if(o)o(`<p${e}>This guide is for when you want to ensure that a `),o(i(c,{to:"/quasar-plugins"},{default:p((k,t,l,s)=>{if(t)t("Quasar Plugin");else return[a("Quasar Plugin")]}),_:1},u,e)),o(` will be injected into the hosting app, because you depend on it for your own App Extension to work.</p><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>In order for creating an App Extension project folder, please first read the `),o(i(c,{to:"/app-extensions/development-guide/introduction"},{default:p((k,t,l,s)=>{if(t)t("Development Guide &gt; Introduction");else return[a("Development Guide > Introduction")]}),_:1},u,e)),o(`.</p></div><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>Full Example</p><p${e}>To see an example of what we will build, head over to `),o(i(c,{to:"https://github.com/quasarframework/app-extension-examples/v2/master/inject-quasar-plugin"},{default:p((k,t,l,s)=>{if(t)t("full example");else return[a("full example")]}),_:1},u,e)),o(`, which is a GitHub repo with this App Extension.</p></div><p${e}>We will only need the /index.js script for this, because we can use the `),o(i(c,{to:"/app-extensions/development-guide/index-api"},{default:p((k,t,l,s)=>{if(t)t("Index API");else return[a("Index API")]}),_:1},u,e)),o(" to configure quasar.config file from the host app to include our required Quasar Plugin.</p>"),o(i(h,{def:m.tree},null,u,e)),o(`<p${e}>And /index.js would look like this:</p>`),o(i(f(d),{title:"File: /index.js"},{default:p((k,t,l,s)=>{if(t)t(`<pre class="doc-code"${s}><code${s}><span class="token keyword"${s}>export</span> <span class="token keyword"${s}>default</span> <span class="token keyword"${s}>function</span> <span class="token punctuation"${s}>(</span><span class="token parameter"${s}>api</span><span class="token punctuation"${s}>)</span> <span class="token punctuation"${s}>{</span>
  <span class="token comment"${s}>// (Optional!)</span>
  <span class="token comment"${s}>// Quasar compatibility check; you may need</span>
  <span class="token comment"${s}>// hard dependencies, as in a minimum version of the &quot;quasar&quot;</span>
  <span class="token comment"${s}>// package or a minimum version of Quasar App CLI</span>
  api<span class="token punctuation"${s}>.</span><span class="token function"${s}>compatibleWith</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;quasar&#39;</span><span class="token punctuation"${s}>,</span> <span class="token string"${s}>&#39;^2.0.0&#39;</span><span class="token punctuation"${s}>)</span>

  <span class="token keyword"${s}>if</span> <span class="token punctuation"${s}>(</span>api<span class="token punctuation"${s}>.</span>hasVite <span class="token operator"${s}>===</span> <span class="token boolean"${s}>true</span><span class="token punctuation"${s}>)</span> <span class="token punctuation"${s}>{</span>
    api<span class="token punctuation"${s}>.</span><span class="token function"${s}>compatibleWith</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;@quasar/app-vite&#39;</span><span class="token punctuation"${s}>,</span> <span class="token string"${s}>&#39;^2.0.0-beta.1&#39;</span><span class="token punctuation"${s}>)</span>
  <span class="token punctuation"${s}>}</span>
  <span class="token keyword"${s}>else</span> <span class="token punctuation"${s}>{</span> <span class="token comment"${s}>// api.hasWebpack === true</span>
    api<span class="token punctuation"${s}>.</span><span class="token function"${s}>compatibleWith</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;@quasar/app-webpack&#39;</span><span class="token punctuation"${s}>,</span> <span class="token string"${s}>&#39;^4.0.0-beta.1&#39;</span><span class="token punctuation"${s}>)</span>
  <span class="token punctuation"${s}>}</span>

  <span class="token comment"${s}>// Here we extend /quasar.config file, so we can add</span>
  <span class="token comment"${s}>// a boot file which registers our new Vue directive;</span>
  <span class="token comment"${s}>// &quot;extendConf&quot; will be defined below (keep reading the tutorial)</span>
  api<span class="token punctuation"${s}>.</span><span class="token function"${s}>extendQuasarConf</span><span class="token punctuation"${s}>(</span>extendConf<span class="token punctuation"${s}>)</span>
<span class="token punctuation"${s}>}</span></code></pre>`),t(i(r,null,null,l,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"api"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// (Optional!)"),a(`
  `),n("span",{class:"token comment"},"// Quasar compatibility check; you may need"),a(`
  `),n("span",{class:"token comment"},'// hard dependencies, as in a minimum version of the "quasar"'),a(`
  `),n("span",{class:"token comment"},"// package or a minimum version of Quasar App CLI"),a(`
  api`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compatibleWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'quasar'"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},"'^2.0.0'"),n("span",{class:"token punctuation"},")"),a(`

  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("api"),n("span",{class:"token punctuation"},"."),a("hasVite "),n("span",{class:"token operator"},"==="),a(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    api`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compatibleWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'@quasar/app-vite'"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},"'^2.0.0-beta.1'"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"else"),a(),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token comment"},"// api.hasWebpack === true"),a(`
    api`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compatibleWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'@quasar/app-webpack'"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},"'^4.0.0-beta.1'"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`

  `),n("span",{class:"token comment"},"// Here we extend /quasar.config file, so we can add"),a(`
  `),n("span",{class:"token comment"},"// a boot file which registers our new Vue directive;"),a(`
  `),n("span",{class:"token comment"},'// "extendConf" will be defined below (keep reading the tutorial)'),a(`
  api`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"extendQuasarConf"),n("span",{class:"token punctuation"},"("),a("extendConf"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(r)]}),_:1},u,e)),o(`<p${e}>Our “extendConf” method, in the same file as above:</p>`),o(i(f(d),{title:"File: /index.js"},{default:p((k,t,l,s)=>{if(t)t(`<pre class="doc-code"${s}><code${s}><span class="token keyword"${s}>function</span> <span class="token function"${s}>extendConf</span> <span class="token punctuation"${s}>(</span><span class="token parameter"${s}>conf</span><span class="token punctuation"${s}>)</span> <span class="token punctuation"${s}>{</span>
  <span class="token comment"${s}>// we push to /quasar.config file &gt; framework &gt; plugins:</span>
  conf<span class="token punctuation"${s}>.</span>framework<span class="token punctuation"${s}>.</span>plugins<span class="token punctuation"${s}>.</span><span class="token function"${s}>push</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;AppVisibility&#39;</span><span class="token punctuation"${s}>)</span>
<span class="token punctuation"${s}>}</span></code></pre>`),t(i(r,null,null,l,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token function"},"extendConf"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"conf"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// we push to /quasar.config file > framework > plugins:"),a(`
  conf`),n("span",{class:"token punctuation"},"."),a("framework"),n("span",{class:"token punctuation"},"."),a("plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'AppVisibility'"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(r)]}),_:1},u,e));else return[n("p",null,[a("This guide is for when you want to ensure that a "),n(c,{to:"/quasar-plugins"},{default:p(()=>[a("Quasar Plugin")]),_:1}),a(" will be injected into the hosting app, because you depend on it for your own App Extension to work.")]),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,[a("In order for creating an App Extension project folder, please first read the "),n(c,{to:"/app-extensions/development-guide/introduction"},{default:p(()=>[a("Development Guide > Introduction")]),_:1}),a(".")])]),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"Full Example"),n("p",null,[a("To see an example of what we will build, head over to "),n(c,{to:"https://github.com/quasarframework/app-extension-examples/v2/master/inject-quasar-plugin"},{default:p(()=>[a("full example")]),_:1}),a(", which is a GitHub repo with this App Extension.")])]),n("p",null,[a("We will only need the /index.js script for this, because we can use the "),n(c,{to:"/app-extensions/development-guide/index-api"},{default:p(()=>[a("Index API")]),_:1}),a(" to configure quasar.config file from the host app to include our required Quasar Plugin.")]),n(h,{def:m.tree},null,8,["def"]),n("p",null,"And /index.js would look like this:"),n(f(d),{title:"File: /index.js"},{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"api"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// (Optional!)"),a(`
  `),n("span",{class:"token comment"},"// Quasar compatibility check; you may need"),a(`
  `),n("span",{class:"token comment"},'// hard dependencies, as in a minimum version of the "quasar"'),a(`
  `),n("span",{class:"token comment"},"// package or a minimum version of Quasar App CLI"),a(`
  api`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compatibleWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'quasar'"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},"'^2.0.0'"),n("span",{class:"token punctuation"},")"),a(`

  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("api"),n("span",{class:"token punctuation"},"."),a("hasVite "),n("span",{class:"token operator"},"==="),a(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    api`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compatibleWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'@quasar/app-vite'"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},"'^2.0.0-beta.1'"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"else"),a(),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token comment"},"// api.hasWebpack === true"),a(`
    api`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compatibleWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'@quasar/app-webpack'"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},"'^4.0.0-beta.1'"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`

  `),n("span",{class:"token comment"},"// Here we extend /quasar.config file, so we can add"),a(`
  `),n("span",{class:"token comment"},"// a boot file which registers our new Vue directive;"),a(`
  `),n("span",{class:"token comment"},'// "extendConf" will be defined below (keep reading the tutorial)'),a(`
  api`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"extendQuasarConf"),n("span",{class:"token punctuation"},"("),a("extendConf"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(r)]),_:1}),n("p",null,"Our “extendConf” method, in the same file as above:"),n(f(d),{title:"File: /index.js"},{default:p(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token function"},"extendConf"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"conf"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// we push to /quasar.config file > framework > plugins:"),a(`
  conf`),n("span",{class:"token punctuation"},"."),a("framework"),n("span",{class:"token punctuation"},"."),a("plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'AppVisibility'"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(r)]),_:1})]}),_:1},y))}}},x=$.setup;$.setup=(w,m)=>{const g=C();return(g.modules||(g.modules=new Set)).add("src/pages/app-extensions/tips-and-tricks/inject-quasar-plugin.md"),x?x(w,m):void 0};const B=A($,[["__file","inject-quasar-plugin.md"]]);export{B as default};
