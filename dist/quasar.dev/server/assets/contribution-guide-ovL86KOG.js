import{mergeProps as x,withCtx as i,createTextVNode as o,unref as d,createVNode as e,useSSRContext as Q}from"vue";import{ssrRenderComponent as u}from"vue/server-renderer";import{c as g}from"./page-utils-C-QWsEHe.js";import{D as C,a as l}from"./DocPage-DKr-0pQn.js";import{D as m}from"./DocPrerender-DPOnWPFO.js";import{C as p}from"./CopyButton-l3ndfN49.js";import{_ as S}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const b={__name:"contribution-guide",__ssrInlineRender:!0,setup(k){const f=[{id:"help-with-support",title:"2. Help with Support"},{id:"share-and-build-your-experience",title:"3. Share (and Build) Your Experience"},{id:"reporting-an-issue",title:"4. Reporting an Issue"},{id:"helping-to-resolve-existing-issues",title:"5. Helping to Resolve Existing Issues"},{id:"contributing-to-the-quasar-documentation",title:"6. Contributing to the Quasar Documentation"},{id:"documentation-best-practices",title:"6.1. Documentation Best Practices",sub:!0},{id:"write-your-story",title:"7. Write your Story"},{id:"create-new-quasar-app-extension",title:"8. Create new Quasar App Extension"},{id:"contributing-to-the-quasar-ui-source-code",title:"9. Contributing to the Quasar UI Source Code"},{id:"financial-contribution",title:"10. Financial Contribution"},{id:"quasar-contributors",title:"11. Quasar Contributors"}];return(y,v,$,q)=>{v(u(C,x({title:"Contribution Guide",desc:"How to contribute to Quasar Framework.",heading:"","edit-link":"how-to-contribute/contribution-guide",toc:f},q),{default:i((H,s,h,t)=>{if(s)s(`<p${t}>This guide covers ways in which you can become a part of the ongoing development of Quasar.</p><p${t}>But, before we begin, a first important note. Everyone interacting in Quasar is expected to follow the `),s(u(l,{to:"https://github.com/quasarframework/quasar/blob/dev/.github/CODE_OF_CONDUCT.md"},{default:i((r,a,c,n)=>{if(a)a("Quasar Code of Conduct");else return[o("Quasar Code of Conduct")]}),_:1},h,t)),s(`.</p><p${t}>Now that we’ve got that covered, let’s go!</p><p${t}>After reading this guide, you will know:</p><ul${t}><li${t}>How to use GitHub to report issues.</li><li${t}>How to clone the repo and run the test suite.</li><li${t}>How to help resolve existing issues.</li><li${t}>How to contribute to the Quasar documentation.</li><li${t}>How to create a Quasar App Extension.</li><li${t}>How to contribute to the Quasar source code.</li></ul><p${t}>Quasar is not “someone else’s framework”. Many people have contributed to Quasar ranging from a single character to massive architectural changes or significant documentation - all with the goal of making Quasar better for everyone. Even if you don’t feel up to writing code or documentation yet, there are a variety of other ways that you can contribute, from reporting issues to testing patches.</p><h2 id="help-with-support" class="doc-heading doc-h2"${t}>Help with Support</h2><p${t}>One of the easiest ways to contribute is to answer questions in the different Q&amp;A systems we have. Be a supportive and positive member of the Quasar community by answering questions you know answers to, or even by adding your best guess. Being a part of such discussions can also be a good learning experience. It’s a win-win!</p><p${t}>Here are our discussion/Q&amp;A venues:</p><ul${t}><li${t}>`),s(u(l,{to:"https://forum.quasar.dev/"},{default:i((r,a,c,n)=>{if(a)a("GitHub Discussions");else return[o("GitHub Discussions")]}),_:1},h,t)),s(`: A place to ask questions and get answers about Quasar and its ecosystem. It’s also a great place to share your knowledge and experience with others. You can also use it to share your ideas and feature requests.</li><li${t}>`),s(u(l,{to:"https://chat.quasar.dev/"},{default:i((r,a,c,n)=>{if(a)a("Discord Server");else return[o("Discord Server")]}),_:1},h,t)),s(`: A place for Quasar devs to meet and chat in real time. You can ask questions, share your knowledge, and help others. It’s also possible to post job offers or look for a job there.</li></ul><h2 id="share-and-build-your-experience" class="doc-heading doc-h2"${t}>Share (and Build) Your Experience</h2><p${t}>Apart from answering questions and sharing resources in the forum and chat, there are a few other less obvious ways to share and expand what you know:</p><ul${t}><li${t}><strong${t}>Develop learning materials</strong>. It’s often said that the best way to learn is to teach. If there’s something interesting you’re doing with Quasar, strengthen your expertise by writing a blog post, developing a workshop, or even publishing a gist that you share on social media.</li><li${t}><strong${t}>Share your tech stack</strong>. Show others which technologies are well tested and can be integrated with Quasar. Promote your project and `),s(u(l,{to:"https://stackshare.io/tool/quasar-framework/decisions"},{default:i((r,a,c,n)=>{if(a)a("fill out your favorite Quasar-based stack");else return[o("fill out your favorite Quasar-based stack")]}),_:1},h,t)),s(`. Make sure to mention @Quasarframework and all other relevant technologies.</li><li${t}><strong${t}>Watch a repo you care about</strong>. This will send you notifications whenever there’s activity in that repository, giving you insider knowledge about ongoing discussions and upcoming features. It’s a fantastic way to build expertise so that you’re eventually able to help address issues and pull requests.</li></ul><h2 id="reporting-an-issue" class="doc-heading doc-h2"${t}>Reporting an Issue</h2><ul${t}><li${t}>`),s(u(l,{to:"https://github.com/quasarframework/quasar/issues"},{default:i((r,a,c,n)=>{if(a)a("GitHub");else return[o("GitHub")]}),_:1},h,t)),s(`: If you want to create a bug report or a docs report, that’s what the GitHub issues are for. Make sure that you select the correct template and follow the given instructions while creating an issue.</li></ul><div class="doc-note doc-note--danger"${t}><p class="doc-note__title"${t}>Reporting a vulnerability</p><p${t}>Please do not report security vulnerabilities with public GitHub issue reports. Follow the `),s(u(l,{to:"/security/report-a-vulnerability"},{default:i((r,a,c,n)=>{if(a)a("Report a vulnerability");else return[o("Report a vulnerability")]}),_:1},h,t)),s(` steps for security issues.</p></div><p${t}>If you’ve found a problem in Quasar which is not a security risk, do a search on GitHub under `),s(u(l,{to:"https://github.com/quasarframework/quasar/issues"},{default:i((r,a,c,n)=>{if(a)a("Issues");else return[o("Issues")]}),_:1},h,t)),s(` to check if it is already answered or even fixed in the development branch (<code class="doc-token"${t}>dev</code>).</p><ul${t}><li${t}><p${t}>The issue list of the `),s(u(l,{to:"https://github.com/quasarframework/quasar"},{default:i((r,a,c,n)=>{if(a)a("main repo");else return[o("main repo")]}),_:1},h,t)),s(` is <strong${t}>exclusively</strong> for bug reports and docs reports. Non-conforming issues will be closed immediately.</p><ul${t}><li${t}><p${t}>For simple beginner questions, you can get quick answers from the `),s(u(l,{to:"https://chat.quasar.dev"},{default:i((r,a,c,n)=>{if(a)a("Quasar Discord chat");else return[o("Quasar Discord chat")]}),_:1},h,t)),s(`.</p></li><li${t}><p${t}>For more complicated questions, you can use `),s(u(l,{to:"https://forum.quasar.dev"},{default:i((r,a,c,n)=>{if(a)a("the Discussions section");else return[o("the Discussions section")]}),_:1},h,t)),s(`. Make sure to provide enough information when asking your questions - this makes it easier for others to help you!</p></li><li${t}><p${t}>For feature requests, you can `),s(u(l,{to:"https://github.com/quasarframework/quasar/discussions/new?category=ideas-proposals"},{default:i((r,a,c,n)=>{if(a)a("start a new feature discussion");else return[o("start a new feature discussion")]}),_:1},h,t)),s(`.</p></li></ul></li><li${t}><p${t}>Try to search for your issue, it may have already been answered or even fixed in the development branch (<code class="doc-token"${t}>dev</code>).</p></li><li${t}><p${t}>Check if the issue is reproducible with the latest stable version of Quasar. Please always indicate the specific version you are using.</p></li><li${t}><p${t}>It is <strong${t}>required</strong> that you clearly describe the steps necessary to reproduce the issue you are running into. Although we would love to help our users as much as possible, diagnosing issues without clear reproduction steps is extremely time-consuming and simply not sustainable.</p></li><li${t}><p${t}>Use only the minimum amount of code necessary to reproduce the unexpected behavior. A good bug report should isolate specific methods that exhibit unexpected behavior and precisely define how expectations were violated. What did you expect the method or methods to do, and how did the observed behavior differ? The more precisely you isolate the issue, the faster we can investigate.</p></li><li${t}><p${t}>Issues with no clear reproduction steps will not be triaged. If an issue labeled “bug/0-needs-info” receives no further input from the issue author for a significant period of time, it will be closed.</p></li><li${t}><p${t}>If your issue is resolved but still open, don’t hesitate to close it. In case you found a solution by yourself, it could be helpful to explain how you fixed it.</p></li><li${t}><p${t}>Most importantly, we beg your patience: the team must balance your request against many other responsibilities — fixing other bugs, answering other questions, new features, new documentation, etc. The issue list is not paid support and we cannot make guarantees about how fast your issue can be resolved, although we do our very best.</p></li></ul><h2 id="helping-to-resolve-existing-issues" class="doc-heading doc-h2"${t}>Helping to Resolve Existing Issues</h2><p${t}>As a next step beyond reporting issues, you can help the Quasar Team resolve existing ones by providing feedback about them. If you are new to Quasar development, that might be a great way to walk your first steps, you’ll get familiar with the code base and the processes.</p><p${t}>If you check the issues list in `),s(u(l,{to:"https://github.com/quasarframework/quasar/issues"},{default:i((r,a,c,n)=>{if(a)a("GitHub Issues");else return[o("GitHub Issues")]}),_:1},h,t)),s(`, you’ll find lots of issues already requiring attention. What can you do for these? Quite a bit, actually:</p><h4 id="verifying-bug-reports" class="doc-heading doc-h4"${t}>Verifying Bug Reports</h4><p${t}>For starters, it helps just to verify bug reports. Can you reproduce the reported issue on your own computer? If so, you can add a comment to the issue saying that you’re seeing the same thing.</p><p${t}>If an issue is very vague, can you help narrow it down to something more specific? Maybe you can provide additional information to help reproduce a bug, or help by eliminating needless steps that aren’t required to demonstrate the problem.</p><p${t}>Anything you can do to make bug reports more succinct or easier to reproduce helps folks trying to write code to fix those bugs - whether you end up writing the code yourself or not.</p><h4 id="testing-patches" class="doc-heading doc-h4"${t}>Testing Patches</h4><p${t}>You can also help out by examining pull requests that have been submitted to Quasar via GitHub. In order to apply someone’s changes, you need to first create a dedicated branch:</p>`),s(u(d(m),null,{default:i((r,a,c,n)=>{if(a)a(`<pre class="doc-code"${n}><code${n}>$ <span class="token function"${n}>git</span> checkout <span class="token parameter variable"${n}>-b</span> testing_branch</code></pre>`),a(u(p,{lang:"bash"},null,c,n));else return[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"git"),o(" checkout "),e("span",{class:"token parameter variable"},"-b"),o(" testing_branch")])]),e(p,{lang:"bash"})]}),_:1},h,t)),s(`<p${t}>Then, you can use their remote branch to update your codebase. For example, let’s say the GitHub user JohnSmith has forked and pushed to a topic branch “orange” located at https://github.com/JohnSmith/quasar.</p>`),s(u(d(m),null,{default:i((r,a,c,n)=>{if(a)a(`<pre class="doc-code"${n}><code${n}>$ <span class="token function"${n}>git</span> remote <span class="token function"${n}>add</span> JohnSmith https://github.com/JohnSmith/quasar.git
$ <span class="token function"${n}>git</span> pull JohnSmith orange</code></pre>`),a(u(p,{lang:"bash"},null,c,n));else return[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"git"),o(" remote "),e("span",{class:"token function"},"add"),o(` JohnSmith https://github.com/JohnSmith/quasar.git
$ `),e("span",{class:"token function"},"git"),o(" pull JohnSmith orange")])]),e(p,{lang:"bash"})]}),_:1},h,t)),s(`<p${t}>After applying their branch, test it out! Here are some things to think about:</p><ul${t}><li${t}>Does the change actually work?</li><li${t}>Does it have the proper documentation coverage? Should documentation elsewhere be updated?</li><li${t}>Do you like the implementation? Can you think of a nicer or faster way to implement a part of their change?</li></ul><p${t}>Once you’re happy that the pull request contains a good change, comment on the GitHub issue indicating your approval. Your comment should indicate that you like the change and what you like about it. Something like:</p><div class="doc-note doc-note--tip"${t}><p class="doc-note__title"${t}>Example pull request comment</p><p${t}>I like the way you’ve restructured the code in card.vue - much nicer. Documentation is updated too.</p></div><p${t}>If your comment simply reads “+1”, then odds are that other reviewers aren’t going to take it too seriously. Show that you took the time to review the pull request.</p><h2 id="contributing-to-the-quasar-documentation" class="doc-heading doc-h2"${t}>Contributing to the Quasar Documentation</h2><p${t}>You can help improve the Quasar documentation by making it more coherent, consistent, or readable, adding missing information, correcting factual errors, fixing typos, or bringing them up to date with the latest edge Quasar.</p><div class="doc-note doc-note--tip"${t}><p class="doc-note__title"${t}>Typos or small changes can be fixed directly from the documentation</p><p${t}>Use a pencil icon in the top right corner of every documentation page. Edit the source file, preview the changes, add a description of your change and hit <code class="doc-token"${t}>Propose a file change</code> and on the next screen <code class="doc-token"${t}>Create pull request</code>.</p></div><p${t}>For larger edits change the Quasar source files (located `),s(u(l,{to:"https://github.com/quasarframework/quasar/tree/dev/docs/src/pages"},{default:i((r,a,c,n)=>{if(a)a("here");else return[o("here")]}),_:1},h,t)),s(` on GitHub).</p><h3 id="documentation-best-practices" class="doc-heading doc-h3"${t}>Documentation Best Practices</h3><p${t}>Over time we consolidated a set of rules which we follow and following them will speed up the merge process:</p><ul${t}><li${t}>Capitalize titles, see `),s(u(l,{to:"https://capitalizemytitle.com/"},{default:i((r,a,c,n)=>{if(a)a("How to Use Capitalize My Title");else return[o("How to Use Capitalize My Title")]}),_:1},h,t)),s(`.</li><li${t}>Use the present tense.</li><li${t}>Be concise, avoid text / code duplication.</li><li${t}>Link to the external sources which are used as master information sources and are usually updated more frequently, like `),s(u(l,{to:"https://developer.mozilla.org/en-US/docs/Web/JavaScript"},{default:i((r,a,c,n)=>{if(a)a("Mozilla MDN");else return[o("Mozilla MDN")]}),_:1},h,t)),s(", "),s(u(l,{to:"https://vuejs.org/api/"},{default:i((r,a,c,n)=>{if(a)a("Vue.js API");else return[o("Vue.js API")]}),_:1},h,t)),s(` rather than compiled tutorials which tend to be outdated soon.</li><li${t}>Do the proofreading before opening a PR</li><li${t}>Do not repeat texts from other sources, but keep only things which are relevant and shows in a context Quasar specific features</li><li${t}>Use official names. For example use <code class="doc-token"${t}>Firebase</code> instead of <code class="doc-token"${t}>firebase</code></li><li${t}>Exclude from PR all drafts and unfinished pages</li></ul><h4 id="fork" class="doc-heading doc-h4"${t}>Fork</h4><p${t}>Navigate to the Quasar `),s(u(l,{to:"https://github.com/quasarframework/quasar"},{default:i((r,a,c,n)=>{if(a)a("GitHub repository");else return[o("GitHub repository")]}),_:1},h,t)),s(` and press “Fork” in the upper right-hand corner.</p><div class="doc-note doc-note--warning"${t}><p class="doc-note__title"${t}>Select dev branch</p><p${t}>Make sure you have <code class="doc-token"${t}>dev</code> branch selected and this is where all the work is done.</p></div><h4 id="clone-the-forked-repository" class="doc-heading doc-h4"${t}>Clone the forked repository</h4><p${t}>To be able to change the documentation, you need to clone forked repository:</p>`),s(u(d(m),null,{default:i((r,a,c,n)=>{if(a)a(`<pre class="doc-code"${n}><code${n}>$ <span class="token function"${n}>git</span> clone https://github.com/your-user-name/quasar.git
$ <span class="token builtin class-name"${n}>cd</span> quasar
$ <span class="token function"${n}>git</span> checkout dev</code></pre>`),a(u(p,{lang:"bash"},null,c,n));else return[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"git"),o(` clone https://github.com/your-user-name/quasar.git
$ `),e("span",{class:"token builtin class-name"},"cd"),o(` quasar
$ `),e("span",{class:"token function"},"git"),o(" checkout dev")])]),e(p,{lang:"bash"})]}),_:1},h,t)),s(`<h4 id="install-dependencies" class="doc-heading doc-h4"${t}>Install dependencies</h4><p${t}>Install the required dependencies.</p>`),s(u(d(m),null,{default:i((r,a,c,n)=>{if(a)a(`<pre class="doc-code"${n}><code${n}>$ <span class="token function"${n}>pnpm</span> i</code></pre>`),a(u(p,{lang:"bash"},null,c,n));else return[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"pnpm"),o(" i")])]),e(p,{lang:"bash"})]}),_:1},h,t)),s(`<h4 id="running-documentation-against-your-local-repository" class="doc-heading doc-h4"${t}>Running documentation against your local repository</h4>`),s(u(d(m),null,{default:i((r,a,c,n)=>{if(a)a(`<pre class="doc-code"${n}><code${n}>$ <span class="token builtin class-name"${n}>cd</span> docs
$ <span class="token function"${n}>pnpm</span> dev</code></pre>`),a(u(p,{lang:"bash"},null,c,n));else return[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token builtin class-name"},"cd"),o(` docs
$ `),e("span",{class:"token function"},"pnpm"),o(" dev")])]),e(p,{lang:"bash"})]}),_:1},h,t)),s(`<p${t}>The documentation runs against your local cloned repository.</p><h4 id="edit-and-test-your-changes-locally" class="doc-heading doc-h4"${t}>Edit and test your changes locally</h4><h4 id="commit-your-changes" class="doc-heading doc-h4"${t}>Commit your changes</h4><p${t}>When you’re happy with the change on your computer, you need to commit the changes to Git:</p>`),s(u(d(m),null,{default:i((r,a,c,n)=>{if(a)a(`<pre class="doc-code"${n}><code${n}>$ <span class="token function"${n}>git</span> commit <span class="token parameter variable"${n}>-a</span></code></pre>`),a(u(p,{lang:"bash"},null,c,n));else return[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"git"),o(" commit "),e("span",{class:"token parameter variable"},"-a")])]),e(p,{lang:"bash"})]}),_:1},h,t)),s(`<p${t}>This should fire up your editor to write a commit message. When you have finished, save and close to continue.</p><h4 id="update-your-local-repository" class="doc-heading doc-h4"${t}>Update your local repository</h4><p${t}>It’s pretty likely that other changes to master have happened while you were working. Go get them.</p><ol${t}><li${t}>Add a remote Quasar repository as an upstream</li></ol>`),s(u(d(m),null,{default:i((r,a,c,n)=>{if(a)a(`<pre class="doc-code"${n}><code${n}>$ <span class="token function"${n}>git</span> remote <span class="token function"${n}>add</span> upstream https://github.com/quasarframework/quasar.git</code></pre>`),a(u(p,{lang:"bash"},null,c,n));else return[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"git"),o(" remote "),e("span",{class:"token function"},"add"),o(" upstream https://github.com/quasarframework/quasar.git")])]),e(p,{lang:"bash"})]}),_:1},h,t)),s(`<ol start="2"${t}><li${t}>Fetch all remote branches</li></ol>`),s(u(d(m),null,{default:i((r,a,c,n)=>{if(a)a(`<pre class="doc-code"${n}><code${n}>$ <span class="token function"${n}>git</span> fetch upstream</code></pre>`),a(u(p,{lang:"bash"},null,c,n));else return[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"git"),o(" fetch upstream")])]),e(p,{lang:"bash"})]}),_:1},h,t)),s(`<ol start="3"${t}><li${t}>Check out your fork’s local <code class="doc-token"${t}>dev</code> branch.</li></ol>`),s(u(d(m),null,{default:i((r,a,c,n)=>{if(a)a(`<pre class="doc-code"${n}><code${n}>$ <span class="token function"${n}>git</span> checkout dev
<span class="token operator"${n}>&gt;</span> Switched to branch <span class="token string"${n}>&#39;dev&#39;</span></code></pre>`),a(u(p,{lang:"bash"},null,c,n));else return[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"git"),o(` checkout dev
`),e("span",{class:"token operator"},">"),o(" Switched to branch "),e("span",{class:"token string"},"'dev'")])]),e(p,{lang:"bash"})]}),_:1},h,t)),s(`<ol start="4"${t}><li${t}>Merge the changes from <code class="doc-token"${t}>upstream/dev</code> into your local <code class="doc-token"${t}>dev</code> branch. This brings your fork’s <code class="doc-token"${t}>dev</code> branch into sync with the upstream repository, without losing your local changes.</li></ol>`),s(u(d(m),null,{default:i((r,a,c,n)=>{if(a)a(`<pre class="doc-code"${n}><code${n}>$ <span class="token function"${n}>git</span> merge upstream/dev</code></pre>`),a(u(p,{lang:"bash"},null,c,n));else return[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"git"),o(" merge upstream/dev")])]),e(p,{lang:"bash"})]}),_:1},h,t)),s(`<p${t}>No conflicts? Tests still pass? Change still seems reasonable to you? Then move on and open a pull request to apply your changes to the dev branch in main Quasar repository.</p><h4 id="issue-a-pull-request" class="doc-heading doc-h4"${t}>Issue a pull request</h4><p${t}>Navigate to your repository you just pushed to (e.g. https://github.com/your-user-name/quasar) and click on “New Pull Request” seen in the left top panel.</p><p${t}>Ensure the change sets you introduced are included. Fill in some details about your potential patch including a meaningful title. When finished, press Click on “Create pull request”. The Quasar core team will be notified about your submission.</p><h2 id="write-your-story" class="doc-heading doc-h2"${t}>Write your Story</h2><p${t}>We’re always looking for great write-ups on how you are using Quasar or the great experiences you’ve had with Quasar. If you write an article, we will publish it on our Medium publication channel and we’ll also make sure your article gets the attention it deserves with our social media presence. If you are interested, please contact blog(at)quasar.dev. We’d love to hear from you!</p><h2 id="create-new-quasar-app-extension" class="doc-heading doc-h2"${t}>Create new Quasar App Extension</h2><p${t}>An easy way to start to contribute to Quasar is to generalize the code you have created on your project and publish it as a Quasar App Extension. Follow this guide on how to `),s(u(l,{to:"/app-extensions/development-guide/introduction"},{default:i((r,a,c,n)=>{if(a)a("create a new extension");else return[o("create a new extension")]}),_:1},h,t)),s(`.</p><p${t}>When done, submit a PR on `),s(u(l,{to:"https://github.com/quasarframework/quasar-awesome/blob/master/README.md#community-app-extensions"},{default:i((r,a,c,n)=>{if(a)a("Quasar Awesome");else return[o("Quasar Awesome")]}),_:1},h,t)),s(", share your achievement via "),s(u(l,{to:"https://forum.quasar-framework.org/category/15/v1-app-extensions"},{default:i((r,a,c,n)=>{if(a)a("Quasar Forum");else return[o("Quasar Forum")]}),_:1},h,t)),s(`.</p><h2 id="contributing-to-the-quasar-ui-source-code" class="doc-heading doc-h2"${t}>Contributing to the Quasar UI Source Code</h2><p${t}>As with any project, there are rules to contributing. Ours are written here, please read them carefully. After that, read the `),s(u(l,{to:"https://github.com/quasarframework/quasar/blob/dev/.github/CODE_OF_CONDUCT.md"},{default:i((r,a,c,n)=>{if(a)a("Quasar code of conduct");else return[o("Quasar code of conduct")]}),_:1},h,t)),s(` and you’ll be ready to contribute to Quasar’s core repositories.</p><p${t}>An article `),s(u(l,{to:"https://medium.com/quasar-framework/wip-look-at-the-source-code-please-1b905ea4906"},{default:i((r,a,c,n)=>{if(a)a("Look at the source code");else return[o("Look at the source code")]}),_:1},h,t)),s(` will help you to get familiar with a Quasar code base.</p><h4 id="pull-request-guidelines" class="doc-heading doc-h4"${t}>Pull Request Guidelines</h4><ul${t}><li${t}><p${t}>Checkout a topic branch from the relevant branch, e.g. <code class="doc-token"${t}>dev</code> (Qv2) or <code class="doc-token"${t}>v1</code> (Qv1), and merge back against that branch.</p></li><li${t}><p${t}><strong${t}>DO NOT</strong> check in <code class="doc-token"${t}>dist</code> in the commits.</p></li><li${t}><p${t}>It’s OK to have multiple small commits as you work on the PR - we will let GitHub automatically squash it before merging.</p></li><li${t}><p${t}>If adding new feature:</p><ul${t}><li${t}>Provide convincing reason to add this feature.</li><li${t}>Ideally you should open a suggestion issue first and have it green-lighted before working on it. Otherwise, you risk spending a lot of time on something which might not get accepted at all or not in the form you expect.</li></ul></li><li${t}><p${t}>If fixing a bug:</p><ul${t}><li${t}>If you are resolving a specific issue, add <code class="doc-token"${t}>(fix: #xxxx[,#xxx])</code> (#xxxx is the issue id) in your PR title for a better release log, e.g. <code class="doc-token"${t}>fix: update entities encoding/decoding (fix #3899)</code>.</li><li${t}>Provide detailed description of the bug in the PR. A live demo is preferred.</li></ul></li></ul><h4 id="development-setup" class="doc-heading doc-h4"${t}>Development Setup</h4><p${t}>You will need `),s(u(l,{to:"http://nodejs.org"},{default:i((r,a,c,n)=>{if(a)a("Node.js");else return[o("Node.js")]}),_:1},h,t)),s(` version <strong${t}>v16+</strong> along `),s(u(l,{to:"https://pnpm.io/"},{default:i((r,a,c,n)=>{if(a)a("pnpm");else return[o("pnpm")]}),_:1},h,t)),s(`. Read <code class="doc-token"${t}>package.json</code> and take notice of the scripts you can use.</p><p${t}>After cloning the repo, run:</p>`),s(u(d(m),null,{default:i((r,a,c,n)=>{if(a)a(`<pre class="doc-code"${n}><code${n}>$ <span class="token function"${n}>pnpm</span> i</code></pre>`),a(u(p,{lang:"bash"},null,c,n));else return[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"pnpm"),o(" i")])]),e(p,{lang:"bash"})]}),_:1},h,t)),s(`<h4 id="commonly-used-npm-scripts" class="doc-heading doc-h4"${t}>Commonly used NPM scripts</h4>`),s(u(d(m),null,{default:i((r,a,c,n)=>{if(a)a(`<pre class="doc-code"${n}><code${n}><span class="token comment"${n}># Start dev server with a demo app. This app has Quasar source code linked directly so any change will trigger HMR (Hot Module Reload) on the dev server.</span>
<span class="token comment"${n}># There&#39;s a section for each feature where tests are made.</span>
$ <span class="token function"${n}>pnpm</span> dev

<span class="token comment"${n}># build all dist files, including npm packages</span>
$ <span class="token function"${n}>pnpm</span> build
<span class="token comment"${n}># build only js dist files</span>
$ <span class="token function"${n}>pnpm</span> build js
<span class="token comment"${n}># build only type related files</span>
$ <span class="token function"${n}>pnpm</span> build js types
<span class="token comment"${n}># build only css dist files</span>
$ <span class="token function"${n}>pnpm</span> build css

<span class="token comment"${n}># lint sources</span>
$ <span class="token function"${n}>pnpm</span> lint</code></pre>`),a(u(p,{lang:"bash"},null,c,n));else return[e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token comment"},"# Start dev server with a demo app. This app has Quasar source code linked directly so any change will trigger HMR (Hot Module Reload) on the dev server."),o(`
`),e("span",{class:"token comment"},"# There's a section for each feature where tests are made."),o(`
$ `),e("span",{class:"token function"},"pnpm"),o(` dev

`),e("span",{class:"token comment"},"# build all dist files, including npm packages"),o(`
$ `),e("span",{class:"token function"},"pnpm"),o(` build
`),e("span",{class:"token comment"},"# build only js dist files"),o(`
$ `),e("span",{class:"token function"},"pnpm"),o(` build js
`),e("span",{class:"token comment"},"# build only type related files"),o(`
$ `),e("span",{class:"token function"},"pnpm"),o(` build js types
`),e("span",{class:"token comment"},"# build only css dist files"),o(`
$ `),e("span",{class:"token function"},"pnpm"),o(` build css

`),e("span",{class:"token comment"},"# lint sources"),o(`
$ `),e("span",{class:"token function"},"pnpm"),o(" lint")])]),e(p,{lang:"bash"})]}),_:1},h,t)),s(`<h4 id="project-structure-ui-" class="doc-heading doc-h4"${t}>Project Structure (/ui)</h4><ul${t}><li${t}><p${t}><code class="doc-token"${t}>build</code> - contains build-related configuration files. In most cases you don’t need to touch them.</p></li><li${t}><p${t}><code class="doc-token"${t}>src</code> - contains the source code. The codebase is written in ES2015.</p><ul${t}><li${t}><p${t}><code class="doc-token"${t}>components</code> - JS, Sass and JSON (API) files for Quasar Vue components</p></li><li${t}><p${t}><code class="doc-token"${t}>composables</code> - Quasar’s composables for Vue 3 Composition API</p></li><li${t}><p${t}><code class="doc-token"${t}>directives</code> - Vue directives supplied by Quasar</p></li><li${t}><p${t}><code class="doc-token"${t}>plugins</code> - Quasar plugins</p></li><li${t}><p${t}><code class="doc-token"${t}>css</code> - Sass definitions and core code for Quasar styles</p></li><li${t}><p${t}><code class="doc-token"${t}>utils</code> - utilities used by the framework and exported to the public API</p></li></ul></li><li${t}><p${t}><code class="doc-token"${t}>lang</code> - Quasar language packs</p></li><li${t}><p${t}><code class="doc-token"${t}>icon-set</code> - Quasar icon sets</p></li><li${t}><p${t}><code class="doc-token"${t}>dist</code> - contains built files for distribution (only after a build).</p></li><li${t}><p${t}><code class="doc-token"${t}>dev</code> - app with Quasar sources linked directly used for testing purposes. Each feature/component has its own <code class="doc-token"${t}>*.vue</code> file. Adding a new file automatically creates a route for it and adds it to the “homepage” list (based on the file name).</p></li></ul><h4 id="dev-server-for-quasar-ui-" class="doc-heading doc-h4"${t}>Dev Server for Quasar (/ui)</h4><p${t}>Running <code class="doc-token"${t}>pnpm dev</code> starts up a dev server which uses HMR (Hot Module Reload) for Quasar source code. You can easily test your changes by making necessary changes to <code class="doc-token"${t}>/dev</code> <code class="doc-token"${t}>*.vue</code> files.</p><h2 id="financial-contribution" class="doc-heading doc-h2"${t}>Financial Contribution</h2><p${t}>Quasar Framework is an MIT-licensed open source project. Its ongoing development is made possible thanks to the support by these awesome `),s(u(l,{to:"https://github.com/quasarframework/quasar/blob/dev/backers.md"},{default:i((r,a,c,n)=>{if(a)a("backers");else return[o("backers")]}),_:1},h,t)),s(`.</p><p${t}><strong${t}>Please read our manifest on `),s(u(l,{to:"https://quasar.dev/why-donate"},{default:i((r,a,c,n)=>{if(a)a("Why donations are important");else return[o("Why donations are important")]}),_:1},h,t)),s("</strong>. If you’d like to become a donator, check out "),s(u(l,{to:"https://donate.quasar.dev"},{default:i((r,a,c,n)=>{if(a)a("Quasar Framework’s Donator campaign");else return[o("Quasar Framework’s Donator campaign")]}),_:1},h,t)),s(`.</p><h2 id="quasar-contributors" class="doc-heading doc-h2"${t}>Quasar Contributors</h2><p${t}>Thank you to all the people who already `),s(u(l,{to:"https://github.com/quasarframework/quasar/graphs/contributors"},{default:i((r,a,c,n)=>{if(a)a("contributed to Quasar");else return[o("contributed to Quasar")]}),_:1},h,t)),s("!</p>");else return[e("p",null,"This guide covers ways in which you can become a part of the ongoing development of Quasar."),e("p",null,[o("But, before we begin, a first important note. Everyone interacting in Quasar is expected to follow the "),e(l,{to:"https://github.com/quasarframework/quasar/blob/dev/.github/CODE_OF_CONDUCT.md"},{default:i(()=>[o("Quasar Code of Conduct")]),_:1}),o(".")]),e("p",null,"Now that we’ve got that covered, let’s go!"),e("p",null,"After reading this guide, you will know:"),e("ul",null,[e("li",null,"How to use GitHub to report issues."),e("li",null,"How to clone the repo and run the test suite."),e("li",null,"How to help resolve existing issues."),e("li",null,"How to contribute to the Quasar documentation."),e("li",null,"How to create a Quasar App Extension."),e("li",null,"How to contribute to the Quasar source code.")]),e("p",null,"Quasar is not “someone else’s framework”. Many people have contributed to Quasar ranging from a single character to massive architectural changes or significant documentation - all with the goal of making Quasar better for everyone. Even if you don’t feel up to writing code or documentation yet, there are a variety of other ways that you can contribute, from reporting issues to testing patches."),e("h2",{id:"help-with-support",class:"doc-heading doc-h2",onClick:r=>d(g)("help-with-support")},"Help with Support",8,["onClick"]),e("p",null,"One of the easiest ways to contribute is to answer questions in the different Q&A systems we have. Be a supportive and positive member of the Quasar community by answering questions you know answers to, or even by adding your best guess. Being a part of such discussions can also be a good learning experience. It’s a win-win!"),e("p",null,"Here are our discussion/Q&A venues:"),e("ul",null,[e("li",null,[e(l,{to:"https://forum.quasar.dev/"},{default:i(()=>[o("GitHub Discussions")]),_:1}),o(": A place to ask questions and get answers about Quasar and its ecosystem. It’s also a great place to share your knowledge and experience with others. You can also use it to share your ideas and feature requests.")]),e("li",null,[e(l,{to:"https://chat.quasar.dev/"},{default:i(()=>[o("Discord Server")]),_:1}),o(": A place for Quasar devs to meet and chat in real time. You can ask questions, share your knowledge, and help others. It’s also possible to post job offers or look for a job there.")])]),e("h2",{id:"share-and-build-your-experience",class:"doc-heading doc-h2",onClick:r=>d(g)("share-and-build-your-experience")},"Share (and Build) Your Experience",8,["onClick"]),e("p",null,"Apart from answering questions and sharing resources in the forum and chat, there are a few other less obvious ways to share and expand what you know:"),e("ul",null,[e("li",null,[e("strong",null,"Develop learning materials"),o(". It’s often said that the best way to learn is to teach. If there’s something interesting you’re doing with Quasar, strengthen your expertise by writing a blog post, developing a workshop, or even publishing a gist that you share on social media.")]),e("li",null,[e("strong",null,"Share your tech stack"),o(". Show others which technologies are well tested and can be integrated with Quasar. Promote your project and "),e(l,{to:"https://stackshare.io/tool/quasar-framework/decisions"},{default:i(()=>[o("fill out your favorite Quasar-based stack")]),_:1}),o(". Make sure to mention @Quasarframework and all other relevant technologies.")]),e("li",null,[e("strong",null,"Watch a repo you care about"),o(". This will send you notifications whenever there’s activity in that repository, giving you insider knowledge about ongoing discussions and upcoming features. It’s a fantastic way to build expertise so that you’re eventually able to help address issues and pull requests.")])]),e("h2",{id:"reporting-an-issue",class:"doc-heading doc-h2",onClick:r=>d(g)("reporting-an-issue")},"Reporting an Issue",8,["onClick"]),e("ul",null,[e("li",null,[e(l,{to:"https://github.com/quasarframework/quasar/issues"},{default:i(()=>[o("GitHub")]),_:1}),o(": If you want to create a bug report or a docs report, that’s what the GitHub issues are for. Make sure that you select the correct template and follow the given instructions while creating an issue.")])]),e("div",{class:"doc-note doc-note--danger"},[e("p",{class:"doc-note__title"},"Reporting a vulnerability"),e("p",null,[o("Please do not report security vulnerabilities with public GitHub issue reports. Follow the "),e(l,{to:"/security/report-a-vulnerability"},{default:i(()=>[o("Report a vulnerability")]),_:1}),o(" steps for security issues.")])]),e("p",null,[o("If you’ve found a problem in Quasar which is not a security risk, do a search on GitHub under "),e(l,{to:"https://github.com/quasarframework/quasar/issues"},{default:i(()=>[o("Issues")]),_:1}),o(" to check if it is already answered or even fixed in the development branch ("),e("code",{class:"doc-token"},"dev"),o(").")]),e("ul",null,[e("li",null,[e("p",null,[o("The issue list of the "),e(l,{to:"https://github.com/quasarframework/quasar"},{default:i(()=>[o("main repo")]),_:1}),o(" is "),e("strong",null,"exclusively"),o(" for bug reports and docs reports. Non-conforming issues will be closed immediately.")]),e("ul",null,[e("li",null,[e("p",null,[o("For simple beginner questions, you can get quick answers from the "),e(l,{to:"https://chat.quasar.dev"},{default:i(()=>[o("Quasar Discord chat")]),_:1}),o(".")])]),e("li",null,[e("p",null,[o("For more complicated questions, you can use "),e(l,{to:"https://forum.quasar.dev"},{default:i(()=>[o("the Discussions section")]),_:1}),o(". Make sure to provide enough information when asking your questions - this makes it easier for others to help you!")])]),e("li",null,[e("p",null,[o("For feature requests, you can "),e(l,{to:"https://github.com/quasarframework/quasar/discussions/new?category=ideas-proposals"},{default:i(()=>[o("start a new feature discussion")]),_:1}),o(".")])])])]),e("li",null,[e("p",null,[o("Try to search for your issue, it may have already been answered or even fixed in the development branch ("),e("code",{class:"doc-token"},"dev"),o(").")])]),e("li",null,[e("p",null,"Check if the issue is reproducible with the latest stable version of Quasar. Please always indicate the specific version you are using.")]),e("li",null,[e("p",null,[o("It is "),e("strong",null,"required"),o(" that you clearly describe the steps necessary to reproduce the issue you are running into. Although we would love to help our users as much as possible, diagnosing issues without clear reproduction steps is extremely time-consuming and simply not sustainable.")])]),e("li",null,[e("p",null,"Use only the minimum amount of code necessary to reproduce the unexpected behavior. A good bug report should isolate specific methods that exhibit unexpected behavior and precisely define how expectations were violated. What did you expect the method or methods to do, and how did the observed behavior differ? The more precisely you isolate the issue, the faster we can investigate.")]),e("li",null,[e("p",null,"Issues with no clear reproduction steps will not be triaged. If an issue labeled “bug/0-needs-info” receives no further input from the issue author for a significant period of time, it will be closed.")]),e("li",null,[e("p",null,"If your issue is resolved but still open, don’t hesitate to close it. In case you found a solution by yourself, it could be helpful to explain how you fixed it.")]),e("li",null,[e("p",null,"Most importantly, we beg your patience: the team must balance your request against many other responsibilities — fixing other bugs, answering other questions, new features, new documentation, etc. The issue list is not paid support and we cannot make guarantees about how fast your issue can be resolved, although we do our very best.")])]),e("h2",{id:"helping-to-resolve-existing-issues",class:"doc-heading doc-h2",onClick:r=>d(g)("helping-to-resolve-existing-issues")},"Helping to Resolve Existing Issues",8,["onClick"]),e("p",null,"As a next step beyond reporting issues, you can help the Quasar Team resolve existing ones by providing feedback about them. If you are new to Quasar development, that might be a great way to walk your first steps, you’ll get familiar with the code base and the processes."),e("p",null,[o("If you check the issues list in "),e(l,{to:"https://github.com/quasarframework/quasar/issues"},{default:i(()=>[o("GitHub Issues")]),_:1}),o(", you’ll find lots of issues already requiring attention. What can you do for these? Quite a bit, actually:")]),e("h4",{id:"verifying-bug-reports",class:"doc-heading doc-h4",onClick:r=>d(g)("verifying-bug-reports")},"Verifying Bug Reports",8,["onClick"]),e("p",null,"For starters, it helps just to verify bug reports. Can you reproduce the reported issue on your own computer? If so, you can add a comment to the issue saying that you’re seeing the same thing."),e("p",null,"If an issue is very vague, can you help narrow it down to something more specific? Maybe you can provide additional information to help reproduce a bug, or help by eliminating needless steps that aren’t required to demonstrate the problem."),e("p",null,"Anything you can do to make bug reports more succinct or easier to reproduce helps folks trying to write code to fix those bugs - whether you end up writing the code yourself or not."),e("h4",{id:"testing-patches",class:"doc-heading doc-h4",onClick:r=>d(g)("testing-patches")},"Testing Patches",8,["onClick"]),e("p",null,"You can also help out by examining pull requests that have been submitted to Quasar via GitHub. In order to apply someone’s changes, you need to first create a dedicated branch:"),e(d(m),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"git"),o(" checkout "),e("span",{class:"token parameter variable"},"-b"),o(" testing_branch")])]),e(p,{lang:"bash"})]),_:1}),e("p",null,"Then, you can use their remote branch to update your codebase. For example, let’s say the GitHub user JohnSmith has forked and pushed to a topic branch “orange” located at https://github.com/JohnSmith/quasar."),e(d(m),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"git"),o(" remote "),e("span",{class:"token function"},"add"),o(` JohnSmith https://github.com/JohnSmith/quasar.git
$ `),e("span",{class:"token function"},"git"),o(" pull JohnSmith orange")])]),e(p,{lang:"bash"})]),_:1}),e("p",null,"After applying their branch, test it out! Here are some things to think about:"),e("ul",null,[e("li",null,"Does the change actually work?"),e("li",null,"Does it have the proper documentation coverage? Should documentation elsewhere be updated?"),e("li",null,"Do you like the implementation? Can you think of a nicer or faster way to implement a part of their change?")]),e("p",null,"Once you’re happy that the pull request contains a good change, comment on the GitHub issue indicating your approval. Your comment should indicate that you like the change and what you like about it. Something like:"),e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"Example pull request comment"),e("p",null,"I like the way you’ve restructured the code in card.vue - much nicer. Documentation is updated too.")]),e("p",null,"If your comment simply reads “+1”, then odds are that other reviewers aren’t going to take it too seriously. Show that you took the time to review the pull request."),e("h2",{id:"contributing-to-the-quasar-documentation",class:"doc-heading doc-h2",onClick:r=>d(g)("contributing-to-the-quasar-documentation")},"Contributing to the Quasar Documentation",8,["onClick"]),e("p",null,"You can help improve the Quasar documentation by making it more coherent, consistent, or readable, adding missing information, correcting factual errors, fixing typos, or bringing them up to date with the latest edge Quasar."),e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"Typos or small changes can be fixed directly from the documentation"),e("p",null,[o("Use a pencil icon in the top right corner of every documentation page. Edit the source file, preview the changes, add a description of your change and hit "),e("code",{class:"doc-token"},"Propose a file change"),o(" and on the next screen "),e("code",{class:"doc-token"},"Create pull request"),o(".")])]),e("p",null,[o("For larger edits change the Quasar source files (located "),e(l,{to:"https://github.com/quasarframework/quasar/tree/dev/docs/src/pages"},{default:i(()=>[o("here")]),_:1}),o(" on GitHub).")]),e("h3",{id:"documentation-best-practices",class:"doc-heading doc-h3",onClick:r=>d(g)("documentation-best-practices")},"Documentation Best Practices",8,["onClick"]),e("p",null,"Over time we consolidated a set of rules which we follow and following them will speed up the merge process:"),e("ul",null,[e("li",null,[o("Capitalize titles, see "),e(l,{to:"https://capitalizemytitle.com/"},{default:i(()=>[o("How to Use Capitalize My Title")]),_:1}),o(".")]),e("li",null,"Use the present tense."),e("li",null,"Be concise, avoid text / code duplication."),e("li",null,[o("Link to the external sources which are used as master information sources and are usually updated more frequently, like "),e(l,{to:"https://developer.mozilla.org/en-US/docs/Web/JavaScript"},{default:i(()=>[o("Mozilla MDN")]),_:1}),o(", "),e(l,{to:"https://vuejs.org/api/"},{default:i(()=>[o("Vue.js API")]),_:1}),o(" rather than compiled tutorials which tend to be outdated soon.")]),e("li",null,"Do the proofreading before opening a PR"),e("li",null,"Do not repeat texts from other sources, but keep only things which are relevant and shows in a context Quasar specific features"),e("li",null,[o("Use official names. For example use "),e("code",{class:"doc-token"},"Firebase"),o(" instead of "),e("code",{class:"doc-token"},"firebase")]),e("li",null,"Exclude from PR all drafts and unfinished pages")]),e("h4",{id:"fork",class:"doc-heading doc-h4",onClick:r=>d(g)("fork")},"Fork",8,["onClick"]),e("p",null,[o("Navigate to the Quasar "),e(l,{to:"https://github.com/quasarframework/quasar"},{default:i(()=>[o("GitHub repository")]),_:1}),o(" and press “Fork” in the upper right-hand corner.")]),e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"Select dev branch"),e("p",null,[o("Make sure you have "),e("code",{class:"doc-token"},"dev"),o(" branch selected and this is where all the work is done.")])]),e("h4",{id:"clone-the-forked-repository",class:"doc-heading doc-h4",onClick:r=>d(g)("clone-the-forked-repository")},"Clone the forked repository",8,["onClick"]),e("p",null,"To be able to change the documentation, you need to clone forked repository:"),e(d(m),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"git"),o(` clone https://github.com/your-user-name/quasar.git
$ `),e("span",{class:"token builtin class-name"},"cd"),o(` quasar
$ `),e("span",{class:"token function"},"git"),o(" checkout dev")])]),e(p,{lang:"bash"})]),_:1}),e("h4",{id:"install-dependencies",class:"doc-heading doc-h4",onClick:r=>d(g)("install-dependencies")},"Install dependencies",8,["onClick"]),e("p",null,"Install the required dependencies."),e(d(m),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"pnpm"),o(" i")])]),e(p,{lang:"bash"})]),_:1}),e("h4",{id:"running-documentation-against-your-local-repository",class:"doc-heading doc-h4",onClick:r=>d(g)("running-documentation-against-your-local-repository")},"Running documentation against your local repository",8,["onClick"]),e(d(m),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token builtin class-name"},"cd"),o(` docs
$ `),e("span",{class:"token function"},"pnpm"),o(" dev")])]),e(p,{lang:"bash"})]),_:1}),e("p",null,"The documentation runs against your local cloned repository."),e("h4",{id:"edit-and-test-your-changes-locally",class:"doc-heading doc-h4",onClick:r=>d(g)("edit-and-test-your-changes-locally")},"Edit and test your changes locally",8,["onClick"]),e("h4",{id:"commit-your-changes",class:"doc-heading doc-h4",onClick:r=>d(g)("commit-your-changes")},"Commit your changes",8,["onClick"]),e("p",null,"When you’re happy with the change on your computer, you need to commit the changes to Git:"),e(d(m),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"git"),o(" commit "),e("span",{class:"token parameter variable"},"-a")])]),e(p,{lang:"bash"})]),_:1}),e("p",null,"This should fire up your editor to write a commit message. When you have finished, save and close to continue."),e("h4",{id:"update-your-local-repository",class:"doc-heading doc-h4",onClick:r=>d(g)("update-your-local-repository")},"Update your local repository",8,["onClick"]),e("p",null,"It’s pretty likely that other changes to master have happened while you were working. Go get them."),e("ol",null,[e("li",null,"Add a remote Quasar repository as an upstream")]),e(d(m),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"git"),o(" remote "),e("span",{class:"token function"},"add"),o(" upstream https://github.com/quasarframework/quasar.git")])]),e(p,{lang:"bash"})]),_:1}),e("ol",{start:"2"},[e("li",null,"Fetch all remote branches")]),e(d(m),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"git"),o(" fetch upstream")])]),e(p,{lang:"bash"})]),_:1}),e("ol",{start:"3"},[e("li",null,[o("Check out your fork’s local "),e("code",{class:"doc-token"},"dev"),o(" branch.")])]),e(d(m),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"git"),o(` checkout dev
`),e("span",{class:"token operator"},">"),o(" Switched to branch "),e("span",{class:"token string"},"'dev'")])]),e(p,{lang:"bash"})]),_:1}),e("ol",{start:"4"},[e("li",null,[o("Merge the changes from "),e("code",{class:"doc-token"},"upstream/dev"),o(" into your local "),e("code",{class:"doc-token"},"dev"),o(" branch. This brings your fork’s "),e("code",{class:"doc-token"},"dev"),o(" branch into sync with the upstream repository, without losing your local changes.")])]),e(d(m),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"git"),o(" merge upstream/dev")])]),e(p,{lang:"bash"})]),_:1}),e("p",null,"No conflicts? Tests still pass? Change still seems reasonable to you? Then move on and open a pull request to apply your changes to the dev branch in main Quasar repository."),e("h4",{id:"issue-a-pull-request",class:"doc-heading doc-h4",onClick:r=>d(g)("issue-a-pull-request")},"Issue a pull request",8,["onClick"]),e("p",null,"Navigate to your repository you just pushed to (e.g. https://github.com/your-user-name/quasar) and click on “New Pull Request” seen in the left top panel."),e("p",null,"Ensure the change sets you introduced are included. Fill in some details about your potential patch including a meaningful title. When finished, press Click on “Create pull request”. The Quasar core team will be notified about your submission."),e("h2",{id:"write-your-story",class:"doc-heading doc-h2",onClick:r=>d(g)("write-your-story")},"Write your Story",8,["onClick"]),e("p",null,"We’re always looking for great write-ups on how you are using Quasar or the great experiences you’ve had with Quasar. If you write an article, we will publish it on our Medium publication channel and we’ll also make sure your article gets the attention it deserves with our social media presence. If you are interested, please contact blog(at)quasar.dev. We’d love to hear from you!"),e("h2",{id:"create-new-quasar-app-extension",class:"doc-heading doc-h2",onClick:r=>d(g)("create-new-quasar-app-extension")},"Create new Quasar App Extension",8,["onClick"]),e("p",null,[o("An easy way to start to contribute to Quasar is to generalize the code you have created on your project and publish it as a Quasar App Extension. Follow this guide on how to "),e(l,{to:"/app-extensions/development-guide/introduction"},{default:i(()=>[o("create a new extension")]),_:1}),o(".")]),e("p",null,[o("When done, submit a PR on "),e(l,{to:"https://github.com/quasarframework/quasar-awesome/blob/master/README.md#community-app-extensions"},{default:i(()=>[o("Quasar Awesome")]),_:1}),o(", share your achievement via "),e(l,{to:"https://forum.quasar-framework.org/category/15/v1-app-extensions"},{default:i(()=>[o("Quasar Forum")]),_:1}),o(".")]),e("h2",{id:"contributing-to-the-quasar-ui-source-code",class:"doc-heading doc-h2",onClick:r=>d(g)("contributing-to-the-quasar-ui-source-code")},"Contributing to the Quasar UI Source Code",8,["onClick"]),e("p",null,[o("As with any project, there are rules to contributing. Ours are written here, please read them carefully. After that, read the "),e(l,{to:"https://github.com/quasarframework/quasar/blob/dev/.github/CODE_OF_CONDUCT.md"},{default:i(()=>[o("Quasar code of conduct")]),_:1}),o(" and you’ll be ready to contribute to Quasar’s core repositories.")]),e("p",null,[o("An article "),e(l,{to:"https://medium.com/quasar-framework/wip-look-at-the-source-code-please-1b905ea4906"},{default:i(()=>[o("Look at the source code")]),_:1}),o(" will help you to get familiar with a Quasar code base.")]),e("h4",{id:"pull-request-guidelines",class:"doc-heading doc-h4",onClick:r=>d(g)("pull-request-guidelines")},"Pull Request Guidelines",8,["onClick"]),e("ul",null,[e("li",null,[e("p",null,[o("Checkout a topic branch from the relevant branch, e.g. "),e("code",{class:"doc-token"},"dev"),o(" (Qv2) or "),e("code",{class:"doc-token"},"v1"),o(" (Qv1), and merge back against that branch.")])]),e("li",null,[e("p",null,[e("strong",null,"DO NOT"),o(" check in "),e("code",{class:"doc-token"},"dist"),o(" in the commits.")])]),e("li",null,[e("p",null,"It’s OK to have multiple small commits as you work on the PR - we will let GitHub automatically squash it before merging.")]),e("li",null,[e("p",null,"If adding new feature:"),e("ul",null,[e("li",null,"Provide convincing reason to add this feature."),e("li",null,"Ideally you should open a suggestion issue first and have it green-lighted before working on it. Otherwise, you risk spending a lot of time on something which might not get accepted at all or not in the form you expect.")])]),e("li",null,[e("p",null,"If fixing a bug:"),e("ul",null,[e("li",null,[o("If you are resolving a specific issue, add "),e("code",{class:"doc-token"},"(fix: #xxxx[,#xxx])"),o(" (#xxxx is the issue id) in your PR title for a better release log, e.g. "),e("code",{class:"doc-token"},"fix: update entities encoding/decoding (fix #3899)"),o(".")]),e("li",null,"Provide detailed description of the bug in the PR. A live demo is preferred.")])])]),e("h4",{id:"development-setup",class:"doc-heading doc-h4",onClick:r=>d(g)("development-setup")},"Development Setup",8,["onClick"]),e("p",null,[o("You will need "),e(l,{to:"http://nodejs.org"},{default:i(()=>[o("Node.js")]),_:1}),o(" version "),e("strong",null,"v16+"),o(" along "),e(l,{to:"https://pnpm.io/"},{default:i(()=>[o("pnpm")]),_:1}),o(". Read "),e("code",{class:"doc-token"},"package.json"),o(" and take notice of the scripts you can use.")]),e("p",null,"After cloning the repo, run:"),e(d(m),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[o("$ "),e("span",{class:"token function"},"pnpm"),o(" i")])]),e(p,{lang:"bash"})]),_:1}),e("h4",{id:"commonly-used-npm-scripts",class:"doc-heading doc-h4",onClick:r=>d(g)("commonly-used-npm-scripts")},"Commonly used NPM scripts",8,["onClick"]),e(d(m),null,{default:i(()=>[e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token comment"},"# Start dev server with a demo app. This app has Quasar source code linked directly so any change will trigger HMR (Hot Module Reload) on the dev server."),o(`
`),e("span",{class:"token comment"},"# There's a section for each feature where tests are made."),o(`
$ `),e("span",{class:"token function"},"pnpm"),o(` dev

`),e("span",{class:"token comment"},"# build all dist files, including npm packages"),o(`
$ `),e("span",{class:"token function"},"pnpm"),o(` build
`),e("span",{class:"token comment"},"# build only js dist files"),o(`
$ `),e("span",{class:"token function"},"pnpm"),o(` build js
`),e("span",{class:"token comment"},"# build only type related files"),o(`
$ `),e("span",{class:"token function"},"pnpm"),o(` build js types
`),e("span",{class:"token comment"},"# build only css dist files"),o(`
$ `),e("span",{class:"token function"},"pnpm"),o(` build css

`),e("span",{class:"token comment"},"# lint sources"),o(`
$ `),e("span",{class:"token function"},"pnpm"),o(" lint")])]),e(p,{lang:"bash"})]),_:1}),e("h4",{id:"project-structure-ui-",class:"doc-heading doc-h4",onClick:r=>d(g)("project-structure-ui-")},"Project Structure (/ui)",8,["onClick"]),e("ul",null,[e("li",null,[e("p",null,[e("code",{class:"doc-token"},"build"),o(" - contains build-related configuration files. In most cases you don’t need to touch them.")])]),e("li",null,[e("p",null,[e("code",{class:"doc-token"},"src"),o(" - contains the source code. The codebase is written in ES2015.")]),e("ul",null,[e("li",null,[e("p",null,[e("code",{class:"doc-token"},"components"),o(" - JS, Sass and JSON (API) files for Quasar Vue components")])]),e("li",null,[e("p",null,[e("code",{class:"doc-token"},"composables"),o(" - Quasar’s composables for Vue 3 Composition API")])]),e("li",null,[e("p",null,[e("code",{class:"doc-token"},"directives"),o(" - Vue directives supplied by Quasar")])]),e("li",null,[e("p",null,[e("code",{class:"doc-token"},"plugins"),o(" - Quasar plugins")])]),e("li",null,[e("p",null,[e("code",{class:"doc-token"},"css"),o(" - Sass definitions and core code for Quasar styles")])]),e("li",null,[e("p",null,[e("code",{class:"doc-token"},"utils"),o(" - utilities used by the framework and exported to the public API")])])])]),e("li",null,[e("p",null,[e("code",{class:"doc-token"},"lang"),o(" - Quasar language packs")])]),e("li",null,[e("p",null,[e("code",{class:"doc-token"},"icon-set"),o(" - Quasar icon sets")])]),e("li",null,[e("p",null,[e("code",{class:"doc-token"},"dist"),o(" - contains built files for distribution (only after a build).")])]),e("li",null,[e("p",null,[e("code",{class:"doc-token"},"dev"),o(" - app with Quasar sources linked directly used for testing purposes. Each feature/component has its own "),e("code",{class:"doc-token"},"*.vue"),o(" file. Adding a new file automatically creates a route for it and adds it to the “homepage” list (based on the file name).")])])]),e("h4",{id:"dev-server-for-quasar-ui-",class:"doc-heading doc-h4",onClick:r=>d(g)("dev-server-for-quasar-ui-")},"Dev Server for Quasar (/ui)",8,["onClick"]),e("p",null,[o("Running "),e("code",{class:"doc-token"},"pnpm dev"),o(" starts up a dev server which uses HMR (Hot Module Reload) for Quasar source code. You can easily test your changes by making necessary changes to "),e("code",{class:"doc-token"},"/dev"),o(),e("code",{class:"doc-token"},"*.vue"),o(" files.")]),e("h2",{id:"financial-contribution",class:"doc-heading doc-h2",onClick:r=>d(g)("financial-contribution")},"Financial Contribution",8,["onClick"]),e("p",null,[o("Quasar Framework is an MIT-licensed open source project. Its ongoing development is made possible thanks to the support by these awesome "),e(l,{to:"https://github.com/quasarframework/quasar/blob/dev/backers.md"},{default:i(()=>[o("backers")]),_:1}),o(".")]),e("p",null,[e("strong",null,[o("Please read our manifest on "),e(l,{to:"https://quasar.dev/why-donate"},{default:i(()=>[o("Why donations are important")]),_:1})]),o(". If you’d like to become a donator, check out "),e(l,{to:"https://donate.quasar.dev"},{default:i(()=>[o("Quasar Framework’s Donator campaign")]),_:1}),o(".")]),e("h2",{id:"quasar-contributors",class:"doc-heading doc-h2",onClick:r=>d(g)("quasar-contributors")},"Quasar Contributors",8,["onClick"]),e("p",null,[o("Thank you to all the people who already "),e(l,{to:"https://github.com/quasarframework/quasar/graphs/contributors"},{default:i(()=>[o("contributed to Quasar")]),_:1}),o("!")])]}),_:1},$))}}},w=b.setup;b.setup=(k,f)=>{const y=Q();return(y.modules||(y.modules=new Set)).add("src/pages/how-to-contribute/contribution-guide.md"),w?w(k,f):void 0};const J=S(b,[["__file","contribution-guide.md"]]);export{J as default};
