import{mergeProps as P,withCtx as l,unref as p,createVNode as n,createTextVNode as s,useSSRContext as S}from"vue";import{ssrRenderComponent as r}from"vue/server-renderer";import{c as $}from"./page-utils-C-QWsEHe.js";import{D as R,a as h}from"./DocPage-DKr-0pQn.js";import{D as i}from"./DocPrerender-DPOnWPFO.js";import{C as e}from"./CopyButton-l3ndfN49.js";import{_ as q}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const y={__name:"ssr-production-export",__ssrInlineRender:!0,setup(w){const m=[{id:"anatomy",title:"2. Anatomy"},{id:"parameters",title:"3. Parameters"},{id:"default-content",title:"4. Default content"},{id:"usage",title:"5. Usage"},{id:"listen-on-a-port",title:"5.1. Listen on a port",sub:!0},{id:"serverless",title:"5.2. Serverless",sub:!0}];return(f,v,x,b)=>{v(r(R,P({title:"SSR Production Export",desc:"(@quasar/app-webpack) Configuring the Quasar SSR webserver for different platforms, including a serverless architecture.",overline:"Quasar CLI with Webpack - @quasar/app-webpack",heading:"","edit-link":"quasar-cli-webpack/developing-ssr/ssr-production-export",toc:m},b),{default:l((E,c,d,t)=>{if(c)c(`<div class="doc-note doc-note--danger"${t}><p class="doc-note__title"${t}>WARNING</p><ul${t}><li${t}>You will need to be running on “@quasar/app-webpack” v3.2+ to be able to use this feature.</li><li${t}>This file is used ONLY for your production build and NOT while developing.</li></ul></div><p${t}>Notice that your generated <code class="doc-token"${t}>/src-ssr</code> contains a file named <code class="doc-token"${t}>production-export.js</code>. This file defines how your SSR webserver is served. You can start listening to a port or provide a handler for your serverless infrastructure to use. It’s up to you.</p><blockquote class="doc-note"${t}><p${t}>Whatever this function returns (if anything) will be exported from your built <code class="doc-token"${t}>dist/ssr/index.js</code>.</p></blockquote><h2 id="anatomy" class="doc-heading doc-h2"${t}>Anatomy</h2><p${t}>The <code class="doc-token"${t}>/src-ssr/production-export.[js|ts]</code> file is a simple JavaScript file which boots up your SSR webserver and defines what your webserver exports (if exporting anything).</p>`),c(r(p(i),null,{default:l((k,o,u,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}><span class="token comment"${a}>// import something here (serverless packages?)</span>

<span class="token keyword"${a}>export</span> <span class="token keyword"${a}>default</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}><span class="token punctuation"${a}>{</span>
  app<span class="token punctuation"${a}>,</span> port<span class="token punctuation"${a}>,</span> isReady<span class="token punctuation"${a}>,</span> ssrHandler<span class="token punctuation"${a}>,</span>
  resolve<span class="token punctuation"${a}>,</span> publicPath<span class="token punctuation"${a}>,</span> folders<span class="token punctuation"${a}>,</span> render<span class="token punctuation"${a}>,</span> serve
<span class="token punctuation"${a}>}</span></span><span class="token punctuation"${a}>)</span> <span class="token operator"${a}>=&gt;</span> <span class="token punctuation"${a}>{</span>
  <span class="token comment"${a}>// something to do with the server &quot;app&quot;</span>
  <span class="token comment"${a}>// return whatever you want your webserver to export (handler for serverless function?)</span>
<span class="token punctuation"${a}>}</span></code></pre>`),o(r(e,null,null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// import something here (serverless packages?)"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(`
  app`),n("span",{class:"token punctuation"},","),s(" port"),n("span",{class:"token punctuation"},","),s(" isReady"),n("span",{class:"token punctuation"},","),s(" ssrHandler"),n("span",{class:"token punctuation"},","),s(`
  resolve`),n("span",{class:"token punctuation"},","),s(" publicPath"),n("span",{class:"token punctuation"},","),s(" folders"),n("span",{class:"token punctuation"},","),s(" render"),n("span",{class:"token punctuation"},","),s(` serve
`),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},'// something to do with the server "app"'),s(`
  `),n("span",{class:"token comment"},"// return whatever you want your webserver to export (handler for serverless function?)"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]}),_:1},d,t)),c(`<div class="doc-note doc-note--tip"${t}><p class="doc-note__title"${t}>TIP</p><p${t}>Remember that whatever this function returns (if anything) will be exported from your built <code class="doc-token"${t}>dist/ssr/index.js</code>.</p></div><p${t}>You can wrap the returned function with <code class="doc-token"${t}>ssrProductionExport</code> helper to get a better IDE autocomplete experience (Quasar v2.3.1+ required):</p>`),c(r(p(i),null,{default:l((k,o,u,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>import</span> <span class="token punctuation"${a}>{</span> ssrProductionExport <span class="token punctuation"${a}>}</span> <span class="token keyword"${a}>from</span> <span class="token string"${a}>&#39;quasar/wrappers&#39;</span>

<span class="token keyword"${a}>export</span> <span class="token keyword"${a}>default</span> <span class="token function"${a}>ssrProductionExport</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>(</span><span class="token parameter"${a}><span class="token punctuation"${a}>{</span>
  app<span class="token punctuation"${a}>,</span> port<span class="token punctuation"${a}>,</span> isReady<span class="token punctuation"${a}>,</span> ssrHandler<span class="token punctuation"${a}>,</span>
  resolve<span class="token punctuation"${a}>,</span> publicPath<span class="token punctuation"${a}>,</span> folders<span class="token punctuation"${a}>,</span> render<span class="token punctuation"${a}>,</span> serve
<span class="token punctuation"${a}>}</span></span><span class="token punctuation"${a}>)</span> <span class="token operator"${a}>=&gt;</span> <span class="token punctuation"${a}>{</span>
  <span class="token comment"${a}>// something to do with the server &quot;app&quot;</span>
  <span class="token comment"${a}>// return whatever you want your webserver to export (handler for serverless?)</span>
<span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span></code></pre>`),o(r(e,null,null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" ssrProductionExport "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"ssrProductionExport"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(`
  app`),n("span",{class:"token punctuation"},","),s(" port"),n("span",{class:"token punctuation"},","),s(" isReady"),n("span",{class:"token punctuation"},","),s(" ssrHandler"),n("span",{class:"token punctuation"},","),s(`
  resolve`),n("span",{class:"token punctuation"},","),s(" publicPath"),n("span",{class:"token punctuation"},","),s(" folders"),n("span",{class:"token punctuation"},","),s(" render"),n("span",{class:"token punctuation"},","),s(` serve
`),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},'// something to do with the server "app"'),s(`
  `),n("span",{class:"token comment"},"// return whatever you want your webserver to export (handler for serverless?)"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]}),_:1},d,t)),c(`<h2 id="parameters" class="doc-heading doc-h2"${t}>Parameters</h2><p${t}>We are referring here to the Object received as parameter by the default exported function of the production-export file.</p>`),c(r(p(i),null,{default:l((k,o,u,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>export</span> <span class="token keyword"${a}>default</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}><span class="token punctuation"${a}>{</span>
  app<span class="token punctuation"${a}>,</span> port<span class="token punctuation"${a}>,</span> isReady<span class="token punctuation"${a}>,</span> ssrHandler<span class="token punctuation"${a}>,</span>
  resolve<span class="token punctuation"${a}>,</span> publicPath<span class="token punctuation"${a}>,</span> folders<span class="token punctuation"${a}>,</span> render<span class="token punctuation"${a}>,</span> serve
<span class="token punctuation"${a}>}</span></span><span class="token punctuation"${a}>)</span> <span class="token operator"${a}>=&gt;</span> <span class="token punctuation"${a}>{</span></code></pre>`),o(r(e,null,null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(`
  app`),n("span",{class:"token punctuation"},","),s(" port"),n("span",{class:"token punctuation"},","),s(" isReady"),n("span",{class:"token punctuation"},","),s(" ssrHandler"),n("span",{class:"token punctuation"},","),s(`
  resolve`),n("span",{class:"token punctuation"},","),s(" publicPath"),n("span",{class:"token punctuation"},","),s(" folders"),n("span",{class:"token punctuation"},","),s(" render"),n("span",{class:"token punctuation"},","),s(` serve
`),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{")])]),n(e)]}),_:1},d,t)),c(`<p${t}>Detailing the Object:</p>`),c(r(p(i),null,{default:l((k,o,u,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}><span class="token punctuation"${a}>{</span>
  app<span class="token punctuation"${a}>,</span>     <span class="token comment"${a}>// Expressjs app instance</span>

  port<span class="token punctuation"${a}>,</span>    <span class="token comment"${a}>// process∙env∙PORT or quasar.config file &gt; ssr &gt; prodPort</span>

  isReady<span class="token punctuation"${a}>,</span> <span class="token comment"${a}>// Function to call returning a Promise</span>
           <span class="token comment"${a}>// when app is ready to serve clients</span>

  ssrHandler<span class="token punctuation"${a}>,</span> <span class="token comment"${a}>// Prebuilt app handler if your serverless service</span>
              <span class="token comment"${a}>// doesn&#39;t require a specific way to provide it.</span>
              <span class="token comment"${a}>// Form: ssrHandler (req, res, next)</span>
              <span class="token comment"${a}>// Tip: it uses isReady() under the hood already</span>

  <span class="token comment"${a}>// all of the following are the same as</span>
  <span class="token comment"${a}>// for the SSR middlewares (check its docs page);</span>
  <span class="token comment"${a}>// normally you don&#39;t need these here</span>
  <span class="token comment"${a}>// (use a real SSR middleware instead)</span>
  <span class="token literal-property property"${a}>resolve</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
    <span class="token function"${a}>urlPath</span><span class="token punctuation"${a}>(</span>path<span class="token punctuation"${a}>)</span>
    <span class="token function"${a}>root</span><span class="token punctuation"${a}>(</span>arg1<span class="token punctuation"${a}>,</span> arg2<span class="token punctuation"${a}>)</span><span class="token punctuation"${a}>,</span>
    <span class="token keyword"${a}>public</span><span class="token punctuation"${a}>(</span>arg1<span class="token punctuation"${a}>,</span> arg2<span class="token punctuation"${a}>)</span>
  <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>,</span>
  publicPath<span class="token punctuation"${a}>,</span> <span class="token comment"${a}>// String</span>
  <span class="token literal-property property"${a}>folders</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
    root<span class="token punctuation"${a}>,</span>     <span class="token comment"${a}>// String</span>
    <span class="token keyword"${a}>public</span>    <span class="token comment"${a}>// String</span>
  <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>,</span>
  <span class="token function"${a}>render</span><span class="token punctuation"${a}>(</span>ssrContext<span class="token punctuation"${a}>)</span><span class="token punctuation"${a}>,</span>
  <span class="token literal-property property"${a}>serve</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
    <span class="token keyword"${a}>static</span><span class="token punctuation"${a}>(</span>path<span class="token punctuation"${a}>,</span> opts<span class="token punctuation"${a}>)</span><span class="token punctuation"${a}>,</span>
    <span class="token function"${a}>error</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>{</span> err<span class="token punctuation"${a}>,</span> req<span class="token punctuation"${a}>,</span> res <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),o(r(e,null,null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token punctuation"},"{"),s(`
  app`),n("span",{class:"token punctuation"},","),s("     "),n("span",{class:"token comment"},"// Expressjs app instance"),s(`

  port`),n("span",{class:"token punctuation"},","),s("    "),n("span",{class:"token comment"},"// process∙env∙PORT or quasar.config file > ssr > prodPort"),s(`

  isReady`),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// Function to call returning a Promise"),s(`
           `),n("span",{class:"token comment"},"// when app is ready to serve clients"),s(`

  ssrHandler`),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// Prebuilt app handler if your serverless service"),s(`
              `),n("span",{class:"token comment"},"// doesn't require a specific way to provide it."),s(`
              `),n("span",{class:"token comment"},"// Form: ssrHandler (req, res, next)"),s(`
              `),n("span",{class:"token comment"},"// Tip: it uses isReady() under the hood already"),s(`

  `),n("span",{class:"token comment"},"// all of the following are the same as"),s(`
  `),n("span",{class:"token comment"},"// for the SSR middlewares (check its docs page);"),s(`
  `),n("span",{class:"token comment"},"// normally you don't need these here"),s(`
  `),n("span",{class:"token comment"},"// (use a real SSR middleware instead)"),s(`
  `),n("span",{class:"token literal-property property"},"resolve"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"urlPath"),n("span",{class:"token punctuation"},"("),s("path"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token function"},"root"),n("span",{class:"token punctuation"},"("),s("arg1"),n("span",{class:"token punctuation"},","),s(" arg2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token keyword"},"public"),n("span",{class:"token punctuation"},"("),s("arg1"),n("span",{class:"token punctuation"},","),s(" arg2"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  publicPath`),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// String"),s(`
  `),n("span",{class:"token literal-property property"},"folders"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    root`),n("span",{class:"token punctuation"},","),s("     "),n("span",{class:"token comment"},"// String"),s(`
    `),n("span",{class:"token keyword"},"public"),s("    "),n("span",{class:"token comment"},"// String"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token function"},"render"),n("span",{class:"token punctuation"},"("),s("ssrContext"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token literal-property property"},"serve"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"static"),n("span",{class:"token punctuation"},"("),s("path"),n("span",{class:"token punctuation"},","),s(" opts"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token function"},"error"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" err"),n("span",{class:"token punctuation"},","),s(" req"),n("span",{class:"token punctuation"},","),s(" res "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]}),_:1},d,t)),c(`<h2 id="default-content" class="doc-heading doc-h2"${t}>Default content</h2><p${t}>The following is the default content of <code class="doc-token"${t}>/src-ssr/production-export.js</code> when you add SSR support in a Quasar CLI project:</p>`),c(r(p(i),null,{default:l((k,o,u,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>import</span> <span class="token punctuation"${a}>{</span> ssrProductionExport <span class="token punctuation"${a}>}</span> <span class="token keyword"${a}>from</span> <span class="token string"${a}>&#39;quasar/wrappers&#39;</span>

<span class="token keyword"${a}>export</span> <span class="token keyword"${a}>default</span> <span class="token function"${a}>ssrProductionExport</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>(</span><span class="token parameter"${a}><span class="token punctuation"${a}>{</span> app<span class="token punctuation"${a}>,</span> port<span class="token punctuation"${a}>,</span> isReady <span class="token punctuation"${a}>}</span></span><span class="token punctuation"${a}>)</span> <span class="token operator"${a}>=&gt;</span> <span class="token punctuation"${a}>{</span>
  <span class="token keyword"${a}>return</span> <span class="token function"${a}>isReady</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span><span class="token punctuation"${a}>.</span><span class="token function"${a}>then</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span> <span class="token operator"${a}>=&gt;</span> <span class="token punctuation"${a}>{</span>
    app<span class="token punctuation"${a}>.</span><span class="token function"${a}>listen</span><span class="token punctuation"${a}>(</span>port<span class="token punctuation"${a}>,</span> <span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span> <span class="token operator"${a}>=&gt;</span> <span class="token punctuation"${a}>{</span>
      console<span class="token punctuation"${a}>.</span><span class="token function"${a}>log</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;Server listening at port &#39;</span> <span class="token operator"${a}>+</span> port<span class="token punctuation"${a}>)</span>
    <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span>
  <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span>
<span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span></code></pre>`),o(r(e,null,null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" ssrProductionExport "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"ssrProductionExport"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" app"),n("span",{class:"token punctuation"},","),s(" port"),n("span",{class:"token punctuation"},","),s(" isReady "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"isReady"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"listen"),n("span",{class:"token punctuation"},"("),s("port"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Server listening at port '"),s(),n("span",{class:"token operator"},"+"),s(" port"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]}),_:1},d,t)),c(`<h2 id="usage" class="doc-heading doc-h2"${t}>Usage</h2><div class="doc-note doc-note--warning"${t}><p class="doc-note__title"${t}>WARNING</p><ul${t}><li${t}>If you import anything from node_modules, then make sure that the package is specified in package.json &gt; “dependencies” and NOT in “devDependencies”.</li><li${t}>This is usually not the place to add middlewares (but you can do it). Add middlewares by using the `),c(r(h,{to:"/quasar-cli-webpack/developing-ssr/ssr-middleware"},{default:l((k,o,u,a)=>{if(o)o("SSR Middlewares");else return[s("SSR Middlewares")]}),_:1},d,t)),c(` instead. You can configure SSR Middlewares to run only for dev or only for production too.</li></ul></div><h3 id="listen-on-a-port" class="doc-heading doc-h3"${t}>Listen on a port</h3><p${t}>This is the default option that you get when adding SSR support in a Quasar CLI project. It starts listening on the configured port (process.env.PORT or quasar.config file &gt; ssr &gt; prodPort).</p>`),c(r(p(i),null,{default:l((k,o,u,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}><span class="token comment"${a}>// src-ssr/production-export.[js|ts]</span>

<span class="token keyword"${a}>import</span> <span class="token punctuation"${a}>{</span> ssrProductionExport <span class="token punctuation"${a}>}</span> <span class="token keyword"${a}>from</span> <span class="token string"${a}>&#39;quasar/wrappers&#39;</span>

<span class="token keyword"${a}>export</span> <span class="token keyword"${a}>default</span> <span class="token function"${a}>ssrProductionExport</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>(</span><span class="token parameter"${a}><span class="token punctuation"${a}>{</span> app<span class="token punctuation"${a}>,</span> port<span class="token punctuation"${a}>,</span> isReady <span class="token punctuation"${a}>}</span></span><span class="token punctuation"${a}>)</span> <span class="token operator"${a}>=&gt;</span> <span class="token punctuation"${a}>{</span>
  <span class="token comment"${a}>// we wait for app to be ready (including running all SSR middlewares)</span>
  <span class="token keyword"${a}>return</span> <span class="token function"${a}>isReady</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span><span class="token punctuation"${a}>.</span><span class="token function"${a}>then</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span> <span class="token operator"${a}>=&gt;</span> <span class="token punctuation"${a}>{</span>
    <span class="token comment"${a}>// then we start listening on a port</span>
    app<span class="token punctuation"${a}>.</span><span class="token function"${a}>listen</span><span class="token punctuation"${a}>(</span>port<span class="token punctuation"${a}>,</span> <span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span> <span class="token operator"${a}>=&gt;</span> <span class="token punctuation"${a}>{</span>
      <span class="token comment"${a}>// we&#39;re ready to serve clients</span>
      console<span class="token punctuation"${a}>.</span><span class="token function"${a}>log</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;Server listening at port &#39;</span> <span class="token operator"${a}>+</span> port<span class="token punctuation"${a}>)</span>
    <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span>
  <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span>
<span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span></code></pre>`),o(r(e,null,null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// src-ssr/production-export.[js|ts]"),s(`

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" ssrProductionExport "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"ssrProductionExport"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" app"),n("span",{class:"token punctuation"},","),s(" port"),n("span",{class:"token punctuation"},","),s(" isReady "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// we wait for app to be ready (including running all SSR middlewares)"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"isReady"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// then we start listening on a port"),s(`
    app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"listen"),n("span",{class:"token punctuation"},"("),s("port"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// we're ready to serve clients"),s(`
      console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Server listening at port '"),s(),n("span",{class:"token operator"},"+"),s(" port"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]}),_:1},d,t)),c(`<h3 id="serverless" class="doc-heading doc-h3"${t}>Serverless</h3><p${t}>If you have a serverless infrastructure, then you generally need to export a handler instead of starting to listen to a port.</p><p${t}>Say that your serverless service requires you to:</p>`),c(r(p(i),null,{default:l((k,o,u,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}>module<span class="token punctuation"${a}>.</span>exports<span class="token punctuation"${a}>.</span>handler <span class="token operator"${a}>=</span> __your_handler__</code></pre>`),o(r(e,null,null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[s("module"),n("span",{class:"token punctuation"},"."),s("exports"),n("span",{class:"token punctuation"},"."),s("handler "),n("span",{class:"token operator"},"="),s(" __your_handler__")])]),n(e)]}),_:1},d,t)),c(`<p${t}>Then what you’d need to do is:</p>`),c(r(p(i),null,{default:l((k,o,u,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}><span class="token comment"${a}>// src-ssr/production-export.[js|ts]</span>

<span class="token keyword"${a}>import</span> <span class="token punctuation"${a}>{</span> ssrProductionExport <span class="token punctuation"${a}>}</span> <span class="token keyword"${a}>from</span> <span class="token string"${a}>&#39;quasar/wrappers&#39;</span>

<span class="token keyword"${a}>export</span> <span class="token keyword"${a}>default</span> <span class="token function"${a}>ssrProductionExport</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>(</span><span class="token parameter"${a}><span class="token punctuation"${a}>{</span> ssrHandler <span class="token punctuation"${a}>}</span></span><span class="token punctuation"${a}>)</span> <span class="token operator"${a}>=&gt;</span> <span class="token punctuation"${a}>{</span>
  <span class="token comment"${a}>// &quot;ssrHandler&quot; is a prebuilt handler which already</span>
  <span class="token comment"${a}>// waits for all the middlewares to run before serving clients</span>

  <span class="token comment"${a}>// whatever you return here is equivalent to module.exports.&lt;key&gt; = &lt;value&gt;</span>
  <span class="token keyword"${a}>return</span> <span class="token punctuation"${a}>{</span> <span class="token literal-property property"${a}>handler</span><span class="token operator"${a}>:</span> ssrHandler <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span></code></pre>`),o(r(e,null,null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// src-ssr/production-export.[js|ts]"),s(`

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" ssrProductionExport "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"ssrProductionExport"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" ssrHandler "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},'// "ssrHandler" is a prebuilt handler which already'),s(`
  `),n("span",{class:"token comment"},"// waits for all the middlewares to run before serving clients"),s(`

  `),n("span",{class:"token comment"},"// whatever you return here is equivalent to module.exports.<key> = <value>"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"handler"),n("span",{class:"token operator"},":"),s(" ssrHandler "),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]}),_:1},d,t)),c(`<p${t}>Please note that the provided <code class="doc-token"${t}>ssrHandler</code> is a Function of form: <code class="doc-token"${t}>(req, res, next) =&gt; void</code>. Should you require to export a handler of form <code class="doc-token"${t}>(event, context, callback) =&gt; void</code> then you will most likely want to use the <code class="doc-token"${t}>serverless-http</code> package (see below).</p><h4 id="example-serverless-http" class="doc-heading doc-h4"${t}>Example: serverless-http</h4>`),c(r(p(i),null,{default:l((k,o,u,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}><span class="token comment"${a}>// src-ssr/production-export.[js|ts]</span>

<span class="token keyword"${a}>import</span> serverless <span class="token keyword"${a}>from</span> <span class="token string"${a}>&#39;serverless-http&#39;</span>
<span class="token keyword"${a}>import</span> <span class="token punctuation"${a}>{</span> ssrProductionExport <span class="token punctuation"${a}>}</span> <span class="token keyword"${a}>from</span> <span class="token string"${a}>&#39;quasar/wrappers&#39;</span>

<span class="token keyword"${a}>export</span> <span class="token keyword"${a}>default</span> <span class="token function"${a}>ssrProductionExport</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>(</span><span class="token parameter"${a}><span class="token punctuation"${a}>{</span> ssrHandler <span class="token punctuation"${a}>}</span></span><span class="token punctuation"${a}>)</span> <span class="token operator"${a}>=&gt;</span> <span class="token punctuation"${a}>{</span>
  <span class="token keyword"${a}>return</span> <span class="token punctuation"${a}>{</span> <span class="token literal-property property"${a}>handler</span><span class="token operator"${a}>:</span> <span class="token function"${a}>serverless</span><span class="token punctuation"${a}>(</span>ssrHandler<span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span></code></pre>`),o(r(e,null,null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// src-ssr/production-export.[js|ts]"),s(`

`),n("span",{class:"token keyword"},"import"),s(" serverless "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'serverless-http'"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" ssrProductionExport "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"ssrProductionExport"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" ssrHandler "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"handler"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"serverless"),n("span",{class:"token punctuation"},"("),s("ssrHandler"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]}),_:1},d,t)),c(`<h4 id="example-firebase-function" class="doc-heading doc-h4"${t}>Example: Firebase function</h4>`),c(r(p(i),null,{default:l((k,o,u,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}><span class="token comment"${a}>// src-ssr/production-export.[js|ts]</span>

<span class="token keyword"${a}>import</span> <span class="token operator"${a}>*</span> <span class="token keyword"${a}>as</span> functions <span class="token keyword"${a}>from</span> <span class="token string"${a}>&#39;firebase-functions&#39;</span>
<span class="token keyword"${a}>import</span> <span class="token punctuation"${a}>{</span> ssrProductionExport <span class="token punctuation"${a}>}</span> <span class="token keyword"${a}>from</span> <span class="token string"${a}>&#39;quasar/wrappers&#39;</span>

<span class="token keyword"${a}>export</span> <span class="token keyword"${a}>default</span> <span class="token function"${a}>ssrProductionExport</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>(</span><span class="token parameter"${a}><span class="token punctuation"${a}>{</span> ssrHandler <span class="token punctuation"${a}>}</span></span><span class="token punctuation"${a}>)</span> <span class="token operator"${a}>=&gt;</span> <span class="token punctuation"${a}>{</span>
  <span class="token keyword"${a}>return</span> <span class="token punctuation"${a}>{</span>
    <span class="token literal-property property"${a}>handler</span><span class="token operator"${a}>:</span> functions<span class="token punctuation"${a}>.</span>https<span class="token punctuation"${a}>.</span><span class="token function"${a}>onRequest</span><span class="token punctuation"${a}>(</span>ssrHandler<span class="token punctuation"${a}>)</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span></code></pre>`),o(r(e,null,null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// src-ssr/production-export.[js|ts]"),s(`

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token keyword"},"as"),s(" functions "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'firebase-functions'"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" ssrProductionExport "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"ssrProductionExport"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" ssrHandler "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"handler"),n("span",{class:"token operator"},":"),s(" functions"),n("span",{class:"token punctuation"},"."),s("https"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"onRequest"),n("span",{class:"token punctuation"},"("),s("ssrHandler"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]}),_:1},d,t));else return[n("div",{class:"doc-note doc-note--danger"},[n("p",{class:"doc-note__title"},"WARNING"),n("ul",null,[n("li",null,"You will need to be running on “@quasar/app-webpack” v3.2+ to be able to use this feature."),n("li",null,"This file is used ONLY for your production build and NOT while developing.")])]),n("p",null,[s("Notice that your generated "),n("code",{class:"doc-token"},"/src-ssr"),s(" contains a file named "),n("code",{class:"doc-token"},"production-export.js"),s(". This file defines how your SSR webserver is served. You can start listening to a port or provide a handler for your serverless infrastructure to use. It’s up to you.")]),n("blockquote",{class:"doc-note"},[n("p",null,[s("Whatever this function returns (if anything) will be exported from your built "),n("code",{class:"doc-token"},"dist/ssr/index.js"),s(".")])]),n("h2",{id:"anatomy",class:"doc-heading doc-h2",onClick:k=>p($)("anatomy")},"Anatomy",8,["onClick"]),n("p",null,[s("The "),n("code",{class:"doc-token"},"/src-ssr/production-export.[js|ts]"),s(" file is a simple JavaScript file which boots up your SSR webserver and defines what your webserver exports (if exporting anything).")]),n(p(i),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// import something here (serverless packages?)"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(`
  app`),n("span",{class:"token punctuation"},","),s(" port"),n("span",{class:"token punctuation"},","),s(" isReady"),n("span",{class:"token punctuation"},","),s(" ssrHandler"),n("span",{class:"token punctuation"},","),s(`
  resolve`),n("span",{class:"token punctuation"},","),s(" publicPath"),n("span",{class:"token punctuation"},","),s(" folders"),n("span",{class:"token punctuation"},","),s(" render"),n("span",{class:"token punctuation"},","),s(` serve
`),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},'// something to do with the server "app"'),s(`
  `),n("span",{class:"token comment"},"// return whatever you want your webserver to export (handler for serverless function?)"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]),_:1}),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,[s("Remember that whatever this function returns (if anything) will be exported from your built "),n("code",{class:"doc-token"},"dist/ssr/index.js"),s(".")])]),n("p",null,[s("You can wrap the returned function with "),n("code",{class:"doc-token"},"ssrProductionExport"),s(" helper to get a better IDE autocomplete experience (Quasar v2.3.1+ required):")]),n(p(i),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" ssrProductionExport "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"ssrProductionExport"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(`
  app`),n("span",{class:"token punctuation"},","),s(" port"),n("span",{class:"token punctuation"},","),s(" isReady"),n("span",{class:"token punctuation"},","),s(" ssrHandler"),n("span",{class:"token punctuation"},","),s(`
  resolve`),n("span",{class:"token punctuation"},","),s(" publicPath"),n("span",{class:"token punctuation"},","),s(" folders"),n("span",{class:"token punctuation"},","),s(" render"),n("span",{class:"token punctuation"},","),s(` serve
`),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},'// something to do with the server "app"'),s(`
  `),n("span",{class:"token comment"},"// return whatever you want your webserver to export (handler for serverless?)"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]),_:1}),n("h2",{id:"parameters",class:"doc-heading doc-h2",onClick:k=>p($)("parameters")},"Parameters",8,["onClick"]),n("p",null,"We are referring here to the Object received as parameter by the default exported function of the production-export file."),n(p(i),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(`
  app`),n("span",{class:"token punctuation"},","),s(" port"),n("span",{class:"token punctuation"},","),s(" isReady"),n("span",{class:"token punctuation"},","),s(" ssrHandler"),n("span",{class:"token punctuation"},","),s(`
  resolve`),n("span",{class:"token punctuation"},","),s(" publicPath"),n("span",{class:"token punctuation"},","),s(" folders"),n("span",{class:"token punctuation"},","),s(" render"),n("span",{class:"token punctuation"},","),s(` serve
`),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{")])]),n(e)]),_:1}),n("p",null,"Detailing the Object:"),n(p(i),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token punctuation"},"{"),s(`
  app`),n("span",{class:"token punctuation"},","),s("     "),n("span",{class:"token comment"},"// Expressjs app instance"),s(`

  port`),n("span",{class:"token punctuation"},","),s("    "),n("span",{class:"token comment"},"// process∙env∙PORT or quasar.config file > ssr > prodPort"),s(`

  isReady`),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// Function to call returning a Promise"),s(`
           `),n("span",{class:"token comment"},"// when app is ready to serve clients"),s(`

  ssrHandler`),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// Prebuilt app handler if your serverless service"),s(`
              `),n("span",{class:"token comment"},"// doesn't require a specific way to provide it."),s(`
              `),n("span",{class:"token comment"},"// Form: ssrHandler (req, res, next)"),s(`
              `),n("span",{class:"token comment"},"// Tip: it uses isReady() under the hood already"),s(`

  `),n("span",{class:"token comment"},"// all of the following are the same as"),s(`
  `),n("span",{class:"token comment"},"// for the SSR middlewares (check its docs page);"),s(`
  `),n("span",{class:"token comment"},"// normally you don't need these here"),s(`
  `),n("span",{class:"token comment"},"// (use a real SSR middleware instead)"),s(`
  `),n("span",{class:"token literal-property property"},"resolve"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"urlPath"),n("span",{class:"token punctuation"},"("),s("path"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token function"},"root"),n("span",{class:"token punctuation"},"("),s("arg1"),n("span",{class:"token punctuation"},","),s(" arg2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token keyword"},"public"),n("span",{class:"token punctuation"},"("),s("arg1"),n("span",{class:"token punctuation"},","),s(" arg2"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  publicPath`),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// String"),s(`
  `),n("span",{class:"token literal-property property"},"folders"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    root`),n("span",{class:"token punctuation"},","),s("     "),n("span",{class:"token comment"},"// String"),s(`
    `),n("span",{class:"token keyword"},"public"),s("    "),n("span",{class:"token comment"},"// String"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token function"},"render"),n("span",{class:"token punctuation"},"("),s("ssrContext"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token literal-property property"},"serve"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"static"),n("span",{class:"token punctuation"},"("),s("path"),n("span",{class:"token punctuation"},","),s(" opts"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token function"},"error"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" err"),n("span",{class:"token punctuation"},","),s(" req"),n("span",{class:"token punctuation"},","),s(" res "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]),_:1}),n("h2",{id:"default-content",class:"doc-heading doc-h2",onClick:k=>p($)("default-content")},"Default content",8,["onClick"]),n("p",null,[s("The following is the default content of "),n("code",{class:"doc-token"},"/src-ssr/production-export.js"),s(" when you add SSR support in a Quasar CLI project:")]),n(p(i),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" ssrProductionExport "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"ssrProductionExport"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" app"),n("span",{class:"token punctuation"},","),s(" port"),n("span",{class:"token punctuation"},","),s(" isReady "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"isReady"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"listen"),n("span",{class:"token punctuation"},"("),s("port"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Server listening at port '"),s(),n("span",{class:"token operator"},"+"),s(" port"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]),_:1}),n("h2",{id:"usage",class:"doc-heading doc-h2",onClick:k=>p($)("usage")},"Usage",8,["onClick"]),n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"WARNING"),n("ul",null,[n("li",null,"If you import anything from node_modules, then make sure that the package is specified in package.json > “dependencies” and NOT in “devDependencies”."),n("li",null,[s("This is usually not the place to add middlewares (but you can do it). Add middlewares by using the "),n(h,{to:"/quasar-cli-webpack/developing-ssr/ssr-middleware"},{default:l(()=>[s("SSR Middlewares")]),_:1}),s(" instead. You can configure SSR Middlewares to run only for dev or only for production too.")])])]),n("h3",{id:"listen-on-a-port",class:"doc-heading doc-h3",onClick:k=>p($)("listen-on-a-port")},"Listen on a port",8,["onClick"]),n("p",null,"This is the default option that you get when adding SSR support in a Quasar CLI project. It starts listening on the configured port (process.env.PORT or quasar.config file > ssr > prodPort)."),n(p(i),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// src-ssr/production-export.[js|ts]"),s(`

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" ssrProductionExport "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"ssrProductionExport"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" app"),n("span",{class:"token punctuation"},","),s(" port"),n("span",{class:"token punctuation"},","),s(" isReady "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// we wait for app to be ready (including running all SSR middlewares)"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"isReady"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// then we start listening on a port"),s(`
    app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"listen"),n("span",{class:"token punctuation"},"("),s("port"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// we're ready to serve clients"),s(`
      console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Server listening at port '"),s(),n("span",{class:"token operator"},"+"),s(" port"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]),_:1}),n("h3",{id:"serverless",class:"doc-heading doc-h3",onClick:k=>p($)("serverless")},"Serverless",8,["onClick"]),n("p",null,"If you have a serverless infrastructure, then you generally need to export a handler instead of starting to listen to a port."),n("p",null,"Say that your serverless service requires you to:"),n(p(i),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[s("module"),n("span",{class:"token punctuation"},"."),s("exports"),n("span",{class:"token punctuation"},"."),s("handler "),n("span",{class:"token operator"},"="),s(" __your_handler__")])]),n(e)]),_:1}),n("p",null,"Then what you’d need to do is:"),n(p(i),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// src-ssr/production-export.[js|ts]"),s(`

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" ssrProductionExport "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"ssrProductionExport"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" ssrHandler "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},'// "ssrHandler" is a prebuilt handler which already'),s(`
  `),n("span",{class:"token comment"},"// waits for all the middlewares to run before serving clients"),s(`

  `),n("span",{class:"token comment"},"// whatever you return here is equivalent to module.exports.<key> = <value>"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"handler"),n("span",{class:"token operator"},":"),s(" ssrHandler "),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]),_:1}),n("p",null,[s("Please note that the provided "),n("code",{class:"doc-token"},"ssrHandler"),s(" is a Function of form: "),n("code",{class:"doc-token"},"(req, res, next) => void"),s(". Should you require to export a handler of form "),n("code",{class:"doc-token"},"(event, context, callback) => void"),s(" then you will most likely want to use the "),n("code",{class:"doc-token"},"serverless-http"),s(" package (see below).")]),n("h4",{id:"example-serverless-http",class:"doc-heading doc-h4",onClick:k=>p($)("example-serverless-http")},"Example: serverless-http",8,["onClick"]),n(p(i),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// src-ssr/production-export.[js|ts]"),s(`

`),n("span",{class:"token keyword"},"import"),s(" serverless "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'serverless-http'"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" ssrProductionExport "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"ssrProductionExport"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" ssrHandler "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"handler"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"serverless"),n("span",{class:"token punctuation"},"("),s("ssrHandler"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]),_:1}),n("h4",{id:"example-firebase-function",class:"doc-heading doc-h4",onClick:k=>p($)("example-firebase-function")},"Example: Firebase function",8,["onClick"]),n(p(i),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// src-ssr/production-export.[js|ts]"),s(`

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token keyword"},"as"),s(" functions "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'firebase-functions'"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" ssrProductionExport "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"ssrProductionExport"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" ssrHandler "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"handler"),n("span",{class:"token operator"},":"),s(" functions"),n("span",{class:"token punctuation"},"."),s("https"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"onRequest"),n("span",{class:"token punctuation"},"("),s("ssrHandler"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(e)]),_:1})]}),_:1},x))}}},g=y.setup;y.setup=(w,m)=>{const f=S();return(f.modules||(f.modules=new Set)).add("src/pages/quasar-cli-webpack/developing-ssr/ssr-production-export.md"),g?g(w,m):void 0};const G=q(y,[["__file","ssr-production-export.md"]]);export{G as default};
