import{provide as T,mergeProps as x,withCtx as r,createTextVNode as t,unref as u,createVNode as e,useSSRContext as S}from"vue";import{ssrRenderComponent as i}from"vue/server-renderer";import{c as m}from"./page-utils-C-QWsEHe.js";import{D as C,a as l}from"./DocPage-DKr-0pQn.js";import{D as p}from"./DocExample-BcaABDtE.js";import{D as y}from"./DocApi-Df9ryd6x.js";import{D as w}from"./DocPrerender-DPOnWPFO.js";import{C as k}from"./CopyButton-l3ndfN49.js";import{_ as j}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const f={__name:"intersection",__ssrInlineRender:!0,setup(g){T("_q_ex",{name:"Intersection"});const v=[{name:"Intersection",category:"Vue Components",path:"/vue-components/intersection"},{name:"Scroll Fire",category:"Vue Directives",path:"/vue-directives/scroll-fire"},{name:"Scroll",category:"Vue Directives",path:"/vue-directives/scroll"},{name:"Transitions",category:"Options & Helpers",path:"/options/transitions"}],b=[{id:"intersection-api",title:"2. Intersection API",deep:!0},{id:"usage",title:"3. Usage"},{id:"basic",title:"3.1. Basic",sub:!0},{id:"trigger-once",title:"3.2. Trigger once",sub:!0},{id:"using-an-object",title:"3.3. Using an Object",sub:!0},{id:"advanced",title:"3.4. Advanced",sub:!0}];return(U,O,A,P)=>{O(i(C,x({title:"Intersection Directive",desc:"Vue directive that uses Intersection Observer API to call a method when user scrolls and brings a component into or out of view.",heading:"","edit-link":"vue-directives/intersection",toc:b,related:v},P),{default:r((D,s,c,n)=>{if(s)s(`<p${n}>“Intersection” is a Quasar directive that enables a method to be called when the user scrolls and the DOM element (or component) that it is applied to comes into or out of the viewport.</p><p${n}>Under the hood, it uses the `),s(i(l,{to:"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API"},{default:r((d,a,h,o)=>{if(a)a("Intersection Observer API");else return[t("Intersection Observer API")]}),_:1},c,n)),s(`.</p><div class="doc-note doc-note--warning"${n}><p class="doc-note__title"${n}>WARNING</p><p${n}>Not all browsers support the Intersection Observer API. Most `),s(i(l,{to:"https://caniuse.com/#search=intersection"},{default:r((d,a,h,o)=>{if(a)a("modern browsers");else return[t("modern browsers")]}),_:1},c,n)),s(" do, but other browsers do not. If you need to support older browsers, you can install and import (into a boot file) the official W3C "),s(i(l,{to:"https://github.com/w3c/IntersectionObserver"},{default:r((d,a,h,o)=>{if(a)a("polyfill");else return[t("polyfill")]}),_:1},c,n)),s(".</p></div>"),s(i(y,{file:"Intersection"},null,c,n)),s(`<h2 id="usage" class="doc-heading doc-h2"${n}>Usage</h2><p${n}>Reading the `),s(i(l,{to:"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API"},{default:r((d,a,h,o)=>{if(a)a("Intersection Observer API");else return[t("Intersection Observer API")]}),_:1},c,n)),s(` first will be best in your understanding of how this directive works.</p><p${n}>Intersection directive takes either a handler function as an argument or an Object. The Object form looks like this:</p>`),s(i(u(w),null,{default:r((d,a,h,o)=>{if(a)a(`<pre class="doc-code"${o}><code${o}><span class="token punctuation"${o}>{</span>
  <span class="token literal-property property"${o}>handler</span><span class="token operator"${o}>:</span> <span class="token comment"${o}>/* Function */</span><span class="token punctuation"${o}>,</span>
  <span class="token literal-property property"${o}>cfg</span><span class="token operator"${o}>:</span> <span class="token punctuation"${o}>{</span>
    <span class="token comment"${o}>// any options from &quot;Intersection observer options&quot;</span>
    <span class="token comment"${o}>// on https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API</span>
    <span class="token literal-property property"${o}>root</span><span class="token operator"${o}>:</span> <span class="token keyword"${o}>null</span><span class="token punctuation"${o}>,</span> <span class="token comment"${o}>// DOM Element</span>
    <span class="token literal-property property"${o}>rootMargin</span><span class="token operator"${o}>:</span> <span class="token string"${o}>&#39;0px&#39;</span><span class="token punctuation"${o}>,</span>
    <span class="token literal-property property"${o}>threshold</span><span class="token operator"${o}>:</span> <span class="token number"${o}>0</span>
  <span class="token punctuation"${o}>}</span>
<span class="token punctuation"${o}>}</span></code></pre>`),a(i(k,null,null,h,o));else return[e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token punctuation"},"{"),t(`
  `),e("span",{class:"token literal-property property"},"handler"),e("span",{class:"token operator"},":"),t(),e("span",{class:"token comment"},"/* Function */"),e("span",{class:"token punctuation"},","),t(`
  `),e("span",{class:"token literal-property property"},"cfg"),e("span",{class:"token operator"},":"),t(),e("span",{class:"token punctuation"},"{"),t(`
    `),e("span",{class:"token comment"},'// any options from "Intersection observer options"'),t(`
    `),e("span",{class:"token comment"},"// on https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API"),t(`
    `),e("span",{class:"token literal-property property"},"root"),e("span",{class:"token operator"},":"),t(),e("span",{class:"token keyword"},"null"),e("span",{class:"token punctuation"},","),t(),e("span",{class:"token comment"},"// DOM Element"),t(`
    `),e("span",{class:"token literal-property property"},"rootMargin"),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},"'0px'"),e("span",{class:"token punctuation"},","),t(`
    `),e("span",{class:"token literal-property property"},"threshold"),e("span",{class:"token operator"},":"),t(),e("span",{class:"token number"},"0"),t(`
  `),e("span",{class:"token punctuation"},"}"),t(`
`),e("span",{class:"token punctuation"},"}")])]),e(k)]}),_:1},c,n)),s(`<p${n}>When using the Object form, only the <code class="doc-token"${n}>handler</code> key is mandatory.</p><p${n}>The handler Function takes one parameter, which is an `),s(i(l,{to:"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry"},{default:r((d,a,h,o)=>{if(a)a("IntersectionObserverEntry");else return[t("IntersectionObserverEntry")]}),_:1},c,n)),s(`.</p><div class="doc-note doc-note--tip"${n}><p class="doc-note__title"${n}>TIP</p><p${n}>Scroll within the examples below until the observed element is in view. Then scroll it out of view.</p></div><h3 id="basic" class="doc-heading doc-h3"${n}>Basic</h3>`),s(i(p,{title:"Basic",file:"Basic","no-edit":""},null,c,n)),s(`<h3 id="trigger-once" class="doc-heading doc-h3"${n}>Trigger once</h3><p${n}>The directive can be used with the <code class="doc-token"${n}>once</code> modifier (ex: <code class="doc-token"${n}>v-intersection.once</code>). Once the observed element comes into view, the handler Function will be called and the observing will stop. This allows you to control the processing overhead if all you need is to be notified when the observed element starts to be visible on screen.</p>`),s(i(p,{title:"Once",file:"Once","no-edit":""},null,c,n)),s(`<h3 id="using-an-object" class="doc-heading doc-h3"${n}>Using an Object</h3><p${n}>By passing in an Object as the directive’s value (instead of a Function), you can control all the options (like threshold) of the Intersection Observer.</p>`),s(i(p,{title:"Supplying configuration Object",file:"ObjectForm","no-edit":""},null,c,n)),s(`<h3 id="advanced" class="doc-heading doc-h3"${n}>Advanced</h3><p${n}>Below is a more advanced example of what you can do. The code takes advantage of the HTML <code class="doc-token"${n}>data</code> attribute. Basically, by setting <code class="doc-token"${n}>data-id</code> with the index of the element in a loop, this can be retrieved via the passed in <code class="doc-token"${n}>entry</code> to the handler as <code class="doc-token"${n}>entry.target.dataset.id</code>. If you are unfamiliar with the <code class="doc-token"${n}>data</code> attribute you can read more `),s(i(l,{to:"https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes"},{default:r((d,a,h,o)=>{if(a)a("here");else return[t("here")]}),_:1},c,n)),s(" about using it.</p>"),s(i(p,{title:"Advanced",file:"Advanced","no-edit":""},null,c,n)),s(`<p${n}>In the example below, we show multiple cards, but only the visible ones get rendered. The secret is in the wrapper which has <code class="doc-token"${n}>v-intersection</code> attached to it and a fixed height and width (which acts as a necessary filler when the inner content is not rendered – so that scrolling won’t erratically jump).</p><blockquote class="doc-note"${n}><p${n}>The example below can also be written by using `),s(i(l,{to:"/vue-components/intersection"},{default:r((d,a,h,o)=>{if(a)a("QIntersection");else return[t("QIntersection")]}),_:1},c,n)),s(" component which makes everything even easier.</p></blockquote>"),s(i(p,{title:"Scrolling Cards",file:"ScrollingCards",scrollable:"","no-edit":""},null,c,n)),s(`<div class="doc-note doc-note--tip"${n}><p class="doc-note__title"${n}>TIP</p><p${n}>In the example above we used a Quasar transition. For a full list, please head to `),s(i(l,{to:"/options/transitions"},{default:r((d,a,h,o)=>{if(a)a("Transitions");else return[t("Transitions")]}),_:1},c,n)),s(" page.</p></div>");else return[e("p",null,"“Intersection” is a Quasar directive that enables a method to be called when the user scrolls and the DOM element (or component) that it is applied to comes into or out of the viewport."),e("p",null,[t("Under the hood, it uses the "),e(l,{to:"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API"},{default:r(()=>[t("Intersection Observer API")]),_:1}),t(".")]),e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,[t("Not all browsers support the Intersection Observer API. Most "),e(l,{to:"https://caniuse.com/#search=intersection"},{default:r(()=>[t("modern browsers")]),_:1}),t(" do, but other browsers do not. If you need to support older browsers, you can install and import (into a boot file) the official W3C "),e(l,{to:"https://github.com/w3c/IntersectionObserver"},{default:r(()=>[t("polyfill")]),_:1}),t(".")])]),e(y,{file:"Intersection"}),e("h2",{id:"usage",class:"doc-heading doc-h2",onClick:d=>u(m)("usage")},"Usage",8,["onClick"]),e("p",null,[t("Reading the "),e(l,{to:"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API"},{default:r(()=>[t("Intersection Observer API")]),_:1}),t(" first will be best in your understanding of how this directive works.")]),e("p",null,"Intersection directive takes either a handler function as an argument or an Object. The Object form looks like this:"),e(u(w),null,{default:r(()=>[e("pre",{class:"doc-code"},[e("code",null,[e("span",{class:"token punctuation"},"{"),t(`
  `),e("span",{class:"token literal-property property"},"handler"),e("span",{class:"token operator"},":"),t(),e("span",{class:"token comment"},"/* Function */"),e("span",{class:"token punctuation"},","),t(`
  `),e("span",{class:"token literal-property property"},"cfg"),e("span",{class:"token operator"},":"),t(),e("span",{class:"token punctuation"},"{"),t(`
    `),e("span",{class:"token comment"},'// any options from "Intersection observer options"'),t(`
    `),e("span",{class:"token comment"},"// on https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API"),t(`
    `),e("span",{class:"token literal-property property"},"root"),e("span",{class:"token operator"},":"),t(),e("span",{class:"token keyword"},"null"),e("span",{class:"token punctuation"},","),t(),e("span",{class:"token comment"},"// DOM Element"),t(`
    `),e("span",{class:"token literal-property property"},"rootMargin"),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},"'0px'"),e("span",{class:"token punctuation"},","),t(`
    `),e("span",{class:"token literal-property property"},"threshold"),e("span",{class:"token operator"},":"),t(),e("span",{class:"token number"},"0"),t(`
  `),e("span",{class:"token punctuation"},"}"),t(`
`),e("span",{class:"token punctuation"},"}")])]),e(k)]),_:1}),e("p",null,[t("When using the Object form, only the "),e("code",{class:"doc-token"},"handler"),t(" key is mandatory.")]),e("p",null,[t("The handler Function takes one parameter, which is an "),e(l,{to:"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry"},{default:r(()=>[t("IntersectionObserverEntry")]),_:1}),t(".")]),e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"TIP"),e("p",null,"Scroll within the examples below until the observed element is in view. Then scroll it out of view.")]),e("h3",{id:"basic",class:"doc-heading doc-h3",onClick:d=>u(m)("basic")},"Basic",8,["onClick"]),e(p,{title:"Basic",file:"Basic","no-edit":""}),e("h3",{id:"trigger-once",class:"doc-heading doc-h3",onClick:d=>u(m)("trigger-once")},"Trigger once",8,["onClick"]),e("p",null,[t("The directive can be used with the "),e("code",{class:"doc-token"},"once"),t(" modifier (ex: "),e("code",{class:"doc-token"},"v-intersection.once"),t("). Once the observed element comes into view, the handler Function will be called and the observing will stop. This allows you to control the processing overhead if all you need is to be notified when the observed element starts to be visible on screen.")]),e(p,{title:"Once",file:"Once","no-edit":""}),e("h3",{id:"using-an-object",class:"doc-heading doc-h3",onClick:d=>u(m)("using-an-object")},"Using an Object",8,["onClick"]),e("p",null,"By passing in an Object as the directive’s value (instead of a Function), you can control all the options (like threshold) of the Intersection Observer."),e(p,{title:"Supplying configuration Object",file:"ObjectForm","no-edit":""}),e("h3",{id:"advanced",class:"doc-heading doc-h3",onClick:d=>u(m)("advanced")},"Advanced",8,["onClick"]),e("p",null,[t("Below is a more advanced example of what you can do. The code takes advantage of the HTML "),e("code",{class:"doc-token"},"data"),t(" attribute. Basically, by setting "),e("code",{class:"doc-token"},"data-id"),t(" with the index of the element in a loop, this can be retrieved via the passed in "),e("code",{class:"doc-token"},"entry"),t(" to the handler as "),e("code",{class:"doc-token"},"entry.target.dataset.id"),t(". If you are unfamiliar with the "),e("code",{class:"doc-token"},"data"),t(" attribute you can read more "),e(l,{to:"https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes"},{default:r(()=>[t("here")]),_:1}),t(" about using it.")]),e(p,{title:"Advanced",file:"Advanced","no-edit":""}),e("p",null,[t("In the example below, we show multiple cards, but only the visible ones get rendered. The secret is in the wrapper which has "),e("code",{class:"doc-token"},"v-intersection"),t(" attached to it and a fixed height and width (which acts as a necessary filler when the inner content is not rendered – so that scrolling won’t erratically jump).")]),e("blockquote",{class:"doc-note"},[e("p",null,[t("The example below can also be written by using "),e(l,{to:"/vue-components/intersection"},{default:r(()=>[t("QIntersection")]),_:1}),t(" component which makes everything even easier.")])]),e(p,{title:"Scrolling Cards",file:"ScrollingCards",scrollable:"","no-edit":""}),e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"TIP"),e("p",null,[t("In the example above we used a Quasar transition. For a full list, please head to "),e(l,{to:"/options/transitions"},{default:r(()=>[t("Transitions")]),_:1}),t(" page.")])])]}),_:1},A))}}},$=f.setup;f.setup=(g,v)=>{const b=S();return(b.modules||(b.modules=new Set)).add("src/pages/vue-directives/intersection.md"),$?$(g,v):void 0};const ee=j(f,[["__file","intersection.md"]]);export{ee as default};
