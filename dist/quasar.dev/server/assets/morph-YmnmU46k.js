import{provide as D,mergeProps as $,withCtx as l,createTextVNode as o,createVNode as t,unref as x,useSSRContext as C}from"vue";import{ssrRenderComponent as r}from"vue/server-renderer";import{c as R}from"./page-utils-C-QWsEHe.js";import{D as T,a as h}from"./DocPage-DKr-0pQn.js";import{D as m}from"./DocExample-BcaABDtE.js";import{D as f}from"./DocApi-Df9ryd6x.js";import{_ as U}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const p={__name:"morph",__ssrInlineRender:!0,setup(d){D("_q_ex",{name:"Morph"});const u=[{name:"Morph Utils",category:"Genis Utils",path:"/quasar-utils/morph-utils"}],s=[{id:"morph-api",title:"2. Morph API",deep:!0},{id:"usage",title:"3. Usage"}];return(k,v,M,w)=>{v(r(T,$({title:"Morph Directive",desc:"Vue directive that morphs between DOM elements or even between the two states of the same DOM element.",heading:"","edit-link":"vue-directives/morph",toc:s,related:u},w),{default:l((q,i,a,e)=>{if(i)i(`<p${e}>“Morph” is a Quasar directive that provides the ability to morph DOM elements between two states.</p><p${e}>Under the hood, it uses the Quasar `),i(r(h,{to:"/quasar-utils/morph-utils"},{default:l((c,n,b,y)=>{if(n)n("Morph function util");else return[o("Morph function util")]}),_:1},a,e)),i(".</p>"),i(r(f,{file:"Morph"},null,a,e)),i(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><p${e}>Reading the `),i(r(h,{to:"/quasar-utils/morph-utils"},{default:l((c,n,b,y)=>{if(n)n("Morph function util");else return[o("Morph function util")]}),_:1},a,e)),i(` first will be best in your understanding of how this directive works.</p><p${e}>This directive morphs one element in a group into another. The morphing is activated by changing the value (model) of the directive to match the name of the morphing element.</p><div class="doc-note doc-note--warning"${e}><p class="doc-note__title"${e}>WARNING</p><ul${e}><li${e}>The “name” and “group” (as directive arg or through the value of the directive) are mandatory.</li><li${e}>If the value of the directive is in Object form, then “model” is also mandatory.</li></ul></div>`),i(r(m,{title:"Morph between multiple elements in a group",file:"BasicGroup"},null,a,e)),i(r(m,{title:"Morph a button into a card",file:"Card"},null,a,e));else return[t("p",null,"“Morph” is a Quasar directive that provides the ability to morph DOM elements between two states."),t("p",null,[o("Under the hood, it uses the Quasar "),t(h,{to:"/quasar-utils/morph-utils"},{default:l(()=>[o("Morph function util")]),_:1}),o(".")]),t(f,{file:"Morph"}),t("h2",{id:"usage",class:"doc-heading doc-h2",onClick:c=>x(R)("usage")},"Usage",8,["onClick"]),t("p",null,[o("Reading the "),t(h,{to:"/quasar-utils/morph-utils"},{default:l(()=>[o("Morph function util")]),_:1}),o(" first will be best in your understanding of how this directive works.")]),t("p",null,"This directive morphs one element in a group into another. The morphing is activated by changing the value (model) of the directive to match the name of the morphing element."),t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"WARNING"),t("ul",null,[t("li",null,"The “name” and “group” (as directive arg or through the value of the directive) are mandatory."),t("li",null,"If the value of the directive is in Object form, then “model” is also mandatory.")])]),t(m,{title:"Morph between multiple elements in a group",file:"BasicGroup"}),t(m,{title:"Morph a button into a card",file:"Card"})]}),_:1},M))}}},g=p.setup;p.setup=(d,u)=>{const s=C();return(s.modules||(s.modules=new Set)).add("src/pages/vue-directives/morph.md"),g?g(d,u):void 0};const Y=U(p,[["__file","morph.md"]]);export{Y as default};
