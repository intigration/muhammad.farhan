import{mergeProps as x,withCtx as i,unref as l,createVNode as a,createTextVNode as e,useSSRContext as D}from"vue";import{ssrRenderComponent as c,ssrRenderStyle as h}from"vue/server-renderer";import{c as $}from"./page-utils-C-QWsEHe.js";import{D as G}from"./DocPage-DKr-0pQn.js";import{D as p}from"./DocPrerender-DPOnWPFO.js";import{C as s}from"./CopyButton-l3ndfN49.js";import{_ as C}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const b={__name:"build-commands",__ssrInlineRender:!0,setup(v){const g=[{id:"developing",title:"2. Developing"},{id:"building-for-production",title:"3. Building for Production"}];return(k,y,w,q)=>{y(c(G,x({title:"Capacitor Build Commands",desc:"(@quasar/app-vite) The Quasar CLI list of commands when developing or building a hybrid mobile app with Capacitor.",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/developing-capacitor-apps/build-commands",toc:g},q),{default:i((T,r,m,t)=>{if(r)r(`<h2 id="developing" class="doc-heading doc-h2"${t}>Developing</h2>`),r(c(l(p),null,{default:i((u,o,d,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}>$ quasar dev <span class="token parameter variable"${n}>-m</span> capacitor <span class="token parameter variable"${n}>-T</span> <span class="token punctuation"${n}>[</span>ios<span class="token operator"${n}>|</span>android<span class="token punctuation"${n}>]</span>

<span class="token comment"${n}># ..or the longer form:</span>
$ quasar dev <span class="token parameter variable"${n}>--mode</span> capacitor <span class="token parameter variable"${n}>--target</span> <span class="token punctuation"${n}>[</span>ios<span class="token operator"${n}>|</span>android<span class="token punctuation"${n}>]</span></code></pre>`),o(c(s,{lang:"bash"},null,d,n));else return[a("pre",{class:"doc-code"},[a("code",null,[e("$ quasar dev "),a("span",{class:"token parameter variable"},"-m"),e(" capacitor "),a("span",{class:"token parameter variable"},"-T"),e(),a("span",{class:"token punctuation"},"["),e("ios"),a("span",{class:"token operator"},"|"),e("android"),a("span",{class:"token punctuation"},"]"),e(`

`),a("span",{class:"token comment"},"# ..or the longer form:"),e(`
$ quasar dev `),a("span",{class:"token parameter variable"},"--mode"),e(" capacitor "),a("span",{class:"token parameter variable"},"--target"),e(),a("span",{class:"token punctuation"},"["),e("ios"),a("span",{class:"token operator"},"|"),e("android"),a("span",{class:"token punctuation"},"]")])]),a(s,{lang:"bash"})]}),_:1},m,t)),r(`<p${t}>It will open the IDE (Android Studio / Xcode) and from there you can manually select the emulator (or multiple ones simultaneously!) and install the dev app on it/them. You can also run the dev app on a real mobile/tablet device.</p><div class="doc-note doc-note--warning"${t}><p class="doc-note__title"${t}>WARNING</p><p${t}>In Android Studio, you will be greeted with a message recommending to upgrade the Gradle version. <strong${t}>DO NOT UPGRADE GRADLE</strong> as it will break the Capacitor project. Same goes for any other requested upgrades.</p><img src="https://cdn.quasar.dev/img/gradle-upgrade-notice.png" alt="Gradle upgrade" class="q-my-md rounded-borders" style="${h({"max-width":"350px"})}"${t}><p${t}>If you encounter any IDE errors then click on File &gt; Invalidate caches and restart.</p><img src="https://cdn.quasar.dev/img/gradle-invalidate-cache.png" alt="Gradle upgrade" class="q-mt-md rounded-borders" style="${h({"max-width":"350px"})}"${t}></div><p${t}>In order for you to be able to develop on a device emulator or directly on a phone (with Hot Module Reload included), Quasar CLI follows these steps:</p><ol${t}><li${t}>Detects your machine’s external IP address. If there are multiple such IPs detected, then it asks you to choose one. If you’ll be using a mobile phone to develop then choose the IP address of your machine that’s pingable from the phone/tablet.</li><li${t}>It starts up a development server on your machine.</li><li${t}>It tells Capacitor to use the IP previously detected. This allows the app to connect to the development server.</li><li${t}>It uses the Capacitor CLI to update all of your plugins.</li><li${t}>Finally, it opens your native IDE. Run your app here, and it will automatically connect to the dev server.</li></ol><div class="doc-note doc-note--danger"${t}><p class="doc-note__title"${t}>WARNING</p><p${t}>If developing on a mobile phone/tablet, it is very important that the external IP address of your build machine is accessible from the phone/tablet, otherwise you’ll get a development app with white screen only. Also check your machine’s firewall to allow connections to the development chosen port.</p></div><h2 id="building-for-production" class="doc-heading doc-h2"${t}>Building for Production</h2>`),r(c(l(p),null,{default:i((u,o,d,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}>$ quasar build <span class="token parameter variable"${n}>-m</span> capacitor <span class="token parameter variable"${n}>-T</span> <span class="token punctuation"${n}>[</span>ios<span class="token operator"${n}>|</span>android<span class="token punctuation"${n}>]</span>

<span class="token comment"${n}># ..or the longer form:</span>
$ quasar build <span class="token parameter variable"${n}>--mode</span> capacitor <span class="token parameter variable"${n}>--target</span> <span class="token punctuation"${n}>[</span>ios<span class="token operator"${n}>|</span>android<span class="token punctuation"${n}>]</span></code></pre>`),o(c(s,{lang:"bash"},null,d,n));else return[a("pre",{class:"doc-code"},[a("code",null,[e("$ quasar build "),a("span",{class:"token parameter variable"},"-m"),e(" capacitor "),a("span",{class:"token parameter variable"},"-T"),e(),a("span",{class:"token punctuation"},"["),e("ios"),a("span",{class:"token operator"},"|"),e("android"),a("span",{class:"token punctuation"},"]"),e(`

`),a("span",{class:"token comment"},"# ..or the longer form:"),e(`
$ quasar build `),a("span",{class:"token parameter variable"},"--mode"),e(" capacitor "),a("span",{class:"token parameter variable"},"--target"),e(),a("span",{class:"token punctuation"},"["),e("ios"),a("span",{class:"token operator"},"|"),e("android"),a("span",{class:"token punctuation"},"]")])]),a(s,{lang:"bash"})]}),_:1},m,t)),r(`<ul${t}><li${t}><p${t}>These commands parse and build your <code class="doc-token"${t}>/src</code> folder then overwrite <code class="doc-token"${t}>/src-capacitor/www</code> then use the Gradle/xcodebuild to generate the final assets that go into a phone/tablet.</p></li><li${t}><p${t}>Built packages will be located in <code class="doc-token"${t}>/dist/capacitor</code> unless configured otherwise.</p></li><li${t}><p${t}>If you wish to skip the Gradle/xcodebuild step and only fill <code class="doc-token"${t}>/src-capacitor/www</code> folder:</p></li></ul>`),r(c(l(p),null,{default:i((u,o,d,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}>$ quasar build <span class="token parameter variable"${n}>-m</span> capacitor <span class="token parameter variable"${n}>-T</span> <span class="token punctuation"${n}>[</span>ios<span class="token operator"${n}>|</span>android<span class="token punctuation"${n}>]</span> --skip-pkg</code></pre>`),o(c(s,{lang:"bash"},null,d,n));else return[a("pre",{class:"doc-code"},[a("code",null,[e("$ quasar build "),a("span",{class:"token parameter variable"},"-m"),e(" capacitor "),a("span",{class:"token parameter variable"},"-T"),e(),a("span",{class:"token punctuation"},"["),e("ios"),a("span",{class:"token operator"},"|"),e("android"),a("span",{class:"token punctuation"},"]"),e(" --skip-pkg")])]),a(s,{lang:"bash"})]}),_:1},m,t)),r(`<ul${t}><li${t}>Should you wish to manually build the final assets using the IDE (Android Studio / Xcode) instead of doing a terminal build, then:</li></ul>`),r(c(l(p),null,{default:i((u,o,d,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}>$ quasar build <span class="token parameter variable"${n}>-m</span> capacitor <span class="token parameter variable"${n}>-T</span> <span class="token punctuation"${n}>[</span>ios<span class="token operator"${n}>|</span>android<span class="token punctuation"${n}>]</span> <span class="token parameter variable"${n}>--ide</span></code></pre>`),o(c(s,{lang:"bash"},null,d,n));else return[a("pre",{class:"doc-code"},[a("code",null,[e("$ quasar build "),a("span",{class:"token parameter variable"},"-m"),e(" capacitor "),a("span",{class:"token parameter variable"},"-T"),e(),a("span",{class:"token punctuation"},"["),e("ios"),a("span",{class:"token operator"},"|"),e("android"),a("span",{class:"token punctuation"},"]"),e(),a("span",{class:"token parameter variable"},"--ide")])]),a(s,{lang:"bash"})]}),_:1},m,t)),r(`<div class="doc-note doc-note--warning"${t}><p class="doc-note__title"${t}>WARNING</p><p${t}>In Android Studio, you will be greeted with a message recommending to upgrade the Gradle version. <strong${t}>DO NOT UPGRADE GRADLE</strong> as it will break the Capacitor project. Same goes for any other requested upgrades.</p><img src="https://cdn.quasar.dev/img/gradle-upgrade-notice.png" alt="Gradle upgrade" class="q-my-md rounded-borders" style="${h({"max-width":"350px"})}"${t}><p${t}>If you encounter any IDE errors then click on File &gt; Invalidate caches and restart.</p><img src="https://cdn.quasar.dev/img/gradle-invalidate-cache.png" alt="Gradle upgrade" class="q-mt-md rounded-borders" style="${h({"max-width":"350px"})}"${t}></div><p${t}>If you want a production build with debugging enabled for the UI code:</p>`),r(c(l(p),null,{default:i((u,o,d,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}>$ quasar build <span class="token parameter variable"${n}>-m</span> capacitor <span class="token parameter variable"${n}>-T</span> <span class="token punctuation"${n}>[</span>ios<span class="token operator"${n}>|</span>android<span class="token punctuation"${n}>]</span> <span class="token parameter variable"${n}>-d</span>

<span class="token comment"${n}># ..or the longer form</span>
$ quasar build <span class="token parameter variable"${n}>-m</span> capacitor <span class="token parameter variable"${n}>-T</span> <span class="token punctuation"${n}>[</span>ios<span class="token operator"${n}>|</span>android<span class="token punctuation"${n}>]</span> <span class="token parameter variable"${n}>--debug</span></code></pre>`),o(c(s,{lang:"bash"},null,d,n));else return[a("pre",{class:"doc-code"},[a("code",null,[e("$ quasar build "),a("span",{class:"token parameter variable"},"-m"),e(" capacitor "),a("span",{class:"token parameter variable"},"-T"),e(),a("span",{class:"token punctuation"},"["),e("ios"),a("span",{class:"token operator"},"|"),e("android"),a("span",{class:"token punctuation"},"]"),e(),a("span",{class:"token parameter variable"},"-d"),e(`

`),a("span",{class:"token comment"},"# ..or the longer form"),e(`
$ quasar build `),a("span",{class:"token parameter variable"},"-m"),e(" capacitor "),a("span",{class:"token parameter variable"},"-T"),e(),a("span",{class:"token punctuation"},"["),e("ios"),a("span",{class:"token operator"},"|"),e("android"),a("span",{class:"token punctuation"},"]"),e(),a("span",{class:"token parameter variable"},"--debug")])]),a(s,{lang:"bash"})]}),_:1},m,t));else return[a("h2",{id:"developing",class:"doc-heading doc-h2",onClick:u=>l($)("developing")},"Developing",8,["onClick"]),a(l(p),null,{default:i(()=>[a("pre",{class:"doc-code"},[a("code",null,[e("$ quasar dev "),a("span",{class:"token parameter variable"},"-m"),e(" capacitor "),a("span",{class:"token parameter variable"},"-T"),e(),a("span",{class:"token punctuation"},"["),e("ios"),a("span",{class:"token operator"},"|"),e("android"),a("span",{class:"token punctuation"},"]"),e(`

`),a("span",{class:"token comment"},"# ..or the longer form:"),e(`
$ quasar dev `),a("span",{class:"token parameter variable"},"--mode"),e(" capacitor "),a("span",{class:"token parameter variable"},"--target"),e(),a("span",{class:"token punctuation"},"["),e("ios"),a("span",{class:"token operator"},"|"),e("android"),a("span",{class:"token punctuation"},"]")])]),a(s,{lang:"bash"})]),_:1}),a("p",null,"It will open the IDE (Android Studio / Xcode) and from there you can manually select the emulator (or multiple ones simultaneously!) and install the dev app on it/them. You can also run the dev app on a real mobile/tablet device."),a("div",{class:"doc-note doc-note--warning"},[a("p",{class:"doc-note__title"},"WARNING"),a("p",null,[e("In Android Studio, you will be greeted with a message recommending to upgrade the Gradle version. "),a("strong",null,"DO NOT UPGRADE GRADLE"),e(" as it will break the Capacitor project. Same goes for any other requested upgrades.")]),a("img",{src:"https://cdn.quasar.dev/img/gradle-upgrade-notice.png",alt:"Gradle upgrade",class:"q-my-md rounded-borders",style:{"max-width":"350px"}}),a("p",null,"If you encounter any IDE errors then click on File > Invalidate caches and restart."),a("img",{src:"https://cdn.quasar.dev/img/gradle-invalidate-cache.png",alt:"Gradle upgrade",class:"q-mt-md rounded-borders",style:{"max-width":"350px"}})]),a("p",null,"In order for you to be able to develop on a device emulator or directly on a phone (with Hot Module Reload included), Quasar CLI follows these steps:"),a("ol",null,[a("li",null,"Detects your machine’s external IP address. If there are multiple such IPs detected, then it asks you to choose one. If you’ll be using a mobile phone to develop then choose the IP address of your machine that’s pingable from the phone/tablet."),a("li",null,"It starts up a development server on your machine."),a("li",null,"It tells Capacitor to use the IP previously detected. This allows the app to connect to the development server."),a("li",null,"It uses the Capacitor CLI to update all of your plugins."),a("li",null,"Finally, it opens your native IDE. Run your app here, and it will automatically connect to the dev server.")]),a("div",{class:"doc-note doc-note--danger"},[a("p",{class:"doc-note__title"},"WARNING"),a("p",null,"If developing on a mobile phone/tablet, it is very important that the external IP address of your build machine is accessible from the phone/tablet, otherwise you’ll get a development app with white screen only. Also check your machine’s firewall to allow connections to the development chosen port.")]),a("h2",{id:"building-for-production",class:"doc-heading doc-h2",onClick:u=>l($)("building-for-production")},"Building for Production",8,["onClick"]),a(l(p),null,{default:i(()=>[a("pre",{class:"doc-code"},[a("code",null,[e("$ quasar build "),a("span",{class:"token parameter variable"},"-m"),e(" capacitor "),a("span",{class:"token parameter variable"},"-T"),e(),a("span",{class:"token punctuation"},"["),e("ios"),a("span",{class:"token operator"},"|"),e("android"),a("span",{class:"token punctuation"},"]"),e(`

`),a("span",{class:"token comment"},"# ..or the longer form:"),e(`
$ quasar build `),a("span",{class:"token parameter variable"},"--mode"),e(" capacitor "),a("span",{class:"token parameter variable"},"--target"),e(),a("span",{class:"token punctuation"},"["),e("ios"),a("span",{class:"token operator"},"|"),e("android"),a("span",{class:"token punctuation"},"]")])]),a(s,{lang:"bash"})]),_:1}),a("ul",null,[a("li",null,[a("p",null,[e("These commands parse and build your "),a("code",{class:"doc-token"},"/src"),e(" folder then overwrite "),a("code",{class:"doc-token"},"/src-capacitor/www"),e(" then use the Gradle/xcodebuild to generate the final assets that go into a phone/tablet.")])]),a("li",null,[a("p",null,[e("Built packages will be located in "),a("code",{class:"doc-token"},"/dist/capacitor"),e(" unless configured otherwise.")])]),a("li",null,[a("p",null,[e("If you wish to skip the Gradle/xcodebuild step and only fill "),a("code",{class:"doc-token"},"/src-capacitor/www"),e(" folder:")])])]),a(l(p),null,{default:i(()=>[a("pre",{class:"doc-code"},[a("code",null,[e("$ quasar build "),a("span",{class:"token parameter variable"},"-m"),e(" capacitor "),a("span",{class:"token parameter variable"},"-T"),e(),a("span",{class:"token punctuation"},"["),e("ios"),a("span",{class:"token operator"},"|"),e("android"),a("span",{class:"token punctuation"},"]"),e(" --skip-pkg")])]),a(s,{lang:"bash"})]),_:1}),a("ul",null,[a("li",null,"Should you wish to manually build the final assets using the IDE (Android Studio / Xcode) instead of doing a terminal build, then:")]),a(l(p),null,{default:i(()=>[a("pre",{class:"doc-code"},[a("code",null,[e("$ quasar build "),a("span",{class:"token parameter variable"},"-m"),e(" capacitor "),a("span",{class:"token parameter variable"},"-T"),e(),a("span",{class:"token punctuation"},"["),e("ios"),a("span",{class:"token operator"},"|"),e("android"),a("span",{class:"token punctuation"},"]"),e(),a("span",{class:"token parameter variable"},"--ide")])]),a(s,{lang:"bash"})]),_:1}),a("div",{class:"doc-note doc-note--warning"},[a("p",{class:"doc-note__title"},"WARNING"),a("p",null,[e("In Android Studio, you will be greeted with a message recommending to upgrade the Gradle version. "),a("strong",null,"DO NOT UPGRADE GRADLE"),e(" as it will break the Capacitor project. Same goes for any other requested upgrades.")]),a("img",{src:"https://cdn.quasar.dev/img/gradle-upgrade-notice.png",alt:"Gradle upgrade",class:"q-my-md rounded-borders",style:{"max-width":"350px"}}),a("p",null,"If you encounter any IDE errors then click on File > Invalidate caches and restart."),a("img",{src:"https://cdn.quasar.dev/img/gradle-invalidate-cache.png",alt:"Gradle upgrade",class:"q-mt-md rounded-borders",style:{"max-width":"350px"}})]),a("p",null,"If you want a production build with debugging enabled for the UI code:"),a(l(p),null,{default:i(()=>[a("pre",{class:"doc-code"},[a("code",null,[e("$ quasar build "),a("span",{class:"token parameter variable"},"-m"),e(" capacitor "),a("span",{class:"token parameter variable"},"-T"),e(),a("span",{class:"token punctuation"},"["),e("ios"),a("span",{class:"token operator"},"|"),e("android"),a("span",{class:"token punctuation"},"]"),e(),a("span",{class:"token parameter variable"},"-d"),e(`

`),a("span",{class:"token comment"},"# ..or the longer form"),e(`
$ quasar build `),a("span",{class:"token parameter variable"},"-m"),e(" capacitor "),a("span",{class:"token parameter variable"},"-T"),e(),a("span",{class:"token punctuation"},"["),e("ios"),a("span",{class:"token operator"},"|"),e("android"),a("span",{class:"token punctuation"},"]"),e(),a("span",{class:"token parameter variable"},"--debug")])]),a(s,{lang:"bash"})]),_:1})]}),_:1},w))}}},f=b.setup;b.setup=(v,g)=>{const k=D();return(k.modules||(k.modules=new Set)).add("src/pages/quasar-cli-vite/developing-capacitor-apps/build-commands.md"),f?f(v,g):void 0};const X=C(b,[["__file","build-commands.md"]]);export{X as default};
