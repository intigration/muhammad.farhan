import{mergeProps as q,withCtx as c,createTextVNode as s,unref as p,createVNode as n,useSSRContext as v}from"vue";import{ssrRenderComponent as i}from"vue/server-renderer";import{c as g}from"./page-utils-C-QWsEHe.js";import{D as x,a as $}from"./DocPage-DKr-0pQn.js";import{D as u}from"./DocPrerender-DPOnWPFO.js";import{C as e}from"./CopyButton-l3ndfN49.js";import{_ as D}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const d={__name:"scrolling-utils",__ssrInlineRender:!0,setup(w){const f=[{id:"determine-scrolling-container",title:"2. Determine scrolling container"},{id:"get-set-scroll-position",title:"3. Get/set scroll position"},{id:"scrolling-to-an-element",title:"3.1. Scrolling to an element",sub:!0},{id:"determine-scroll-size",title:"4. Determine scroll size"},{id:"determining-scrollbar-width",title:"5. Determining scrollbar width"}];return(h,S,b,T)=>{S(i(x,q({title:"Scrolling Utils",desc:"A set of Quasar methods related to scrolling, like getting scroll target or changing the scroll position of a page.",heading:"","edit-link":"quasar-utils/scrolling-utils",toc:f},T),{default:c((P,l,m,o)=>{if(l)l(`<div class="doc-note doc-note--tip"${o}><p class="doc-note__title"${o}>TIP</p><p${o}>For usage with the UMD build see `),l(i($,{to:"/start/umd#quasar-global-object"},{default:c((k,a,r,t)=>{if(a)a("here");else return[s("here")]}),_:1},m,o)),l(`.</p></div><h2 id="determine-scrolling-container" class="doc-heading doc-h2"${o}>Determine scrolling container</h2><p${o}>Might be worthwhile to read how this is done `),l(i($,{to:"/vue-components/scroll-observer#determining-scrolling-container"},{default:c((k,a,r,t)=>{if(a)a("here");else return[s("here")]}),_:1},m,o)),l(".</p>"),l(i(p(u),null,{default:c((k,a,r,t)=>{if(a)a(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> scroll <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar&#39;</span>
<span class="token keyword"${t}>const</span> <span class="token punctuation"${t}>{</span> getScrollTarget <span class="token punctuation"${t}>}</span> <span class="token operator"${t}>=</span> scroll

<span class="token comment"${t}>// Get parent DomNode that handles page scrolling</span>
<span class="token comment"${t}>// Usually this is element with classname &quot;.layout-view&quot; or &quot;window&quot;</span>
<span class="token function"${t}>getScrollTarget</span><span class="token punctuation"${t}>(</span>DomElement<span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// returns a DOM Element (or window Object)</span></code></pre>`),a(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" scroll "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" getScrollTarget "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` scroll

`),n("span",{class:"token comment"},"// Get parent DomNode that handles page scrolling"),s(`
`),n("span",{class:"token comment"},'// Usually this is element with classname ".layout-view" or "window"'),s(`
`),n("span",{class:"token function"},"getScrollTarget"),n("span",{class:"token punctuation"},"("),s("DomElement"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// returns a DOM Element (or window Object)")])]),n(e)]}),_:1},m,o)),l(`<p${o}>This method searches for a parent DOM element which has one of the <code class="doc-token"${o}>scroll</code> or <code class="doc-token"${o}>overflow-auto</code> Quasar CSS Helper class attached to it. If none is found, then it considers that the scrolling takes place on the document itself.</p><p${o}>Please note that simply attaching <code class="doc-token"${o}>scroll</code> CSS class to a DOM element or on a Vue component will have no effect if the respective element is not overflowed (example: a height smaller than its inner content height).</p><p${o}>Example of good container:</p>`),l(i(p(u),null,{default:c((k,a,r,t)=>{if(a)a(`<pre class="doc-code"${t}><code${t}><span class="token tag"${t}><span class="token tag"${t}><span class="token punctuation"${t}>&lt;</span>div</span> <span class="token attr-name"${t}>class</span><span class="token attr-value"${t}><span class="token punctuation attr-equals"${t}>=</span><span class="token punctuation"${t}>&quot;</span>scroll<span class="token punctuation"${t}>&quot;</span></span> <span class="token special-attr"${t}><span class="token attr-name"${t}>style</span><span class="token attr-value"${t}><span class="token punctuation attr-equals"${t}>=</span><span class="token punctuation"${t}>&quot;</span><span class="token value css language-css"${t}><span class="token property"${t}>height</span><span class="token punctuation"${t}>:</span> 100px</span><span class="token punctuation"${t}>&quot;</span></span></span><span class="token punctuation"${t}>&gt;</span></span>
  ...content expanding over the 100px height from container...
<span class="token tag"${t}><span class="token tag"${t}><span class="token punctuation"${t}>&lt;/</span>div</span><span class="token punctuation"${t}>&gt;</span></span></code></pre>`),a(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),s(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("scroll"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token special-attr"},[n("span",{class:"token attr-name"},"style"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),n("span",{class:"token value css language-css"},[n("span",{class:"token property"},"height"),n("span",{class:"token punctuation"},":"),s(" 100px")]),n("span",{class:"token punctuation"},'"')])]),n("span",{class:"token punctuation"},">")]),s(`
  ...content expanding over the 100px height from container...
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")])])]),n(e)]}),_:1},m,o)),l(`<h2 id="get-set-scroll-position" class="doc-heading doc-h2"${o}>Get/set scroll position</h2><p${o}>Vertically:</p>`),l(i(p(u),null,{default:c((k,a,r,t)=>{if(a)a(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> scroll <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar&#39;</span>
<span class="token keyword"${t}>const</span> <span class="token punctuation"${t}>{</span> getVerticalScrollPosition<span class="token punctuation"${t}>,</span> setVerticalScrollPosition <span class="token punctuation"${t}>}</span> <span class="token operator"${t}>=</span> scroll

<span class="token comment"${t}>// Get scroll position of an element or page.</span>
<span class="token comment"${t}>// Use it in conjunction with \`getScrollTarget()\`</span>
<span class="token function"${t}>getVerticalScrollPosition</span><span class="token punctuation"${t}>(</span>scrollTargetDomElement<span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// returns a Number (pixels)</span>

<span class="token comment"${t}>// Setting scroll position of an element or page:</span>
<span class="token function"${t}>setVerticalScrollPosition</span> <span class="token punctuation"${t}>(</span>scrollTargetElement<span class="token punctuation"${t}>,</span> offset<span class="token punctuation"${t}>[</span><span class="token punctuation"${t}>,</span> duration<span class="token punctuation"${t}>]</span><span class="token punctuation"${t}>)</span>
<span class="token comment"${t}>// if &quot;duration&quot; is specified then it will animate the scrolling</span></code></pre>`),a(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" scroll "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" getVerticalScrollPosition"),n("span",{class:"token punctuation"},","),s(" setVerticalScrollPosition "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` scroll

`),n("span",{class:"token comment"},"// Get scroll position of an element or page."),s(`
`),n("span",{class:"token comment"},"// Use it in conjunction with `getScrollTarget()`"),s(`
`),n("span",{class:"token function"},"getVerticalScrollPosition"),n("span",{class:"token punctuation"},"("),s("scrollTargetDomElement"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// returns a Number (pixels)"),s(`

`),n("span",{class:"token comment"},"// Setting scroll position of an element or page:"),s(`
`),n("span",{class:"token function"},"setVerticalScrollPosition"),s(),n("span",{class:"token punctuation"},"("),s("scrollTargetElement"),n("span",{class:"token punctuation"},","),s(" offset"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},","),s(" duration"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},'// if "duration" is specified then it will animate the scrolling')])]),n(e)]}),_:1},m,o)),l(`<p${o}>Horizontally:</p>`),l(i(p(u),null,{default:c((k,a,r,t)=>{if(a)a(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> scroll <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar&#39;</span>
<span class="token keyword"${t}>const</span> <span class="token punctuation"${t}>{</span> getHorizontalScrollPosition<span class="token punctuation"${t}>,</span> setHorizontalScrollPosition <span class="token punctuation"${t}>}</span> <span class="token operator"${t}>=</span> scroll

<span class="token comment"${t}>// Get scroll position of an element or page.</span>
<span class="token comment"${t}>// Use it in conjunction with \`getScrollTarget()\`</span>
<span class="token function"${t}>getHorizontalScrollPosition</span><span class="token punctuation"${t}>(</span>scrollTargetDomElement<span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// returns a Number (pixels)</span>

<span class="token comment"${t}>// Setting scroll position of an element or page:</span>
<span class="token function"${t}>setHorizontalScrollPosition</span> <span class="token punctuation"${t}>(</span>scrollTargetElement<span class="token punctuation"${t}>,</span> offset<span class="token punctuation"${t}>[</span><span class="token punctuation"${t}>,</span> duration<span class="token punctuation"${t}>]</span><span class="token punctuation"${t}>)</span>
<span class="token comment"${t}>// if &quot;duration&quot; is specified then it will animate the scrolling</span></code></pre>`),a(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" scroll "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" getHorizontalScrollPosition"),n("span",{class:"token punctuation"},","),s(" setHorizontalScrollPosition "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` scroll

`),n("span",{class:"token comment"},"// Get scroll position of an element or page."),s(`
`),n("span",{class:"token comment"},"// Use it in conjunction with `getScrollTarget()`"),s(`
`),n("span",{class:"token function"},"getHorizontalScrollPosition"),n("span",{class:"token punctuation"},"("),s("scrollTargetDomElement"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// returns a Number (pixels)"),s(`

`),n("span",{class:"token comment"},"// Setting scroll position of an element or page:"),s(`
`),n("span",{class:"token function"},"setHorizontalScrollPosition"),s(),n("span",{class:"token punctuation"},"("),s("scrollTargetElement"),n("span",{class:"token punctuation"},","),s(" offset"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},","),s(" duration"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},'// if "duration" is specified then it will animate the scrolling')])]),n(e)]}),_:1},m,o)),l(`<h3 id="scrolling-to-an-element" class="doc-heading doc-h3"${o}>Scrolling to an element</h3><p${o}>Below is an example using the scroll utils to scroll to an element within its container. It does not take into consideration if the container is on screen or more complex cases.</p>`),l(i(p(u),null,{default:c((k,a,r,t)=>{if(a)a(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> scroll <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar&#39;</span>
<span class="token keyword"${t}>const</span> <span class="token punctuation"${t}>{</span> getScrollTarget<span class="token punctuation"${t}>,</span> setVerticalScrollPosition <span class="token punctuation"${t}>}</span> <span class="token operator"${t}>=</span> scroll

<span class="token comment"${t}>// takes an element object</span>
<span class="token keyword"${t}>function</span> <span class="token function"${t}>scrollToElement</span> <span class="token punctuation"${t}>(</span><span class="token parameter"${t}>el</span><span class="token punctuation"${t}>)</span> <span class="token punctuation"${t}>{</span>
  <span class="token keyword"${t}>const</span> target <span class="token operator"${t}>=</span> <span class="token function"${t}>getScrollTarget</span><span class="token punctuation"${t}>(</span>el<span class="token punctuation"${t}>)</span>
  <span class="token keyword"${t}>const</span> offset <span class="token operator"${t}>=</span> el<span class="token punctuation"${t}>.</span>offsetTop
  <span class="token keyword"${t}>const</span> duration <span class="token operator"${t}>=</span> <span class="token number"${t}>1000</span>
  <span class="token function"${t}>setVerticalScrollPosition</span><span class="token punctuation"${t}>(</span>target<span class="token punctuation"${t}>,</span> offset<span class="token punctuation"${t}>,</span> duration<span class="token punctuation"${t}>)</span>
<span class="token punctuation"${t}>}</span></code></pre>`),a(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" scroll "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" getScrollTarget"),n("span",{class:"token punctuation"},","),s(" setVerticalScrollPosition "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` scroll

`),n("span",{class:"token comment"},"// takes an element object"),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"scrollToElement"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"el"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" target "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"getScrollTarget"),n("span",{class:"token punctuation"},"("),s("el"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" offset "),n("span",{class:"token operator"},"="),s(" el"),n("span",{class:"token punctuation"},"."),s(`offsetTop
  `),n("span",{class:"token keyword"},"const"),s(" duration "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1000"),s(`
  `),n("span",{class:"token function"},"setVerticalScrollPosition"),n("span",{class:"token punctuation"},"("),s("target"),n("span",{class:"token punctuation"},","),s(" offset"),n("span",{class:"token punctuation"},","),s(" duration"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]}),_:1},m,o)),l(`<h2 id="determine-scroll-size" class="doc-heading doc-h2"${o}>Determine scroll size</h2><p${o}>Vertically:</p>`),l(i(p(u),null,{default:c((k,a,r,t)=>{if(a)a(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> scroll <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar&#39;</span>
<span class="token keyword"${t}>const</span> <span class="token punctuation"${t}>{</span> getScrollHeight <span class="token punctuation"${t}>}</span> <span class="token operator"${t}>=</span> scroll

<span class="token comment"${t}>// get scrolling container inner height</span>
<span class="token function"${t}>getScrollHeight</span><span class="token punctuation"${t}>(</span>scrollTargetDomElement<span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// returns a Number</span>

console<span class="token punctuation"${t}>.</span><span class="token function"${t}>log</span><span class="token punctuation"${t}>(</span> <span class="token function"${t}>getScrollHeight</span><span class="token punctuation"${t}>(</span>el<span class="token punctuation"${t}>)</span> <span class="token punctuation"${t}>)</span>
<span class="token comment"${t}>// 824 (it&#39;s in pixels always)</span></code></pre>`),a(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" scroll "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" getScrollHeight "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` scroll

`),n("span",{class:"token comment"},"// get scrolling container inner height"),s(`
`),n("span",{class:"token function"},"getScrollHeight"),n("span",{class:"token punctuation"},"("),s("scrollTargetDomElement"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// returns a Number"),s(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token function"},"getScrollHeight"),n("span",{class:"token punctuation"},"("),s("el"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// 824 (it's in pixels always)")])]),n(e)]}),_:1},m,o)),l(`<p${o}>Horizontally:</p>`),l(i(p(u),null,{default:c((k,a,r,t)=>{if(a)a(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> scroll <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar&#39;</span>
<span class="token keyword"${t}>const</span> <span class="token punctuation"${t}>{</span> getScrollWidth <span class="token punctuation"${t}>}</span> <span class="token operator"${t}>=</span> scroll

<span class="token comment"${t}>// get scrolling container inner height</span>
<span class="token function"${t}>getScrollWidth</span><span class="token punctuation"${t}>(</span>scrollTargetDomElement<span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// returns a Number</span>

console<span class="token punctuation"${t}>.</span><span class="token function"${t}>log</span><span class="token punctuation"${t}>(</span> <span class="token function"${t}>getScrollWidth</span><span class="token punctuation"${t}>(</span>el<span class="token punctuation"${t}>)</span> <span class="token punctuation"${t}>)</span>
<span class="token comment"${t}>// 824 (it&#39;s in pixels always)</span></code></pre>`),a(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" scroll "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" getScrollWidth "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` scroll

`),n("span",{class:"token comment"},"// get scrolling container inner height"),s(`
`),n("span",{class:"token function"},"getScrollWidth"),n("span",{class:"token punctuation"},"("),s("scrollTargetDomElement"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// returns a Number"),s(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token function"},"getScrollWidth"),n("span",{class:"token punctuation"},"("),s("el"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// 824 (it's in pixels always)")])]),n(e)]}),_:1},m,o)),l(`<h2 id="determining-scrollbar-width" class="doc-heading doc-h2"${o}>Determining scrollbar width</h2><p${o}>Computes the width of scrollbar in pixels.</p>`),l(i(p(u),null,{default:c((k,a,r,t)=>{if(a)a(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> scroll <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar&#39;</span>
<span class="token keyword"${t}>const</span> <span class="token punctuation"${t}>{</span> getScrollbarWidth <span class="token punctuation"${t}>}</span> <span class="token operator"${t}>=</span> scroll

console<span class="token punctuation"${t}>.</span><span class="token function"${t}>log</span><span class="token punctuation"${t}>(</span><span class="token function"${t}>getScrollbarWidth</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>)</span><span class="token punctuation"${t}>)</span> <span class="token comment"${t}>// 16 (it&#39;s in pixels)</span></code></pre>`),a(i(e,null,null,r,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" scroll "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" getScrollbarWidth "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` scroll

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"getScrollbarWidth"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 16 (it's in pixels)")])]),n(e)]}),_:1},m,o));else return[n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,[s("For usage with the UMD build see "),n($,{to:"/start/umd#quasar-global-object"},{default:c(()=>[s("here")]),_:1}),s(".")])]),n("h2",{id:"determine-scrolling-container",class:"doc-heading doc-h2",onClick:k=>p(g)("determine-scrolling-container")},"Determine scrolling container",8,["onClick"]),n("p",null,[s("Might be worthwhile to read how this is done "),n($,{to:"/vue-components/scroll-observer#determining-scrolling-container"},{default:c(()=>[s("here")]),_:1}),s(".")]),n(p(u),null,{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" scroll "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" getScrollTarget "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` scroll

`),n("span",{class:"token comment"},"// Get parent DomNode that handles page scrolling"),s(`
`),n("span",{class:"token comment"},'// Usually this is element with classname ".layout-view" or "window"'),s(`
`),n("span",{class:"token function"},"getScrollTarget"),n("span",{class:"token punctuation"},"("),s("DomElement"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// returns a DOM Element (or window Object)")])]),n(e)]),_:1}),n("p",null,[s("This method searches for a parent DOM element which has one of the "),n("code",{class:"doc-token"},"scroll"),s(" or "),n("code",{class:"doc-token"},"overflow-auto"),s(" Quasar CSS Helper class attached to it. If none is found, then it considers that the scrolling takes place on the document itself.")]),n("p",null,[s("Please note that simply attaching "),n("code",{class:"doc-token"},"scroll"),s(" CSS class to a DOM element or on a Vue component will have no effect if the respective element is not overflowed (example: a height smaller than its inner content height).")]),n("p",null,"Example of good container:"),n(p(u),null,{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),s(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("scroll"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token special-attr"},[n("span",{class:"token attr-name"},"style"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),n("span",{class:"token value css language-css"},[n("span",{class:"token property"},"height"),n("span",{class:"token punctuation"},":"),s(" 100px")]),n("span",{class:"token punctuation"},'"')])]),n("span",{class:"token punctuation"},">")]),s(`
  ...content expanding over the 100px height from container...
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")])])]),n(e)]),_:1}),n("h2",{id:"get-set-scroll-position",class:"doc-heading doc-h2",onClick:k=>p(g)("get-set-scroll-position")},"Get/set scroll position",8,["onClick"]),n("p",null,"Vertically:"),n(p(u),null,{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" scroll "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" getVerticalScrollPosition"),n("span",{class:"token punctuation"},","),s(" setVerticalScrollPosition "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` scroll

`),n("span",{class:"token comment"},"// Get scroll position of an element or page."),s(`
`),n("span",{class:"token comment"},"// Use it in conjunction with `getScrollTarget()`"),s(`
`),n("span",{class:"token function"},"getVerticalScrollPosition"),n("span",{class:"token punctuation"},"("),s("scrollTargetDomElement"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// returns a Number (pixels)"),s(`

`),n("span",{class:"token comment"},"// Setting scroll position of an element or page:"),s(`
`),n("span",{class:"token function"},"setVerticalScrollPosition"),s(),n("span",{class:"token punctuation"},"("),s("scrollTargetElement"),n("span",{class:"token punctuation"},","),s(" offset"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},","),s(" duration"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},'// if "duration" is specified then it will animate the scrolling')])]),n(e)]),_:1}),n("p",null,"Horizontally:"),n(p(u),null,{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" scroll "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" getHorizontalScrollPosition"),n("span",{class:"token punctuation"},","),s(" setHorizontalScrollPosition "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` scroll

`),n("span",{class:"token comment"},"// Get scroll position of an element or page."),s(`
`),n("span",{class:"token comment"},"// Use it in conjunction with `getScrollTarget()`"),s(`
`),n("span",{class:"token function"},"getHorizontalScrollPosition"),n("span",{class:"token punctuation"},"("),s("scrollTargetDomElement"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// returns a Number (pixels)"),s(`

`),n("span",{class:"token comment"},"// Setting scroll position of an element or page:"),s(`
`),n("span",{class:"token function"},"setHorizontalScrollPosition"),s(),n("span",{class:"token punctuation"},"("),s("scrollTargetElement"),n("span",{class:"token punctuation"},","),s(" offset"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},","),s(" duration"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},'// if "duration" is specified then it will animate the scrolling')])]),n(e)]),_:1}),n("h3",{id:"scrolling-to-an-element",class:"doc-heading doc-h3",onClick:k=>p(g)("scrolling-to-an-element")},"Scrolling to an element",8,["onClick"]),n("p",null,"Below is an example using the scroll utils to scroll to an element within its container. It does not take into consideration if the container is on screen or more complex cases."),n(p(u),null,{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" scroll "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" getScrollTarget"),n("span",{class:"token punctuation"},","),s(" setVerticalScrollPosition "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` scroll

`),n("span",{class:"token comment"},"// takes an element object"),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"scrollToElement"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"el"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" target "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"getScrollTarget"),n("span",{class:"token punctuation"},"("),s("el"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" offset "),n("span",{class:"token operator"},"="),s(" el"),n("span",{class:"token punctuation"},"."),s(`offsetTop
  `),n("span",{class:"token keyword"},"const"),s(" duration "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1000"),s(`
  `),n("span",{class:"token function"},"setVerticalScrollPosition"),n("span",{class:"token punctuation"},"("),s("target"),n("span",{class:"token punctuation"},","),s(" offset"),n("span",{class:"token punctuation"},","),s(" duration"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(e)]),_:1}),n("h2",{id:"determine-scroll-size",class:"doc-heading doc-h2",onClick:k=>p(g)("determine-scroll-size")},"Determine scroll size",8,["onClick"]),n("p",null,"Vertically:"),n(p(u),null,{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" scroll "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" getScrollHeight "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` scroll

`),n("span",{class:"token comment"},"// get scrolling container inner height"),s(`
`),n("span",{class:"token function"},"getScrollHeight"),n("span",{class:"token punctuation"},"("),s("scrollTargetDomElement"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// returns a Number"),s(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token function"},"getScrollHeight"),n("span",{class:"token punctuation"},"("),s("el"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// 824 (it's in pixels always)")])]),n(e)]),_:1}),n("p",null,"Horizontally:"),n(p(u),null,{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" scroll "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" getScrollWidth "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` scroll

`),n("span",{class:"token comment"},"// get scrolling container inner height"),s(`
`),n("span",{class:"token function"},"getScrollWidth"),n("span",{class:"token punctuation"},"("),s("scrollTargetDomElement"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// returns a Number"),s(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token function"},"getScrollWidth"),n("span",{class:"token punctuation"},"("),s("el"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// 824 (it's in pixels always)")])]),n(e)]),_:1}),n("h2",{id:"determining-scrollbar-width",class:"doc-heading doc-h2",onClick:k=>p(g)("determining-scrollbar-width")},"Determining scrollbar width",8,["onClick"]),n("p",null,"Computes the width of scrollbar in pixels."),n(p(u),null,{default:c(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" scroll "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" getScrollbarWidth "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(` scroll

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"getScrollbarWidth"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 16 (it's in pixels)")])]),n(e)]),_:1})]}),_:1},b))}}},y=d.setup;d.setup=(w,f)=>{const h=v();return(h.modules||(h.modules=new Set)).add("src/pages/quasar-utils/scrolling-utils.md"),y?y(w,f):void 0};const R=D(d,[["__file","scrolling-utils.md"]]);export{R as default};
