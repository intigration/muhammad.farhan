import{provide as y,mergeProps as P,withCtx as d,createTextVNode as n,createVNode as o,unref as c,useSSRContext as k}from"vue";import{ssrRenderComponent as i}from"vue/server-renderer";import{c as a}from"./page-utils-C-QWsEHe.js";import{D as b,a as p}from"./DocPage-DKr-0pQn.js";import{D as l}from"./DocExample-BcaABDtE.js";import{D as w}from"./DocApi-Df9ryd6x.js";import{_ as Q}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const m={__name:"pull-to-refresh",__ssrInlineRender:!0,setup(f){y("_q_ex",{name:"QPullToRefresh"});const h=[{name:"Infinite Scroll",category:"Vue Components",path:"/vue-components/infinite-scroll"},{name:"Intersection",category:"Vue Components",path:"/vue-components/intersection"},{name:"Icon",category:"Vue Components",path:"/vue-components/icon"}],u=[{id:"qpulltorefresh-api",title:"2. QPullToRefresh API",deep:!0},{id:"usage",title:"3. Usage"},{id:"basic",title:"3.1. Basic",sub:!0},{id:"custom-icon",title:"3.2. Custom icon",sub:!0},{id:"custom-coloring",title:"3.3. Custom coloring",sub:!0},{id:"tips",title:"4. Tips"}];return(R,C,$,T)=>{C(i(b,P({title:"Pull to refresh",desc:"The QPullToRefresh Vue component allows the user to pull down in order to refresh or retrieve the newest content on a page.",heading:"","edit-link":"vue-components/pull-to-refresh",toc:u,related:h},T),{default:d((x,t,r,e)=>{if(t)t(`<p${e}>The QPullToRefresh is a component that allows the user to pull down in order to refresh page content (or retrieve the newest content).</p>`),t(i(w,{file:"QPullToRefresh"},null,r,e)),t(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><h3 id="basic" class="doc-heading doc-h3"${e}>Basic</h3><div class="doc-note doc-note--warning"${e}><p class="doc-note__title"${e}>WARNING</p><p${e}>In your <code class="doc-token"${e}>@refresh</code> function, don’t forget to call the passed in <code class="doc-token"${e}>done()</code> function when you have finished loading more data.</p></div><p${e}>To refresh, pull down (with mouse or through finger touch) on the content below when the inner scroll position is the top.</p>`),t(i(l,{title:"Basic",file:"Basic"},null,r,e)),t(`<h3 id="custom-icon" class="doc-heading doc-h3"${e}>Custom icon</h3>`),t(i(l,{title:"Custom icon",file:"Icon"},null,r,e)),t(`<h3 id="custom-coloring" class="doc-heading doc-h3"${e}>Custom coloring</h3>`),t(i(l,{title:"Custom coloring",file:"CustomColoring"},null,r,e)),t(`<h2 id="tips" class="doc-heading doc-h2"${e}>Tips</h2><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>Scrolling container</p><p${e}>Please read `),t(i(p,{to:"/vue-components/scroll-observer#determining-scrolling-container"},{default:d((s,g,S,V)=>{if(g)g("here");else return[n("here")]}),_:1},r,e)),t(` about how Quasar determines the container to attach scrolling events to.</p></div><ul${e}><li${e}>If using a QLayout, then it’s recommended that you put QPullToRefresh as direct child of QPage and wrap your page content with it.</li><li${e}>If you change the parent of this component, don’t forget to call <code class="doc-token"${e}>updateScrollTarget()</code> on the QPullToRefresh Vue reference.</li><li${e}>QPullToRefresh also allows text selection, so if your content also has images, you might want to add <code class="doc-token"${e}>draggable=&quot;false&quot;</code> to them, otherwise the native browser behavior might interfere in a negative way.</li></ul>`);else return[o("p",null,"The QPullToRefresh is a component that allows the user to pull down in order to refresh page content (or retrieve the newest content)."),o(w,{file:"QPullToRefresh"}),o("h2",{id:"usage",class:"doc-heading doc-h2",onClick:s=>c(a)("usage")},"Usage",8,["onClick"]),o("h3",{id:"basic",class:"doc-heading doc-h3",onClick:s=>c(a)("basic")},"Basic",8,["onClick"]),o("div",{class:"doc-note doc-note--warning"},[o("p",{class:"doc-note__title"},"WARNING"),o("p",null,[n("In your "),o("code",{class:"doc-token"},"@refresh"),n(" function, don’t forget to call the passed in "),o("code",{class:"doc-token"},"done()"),n(" function when you have finished loading more data.")])]),o("p",null,"To refresh, pull down (with mouse or through finger touch) on the content below when the inner scroll position is the top."),o(l,{title:"Basic",file:"Basic"}),o("h3",{id:"custom-icon",class:"doc-heading doc-h3",onClick:s=>c(a)("custom-icon")},"Custom icon",8,["onClick"]),o(l,{title:"Custom icon",file:"Icon"}),o("h3",{id:"custom-coloring",class:"doc-heading doc-h3",onClick:s=>c(a)("custom-coloring")},"Custom coloring",8,["onClick"]),o(l,{title:"Custom coloring",file:"CustomColoring"}),o("h2",{id:"tips",class:"doc-heading doc-h2",onClick:s=>c(a)("tips")},"Tips",8,["onClick"]),o("div",{class:"doc-note doc-note--tip"},[o("p",{class:"doc-note__title"},"Scrolling container"),o("p",null,[n("Please read "),o(p,{to:"/vue-components/scroll-observer#determining-scrolling-container"},{default:d(()=>[n("here")]),_:1}),n(" about how Quasar determines the container to attach scrolling events to.")])]),o("ul",null,[o("li",null,"If using a QLayout, then it’s recommended that you put QPullToRefresh as direct child of QPage and wrap your page content with it."),o("li",null,[n("If you change the parent of this component, don’t forget to call "),o("code",{class:"doc-token"},"updateScrollTarget()"),n(" on the QPullToRefresh Vue reference.")]),o("li",null,[n("QPullToRefresh also allows text selection, so if your content also has images, you might want to add "),o("code",{class:"doc-token"},'draggable="false"'),n(" to them, otherwise the native browser behavior might interfere in a negative way.")])])]}),_:1},$))}}},v=m.setup;m.setup=(f,h)=>{const u=k();return(u.modules||(u.modules=new Set)).add("src/pages/vue-components/pull-to-refresh.md"),v?v(f,h):void 0};const Z=Q(m,[["__file","pull-to-refresh.md"]]);export{Z as default};
