import{provide as T,mergeProps as C,withCtx as d,unref as c,createVNode as n,createTextVNode as t,useSSRContext as x}from"vue";import{ssrRenderComponent as s}from"vue/server-renderer";import{c as h}from"./page-utils-C-QWsEHe.js";import{D as q}from"./DocPage-DKr-0pQn.js";import{D as i}from"./DocExample-BcaABDtE.js";import{D as w}from"./DocApi-Df9ryd6x.js";import{D as k}from"./DocPrerender-DPOnWPFO.js";import{C as p}from"./CopyButton-l3ndfN49.js";import{_ as D}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const $={__name:"touch-pan",__ssrInlineRender:!0,setup(f){T("_q_ex",{name:"TouchPan"});const v=[{name:"Touch Swipe",category:"Vue Directives",path:"/vue-directives/touch-swipe"},{name:"Touch Repeat",category:"Vue Directives",path:"/vue-directives/touch-repeat"},{name:"Touch Hold",category:"Vue Directives",path:"/vue-directives/touch-hold"}],m=[{id:"touchpan-api",title:"2. TouchPan API",deep:!0},{id:"usage",title:"3. Usage"},{id:"handling-mouse-events",title:"3.1. Handling Mouse Events",sub:!0},{id:"preventing-scroll-on-touch-capable-devices-",title:"3.2. Preventing Scroll (on touch capable devices)",sub:!0},{id:"inhibiting-touchpan",title:"3.3. Inhibiting TouchPan",sub:!0},{id:"example-with-fab",title:"4. Example with FAB"},{id:"note-on-hmr",title:"5. Note on HMR"}];return(E,y,P,H)=>{y(s(q,C({title:"Touch Pan Directive",desc:"Vue directive which triggers an event when the user drags the finger or mouse on a component or element.",heading:"","edit-link":"vue-directives/touch-pan",toc:m,related:v},H),{default:d((V,o,u,e)=>{if(o)o(`<p${e}>Quasar offers full-featured Vue directives that can totally replace libraries like Hammerjs: <code class="doc-token"${e}>v-touch-pan</code>, <code class="doc-token"${e}>v-touch-swipe</code>, <code class="doc-token"${e}>v-touch-hold</code> and even <code class="doc-token"${e}>v-touch-repeat</code>.</p><blockquote class="doc-note"${e}><p${e}><strong${e}>These directives also work with mouse events, not only touch events</strong>, so you are able to build cool functionality for your App on desktops too.</p></blockquote><p${e}>We will be describing <code class="doc-token"${e}>v-touch-pan</code> on the lines below.</p>`),o(s(w,{file:"TouchPan"},null,u,e)),o(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><p${e}>Click then pan in a direction with your mouse on the area below to see it in action. Page scrolling is prevented, but you can opt out if you wish.</p><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>If your content also has images, you might want to add <code class="doc-token"${e}>draggable=&quot;false&quot;</code> to them, otherwise the native browser behavior might interfere in a negative way.</p></div>`),o(s(i,{title:"All directions",file:"Basic"},null,u,e)),o(`<p${e}>Panning works both with a mouse or a native touch action. You can also capture pan to certain directions (any) only as youâ€™ll see below.</p><p${e}>Example on capturing only horizontal panning. Notice that on touch capable devices the scrolling is automatically not blocked, since we are only capturing horizontally.</p>`),o(s(i,{title:"Horizontally",file:"Horizontal"},null,u,e)),o(`<p${e}>Example on capturing only vertically panning. Page scrolling is prevented, but you can opt out if you wish.</p>`),o(s(i,{title:"Vertically",file:"Vertical"},null,u,e)),o(`<p${e}>Example on capturing panning on custom directions. For this, use modifiers: <code class="doc-token"${e}>up</code>, <code class="doc-token"${e}>down</code>, <code class="doc-token"${e}>left</code>, <code class="doc-token"${e}>right</code>. Page scrolling is prevented, but you can opt out if you wish.</p>`),o(s(i,{title:"Custom directions",file:"Custom"},null,u,e)),o(`<h3 id="handling-mouse-events" class="doc-heading doc-h3"${e}>Handling Mouse Events</h3><p${e}>When you want to handle mouse events too, use the <code class="doc-token"${e}>mouse</code> modifier:</p>`),o(s(c(k),null,{default:d((r,l,g,a)=>{if(l)l(`<pre class="doc-code"${a}><code${a}><span class="token comment"${a}>&lt;!--
  directive will also be triggered by mouse actions
--&gt;</span>
<span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;</span>div</span> <span class="token attr-name"${a}>v-touch-pan.mouse</span><span class="token attr-value"${a}><span class="token punctuation attr-equals"${a}>=</span><span class="token punctuation"${a}>&quot;</span>userHasPanned<span class="token punctuation"${a}>&quot;</span></span><span class="token punctuation"${a}>&gt;</span></span>...<span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;/</span>div</span><span class="token punctuation"${a}>&gt;</span></span></code></pre>`),l(s(p,null,null,g,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},`<!--
  directive will also be triggered by mouse actions
-->`),t(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("div")]),t(),n("span",{class:"token attr-name"},"v-touch-pan.mouse"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("userHasPanned"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),t("..."),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),t("div")]),n("span",{class:"token punctuation"},">")])])]),n(p)]}),_:1},u,e)),o(`<h3 id="preventing-scroll-on-touch-capable-devices-" class="doc-heading doc-h3"${e}>Preventing Scroll (on touch capable devices)</h3><p${e}>By default, the directive does not block page scrolling. If you want to prevent scrolling, then use the <code class="doc-token"${e}>prevent</code> modifier.</p>`),o(s(c(k),null,{default:d((r,l,g,a)=>{if(l)l(`<pre class="doc-code"${a}><code${a}><span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;</span>div</span> <span class="token attr-name"${a}>v-touch-pan.prevent</span><span class="token attr-value"${a}><span class="token punctuation attr-equals"${a}>=</span><span class="token punctuation"${a}>&quot;</span>userHasPanned<span class="token punctuation"${a}>&quot;</span></span><span class="token punctuation"${a}>&gt;</span></span>...<span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;/</span>div</span><span class="token punctuation"${a}>&gt;</span></span></code></pre>`),l(s(p,null,null,g,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("div")]),t(),n("span",{class:"token attr-name"},"v-touch-pan.prevent"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("userHasPanned"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),t("..."),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),t("div")]),n("span",{class:"token punctuation"},">")])])]),n(p)]}),_:1},u,e)),o(`<h3 id="inhibiting-touchpan" class="doc-heading doc-h3"${e}>Inhibiting TouchPan</h3><p${e}>When you want to inhibit TouchPan, you can do so by stopping propagation of the <code class="doc-token"${e}>touchstart</code> / <code class="doc-token"${e}>mousedown</code> events from the inner content:</p>`),o(s(c(k),null,{default:d((r,l,g,a)=>{if(l)l(`<pre class="doc-code"${a}><code${a}><span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;</span>div</span> <span class="token attr-name"${a}>v-touch-pan.mouse</span><span class="token attr-value"${a}><span class="token punctuation attr-equals"${a}>=</span><span class="token punctuation"${a}>&quot;</span>userHasHold<span class="token punctuation"${a}>&quot;</span></span><span class="token punctuation"${a}>&gt;</span></span>
  <span class="token comment"${a}>&lt;!-- ...content --&gt;</span>
  <span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;</span>div</span> <span class="token attr-name"${a}>@touchstart.stop</span> <span class="token attr-name"${a}>@mousedown.stop</span><span class="token punctuation"${a}>&gt;</span></span>
    <span class="token comment"${a}>&lt;!--
      TouchPan will not apply here because
      we are calling stopPropagation() on touchstart
      and mousedown events
    --&gt;</span>
  <span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;/</span>div</span><span class="token punctuation"${a}>&gt;</span></span>
  <span class="token comment"${a}>&lt;!-- ...content --&gt;</span>
<span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;/</span>div</span><span class="token punctuation"${a}>&gt;</span></span></code></pre>`),l(s(p,null,null,g,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("div")]),t(),n("span",{class:"token attr-name"},"v-touch-pan.mouse"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("userHasHold"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),t(`
  `),n("span",{class:"token comment"},"<!-- ...content -->"),t(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("div")]),t(),n("span",{class:"token attr-name"},"@touchstart.stop"),t(),n("span",{class:"token attr-name"},"@mousedown.stop"),n("span",{class:"token punctuation"},">")]),t(`
    `),n("span",{class:"token comment"},`<!--
      TouchPan will not apply here because
      we are calling stopPropagation() on touchstart
      and mousedown events
    -->`),t(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),t("div")]),n("span",{class:"token punctuation"},">")]),t(`
  `),n("span",{class:"token comment"},"<!-- ...content -->"),t(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),t("div")]),n("span",{class:"token punctuation"},">")])])]),n(p)]}),_:1},u,e)),o(`<p${e}>However, if you are using <code class="doc-token"${e}>capture</code> or <code class="doc-token"${e}>mouseCapture</code> modifiers then events will first reach the TouchPan directive then the inner content, so TouchPan will still trigger.</p><h2 id="example-with-fab" class="doc-heading doc-h2"${e}>Example with FAB</h2><p${e}>Below is a nice example on using TouchPan on a QFab. You can drag it across the screen.</p>`),o(s(i,{title:"Draggable",file:"Draggable"},null,u,e)),o(`<h2 id="note-on-hmr" class="doc-heading doc-h2"${e}>Note on HMR</h2><p${e}>Due to performance reasons, not all of the modifiers are reactive. Some require a window/page/component refresh to get updated. Please check the API card for the modifiers which are not marked as reactive.</p>`);else return[n("p",null,[t("Quasar offers full-featured Vue directives that can totally replace libraries like Hammerjs: "),n("code",{class:"doc-token"},"v-touch-pan"),t(", "),n("code",{class:"doc-token"},"v-touch-swipe"),t(", "),n("code",{class:"doc-token"},"v-touch-hold"),t(" and even "),n("code",{class:"doc-token"},"v-touch-repeat"),t(".")]),n("blockquote",{class:"doc-note"},[n("p",null,[n("strong",null,"These directives also work with mouse events, not only touch events"),t(", so you are able to build cool functionality for your App on desktops too.")])]),n("p",null,[t("We will be describing "),n("code",{class:"doc-token"},"v-touch-pan"),t(" on the lines below.")]),n(w,{file:"TouchPan"}),n("h2",{id:"usage",class:"doc-heading doc-h2",onClick:r=>c(h)("usage")},"Usage",8,["onClick"]),n("p",null,"Click then pan in a direction with your mouse on the area below to see it in action. Page scrolling is prevented, but you can opt out if you wish."),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,[t("If your content also has images, you might want to add "),n("code",{class:"doc-token"},'draggable="false"'),t(" to them, otherwise the native browser behavior might interfere in a negative way.")])]),n(i,{title:"All directions",file:"Basic"}),n("p",null,"Panning works both with a mouse or a native touch action. You can also capture pan to certain directions (any) only as youâ€™ll see below."),n("p",null,"Example on capturing only horizontal panning. Notice that on touch capable devices the scrolling is automatically not blocked, since we are only capturing horizontally."),n(i,{title:"Horizontally",file:"Horizontal"}),n("p",null,"Example on capturing only vertically panning. Page scrolling is prevented, but you can opt out if you wish."),n(i,{title:"Vertically",file:"Vertical"}),n("p",null,[t("Example on capturing panning on custom directions. For this, use modifiers: "),n("code",{class:"doc-token"},"up"),t(", "),n("code",{class:"doc-token"},"down"),t(", "),n("code",{class:"doc-token"},"left"),t(", "),n("code",{class:"doc-token"},"right"),t(". Page scrolling is prevented, but you can opt out if you wish.")]),n(i,{title:"Custom directions",file:"Custom"}),n("h3",{id:"handling-mouse-events",class:"doc-heading doc-h3",onClick:r=>c(h)("handling-mouse-events")},"Handling Mouse Events",8,["onClick"]),n("p",null,[t("When you want to handle mouse events too, use the "),n("code",{class:"doc-token"},"mouse"),t(" modifier:")]),n(c(k),null,{default:d(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},`<!--
  directive will also be triggered by mouse actions
-->`),t(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("div")]),t(),n("span",{class:"token attr-name"},"v-touch-pan.mouse"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("userHasPanned"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),t("..."),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),t("div")]),n("span",{class:"token punctuation"},">")])])]),n(p)]),_:1}),n("h3",{id:"preventing-scroll-on-touch-capable-devices-",class:"doc-heading doc-h3",onClick:r=>c(h)("preventing-scroll-on-touch-capable-devices-")},"Preventing Scroll (on touch capable devices)",8,["onClick"]),n("p",null,[t("By default, the directive does not block page scrolling. If you want to prevent scrolling, then use the "),n("code",{class:"doc-token"},"prevent"),t(" modifier.")]),n(c(k),null,{default:d(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("div")]),t(),n("span",{class:"token attr-name"},"v-touch-pan.prevent"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("userHasPanned"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),t("..."),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),t("div")]),n("span",{class:"token punctuation"},">")])])]),n(p)]),_:1}),n("h3",{id:"inhibiting-touchpan",class:"doc-heading doc-h3",onClick:r=>c(h)("inhibiting-touchpan")},"Inhibiting TouchPan",8,["onClick"]),n("p",null,[t("When you want to inhibit TouchPan, you can do so by stopping propagation of the "),n("code",{class:"doc-token"},"touchstart"),t(" / "),n("code",{class:"doc-token"},"mousedown"),t(" events from the inner content:")]),n(c(k),null,{default:d(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("div")]),t(),n("span",{class:"token attr-name"},"v-touch-pan.mouse"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("userHasHold"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),t(`
  `),n("span",{class:"token comment"},"<!-- ...content -->"),t(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("div")]),t(),n("span",{class:"token attr-name"},"@touchstart.stop"),t(),n("span",{class:"token attr-name"},"@mousedown.stop"),n("span",{class:"token punctuation"},">")]),t(`
    `),n("span",{class:"token comment"},`<!--
      TouchPan will not apply here because
      we are calling stopPropagation() on touchstart
      and mousedown events
    -->`),t(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),t("div")]),n("span",{class:"token punctuation"},">")]),t(`
  `),n("span",{class:"token comment"},"<!-- ...content -->"),t(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),t("div")]),n("span",{class:"token punctuation"},">")])])]),n(p)]),_:1}),n("p",null,[t("However, if you are using "),n("code",{class:"doc-token"},"capture"),t(" or "),n("code",{class:"doc-token"},"mouseCapture"),t(" modifiers then events will first reach the TouchPan directive then the inner content, so TouchPan will still trigger.")]),n("h2",{id:"example-with-fab",class:"doc-heading doc-h2",onClick:r=>c(h)("example-with-fab")},"Example with FAB",8,["onClick"]),n("p",null,"Below is a nice example on using TouchPan on a QFab. You can drag it across the screen."),n(i,{title:"Draggable",file:"Draggable"}),n("h2",{id:"note-on-hmr",class:"doc-heading doc-h2",onClick:r=>c(h)("note-on-hmr")},"Note on HMR",8,["onClick"]),n("p",null,"Due to performance reasons, not all of the modifiers are reactive. Some require a window/page/component refresh to get updated. Please check the API card for the modifiers which are not marked as reactive.")]}),_:1},P))}}},b=$.setup;$.setup=(f,v)=>{const m=x();return(m.modules||(m.modules=new Set)).add("src/pages/vue-directives/touch-pan.md"),b?b(f,v):void 0};const _=D($,[["__file","touch-pan.md"]]);export{_ as default};
