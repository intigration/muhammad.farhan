import{mergeProps as q,withCtx as c,unref as r,createVNode as s,createTextVNode as n,useSSRContext as x}from"vue";import{ssrRenderComponent as p}from"vue/server-renderer";import{c as y}from"./page-utils-C-QWsEHe.js";import{D as V,a as g}from"./DocPage-DKr-0pQn.js";import{D as $}from"./DocPrerender-DPOnWPFO.js";import{C as l}from"./CopyButton-l3ndfN49.js";import{_ as w}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const m={__name:"css-preprocessors",__ssrInlineRender:!0,setup(v){const f=[{name:"Sass/SCSS Variables",category:"Style & Identity",path:"/style/sass-scss-variables"}],d=[{id:"configuration",title:"2. Configuration"},{id:"usage",title:"3. Usage"},{id:"variables",title:"4. Variables"}];return(j,C,h,b)=>{C(p(V,q({title:"CSS Preprocessors",desc:"(@quasar/app-vite) Sass/SCSS are the out of the box supported css preprocessors in Quasar",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/css-preprocessors",toc:d,related:f},b),{default:c((N,e,k,o)=>{if(e)e(`<p${o}><strong${o}>Sass</strong> or <strong${o}>SCSS</strong> (recommending any of the two flavours) are the out of the box supported css preprocessors through Quasar CLI, should you want to use them.</p><h2 id="configuration" class="doc-heading doc-h2"${o}>Configuration</h2><p${o}>You can configure how your CSS is handled through <code class="doc-token"${o}>/postcss.config.cjs</code> and through extending the Vite config:</p>`),e(p(r($),{title:"/quasar.config file"},{default:c((i,t,u,a)=>{if(t)t(`<pre class="doc-code"${a}><code${a}><span class="token literal-property property"${a}>build</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token function"${a}>extendViteConf</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>viteConf<span class="token punctuation"${a}>,</span> <span class="token punctuation"${a}>{</span> isClient<span class="token punctuation"${a}>,</span> isServer <span class="token punctuation"${a}>}</span></span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
    viteConf<span class="token punctuation"${a}>.</span>css<span class="token punctuation"${a}>.</span>modules <span class="token operator"${a}>=</span> <span class="token operator"${a}>...</span>
    viteConf<span class="token punctuation"${a}>.</span>css<span class="token punctuation"${a}>.</span>postcss <span class="token operator"${a}>=</span> <span class="token operator"${a}>...</span>
    viteConf<span class="token punctuation"${a}>.</span>css<span class="token punctuation"${a}>.</span>preprocessorOptions
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),t(p(l,null,null,u,a));else return[s("pre",{class:"doc-code"},[s("code",null,[s("span",{class:"token literal-property property"},"build"),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token function"},"extendViteConf"),n(),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},[n("viteConf"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token punctuation"},"{"),n(" isClient"),s("span",{class:"token punctuation"},","),n(" isServer "),s("span",{class:"token punctuation"},"}")]),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
    viteConf`),s("span",{class:"token punctuation"},"."),n("css"),s("span",{class:"token punctuation"},"."),n("modules "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token operator"},"..."),n(`
    viteConf`),s("span",{class:"token punctuation"},"."),n("css"),s("span",{class:"token punctuation"},"."),n("postcss "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token operator"},"..."),n(`
    viteConf`),s("span",{class:"token punctuation"},"."),n("css"),s("span",{class:"token punctuation"},"."),n(`preprocessorOptions
  `),s("span",{class:"token punctuation"},"}"),n(`
`),s("span",{class:"token punctuation"},"}")])]),s(l)]}),_:1},k,o)),e(`<p${o}>More info: `),e(p(g,{to:"https://vitejs.dev/config/#css-modules"},{default:c((i,t,u,a)=>{if(t)t("css.modules");else return[n("css.modules")]}),_:1},k,o)),e(", "),e(p(g,{to:"https://vitejs.dev/config/#css-postcss"},{default:c((i,t,u,a)=>{if(t)t("css.postcss");else return[n("css.postcss")]}),_:1},k,o)),e(", "),e(p(g,{to:"https://vitejs.dev/config/#css-preprocessoroptions"},{default:c((i,t,u,a)=>{if(t)t("css.preprocessorOptions");else return[n("css.preprocessorOptions")]}),_:1},k,o)),e(`.</p><h2 id="usage" class="doc-heading doc-h2"${o}>Usage</h2><p${o}>Your Vue files can contain Sass/SCSS code through the <code class="doc-token"${o}>&lt;style&gt;</code> tag.</p>`),e(p(r($),null,{default:c((i,t,u,a)=>{if(t)t(`<pre class="doc-code"${a}><code${a}><span class="token comment"${a}>&lt;!-- Notice lang=&quot;sass&quot; --&gt;</span>
<span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;</span>style</span> <span class="token attr-name"${a}>lang</span><span class="token attr-value"${a}><span class="token punctuation attr-equals"${a}>=</span><span class="token punctuation"${a}>&quot;</span>sass<span class="token punctuation"${a}>&quot;</span></span><span class="token punctuation"${a}>&gt;</span></span><span class="token style"${a}><span class="token language-css"${a}>
div
  <span class="token property"${a}>color</span><span class="token punctuation"${a}>:</span> #444
  <span class="token property"${a}>background-color</span><span class="token punctuation"${a}>:</span> #dadada
</span></span><span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;/</span>style</span><span class="token punctuation"${a}>&gt;</span></span></code></pre>`),t(p(l,null,null,u,a));else return[s("pre",{class:"doc-code"},[s("code",null,[s("span",{class:"token comment"},'<!-- Notice lang="sass" -->'),n(`
`),s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"<"),n("style")]),n(),s("span",{class:"token attr-name"},"lang"),s("span",{class:"token attr-value"},[s("span",{class:"token punctuation attr-equals"},"="),s("span",{class:"token punctuation"},'"'),n("sass"),s("span",{class:"token punctuation"},'"')]),s("span",{class:"token punctuation"},">")]),s("span",{class:"token style"},[s("span",{class:"token language-css"},[n(`
div
  `),s("span",{class:"token property"},"color"),s("span",{class:"token punctuation"},":"),n(` #444
  `),s("span",{class:"token property"},"background-color"),s("span",{class:"token punctuation"},":"),n(` #dadada
`)])]),s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"</"),n("style")]),s("span",{class:"token punctuation"},">")])])]),s(l)]}),_:1},k,o)),e(p(r($),null,{default:c((i,t,u,a)=>{if(t)t(`<pre class="doc-code"${a}><code${a}><span class="token comment"${a}>&lt;!-- Notice lang=&quot;scss&quot; --&gt;</span>
<span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;</span>style</span> <span class="token attr-name"${a}>lang</span><span class="token attr-value"${a}><span class="token punctuation attr-equals"${a}>=</span><span class="token punctuation"${a}>&quot;</span>scss<span class="token punctuation"${a}>&quot;</span></span><span class="token punctuation"${a}>&gt;</span></span><span class="token style"${a}><span class="token language-css"${a}>
<span class="token selector"${a}>div</span> <span class="token punctuation"${a}>{</span>
  <span class="token property"${a}>color</span><span class="token punctuation"${a}>:</span> #444<span class="token punctuation"${a}>;</span>
  <span class="token property"${a}>background-color</span><span class="token punctuation"${a}>:</span> #dadada<span class="token punctuation"${a}>;</span>
<span class="token punctuation"${a}>}</span>
</span></span><span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;/</span>style</span><span class="token punctuation"${a}>&gt;</span></span></code></pre>`),t(p(l,null,null,u,a));else return[s("pre",{class:"doc-code"},[s("code",null,[s("span",{class:"token comment"},'<!-- Notice lang="scss" -->'),n(`
`),s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"<"),n("style")]),n(),s("span",{class:"token attr-name"},"lang"),s("span",{class:"token attr-value"},[s("span",{class:"token punctuation attr-equals"},"="),s("span",{class:"token punctuation"},'"'),n("scss"),s("span",{class:"token punctuation"},'"')]),s("span",{class:"token punctuation"},">")]),s("span",{class:"token style"},[s("span",{class:"token language-css"},[n(`
`),s("span",{class:"token selector"},"div"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token property"},"color"),s("span",{class:"token punctuation"},":"),n(" #444"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token property"},"background-color"),s("span",{class:"token punctuation"},":"),n(" #dadada"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"</"),n("style")]),s("span",{class:"token punctuation"},">")])])]),s(l)]}),_:1},k,o)),e(`<p${o}>And, of course, standard CSS is also supported:</p>`),e(p(r($),null,{default:c((i,t,u,a)=>{if(t)t(`<pre class="doc-code"${a}><code${a}><span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;</span>style</span><span class="token punctuation"${a}>&gt;</span></span><span class="token style"${a}><span class="token language-css"${a}>
<span class="token selector"${a}>div</span> <span class="token punctuation"${a}>{</span>
  <span class="token property"${a}>color</span><span class="token punctuation"${a}>:</span> #444<span class="token punctuation"${a}>;</span>
  <span class="token property"${a}>background-color</span><span class="token punctuation"${a}>:</span> #dadada<span class="token punctuation"${a}>;</span>
<span class="token punctuation"${a}>}</span>
</span></span><span class="token tag"${a}><span class="token tag"${a}><span class="token punctuation"${a}>&lt;/</span>style</span><span class="token punctuation"${a}>&gt;</span></span></code></pre>`),t(p(l,null,null,u,a));else return[s("pre",{class:"doc-code"},[s("code",null,[s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"<"),n("style")]),s("span",{class:"token punctuation"},">")]),s("span",{class:"token style"},[s("span",{class:"token language-css"},[n(`
`),s("span",{class:"token selector"},"div"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token property"},"color"),s("span",{class:"token punctuation"},":"),n(" #444"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token property"},"background-color"),s("span",{class:"token punctuation"},":"),n(" #dadada"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"</"),n("style")]),s("span",{class:"token punctuation"},">")])])]),s(l)]}),_:1},k,o)),e(`<h2 id="variables" class="doc-heading doc-h2"${o}>Variables</h2><p${o}>Quasar also supplies variables (<code class="doc-token"${o}>$primary</code>, <code class="doc-token"${o}>$grey-3</code>, …and many more) and you can directly use them. Read more about `),e(p(g,{to:"/style/sass-scss-variables"},{default:c((i,t,u,a)=>{if(t)t("Sass/SCSS variables");else return[n("Sass/SCSS variables")]}),_:1},k,o)),e(".</p>");else return[s("p",null,[s("strong",null,"Sass"),n(" or "),s("strong",null,"SCSS"),n(" (recommending any of the two flavours) are the out of the box supported css preprocessors through Quasar CLI, should you want to use them.")]),s("h2",{id:"configuration",class:"doc-heading doc-h2",onClick:i=>r(y)("configuration")},"Configuration",8,["onClick"]),s("p",null,[n("You can configure how your CSS is handled through "),s("code",{class:"doc-token"},"/postcss.config.cjs"),n(" and through extending the Vite config:")]),s(r($),{title:"/quasar.config file"},{default:c(()=>[s("pre",{class:"doc-code"},[s("code",null,[s("span",{class:"token literal-property property"},"build"),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token function"},"extendViteConf"),n(),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},[n("viteConf"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token punctuation"},"{"),n(" isClient"),s("span",{class:"token punctuation"},","),n(" isServer "),s("span",{class:"token punctuation"},"}")]),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
    viteConf`),s("span",{class:"token punctuation"},"."),n("css"),s("span",{class:"token punctuation"},"."),n("modules "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token operator"},"..."),n(`
    viteConf`),s("span",{class:"token punctuation"},"."),n("css"),s("span",{class:"token punctuation"},"."),n("postcss "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token operator"},"..."),n(`
    viteConf`),s("span",{class:"token punctuation"},"."),n("css"),s("span",{class:"token punctuation"},"."),n(`preprocessorOptions
  `),s("span",{class:"token punctuation"},"}"),n(`
`),s("span",{class:"token punctuation"},"}")])]),s(l)]),_:1}),s("p",null,[n("More info: "),s(g,{to:"https://vitejs.dev/config/#css-modules"},{default:c(()=>[n("css.modules")]),_:1}),n(", "),s(g,{to:"https://vitejs.dev/config/#css-postcss"},{default:c(()=>[n("css.postcss")]),_:1}),n(", "),s(g,{to:"https://vitejs.dev/config/#css-preprocessoroptions"},{default:c(()=>[n("css.preprocessorOptions")]),_:1}),n(".")]),s("h2",{id:"usage",class:"doc-heading doc-h2",onClick:i=>r(y)("usage")},"Usage",8,["onClick"]),s("p",null,[n("Your Vue files can contain Sass/SCSS code through the "),s("code",{class:"doc-token"},"<style>"),n(" tag.")]),s(r($),null,{default:c(()=>[s("pre",{class:"doc-code"},[s("code",null,[s("span",{class:"token comment"},'<!-- Notice lang="sass" -->'),n(`
`),s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"<"),n("style")]),n(),s("span",{class:"token attr-name"},"lang"),s("span",{class:"token attr-value"},[s("span",{class:"token punctuation attr-equals"},"="),s("span",{class:"token punctuation"},'"'),n("sass"),s("span",{class:"token punctuation"},'"')]),s("span",{class:"token punctuation"},">")]),s("span",{class:"token style"},[s("span",{class:"token language-css"},[n(`
div
  `),s("span",{class:"token property"},"color"),s("span",{class:"token punctuation"},":"),n(` #444
  `),s("span",{class:"token property"},"background-color"),s("span",{class:"token punctuation"},":"),n(` #dadada
`)])]),s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"</"),n("style")]),s("span",{class:"token punctuation"},">")])])]),s(l)]),_:1}),s(r($),null,{default:c(()=>[s("pre",{class:"doc-code"},[s("code",null,[s("span",{class:"token comment"},'<!-- Notice lang="scss" -->'),n(`
`),s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"<"),n("style")]),n(),s("span",{class:"token attr-name"},"lang"),s("span",{class:"token attr-value"},[s("span",{class:"token punctuation attr-equals"},"="),s("span",{class:"token punctuation"},'"'),n("scss"),s("span",{class:"token punctuation"},'"')]),s("span",{class:"token punctuation"},">")]),s("span",{class:"token style"},[s("span",{class:"token language-css"},[n(`
`),s("span",{class:"token selector"},"div"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token property"},"color"),s("span",{class:"token punctuation"},":"),n(" #444"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token property"},"background-color"),s("span",{class:"token punctuation"},":"),n(" #dadada"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"</"),n("style")]),s("span",{class:"token punctuation"},">")])])]),s(l)]),_:1}),s("p",null,"And, of course, standard CSS is also supported:"),s(r($),null,{default:c(()=>[s("pre",{class:"doc-code"},[s("code",null,[s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"<"),n("style")]),s("span",{class:"token punctuation"},">")]),s("span",{class:"token style"},[s("span",{class:"token language-css"},[n(`
`),s("span",{class:"token selector"},"div"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token property"},"color"),s("span",{class:"token punctuation"},":"),n(" #444"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token property"},"background-color"),s("span",{class:"token punctuation"},":"),n(" #dadada"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"</"),n("style")]),s("span",{class:"token punctuation"},">")])])]),s(l)]),_:1}),s("h2",{id:"variables",class:"doc-heading doc-h2",onClick:i=>r(y)("variables")},"Variables",8,["onClick"]),s("p",null,[n("Quasar also supplies variables ("),s("code",{class:"doc-token"},"$primary"),n(", "),s("code",{class:"doc-token"},"$grey-3"),n(", …and many more) and you can directly use them. Read more about "),s(g,{to:"/style/sass-scss-variables"},{default:c(()=>[n("Sass/SCSS variables")]),_:1}),n(".")])]}),_:1},h))}}},S=m.setup;m.setup=(v,f)=>{const d=x();return(d.modules||(d.modules=new Set)).add("src/pages/quasar-cli-vite/css-preprocessors.md"),S?S(v,f):void 0};const E=w(m,[["__file","css-preprocessors.md"]]);export{E as default};
