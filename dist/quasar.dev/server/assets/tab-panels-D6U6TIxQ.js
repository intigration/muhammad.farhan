import{provide as y,mergeProps as P,withCtx as b,createTextVNode as a,createVNode as t,unref as d,useSSRContext as C}from"vue";import{ssrRenderComponent as o}from"vue/server-renderer";import{c as r}from"./page-utils-C-QWsEHe.js";import{D as q,a as h}from"./DocPage-DKr-0pQn.js";import{D as n}from"./DocExample-BcaABDtE.js";import{D as p}from"./DocApi-Df9ryd6x.js";import{_ as S}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const f={__name:"tab-panels",__ssrInlineRender:!0,setup(w){y("_q_ex",{name:"QTabPanels"});const m=[{name:"Tabs",category:"Vue Components",path:"/vue-components/tabs"}],u=[{id:"qtabpanels-api",title:"2. QTabPanels API",deep:!0},{id:"qtabpanel-api",title:"3. QTabPanel API",deep:!0},{id:"usage",title:"4. Usage"},{id:"basic",title:"4.1. Basic",sub:!0},{id:"with-qtabs",title:"4.2. With QTabs",sub:!0},{id:"coloring",title:"4.3. Coloring",sub:!0},{id:"with-vertical-qtabs-and-qsplitter",title:"4.4. With vertical QTabs and QSplitter",sub:!0},{id:"custom-transitions",title:"4.5. Custom transitions",sub:!0},{id:"swipeable-and-infinite",title:"4.6. Swipeable and infinite",sub:!0},{id:"vertical-swipeable-and-infinite",title:"4.7. Vertical swipeable and infinite",sub:!0}];return(x,Q,k,$)=>{Q(o(q,P({title:"Tab Panels",desc:"The QTabPanel Vue component is a way of displaying more information using less window real estate.",heading:"","edit-link":"vue-components/tab-panels",toc:u,related:m},$),{default:b((W,i,l,e)=>{if(i)i(`<p${e}>Tab panels are a way of displaying more information using less window real estate.</p><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>Works great along with `),i(o(h,{to:"/vue-components/tabs"},{default:b((s,c,g,v)=>{if(c)c("QTabs");else return[a("QTabs")]}),_:1},l,e)),i(" but it is not required to be used with it.</p></div>"),i(o(p,{file:"QTabPanels"},null,l,e)),i(o(p,{file:"QTabPanel"},null,l,e)),i(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><ul${e}><li${e}>Works great along with `),i(o(h,{to:"/vue-components/tabs"},{default:b((s,c,g,v)=>{if(c)c("QTabs");else return[a("QTabs")]}),_:1},l,e)),i(`, a component which offers a nice way to select the active tab panel to display.</li><li${e}>If the QTabpanel content also has images and you want to use swipe actions to navigate, you might want to add <code class="doc-token"${e}>draggable=&quot;false&quot;</code> to them, otherwise the native browser behavior might interfere in a negative way.</li></ul></div><div class="doc-note doc-note--warning"${e}><p class="doc-note__title"${e}>IMPORTANT</p><p${e}>Do not be mistaken by the “QTabPanels” component name. Panels do not require QTabs. They can be used as standalone too.</p></div><div class="doc-note doc-note--danger"${e}><p class="doc-note__title"${e}>Keep Alive</p><ul${e}><li${e}>Please take notice of the Boolean <code class="doc-token"${e}>keep-alive</code> prop for QTabPanels, if you need this behavior. Do NOT use Vue’s native <code class="doc-token"${e}>&lt;keep-alive&gt;</code> component over QTabPanel.</li><li${e}>Should you need the <code class="doc-token"${e}>keep-alive-include</code> or <code class="doc-token"${e}>keep-alive-exclude</code> props then the QTabPanel <code class="doc-token"${e}>name</code>s must be valid Vue component names (no spaces allowed, don’t start with a number etc).</li></ul></div><h3 id="basic" class="doc-heading doc-h3"${e}>Basic</h3>`),i(o(n,{title:"Basic",file:"Basic"},null,l,e)),i(`<h3 id="with-qtabs" class="doc-heading doc-h3"${e}>With QTabs</h3><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>QTabPanels can be used as standalone too. They do not depend on the presence of a QTabs. Also, they can be placed anywhere within a page, not just near QTabs.</p></div>`),i(o(n,{title:"With QTabs",file:"WithQTabs"},null,l,e)),i(o(n,{title:"A more complex example",file:"WithNestedQTabs"},null,l,e)),i(`<h3 id="coloring" class="doc-heading doc-h3"${e}>Coloring</h3>`),i(o(n,{title:"Coloring",file:"Coloring"},null,l,e)),i(`<h3 id="with-vertical-qtabs-and-qsplitter" class="doc-heading doc-h3"${e}>With vertical QTabs and QSplitter</h3>`),i(o(n,{title:"With vertical QTabs and QSplitter",file:"TabsAndSplitter"},null,l,e)),i(`<p${e}>For a full list of transitions, please check out `),i(o(h,{to:"/options/transitions"},{default:b((s,c,g,v)=>{if(c)c("Transitions");else return[a("Transitions")]}),_:1},l,e)),i(`.</p><h3 id="custom-transitions" class="doc-heading doc-h3"${e}>Custom transitions</h3>`),i(o(n,{title:"Custom transition examples",file:"Transition"},null,l,e)),i(`<p${e}>In the example below, use your mouse to swipe through the panels or, if on a touch capable device, swipe with your fingers.</p><h3 id="swipeable-and-infinite" class="doc-heading doc-h3"${e}>Swipeable and infinite</h3>`),i(o(n,{title:"Swipeable and infinite",file:"Swipeable"},null,l,e)),i(`<h3 id="vertical-swipeable-and-infinite" class="doc-heading doc-h3"${e}>Vertical swipeable and infinite</h3>`),i(o(n,{title:"Vertical swipeable and infinite",file:"VerticalSwipeable"},null,l,e));else return[t("p",null,"Tab panels are a way of displaying more information using less window real estate."),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,[a("Works great along with "),t(h,{to:"/vue-components/tabs"},{default:b(()=>[a("QTabs")]),_:1}),a(" but it is not required to be used with it.")])]),t(p,{file:"QTabPanels"}),t(p,{file:"QTabPanel"}),t("h2",{id:"usage",class:"doc-heading doc-h2",onClick:s=>d(r)("usage")},"Usage",8,["onClick"]),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("ul",null,[t("li",null,[a("Works great along with "),t(h,{to:"/vue-components/tabs"},{default:b(()=>[a("QTabs")]),_:1}),a(", a component which offers a nice way to select the active tab panel to display.")]),t("li",null,[a("If the QTabpanel content also has images and you want to use swipe actions to navigate, you might want to add "),t("code",{class:"doc-token"},'draggable="false"'),a(" to them, otherwise the native browser behavior might interfere in a negative way.")])])]),t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"IMPORTANT"),t("p",null,"Do not be mistaken by the “QTabPanels” component name. Panels do not require QTabs. They can be used as standalone too.")]),t("div",{class:"doc-note doc-note--danger"},[t("p",{class:"doc-note__title"},"Keep Alive"),t("ul",null,[t("li",null,[a("Please take notice of the Boolean "),t("code",{class:"doc-token"},"keep-alive"),a(" prop for QTabPanels, if you need this behavior. Do NOT use Vue’s native "),t("code",{class:"doc-token"},"<keep-alive>"),a(" component over QTabPanel.")]),t("li",null,[a("Should you need the "),t("code",{class:"doc-token"},"keep-alive-include"),a(" or "),t("code",{class:"doc-token"},"keep-alive-exclude"),a(" props then the QTabPanel "),t("code",{class:"doc-token"},"name"),a("s must be valid Vue component names (no spaces allowed, don’t start with a number etc).")])])]),t("h3",{id:"basic",class:"doc-heading doc-h3",onClick:s=>d(r)("basic")},"Basic",8,["onClick"]),t(n,{title:"Basic",file:"Basic"}),t("h3",{id:"with-qtabs",class:"doc-heading doc-h3",onClick:s=>d(r)("with-qtabs")},"With QTabs",8,["onClick"]),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,"QTabPanels can be used as standalone too. They do not depend on the presence of a QTabs. Also, they can be placed anywhere within a page, not just near QTabs.")]),t(n,{title:"With QTabs",file:"WithQTabs"}),t(n,{title:"A more complex example",file:"WithNestedQTabs"}),t("h3",{id:"coloring",class:"doc-heading doc-h3",onClick:s=>d(r)("coloring")},"Coloring",8,["onClick"]),t(n,{title:"Coloring",file:"Coloring"}),t("h3",{id:"with-vertical-qtabs-and-qsplitter",class:"doc-heading doc-h3",onClick:s=>d(r)("with-vertical-qtabs-and-qsplitter")},"With vertical QTabs and QSplitter",8,["onClick"]),t(n,{title:"With vertical QTabs and QSplitter",file:"TabsAndSplitter"}),t("p",null,[a("For a full list of transitions, please check out "),t(h,{to:"/options/transitions"},{default:b(()=>[a("Transitions")]),_:1}),a(".")]),t("h3",{id:"custom-transitions",class:"doc-heading doc-h3",onClick:s=>d(r)("custom-transitions")},"Custom transitions",8,["onClick"]),t(n,{title:"Custom transition examples",file:"Transition"}),t("p",null,"In the example below, use your mouse to swipe through the panels or, if on a touch capable device, swipe with your fingers."),t("h3",{id:"swipeable-and-infinite",class:"doc-heading doc-h3",onClick:s=>d(r)("swipeable-and-infinite")},"Swipeable and infinite",8,["onClick"]),t(n,{title:"Swipeable and infinite",file:"Swipeable"}),t("h3",{id:"vertical-swipeable-and-infinite",class:"doc-heading doc-h3",onClick:s=>d(r)("vertical-swipeable-and-infinite")},"Vertical swipeable and infinite",8,["onClick"]),t(n,{title:"Vertical swipeable and infinite",file:"VerticalSwipeable"})]}),_:1},k))}}},T=f.setup;f.setup=(w,m)=>{const u=C();return(u.modules||(u.modules=new Set)).add("src/pages/vue-components/tab-panels.md"),T?T(w,m):void 0};const Z=S(f,[["__file","tab-panels.md"]]);export{Z as default};
