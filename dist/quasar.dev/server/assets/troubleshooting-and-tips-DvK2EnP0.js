import{mergeProps as D,withCtx as i,unref as e,createVNode as n,createTextVNode as s,useSSRContext as C}from"vue";import{ssrRenderComponent as u}from"vue/server-renderer";import{c as b}from"./page-utils-C-QWsEHe.js";import{D as W}from"./DocPage-DKr-0pQn.js";import{D as l}from"./DocPrerender-DPOnWPFO.js";import{C as c}from"./CopyButton-l3ndfN49.js";import{_ as G}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const m={__name:"troubleshooting-and-tips",__ssrInlineRender:!0,setup(w){const r=[{id:"browser-devtools",title:"2. Browser Devtools"},{id:"debugging-main-process",title:"3. Debugging Main Process"}];return(k,f,v,y)=>{f(u(W,D({title:"Troubleshooting and Tips",desc:"(@quasar/app-vite) Tips and tricks for a Quasar desktop app with Electron.",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/developing-electron-apps/troubleshooting-and-tips",toc:r},y),{default:i((P,p,h,a)=>{if(p)p(`<h2 id="browser-devtools" class="doc-heading doc-h2"${a}>Browser Devtools</h2><p${a}>You probably want your app to only give access to the browser devtools on dev mode only. On the production version (without debugging enabled) you’ll want to disable this behavior.</p><p${a}>While we’re at it, why not also open devtools by default when we’re on dev mode.</p>`),p(u(e(l),{title:"/src-electron/electron-main"},{default:i((d,o,g,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>function</span> <span class="token function"${t}>createWindow</span> <span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>)</span> <span class="token punctuation"${t}>{</span>
  mainWindow <span class="token operator"${t}>=</span> <span class="token keyword"${t}>new</span> <span class="token class-name"${t}>BrowserWindow</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>{</span> <span class="token operator"${t}>...</span> <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span>

  <span class="token keyword"${t}>if</span> <span class="token punctuation"${t}>(</span>process<span class="token punctuation"${t}>.</span>env<span class="token punctuation"${t}>.</span><span class="token constant"${t}>DEBUGGING</span><span class="token punctuation"${t}>)</span> <span class="token punctuation"${t}>{</span>
    <span class="token comment"${t}>// if on DEV or Production with debug enabled</span>
    mainWindow<span class="token punctuation"${t}>.</span>webContents<span class="token punctuation"${t}>.</span><span class="token function"${t}>openDevTools</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>)</span>
  <span class="token punctuation"${t}>}</span>
  <span class="token keyword"${t}>else</span> <span class="token punctuation"${t}>{</span>
    <span class="token comment"${t}>// we&#39;re on production; no access to devtools pls</span>
    mainWindow<span class="token punctuation"${t}>.</span>webContents<span class="token punctuation"${t}>.</span><span class="token function"${t}>on</span><span class="token punctuation"${t}>(</span><span class="token string"${t}>&#39;devtools-opened&#39;</span><span class="token punctuation"${t}>,</span> <span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
      mainWindow<span class="token punctuation"${t}>.</span>webContents<span class="token punctuation"${t}>.</span><span class="token function"${t}>closeDevTools</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>)</span>
    <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span>
  <span class="token punctuation"${t}>}</span>
<span class="token punctuation"${t}>}</span></code></pre>`),o(u(c,null,null,g,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createWindow"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  mainWindow `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"BrowserWindow"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token operator"},"..."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("process"),n("span",{class:"token punctuation"},"."),s("env"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DEBUGGING"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// if on DEV or Production with debug enabled"),s(`
    mainWindow`),n("span",{class:"token punctuation"},"."),s("webContents"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"openDevTools"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// we're on production; no access to devtools pls"),s(`
    mainWindow`),n("span",{class:"token punctuation"},"."),s("webContents"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"on"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'devtools-opened'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      mainWindow`),n("span",{class:"token punctuation"},"."),s("webContents"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"closeDevTools"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(c)]}),_:1},h,a)),p(`<h2 id="debugging-main-process" class="doc-heading doc-h2"${a}>Debugging Main Process</h2><p${a}>When running your application in development you may have noticed a message from the main process mentioning a remote debugger. Ever since the release of electron@^1.7.2, remote debugging over the Inspect API was introduced and can be easily accessed by opening the provided link with Google Chrome or through another debugger that can remotely attach to the process using the default port of 5858, such as Visual Studio Code.</p>`),p(u(e(l),null,{default:i((d,o,g,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}>Debugger listening on ws://127.0.0.1:5858/b285586a-6091-4c41-b6ea-0d389e6f9c93
For help, see: https://nodejs.org/en/docs/inspector</code></pre>`),o(u(c,{lang:"bash"},null,g,t));else return[n("pre",{class:"doc-code"},[n("code",null,`Debugger listening on ws://127.0.0.1:5858/b285586a-6091-4c41-b6ea-0d389e6f9c93
For help, see: https://nodejs.org/en/docs/inspector`)]),n(c,{lang:"bash"})]}),_:1},h,a));else return[n("h2",{id:"browser-devtools",class:"doc-heading doc-h2",onClick:d=>e(b)("browser-devtools")},"Browser Devtools",8,["onClick"]),n("p",null,"You probably want your app to only give access to the browser devtools on dev mode only. On the production version (without debugging enabled) you’ll want to disable this behavior."),n("p",null,"While we’re at it, why not also open devtools by default when we’re on dev mode."),n(e(l),{title:"/src-electron/electron-main"},{default:i(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createWindow"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  mainWindow `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"BrowserWindow"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token operator"},"..."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("process"),n("span",{class:"token punctuation"},"."),s("env"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DEBUGGING"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// if on DEV or Production with debug enabled"),s(`
    mainWindow`),n("span",{class:"token punctuation"},"."),s("webContents"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"openDevTools"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// we're on production; no access to devtools pls"),s(`
    mainWindow`),n("span",{class:"token punctuation"},"."),s("webContents"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"on"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'devtools-opened'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      mainWindow`),n("span",{class:"token punctuation"},"."),s("webContents"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"closeDevTools"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(c)]),_:1}),n("h2",{id:"debugging-main-process",class:"doc-heading doc-h2",onClick:d=>e(b)("debugging-main-process")},"Debugging Main Process",8,["onClick"]),n("p",null,"When running your application in development you may have noticed a message from the main process mentioning a remote debugger. Ever since the release of electron@^1.7.2, remote debugging over the Inspect API was introduced and can be easily accessed by opening the provided link with Google Chrome or through another debugger that can remotely attach to the process using the default port of 5858, such as Visual Studio Code."),n(e(l),null,{default:i(()=>[n("pre",{class:"doc-code"},[n("code",null,`Debugger listening on ws://127.0.0.1:5858/b285586a-6091-4c41-b6ea-0d389e6f9c93
For help, see: https://nodejs.org/en/docs/inspector`)]),n(c,{lang:"bash"})]),_:1})]}),_:1},v))}}},$=m.setup;m.setup=(w,r)=>{const k=C();return(k.modules||(k.modules=new Set)).add("src/pages/quasar-cli-vite/developing-electron-apps/troubleshooting-and-tips.md"),$?$(w,r):void 0};const O=G(m,[["__file","troubleshooting-and-tips.md"]]);export{O as default};
