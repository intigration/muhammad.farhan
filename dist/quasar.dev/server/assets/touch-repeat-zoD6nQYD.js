import{provide as R,mergeProps as C,withCtx as i,unref as l,createVNode as t,createTextVNode as n,useSSRContext as B}from"vue";import{ssrRenderComponent as c}from"vue/server-renderer";import{c as m}from"./page-utils-C-QWsEHe.js";import{D,a as y}from"./DocPage-DKr-0pQn.js";import{D as d}from"./DocExample-BcaABDtE.js";import{D as w}from"./DocApi-Df9ryd6x.js";import{D as h}from"./DocPrerender-DPOnWPFO.js";import{C as u}from"./CopyButton-l3ndfN49.js";import{_ as P}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const $={__name:"touch-repeat",__ssrInlineRender:!0,setup(f){R("_q_ex",{name:"TouchRepeat"});const v=[{name:"Touch Swipe",category:"Vue Directives",path:"/vue-directives/touch-swipe"},{name:"Touch Pan",category:"Vue Directives",path:"/vue-directives/touch-pan"},{name:"Touch Hold",category:"Vue Directives",path:"/vue-directives/touch-hold"}],g=[{id:"touchrepeat-api",title:"2. TouchRepeat API",deep:!0},{id:"usage",title:"3. Usage"},{id:"handling-mouse-events",title:"3.1. Handling Mouse Events",sub:!0},{id:"handling-key-events",title:"3.2. Handling Key Events",sub:!0},{id:"inhibiting-touchrepeat",title:"3.3. Inhibiting TouchRepeat",sub:!0},{id:"note-on-hmr",title:"4. Note on HMR"}];return(x,T,H,q)=>{T(c(D,C({title:"Touch Repeat Directive",desc:"Vue directive which triggers an event at specified intervals of time while the user touches and holds on a component or element.",heading:"","edit-link":"vue-directives/touch-repeat",toc:g,related:v},q),{default:i((E,s,p,a)=>{if(s)s(`<p${a}>Quasar offers full-featured Vue directives that can totally replace libraries like Hammerjs: <code class="doc-token"${a}>v-touch-pan</code>, <code class="doc-token"${a}>v-touch-swipe</code>, <code class="doc-token"${a}>v-touch-hold</code> and <code class="doc-token"${a}>v-touch-repeat</code>.</p><blockquote class="doc-note"${a}><p${a}><strong${a}>These directives also work with mouse events, not only touch events</strong>, so you are able to build cool functionality for your App on desktops too.</p></blockquote><p${a}>We will be describing <code class="doc-token"${a}>v-touch-repeat</code> on the lines below.</p>`),s(c(w,{file:"TouchRepeat"},null,p,a)),s(`<h2 id="usage" class="doc-heading doc-h2"${a}>Usage</h2><p${a}>Click and hold with your mouse on the area below to see it in action. Notice that on touch capable devices the scrolling is not blocked.</p><blockquote class="doc-note"${a}><p${a}>The default repeat pattern is 0:600:300 (ms).</p></blockquote>`),s(c(d,{title:"Basic",file:"Basic"},null,p,a)),s(`<p${a}>Below is an example configured to also react to <code class="doc-token"${a}>SPACE</code>, <code class="doc-token"${a}>ENTER</code> and <code class="doc-token"${a}>h</code> keys (<strong${a}>focus on it first</strong>), with 0:300:200 (ms) repeat pattern. Hit &amp; hold keys, or click/tap and hold.</p>`),s(c(d,{title:"Custom keys",file:"Keys"},null,p,a)),s(`<p${a}>Below is an example of applying TouchRepeat to QBtn. Notice how we play with the directive arguments in order to make the blue buttons increment slower than the red ones.</p>`),s(c(d,{title:"Applied to QBtn",file:"Buttons"},null,p,a)),s(`<h3 id="handling-mouse-events" class="doc-heading doc-h3"${a}>Handling Mouse Events</h3><p${a}>When you want to handle mouse events too, use the <code class="doc-token"${a}>mouse</code> modifier:</p>`),s(c(l(h),null,{default:i((r,o,k,e)=>{if(o)o(`<pre class="doc-code"${e}><code${e}><span class="token tag"${e}><span class="token tag"${e}><span class="token punctuation"${e}>&lt;</span>div</span> <span class="token attr-name"${e}>v-touch-repeat.mouse</span><span class="token attr-value"${e}><span class="token punctuation attr-equals"${e}>=</span><span class="token punctuation"${e}>&quot;</span>myHandler<span class="token punctuation"${e}>&quot;</span></span><span class="token punctuation"${e}>&gt;</span></span>...<span class="token tag"${e}><span class="token tag"${e}><span class="token punctuation"${e}>&lt;/</span>div</span><span class="token punctuation"${e}>&gt;</span></span></code></pre>`),o(c(u,null,null,k,e));else return[t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("div")]),n(),t("span",{class:"token attr-name"},"v-touch-repeat.mouse"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),n("myHandler"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),n("..."),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("div")]),t("span",{class:"token punctuation"},">")])])]),t(u)]}),_:1},p,a)),s(`<h3 id="handling-key-events" class="doc-heading doc-h3"${a}>Handling Key Events</h3><p${a}>When you want to handle key events too, use `),s(c(y,{to:"https://keycode.info/"},{default:i((r,o,k,e)=>{if(o)o("keycodes");else return[n("keycodes")]}),_:1},p,a)),s(" as modifiers:</p>"),s(c(l(h),null,{default:i((r,o,k,e)=>{if(o)o(`<pre class="doc-code"${e}><code${e}><span class="token tag"${e}><span class="token tag"${e}><span class="token punctuation"${e}>&lt;</span>div</span> <span class="token attr-name"${e}>v-touch-repeat.65.70</span><span class="token attr-value"${e}><span class="token punctuation attr-equals"${e}>=</span><span class="token punctuation"${e}>&quot;</span>myHandler<span class="token punctuation"${e}>&quot;</span></span><span class="token punctuation"${e}>&gt;</span></span>...<span class="token tag"${e}><span class="token tag"${e}><span class="token punctuation"${e}>&lt;/</span>div</span><span class="token punctuation"${e}>&gt;</span></span></code></pre>`),o(c(u,null,null,k,e));else return[t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("div")]),n(),t("span",{class:"token attr-name"},"v-touch-repeat.65.70"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),n("myHandler"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),n("..."),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("div")]),t("span",{class:"token punctuation"},">")])])]),t(u)]}),_:1},p,a)),s(`<p${a}>There are some special modifiers that you do not require to write the equivalent keycode: <code class="doc-token"${a}>space</code>, <code class="doc-token"${a}>tab</code>, <code class="doc-token"${a}>enter</code>.</p><h3 id="inhibiting-touchrepeat" class="doc-heading doc-h3"${a}>Inhibiting TouchRepeat</h3><p${a}>When you want to inhibit TouchRepeat, you can do so by stopping propagation of the <code class="doc-token"${a}>touchstart</code> / <code class="doc-token"${a}>mousedown</code> / <code class="doc-token"${a}>keydown</code> events from the inner content:</p>`),s(c(l(h),null,{default:i((r,o,k,e)=>{if(o)o(`<pre class="doc-code"${e}><code${e}><span class="token tag"${e}><span class="token tag"${e}><span class="token punctuation"${e}>&lt;</span>div</span> <span class="token attr-name"${e}>v-touch-repeat.mouse.enter</span><span class="token attr-value"${e}><span class="token punctuation attr-equals"${e}>=</span><span class="token punctuation"${e}>&quot;</span>userHasHold<span class="token punctuation"${e}>&quot;</span></span><span class="token punctuation"${e}>&gt;</span></span>
  <span class="token comment"${e}>&lt;!-- ...content --&gt;</span>
  <span class="token tag"${e}><span class="token tag"${e}><span class="token punctuation"${e}>&lt;</span>div</span> <span class="token attr-name"${e}>@touchstart.stop</span> <span class="token attr-name"${e}>@mousedown.stop</span> <span class="token attr-name"${e}>@keydown.stop</span><span class="token punctuation"${e}>&gt;</span></span>
    <span class="token comment"${e}>&lt;!--
      TouchRepeat will not apply here because
      we are calling stopPropagation() on touchstart,
      mousedown and keydown events
    --&gt;</span>
  <span class="token tag"${e}><span class="token tag"${e}><span class="token punctuation"${e}>&lt;/</span>div</span><span class="token punctuation"${e}>&gt;</span></span>
  <span class="token comment"${e}>&lt;!-- ...content --&gt;</span>
<span class="token tag"${e}><span class="token tag"${e}><span class="token punctuation"${e}>&lt;/</span>div</span><span class="token punctuation"${e}>&gt;</span></span></code></pre>`),o(c(u,null,null,k,e));else return[t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("div")]),n(),t("span",{class:"token attr-name"},"v-touch-repeat.mouse.enter"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),n("userHasHold"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),n(`
  `),t("span",{class:"token comment"},"<!-- ...content -->"),n(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("div")]),n(),t("span",{class:"token attr-name"},"@touchstart.stop"),n(),t("span",{class:"token attr-name"},"@mousedown.stop"),n(),t("span",{class:"token attr-name"},"@keydown.stop"),t("span",{class:"token punctuation"},">")]),n(`
    `),t("span",{class:"token comment"},`<!--
      TouchRepeat will not apply here because
      we are calling stopPropagation() on touchstart,
      mousedown and keydown events
    -->`),n(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("div")]),t("span",{class:"token punctuation"},">")]),n(`
  `),t("span",{class:"token comment"},"<!-- ...content -->"),n(`
`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("div")]),t("span",{class:"token punctuation"},">")])])]),t(u)]}),_:1},p,a)),s(`<p${a}>However, if you are using <code class="doc-token"${a}>capture</code>, <code class="doc-token"${a}>mouseCapture</code> or <code class="doc-token"${a}>keyCapture</code> modifiers then events will first reach the TouchRepeat directive then the inner content, so TouchRepeat will still trigger.</p><h2 id="note-on-hmr" class="doc-heading doc-h2"${a}>Note on HMR</h2><p${a}>Due to performance reasons, not all of the modifiers are reactive. Some require a window/page/component refresh to get updated. Please check the API card for the modifiers which are not marked as reactive.</p>`);else return[t("p",null,[n("Quasar offers full-featured Vue directives that can totally replace libraries like Hammerjs: "),t("code",{class:"doc-token"},"v-touch-pan"),n(", "),t("code",{class:"doc-token"},"v-touch-swipe"),n(", "),t("code",{class:"doc-token"},"v-touch-hold"),n(" and "),t("code",{class:"doc-token"},"v-touch-repeat"),n(".")]),t("blockquote",{class:"doc-note"},[t("p",null,[t("strong",null,"These directives also work with mouse events, not only touch events"),n(", so you are able to build cool functionality for your App on desktops too.")])]),t("p",null,[n("We will be describing "),t("code",{class:"doc-token"},"v-touch-repeat"),n(" on the lines below.")]),t(w,{file:"TouchRepeat"}),t("h2",{id:"usage",class:"doc-heading doc-h2",onClick:r=>l(m)("usage")},"Usage",8,["onClick"]),t("p",null,"Click and hold with your mouse on the area below to see it in action. Notice that on touch capable devices the scrolling is not blocked."),t("blockquote",{class:"doc-note"},[t("p",null,"The default repeat pattern is 0:600:300 (ms).")]),t(d,{title:"Basic",file:"Basic"}),t("p",null,[n("Below is an example configured to also react to "),t("code",{class:"doc-token"},"SPACE"),n(", "),t("code",{class:"doc-token"},"ENTER"),n(" and "),t("code",{class:"doc-token"},"h"),n(" keys ("),t("strong",null,"focus on it first"),n("), with 0:300:200 (ms) repeat pattern. Hit & hold keys, or click/tap and hold.")]),t(d,{title:"Custom keys",file:"Keys"}),t("p",null,"Below is an example of applying TouchRepeat to QBtn. Notice how we play with the directive arguments in order to make the blue buttons increment slower than the red ones."),t(d,{title:"Applied to QBtn",file:"Buttons"}),t("h3",{id:"handling-mouse-events",class:"doc-heading doc-h3",onClick:r=>l(m)("handling-mouse-events")},"Handling Mouse Events",8,["onClick"]),t("p",null,[n("When you want to handle mouse events too, use the "),t("code",{class:"doc-token"},"mouse"),n(" modifier:")]),t(l(h),null,{default:i(()=>[t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("div")]),n(),t("span",{class:"token attr-name"},"v-touch-repeat.mouse"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),n("myHandler"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),n("..."),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("div")]),t("span",{class:"token punctuation"},">")])])]),t(u)]),_:1}),t("h3",{id:"handling-key-events",class:"doc-heading doc-h3",onClick:r=>l(m)("handling-key-events")},"Handling Key Events",8,["onClick"]),t("p",null,[n("When you want to handle key events too, use "),t(y,{to:"https://keycode.info/"},{default:i(()=>[n("keycodes")]),_:1}),n(" as modifiers:")]),t(l(h),null,{default:i(()=>[t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("div")]),n(),t("span",{class:"token attr-name"},"v-touch-repeat.65.70"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),n("myHandler"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),n("..."),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("div")]),t("span",{class:"token punctuation"},">")])])]),t(u)]),_:1}),t("p",null,[n("There are some special modifiers that you do not require to write the equivalent keycode: "),t("code",{class:"doc-token"},"space"),n(", "),t("code",{class:"doc-token"},"tab"),n(", "),t("code",{class:"doc-token"},"enter"),n(".")]),t("h3",{id:"inhibiting-touchrepeat",class:"doc-heading doc-h3",onClick:r=>l(m)("inhibiting-touchrepeat")},"Inhibiting TouchRepeat",8,["onClick"]),t("p",null,[n("When you want to inhibit TouchRepeat, you can do so by stopping propagation of the "),t("code",{class:"doc-token"},"touchstart"),n(" / "),t("code",{class:"doc-token"},"mousedown"),n(" / "),t("code",{class:"doc-token"},"keydown"),n(" events from the inner content:")]),t(l(h),null,{default:i(()=>[t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("div")]),n(),t("span",{class:"token attr-name"},"v-touch-repeat.mouse.enter"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),n("userHasHold"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),n(`
  `),t("span",{class:"token comment"},"<!-- ...content -->"),n(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("div")]),n(),t("span",{class:"token attr-name"},"@touchstart.stop"),n(),t("span",{class:"token attr-name"},"@mousedown.stop"),n(),t("span",{class:"token attr-name"},"@keydown.stop"),t("span",{class:"token punctuation"},">")]),n(`
    `),t("span",{class:"token comment"},`<!--
      TouchRepeat will not apply here because
      we are calling stopPropagation() on touchstart,
      mousedown and keydown events
    -->`),n(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("div")]),t("span",{class:"token punctuation"},">")]),n(`
  `),t("span",{class:"token comment"},"<!-- ...content -->"),n(`
`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("div")]),t("span",{class:"token punctuation"},">")])])]),t(u)]),_:1}),t("p",null,[n("However, if you are using "),t("code",{class:"doc-token"},"capture"),n(", "),t("code",{class:"doc-token"},"mouseCapture"),n(" or "),t("code",{class:"doc-token"},"keyCapture"),n(" modifiers then events will first reach the TouchRepeat directive then the inner content, so TouchRepeat will still trigger.")]),t("h2",{id:"note-on-hmr",class:"doc-heading doc-h2",onClick:r=>l(m)("note-on-hmr")},"Note on HMR",8,["onClick"]),t("p",null,"Due to performance reasons, not all of the modifiers are reactive. Some require a window/page/component refresh to get updated. Please check the API card for the modifiers which are not marked as reactive.")]}),_:1},H))}}},b=$.setup;$.setup=(f,v)=>{const g=B();return(g.modules||(g.modules=new Set)).add("src/pages/vue-directives/touch-repeat.md"),b?b(f,v):void 0};const tt=P($,[["__file","touch-repeat.md"]]);export{tt as default};
