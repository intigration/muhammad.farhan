import{resolveComponent as C,mergeProps as Q,withCtx as o,unref as k,createVNode as a,createTextVNode as n,useSSRContext as Y}from"vue";import{ssrRenderComponent as i}from"vue/server-renderer";import{c as y}from"./page-utils-C-QWsEHe.js";import{D as S,a as h}from"./DocPage-DKr-0pQn.js";import{D as $}from"./DocPrerender-DPOnWPFO.js";import{C as t}from"./CopyButton-l3ndfN49.js";import{_ as W}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const P={__name:"quasar-cli",__ssrInlineRender:!0,setup(x){const v=[{id:"trying-quasar-cli-online",title:"2. Trying Quasar CLI Online"},{id:"tl-dr",title:"3. TL;DR"},{id:"installation-project-scaffolding",title:"4. Installation / Project Scaffolding"},{id:"how-quasar-cli-works",title:"5. How Quasar CLI works"},{id:"what-next",title:"6. What next?"}];return(w,L,N,M)=>{const q=C("q-btn"),u=C("q-tab-panel");L(i(S,Q({title:"Quasar CLI",desc:"How to use the Quasar CLI, the premium developer experience for free.",heading:"","edit-link":"start/quasar-cli",toc:v},M),{default:o((T,p,b,e)=>{if(p)p(`<p${e}>Quasar CLI is the pride of Quasar Framework. You can seamlessly build:</p><ul${e}><li${e}>a SPA (Single Page Application/Website),</li><li${e}>a SSR (Server-side Rendered App/Website),</li><li${e}>a PWA (Progressive Web App),</li><li${e}>a BEX (Browser Extensions),</li><li${e}>a Mobile App (through Cordova or Capacitor),</li><li${e}>an Electron App</li></ul><p${e}>…within the same project folder, ensuring you are <strong${e}>following the best Quasar practices while everything will simply work out of the box</strong>.</p><h2 id="trying-quasar-cli-online" class="doc-heading doc-h2"${e}>Trying Quasar CLI Online</h2><p${e}>You can try Quasar CLI online directly in the browser, without installing anything! You will also be able to use the command line, so it will be almost identical to creating a project locally.</p>`),p(i(q,{"no-wrap":"",href:"https://stackblitz.quasar.dev",target:"_blank",label:"Open in Stackblitz"},null,b,e)),p(`<h2 id="tl-dr" class="doc-heading doc-h2"${e}>TL;DR</h2><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>Requirements:</p><ul${e}><li${e}>Node 14+</li><li${e}>Yarn v1 (strongly recommended), PNPM, NPM or Bun</li></ul></div>`),p(i(k($),{tabs:["Yarn","NPM","PNPM","Bun"]},{default:o((f,r,d,s)=>{if(r)r(i(u,{class:"q-pa-none",name:"Yarn"},{default:o((g,c,m,l)=>{if(c)c(`<pre class="doc-code"${l}><code${l}>$ <span class="token function"${l}>yarn</span> global <span class="token function"${l}>add</span> @quasar/cli
$ <span class="token function"${l}>yarn</span> create quasar</code></pre>`),c(i(t,{lang:"bash"},null,m,l));else return[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"yarn"),n(" global "),a("span",{class:"token function"},"add"),n(` @quasar/cli
$ `),a("span",{class:"token function"},"yarn"),n(" create quasar")])]),a(t,{lang:"bash"})]}),_:1},d,s)),r(i(u,{class:"q-pa-none",name:"NPM"},{default:o((g,c,m,l)=>{if(c)c(`<pre class="doc-code"${l}><code${l}>$ <span class="token function"${l}>npm</span> i <span class="token parameter variable"${l}>-g</span> @quasar/cli
$ <span class="token function"${l}>npm</span> init quasar</code></pre>`),c(i(t,{lang:"bash"},null,m,l));else return[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"npm"),n(" i "),a("span",{class:"token parameter variable"},"-g"),n(` @quasar/cli
$ `),a("span",{class:"token function"},"npm"),n(" init quasar")])]),a(t,{lang:"bash"})]}),_:1},d,s)),r(i(u,{class:"q-pa-none",name:"PNPM"},{default:o((g,c,m,l)=>{if(c)c(`<pre class="doc-code"${l}><code${l}><span class="token comment"${l}># experimental support</span>
$ <span class="token function"${l}>pnpm</span> <span class="token function"${l}>add</span> <span class="token parameter variable"${l}>-g</span> @quasar/cli
$ <span class="token function"${l}>pnpm</span> create quasar</code></pre>`),c(i(t,{lang:"bash"},null,m,l));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ `),a("span",{class:"token function"},"pnpm"),n(),a("span",{class:"token function"},"add"),n(),a("span",{class:"token parameter variable"},"-g"),n(` @quasar/cli
$ `),a("span",{class:"token function"},"pnpm"),n(" create quasar")])]),a(t,{lang:"bash"})]}),_:1},d,s)),r(i(u,{class:"q-pa-none",name:"Bun"},{default:o((g,c,m,l)=>{if(c)c(`<pre class="doc-code"${l}><code${l}><span class="token comment"${l}># experimental support</span>
$ bun <span class="token function"${l}>install</span> <span class="token parameter variable"${l}>-g</span> @quasar/cli
$ bun create quasar</code></pre>`),c(i(t,{lang:"bash"},null,m,l));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ bun `),a("span",{class:"token function"},"install"),n(),a("span",{class:"token parameter variable"},"-g"),n(` @quasar/cli
$ bun create quasar`)])]),a(t,{lang:"bash"})]}),_:1},d,s));else return[a(u,{class:"q-pa-none",name:"Yarn"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"yarn"),n(" global "),a("span",{class:"token function"},"add"),n(` @quasar/cli
$ `),a("span",{class:"token function"},"yarn"),n(" create quasar")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"NPM"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"npm"),n(" i "),a("span",{class:"token parameter variable"},"-g"),n(` @quasar/cli
$ `),a("span",{class:"token function"},"npm"),n(" init quasar")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"PNPM"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ `),a("span",{class:"token function"},"pnpm"),n(),a("span",{class:"token function"},"add"),n(),a("span",{class:"token parameter variable"},"-g"),n(` @quasar/cli
$ `),a("span",{class:"token function"},"pnpm"),n(" create quasar")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"Bun"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ bun `),a("span",{class:"token function"},"install"),n(),a("span",{class:"token parameter variable"},"-g"),n(` @quasar/cli
$ bun create quasar`)])]),a(t,{lang:"bash"})]),_:1})]}),_:1},b,e)),p(`<p${e}>Pick <code class="doc-token"${e}>Quasar CLI with Vite</code> if you want:</p><ul${e}><li${e}>Faster dev server start</li><li${e}>Faster hot updates</li><li${e}>Faster build</li><li${e}>Superior PWA, SSR and BEX Quasar modes (more features)</li></ul>`),p(i(q,{"icon-right":"launch","no-wrap":"",label:"View Components",to:"/components"},null,b,e)),p(`<h2 id="installation-project-scaffolding" class="doc-heading doc-h2"${e}>Installation / Project Scaffolding</h2><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>Requirements:</p><ul${e}><li${e}>Node 12+ for Quasar CLI with Webpack, Node 14+ for Quasar CLI with Vite.</li><li${e}>Yarn v1 (strongly recommended), PNPM, or NPM.</li></ul></div><ol${e}><li${e}><p${e}>Let’s create a Quasar app:</p>`),p(i(k($),{tabs:["Yarn","NPM","PNPM","Bun"]},{default:o((f,r,d,s)=>{if(r)r(i(u,{class:"q-pa-none",name:"Yarn"},{default:o((g,c,m,l)=>{if(c)c(`<pre class="doc-code"${l}><code${l}>$ <span class="token function"${l}>yarn</span> create quasar</code></pre>`),c(i(t,{lang:"bash"},null,m,l));else return[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"yarn"),n(" create quasar")])]),a(t,{lang:"bash"})]}),_:1},d,s)),r(i(u,{class:"q-pa-none",name:"NPM"},{default:o((g,c,m,l)=>{if(c)c(`<pre class="doc-code"${l}><code${l}>$ <span class="token function"${l}>npm</span> init quasar</code></pre>`),c(i(t,{lang:"bash"},null,m,l));else return[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"npm"),n(" init quasar")])]),a(t,{lang:"bash"})]}),_:1},d,s)),r(i(u,{class:"q-pa-none",name:"PNPM"},{default:o((g,c,m,l)=>{if(c)c(`<pre class="doc-code"${l}><code${l}><span class="token comment"${l}># experimental support</span>
$ <span class="token function"${l}>pnpm</span> create quasar</code></pre>`),c(i(t,{lang:"bash"},null,m,l));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ `),a("span",{class:"token function"},"pnpm"),n(" create quasar")])]),a(t,{lang:"bash"})]}),_:1},d,s)),r(i(u,{class:"q-pa-none",name:"Bun"},{default:o((g,c,m,l)=>{if(c)c(`<pre class="doc-code"${l}><code${l}><span class="token comment"${l}># experimental support</span>
$ bun create quasar</code></pre>`),c(i(t,{lang:"bash"},null,m,l));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ bun create quasar`)])]),a(t,{lang:"bash"})]}),_:1},d,s));else return[a(u,{class:"q-pa-none",name:"Yarn"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"yarn"),n(" create quasar")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"NPM"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"npm"),n(" init quasar")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"PNPM"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ `),a("span",{class:"token function"},"pnpm"),n(" create quasar")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"Bun"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ bun create quasar`)])]),a(t,{lang:"bash"})]),_:1})]}),_:1},b,e)),p(` <br${e}><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>You may be presented with a confirmation to install the <code class="doc-token"${e}>create-quasar</code> package, press the enter key to confirm.</p></div></li><li${e}><p${e}>Pick the <code class="doc-token"${e}>App with Quasar CLI</code> option then <code class="doc-token"${e}>Quasar v2</code>.</p></li><li${e}><p${e}>You will then be asked which Quasar App CLI you want. Do you prefer the Vite one or the Webpack one?</p><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>Tip: pick &quot;Quasar CLI with Vite&quot; if you want:</p><ul${e}><li${e}>Faster dev server start</li><li${e}>Faster hot updates</li><li${e}>Faster build</li><li${e}>Superior PWA, SSR and BEX Quasar modes (more features)</li></ul></div></li><li${e}><p${e}>Answer the rest of the questions and you’re almost done.</p></li><li${e}><p${e}>Now, do you want to be able to run Quasar CLI commands directly (eg. <code class="doc-token"${e}>$ quasar dev/build</code>) or through yarn or npx (<code class="doc-token"${e}>$ yarn quasar dev/build</code> / <code class="doc-token"${e}>npx quasar dev/build</code>)?</p><p${e}>We strongly recommend to pick the first choice and be able to run commands directly. Actually, you’ll be able to do even more than just this (eg. “quasar upgrade” or “quasar serve” commands). For this, you’ll need to globally install the <code class="doc-token"${e}>@quasar/cli</code> package:</p>`),p(i(k($),{tabs:["Yarn","NPM","PNPM","Bun"]},{default:o((f,r,d,s)=>{if(r)r(i(u,{class:"q-pa-none",name:"Yarn"},{default:o((g,c,m,l)=>{if(c)c(`<pre class="doc-code"${l}><code${l}>$ <span class="token function"${l}>yarn</span> global <span class="token function"${l}>add</span> @quasar/cli</code></pre>`),c(i(t,{lang:"bash"},null,m,l));else return[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"yarn"),n(" global "),a("span",{class:"token function"},"add"),n(" @quasar/cli")])]),a(t,{lang:"bash"})]}),_:1},d,s)),r(i(u,{class:"q-pa-none",name:"NPM"},{default:o((g,c,m,l)=>{if(c)c(`<pre class="doc-code"${l}><code${l}>$ <span class="token function"${l}>npm</span> i <span class="token parameter variable"${l}>-g</span> @quasar/cli</code></pre>`),c(i(t,{lang:"bash"},null,m,l));else return[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"npm"),n(" i "),a("span",{class:"token parameter variable"},"-g"),n(" @quasar/cli")])]),a(t,{lang:"bash"})]}),_:1},d,s)),r(i(u,{class:"q-pa-none",name:"PNPM"},{default:o((g,c,m,l)=>{if(c)c(`<pre class="doc-code"${l}><code${l}><span class="token comment"${l}># experimental support</span>
$ <span class="token function"${l}>pnpm</span> <span class="token function"${l}>add</span> <span class="token parameter variable"${l}>-g</span> @quasar/cli</code></pre>`),c(i(t,{lang:"bash"},null,m,l));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ `),a("span",{class:"token function"},"pnpm"),n(),a("span",{class:"token function"},"add"),n(),a("span",{class:"token parameter variable"},"-g"),n(" @quasar/cli")])]),a(t,{lang:"bash"})]}),_:1},d,s)),r(i(u,{class:"q-pa-none",name:"Bun"},{default:o((g,c,m,l)=>{if(c)c(`<pre class="doc-code"${l}><code${l}><span class="token comment"${l}># experimental support</span>
$ bun <span class="token function"${l}>install</span> <span class="token parameter variable"${l}>-g</span> @quasar/cli</code></pre>`),c(i(t,{lang:"bash"},null,m,l));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ bun `),a("span",{class:"token function"},"install"),n(),a("span",{class:"token parameter variable"},"-g"),n(" @quasar/cli")])]),a(t,{lang:"bash"})]}),_:1},d,s));else return[a(u,{class:"q-pa-none",name:"Yarn"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"yarn"),n(" global "),a("span",{class:"token function"},"add"),n(" @quasar/cli")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"NPM"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"npm"),n(" i "),a("span",{class:"token parameter variable"},"-g"),n(" @quasar/cli")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"PNPM"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ `),a("span",{class:"token function"},"pnpm"),n(),a("span",{class:"token function"},"add"),n(),a("span",{class:"token parameter variable"},"-g"),n(" @quasar/cli")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"Bun"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ bun `),a("span",{class:"token function"},"install"),n(),a("span",{class:"token parameter variable"},"-g"),n(" @quasar/cli")])]),a(t,{lang:"bash"})]),_:1})]}),_:1},b,e)),p(`<div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>If you are using Yarn, make sure that the Yarn `),p(i(h,{to:"https://yarnpkg.com/lang/en/docs/cli/global/"},{default:o((f,r,d,s)=>{if(r)r("global install location");else return[n("global install location")]}),_:1},b,e)),p(` is in your PATH: <br${e}><br${e}></p>`),p(i(k($),null,{default:o((f,r,d,s)=>{if(r)r(`<pre class="doc-code"${s}><code${s}><span class="token comment"${s}># in ~/.bashrc or equivalent</span>
<span class="token builtin class-name"${s}>export</span> <span class="token assign-left variable"${s}><span class="token environment constant"${s}>PATH</span></span><span class="token operator"${s}>=</span><span class="token string"${s}>&quot;<span class="token variable"${s}><span class="token variable"${s}>$(</span><span class="token function"${s}>yarn</span> global bin<span class="token variable"${s}>)</span></span>:<span class="token environment constant"${s}>$PATH</span>&quot;</span>

<span class="token comment"${s}># for fish-shell:</span>
<span class="token builtin class-name"${s}>set</span> <span class="token parameter variable"${s}>-U</span> fish_user_paths <span class="token punctuation"${s}>(</span>yarn global bin<span class="token punctuation"${s}>)</span> <span class="token variable"${s}>$fish_user_paths</span></code></pre>`),r(i(t,{lang:"bash"},null,d,s));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# in ~/.bashrc or equivalent"),n(`
`),a("span",{class:"token builtin class-name"},"export"),n(),a("span",{class:"token assign-left variable"},[a("span",{class:"token environment constant"},"PATH")]),a("span",{class:"token operator"},"="),a("span",{class:"token string"},[n('"'),a("span",{class:"token variable"},[a("span",{class:"token variable"},"$("),a("span",{class:"token function"},"yarn"),n(" global bin"),a("span",{class:"token variable"},")")]),n(":"),a("span",{class:"token environment constant"},"$PATH"),n('"')]),n(`

`),a("span",{class:"token comment"},"# for fish-shell:"),n(`
`),a("span",{class:"token builtin class-name"},"set"),n(),a("span",{class:"token parameter variable"},"-U"),n(" fish_user_paths "),a("span",{class:"token punctuation"},"("),n("yarn global bin"),a("span",{class:"token punctuation"},")"),n(),a("span",{class:"token variable"},"$fish_user_paths")])]),a(t,{lang:"bash"})]}),_:1},b,e)),p(` <br${e}> Under Windows, modify user&#39;s PATH environment variable. If you are using yarn then add \`%LOCALAPPDATA%\\yarn\\bin\`, otherwise if you&#39;re using npm then add \`%APPDATA%\\npm\`. <br${e}> Or to do this easily, enter the following code in the terminal: `),p(i(k($),null,{default:o((f,r,d,s)=>{if(r)r(`<pre class="doc-code"${s}><code${s}><span class="token comment"${s}># If you&#39;re using Yarn:</span>
setx path <span class="token string"${s}>&quot;%path%;%LocalAppData%\\yarn<span class="token entity" title="\\b"${s}>\\b</span>in&quot;</span>

<span class="token comment"${s}># Or if you&#39;re using NPM:</span>
setx path <span class="token string"${s}>&quot;%path%;%AppData%<span class="token entity" title="\\n"${s}>\\n</span>pm&quot;</span></code></pre>`),r(i(t,{lang:"bash"},null,d,s));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# If you're using Yarn:"),n(`
setx path `),a("span",{class:"token string"},[n('"%path%;%LocalAppData%\\yarn'),a("span",{class:"token entity",title:"\\b"},"\\b"),n('in"')]),n(`

`),a("span",{class:"token comment"},"# Or if you're using NPM:"),n(`
setx path `),a("span",{class:"token string"},[n('"%path%;%AppData%'),a("span",{class:"token entity",title:"\\n"},"\\n"),n('pm"')])])]),a(t,{lang:"bash"})]}),_:1},b,e)),p(`</div><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>WSL2</p><p${e}>Microsoft’s recommended `),p(i(h,{to:"https://docs.microsoft.com/en-us/windows/nodejs/setup-on-wsl2"},{default:o((f,r,d,s)=>{if(r)r("Nodejs development environment setup in WSL2");else return[n("Nodejs development environment setup in WSL2")]}),_:1},b,e)),p(`.</p><p${e}>When using WSL2 (Windows Subsystem for Linux) `),p(i(h,{to:"https://docs.microsoft.com/en-us/windows/wsl/compare-versions#performance-across-os-file-systems"},{default:o((f,r,d,s)=>{if(r)r("Microsoft recommends");else return[n("Microsoft recommends")]}),_:1},b,e)),p(` keeping files in the linux file system to maximize performance. Projects will build around 3X slower and HMR (Hot Module Reload) will not work without a hack if the project files are on the Windows mount instead of the local linux file system. This is also true in Docker for Windows based development environments.</p></div></li></ol><h2 id="how-quasar-cli-works" class="doc-heading doc-h2"${e}>How Quasar CLI works</h2><p${e}>Quasar CLI (<code class="doc-token"${e}>@quasar/cli</code>) works in tandem with either <code class="doc-token"${e}>@quasar/app-vite</code> or <code class="doc-token"${e}>@quasar/app-webpack</code>. The first one is optional (but <strong${e}>strongly recommended</strong>) and allows you to run Quasar CLI commands directly and some other useful commands like <code class="doc-token"${e}>quasar upgrade</code> (upgrade Quasar packages seamlessly) or <code class="doc-token"${e}>quasar serve</code> (serve your distributable with an ad-hoc webserver). The second package is the heart of it (runs the important commands - dev, build, inspect, info, describe etc) and it gets installed locally into every Quasar project folder.</p><h4 id="running-without-the-global-quasar-cli" class="doc-heading doc-h4"${e}>Running without the global @quasar/cli</h4><p${e}>However, should you want independence of the globally installed <code class="doc-token"${e}>@quasar/cli</code> package, you have the possibility to directly run the Quasar CLI commands. It is <code class="doc-token"${e}>@quasar/app-vite</code> or <code class="doc-token"${e}>@quasar/app-webpack</code> (which is specific to each project folder) that will run all the CLI commands.</p><p${e}>Here are the options:</p><ol${e}><li${e}><p${e}>You can write npm scripts (in your <code class="doc-token"${e}>package.json</code>) to run Quasar commands.</p><p${e}>Example of adding a few npm scripts into your <code class="doc-token"${e}>package.json</code>:</p>`),p(i(k($),null,{default:o((f,r,d,s)=>{if(r)r(`<pre class="doc-code"${s}><code${s}><span class="token comment"${s}>// package.json</span>
<span class="token string-property property"${s}>&quot;scripts&quot;</span><span class="token operator"${s}>:</span> <span class="token punctuation"${s}>{</span>
  <span class="token string-property property"${s}>&quot;dev&quot;</span><span class="token operator"${s}>:</span> <span class="token string"${s}>&quot;quasar dev&quot;</span><span class="token punctuation"${s}>,</span>
  <span class="token string-property property"${s}>&quot;build&quot;</span><span class="token operator"${s}>:</span> <span class="token string"${s}>&quot;quasar build&quot;</span><span class="token punctuation"${s}>,</span>
  <span class="token string-property property"${s}>&quot;build:pwa&quot;</span><span class="token operator"${s}>:</span> <span class="token string"${s}>&quot;quasar build -m pwa&quot;</span>
<span class="token punctuation"${s}>}</span></code></pre>`),r(i(t,null,null,d,s));else return[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"// package.json"),n(`
`),a("span",{class:"token string-property property"},'"scripts"'),a("span",{class:"token operator"},":"),n(),a("span",{class:"token punctuation"},"{"),n(`
  `),a("span",{class:"token string-property property"},'"dev"'),a("span",{class:"token operator"},":"),n(),a("span",{class:"token string"},'"quasar dev"'),a("span",{class:"token punctuation"},","),n(`
  `),a("span",{class:"token string-property property"},'"build"'),a("span",{class:"token operator"},":"),n(),a("span",{class:"token string"},'"quasar build"'),a("span",{class:"token punctuation"},","),n(`
  `),a("span",{class:"token string-property property"},'"build:pwa"'),a("span",{class:"token operator"},":"),n(),a("span",{class:"token string"},'"quasar build -m pwa"'),n(`
`),a("span",{class:"token punctuation"},"}")])]),a(t)]}),_:1},b,e)),p(`<p${e}>The above will allow you to run <code class="doc-token"${e}>$ yarn dev</code> or <code class="doc-token"${e}>$ yarn build</code> without the need of a globally installed <code class="doc-token"${e}>@quasar/cli</code>, should you wish to do so.</p></li><li${e}><p${e}>Alternatively, you can directly run the Quasar CLI commands through Yarn:</p>`),p(i(k($),null,{default:o((f,r,d,s)=>{if(r)r(`<pre class="doc-code"${s}><code${s}>$ <span class="token function"${s}>yarn</span> quasar dev
$ <span class="token function"${s}>yarn</span> quasar inspect
<span class="token comment"${s}># ..etc</span></code></pre>`),r(i(t,{lang:"bash"},null,d,s));else return[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"yarn"),n(` quasar dev
$ `),a("span",{class:"token function"},"yarn"),n(` quasar inspect
`),a("span",{class:"token comment"},"# ..etc")])]),a(t,{lang:"bash"})]}),_:1},b,e)),p(` <br${e}></li><li${e}><p${e}>Or use `),p(i(h,{to:"https://github.com/npm/npx"},{default:o((f,r,d,s)=>{if(r)r("npx");else return[n("npx")]}),_:1},b,e)),p(":</p>"),p(i(k($),null,{default:o((f,r,d,s)=>{if(r)r(`<pre class="doc-code"${s}><code${s}>$ npx quasar dev
$ npx quasar inspect
<span class="token comment"${s}># ..etc</span></code></pre>`),r(i(t,{lang:"bash"},null,d,s));else return[a("pre",{class:"doc-code"},[a("code",null,[n(`$ npx quasar dev
$ npx quasar inspect
`),a("span",{class:"token comment"},"# ..etc")])]),a(t,{lang:"bash"})]}),_:1},b,e)),p(`</li></ol><h2 id="what-next" class="doc-heading doc-h2"${e}>What next?</h2>`),p(i(q,{"icon-right":"launch","no-wrap":"",label:"View Components",to:"/components"},null,b,e));else return[a("p",null,"Quasar CLI is the pride of Quasar Framework. You can seamlessly build:"),a("ul",null,[a("li",null,"a SPA (Single Page Application/Website),"),a("li",null,"a SSR (Server-side Rendered App/Website),"),a("li",null,"a PWA (Progressive Web App),"),a("li",null,"a BEX (Browser Extensions),"),a("li",null,"a Mobile App (through Cordova or Capacitor),"),a("li",null,"an Electron App")]),a("p",null,[n("…within the same project folder, ensuring you are "),a("strong",null,"following the best Quasar practices while everything will simply work out of the box"),n(".")]),a("h2",{id:"trying-quasar-cli-online",class:"doc-heading doc-h2",onClick:f=>k(y)("trying-quasar-cli-online")},"Trying Quasar CLI Online",8,["onClick"]),a("p",null,"You can try Quasar CLI online directly in the browser, without installing anything! You will also be able to use the command line, so it will be almost identical to creating a project locally."),a(q,{"no-wrap":"",href:"https://stackblitz.quasar.dev",target:"_blank",label:"Open in Stackblitz"}),a("h2",{id:"tl-dr",class:"doc-heading doc-h2",onClick:f=>k(y)("tl-dr")},"TL;DR",8,["onClick"]),a("div",{class:"doc-note doc-note--tip"},[a("p",{class:"doc-note__title"},"Requirements:"),a("ul",null,[a("li",null,"Node 14+"),a("li",null,"Yarn v1 (strongly recommended), PNPM, NPM or Bun")])]),a(k($),{tabs:["Yarn","NPM","PNPM","Bun"]},{default:o(()=>[a(u,{class:"q-pa-none",name:"Yarn"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"yarn"),n(" global "),a("span",{class:"token function"},"add"),n(` @quasar/cli
$ `),a("span",{class:"token function"},"yarn"),n(" create quasar")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"NPM"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"npm"),n(" i "),a("span",{class:"token parameter variable"},"-g"),n(` @quasar/cli
$ `),a("span",{class:"token function"},"npm"),n(" init quasar")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"PNPM"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ `),a("span",{class:"token function"},"pnpm"),n(),a("span",{class:"token function"},"add"),n(),a("span",{class:"token parameter variable"},"-g"),n(` @quasar/cli
$ `),a("span",{class:"token function"},"pnpm"),n(" create quasar")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"Bun"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ bun `),a("span",{class:"token function"},"install"),n(),a("span",{class:"token parameter variable"},"-g"),n(` @quasar/cli
$ bun create quasar`)])]),a(t,{lang:"bash"})]),_:1})]),_:1}),a("p",null,[n("Pick "),a("code",{class:"doc-token"},"Quasar CLI with Vite"),n(" if you want:")]),a("ul",null,[a("li",null,"Faster dev server start"),a("li",null,"Faster hot updates"),a("li",null,"Faster build"),a("li",null,"Superior PWA, SSR and BEX Quasar modes (more features)")]),a(q,{"icon-right":"launch","no-wrap":"",label:"View Components",to:"/components"}),a("h2",{id:"installation-project-scaffolding",class:"doc-heading doc-h2",onClick:f=>k(y)("installation-project-scaffolding")},"Installation / Project Scaffolding",8,["onClick"]),a("div",{class:"doc-note doc-note--tip"},[a("p",{class:"doc-note__title"},"Requirements:"),a("ul",null,[a("li",null,"Node 12+ for Quasar CLI with Webpack, Node 14+ for Quasar CLI with Vite."),a("li",null,"Yarn v1 (strongly recommended), PNPM, or NPM.")])]),a("ol",null,[a("li",null,[a("p",null,"Let’s create a Quasar app:"),a(k($),{tabs:["Yarn","NPM","PNPM","Bun"]},{default:o(()=>[a(u,{class:"q-pa-none",name:"Yarn"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"yarn"),n(" create quasar")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"NPM"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"npm"),n(" init quasar")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"PNPM"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ `),a("span",{class:"token function"},"pnpm"),n(" create quasar")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"Bun"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ bun create quasar`)])]),a(t,{lang:"bash"})]),_:1})]),_:1}),n(),a("br"),a("div",{class:"doc-note doc-note--tip"},[a("p",{class:"doc-note__title"},"TIP"),a("p",null,[n("You may be presented with a confirmation to install the "),a("code",{class:"doc-token"},"create-quasar"),n(" package, press the enter key to confirm.")])])]),a("li",null,[a("p",null,[n("Pick the "),a("code",{class:"doc-token"},"App with Quasar CLI"),n(" option then "),a("code",{class:"doc-token"},"Quasar v2"),n(".")])]),a("li",null,[a("p",null,"You will then be asked which Quasar App CLI you want. Do you prefer the Vite one or the Webpack one?"),a("div",{class:"doc-note doc-note--tip"},[a("p",{class:"doc-note__title"},'Tip: pick "Quasar CLI with Vite" if you want:'),a("ul",null,[a("li",null,"Faster dev server start"),a("li",null,"Faster hot updates"),a("li",null,"Faster build"),a("li",null,"Superior PWA, SSR and BEX Quasar modes (more features)")])])]),a("li",null,[a("p",null,"Answer the rest of the questions and you’re almost done.")]),a("li",null,[a("p",null,[n("Now, do you want to be able to run Quasar CLI commands directly (eg. "),a("code",{class:"doc-token"},"$ quasar dev/build"),n(") or through yarn or npx ("),a("code",{class:"doc-token"},"$ yarn quasar dev/build"),n(" / "),a("code",{class:"doc-token"},"npx quasar dev/build"),n(")?")]),a("p",null,[n("We strongly recommend to pick the first choice and be able to run commands directly. Actually, you’ll be able to do even more than just this (eg. “quasar upgrade” or “quasar serve” commands). For this, you’ll need to globally install the "),a("code",{class:"doc-token"},"@quasar/cli"),n(" package:")]),a(k($),{tabs:["Yarn","NPM","PNPM","Bun"]},{default:o(()=>[a(u,{class:"q-pa-none",name:"Yarn"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"yarn"),n(" global "),a("span",{class:"token function"},"add"),n(" @quasar/cli")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"NPM"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"npm"),n(" i "),a("span",{class:"token parameter variable"},"-g"),n(" @quasar/cli")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"PNPM"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ `),a("span",{class:"token function"},"pnpm"),n(),a("span",{class:"token function"},"add"),n(),a("span",{class:"token parameter variable"},"-g"),n(" @quasar/cli")])]),a(t,{lang:"bash"})]),_:1}),a(u,{class:"q-pa-none",name:"Bun"},{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# experimental support"),n(`
$ bun `),a("span",{class:"token function"},"install"),n(),a("span",{class:"token parameter variable"},"-g"),n(" @quasar/cli")])]),a(t,{lang:"bash"})]),_:1})]),_:1}),a("div",{class:"doc-note doc-note--tip"},[a("p",{class:"doc-note__title"},"TIP"),a("p",null,[n("If you are using Yarn, make sure that the Yarn "),a(h,{to:"https://yarnpkg.com/lang/en/docs/cli/global/"},{default:o(()=>[n("global install location")]),_:1}),n(" is in your PATH: "),a("br"),a("br")]),a(k($),null,{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# in ~/.bashrc or equivalent"),n(`
`),a("span",{class:"token builtin class-name"},"export"),n(),a("span",{class:"token assign-left variable"},[a("span",{class:"token environment constant"},"PATH")]),a("span",{class:"token operator"},"="),a("span",{class:"token string"},[n('"'),a("span",{class:"token variable"},[a("span",{class:"token variable"},"$("),a("span",{class:"token function"},"yarn"),n(" global bin"),a("span",{class:"token variable"},")")]),n(":"),a("span",{class:"token environment constant"},"$PATH"),n('"')]),n(`

`),a("span",{class:"token comment"},"# for fish-shell:"),n(`
`),a("span",{class:"token builtin class-name"},"set"),n(),a("span",{class:"token parameter variable"},"-U"),n(" fish_user_paths "),a("span",{class:"token punctuation"},"("),n("yarn global bin"),a("span",{class:"token punctuation"},")"),n(),a("span",{class:"token variable"},"$fish_user_paths")])]),a(t,{lang:"bash"})]),_:1}),n(),a("br"),n(" Under Windows, modify user's PATH environment variable. If you are using yarn then add `%LOCALAPPDATA%\\yarn\\bin`, otherwise if you're using npm then add `%APPDATA%\\npm`. "),a("br"),n(" Or to do this easily, enter the following code in the terminal: "),a(k($),null,{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"# If you're using Yarn:"),n(`
setx path `),a("span",{class:"token string"},[n('"%path%;%LocalAppData%\\yarn'),a("span",{class:"token entity",title:"\\b"},"\\b"),n('in"')]),n(`

`),a("span",{class:"token comment"},"# Or if you're using NPM:"),n(`
setx path `),a("span",{class:"token string"},[n('"%path%;%AppData%'),a("span",{class:"token entity",title:"\\n"},"\\n"),n('pm"')])])]),a(t,{lang:"bash"})]),_:1})]),a("div",{class:"doc-note doc-note--tip"},[a("p",{class:"doc-note__title"},"WSL2"),a("p",null,[n("Microsoft’s recommended "),a(h,{to:"https://docs.microsoft.com/en-us/windows/nodejs/setup-on-wsl2"},{default:o(()=>[n("Nodejs development environment setup in WSL2")]),_:1}),n(".")]),a("p",null,[n("When using WSL2 (Windows Subsystem for Linux) "),a(h,{to:"https://docs.microsoft.com/en-us/windows/wsl/compare-versions#performance-across-os-file-systems"},{default:o(()=>[n("Microsoft recommends")]),_:1}),n(" keeping files in the linux file system to maximize performance. Projects will build around 3X slower and HMR (Hot Module Reload) will not work without a hack if the project files are on the Windows mount instead of the local linux file system. This is also true in Docker for Windows based development environments.")])])])]),a("h2",{id:"how-quasar-cli-works",class:"doc-heading doc-h2",onClick:f=>k(y)("how-quasar-cli-works")},"How Quasar CLI works",8,["onClick"]),a("p",null,[n("Quasar CLI ("),a("code",{class:"doc-token"},"@quasar/cli"),n(") works in tandem with either "),a("code",{class:"doc-token"},"@quasar/app-vite"),n(" or "),a("code",{class:"doc-token"},"@quasar/app-webpack"),n(". The first one is optional (but "),a("strong",null,"strongly recommended"),n(") and allows you to run Quasar CLI commands directly and some other useful commands like "),a("code",{class:"doc-token"},"quasar upgrade"),n(" (upgrade Quasar packages seamlessly) or "),a("code",{class:"doc-token"},"quasar serve"),n(" (serve your distributable with an ad-hoc webserver). The second package is the heart of it (runs the important commands - dev, build, inspect, info, describe etc) and it gets installed locally into every Quasar project folder.")]),a("h4",{id:"running-without-the-global-quasar-cli",class:"doc-heading doc-h4",onClick:f=>k(y)("running-without-the-global-quasar-cli")},"Running without the global @quasar/cli",8,["onClick"]),a("p",null,[n("However, should you want independence of the globally installed "),a("code",{class:"doc-token"},"@quasar/cli"),n(" package, you have the possibility to directly run the Quasar CLI commands. It is "),a("code",{class:"doc-token"},"@quasar/app-vite"),n(" or "),a("code",{class:"doc-token"},"@quasar/app-webpack"),n(" (which is specific to each project folder) that will run all the CLI commands.")]),a("p",null,"Here are the options:"),a("ol",null,[a("li",null,[a("p",null,[n("You can write npm scripts (in your "),a("code",{class:"doc-token"},"package.json"),n(") to run Quasar commands.")]),a("p",null,[n("Example of adding a few npm scripts into your "),a("code",{class:"doc-token"},"package.json"),n(":")]),a(k($),null,{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[a("span",{class:"token comment"},"// package.json"),n(`
`),a("span",{class:"token string-property property"},'"scripts"'),a("span",{class:"token operator"},":"),n(),a("span",{class:"token punctuation"},"{"),n(`
  `),a("span",{class:"token string-property property"},'"dev"'),a("span",{class:"token operator"},":"),n(),a("span",{class:"token string"},'"quasar dev"'),a("span",{class:"token punctuation"},","),n(`
  `),a("span",{class:"token string-property property"},'"build"'),a("span",{class:"token operator"},":"),n(),a("span",{class:"token string"},'"quasar build"'),a("span",{class:"token punctuation"},","),n(`
  `),a("span",{class:"token string-property property"},'"build:pwa"'),a("span",{class:"token operator"},":"),n(),a("span",{class:"token string"},'"quasar build -m pwa"'),n(`
`),a("span",{class:"token punctuation"},"}")])]),a(t)]),_:1}),a("p",null,[n("The above will allow you to run "),a("code",{class:"doc-token"},"$ yarn dev"),n(" or "),a("code",{class:"doc-token"},"$ yarn build"),n(" without the need of a globally installed "),a("code",{class:"doc-token"},"@quasar/cli"),n(", should you wish to do so.")])]),a("li",null,[a("p",null,"Alternatively, you can directly run the Quasar CLI commands through Yarn:"),a(k($),null,{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[n("$ "),a("span",{class:"token function"},"yarn"),n(` quasar dev
$ `),a("span",{class:"token function"},"yarn"),n(` quasar inspect
`),a("span",{class:"token comment"},"# ..etc")])]),a(t,{lang:"bash"})]),_:1}),n(),a("br")]),a("li",null,[a("p",null,[n("Or use "),a(h,{to:"https://github.com/npm/npx"},{default:o(()=>[n("npx")]),_:1}),n(":")]),a(k($),null,{default:o(()=>[a("pre",{class:"doc-code"},[a("code",null,[n(`$ npx quasar dev
$ npx quasar inspect
`),a("span",{class:"token comment"},"# ..etc")])]),a(t,{lang:"bash"})]),_:1})])]),a("h2",{id:"what-next",class:"doc-heading doc-h2",onClick:f=>k(y)("what-next")},"What next?",8,["onClick"]),a(q,{"icon-right":"launch","no-wrap":"",label:"View Components",to:"/components"})]}),_:1},N))}}},A=P.setup;P.setup=(x,v)=>{const w=Y();return(w.modules||(w.modules=new Set)).add("src/pages/start/quasar-cli.md"),A?A(x,v):void 0};const K=W(P,[["__file","quasar-cli.md"]]);export{K as default};
