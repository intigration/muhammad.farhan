import{provide as p,resolveComponent as x,mergeProps as R,withCtx as g,createTextVNode as n,createVNode as l,unref as s,useSSRContext as S}from"vue";import{ssrRenderComponent as a}from"vue/server-renderer";import{c as d}from"./page-utils-C-QWsEHe.js";import{D,a as k}from"./DocPage-DKr-0pQn.js";import{D as i}from"./DocExample-BcaABDtE.js";import{D as v}from"./DocApi-Df9ryd6x.js";import{_ as z}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const u={__name:"range",__ssrInlineRender:!0,setup(f){p("_q_ex",{name:"QRange"});const m=[{name:"Slider",category:"Form Components",path:"/vue-components/slider"},{name:"Field (wrapper)",category:"Form Components",path:"/vue-components/field"}],h=[{id:"qrange-api",title:"2. QRange API",deep:!0},{id:"usage",title:"3. Usage"},{id:"standard",title:"3.1. Standard",sub:!0},{id:"vertical",title:"3.2. Vertical",sub:!0},{id:"with-inner-min-max",title:"3.3. With inner min/max",sub:!0},{id:"with-step",title:"3.4. With step",sub:!0},{id:"with-label",title:"3.5. With label",sub:!0},{id:"markers",title:"3.6. Markers",sub:!0},{id:"marker-labels",title:"3.7. Marker labels",sub:!0},{id:"other-customizations",title:"3.8. Other customizations",sub:!0},{id:"dragging-range",title:"3.9. Dragging range",sub:!0},{id:"lazy-input",title:"3.10. Lazy input",sub:!0},{id:"null-values",title:"3.11. Null values",sub:!0},{id:"reverse",title:"3.12. Reverse",sub:!0},{id:"force-dark-mode",title:"3.13. Force dark mode",sub:!0},{id:"readonly-and-disable",title:"3.14. Readonly and disable",sub:!0},{id:"with-qitem",title:"3.15. With QItem",sub:!0},{id:"native-form-submit",title:"3.16. Native form submit",sub:!0}];return(L,y,$,C)=>{const c=x("q-badge");y(a(D,R({title:"Range",desc:"The QRange Vue component offers a way for the user to select from a sub-range of values between a maximum and maximum value, with optional steps.",heading:"","edit-link":"vue-components/range",toc:h,related:m},C),{default:g((N,t,o,e)=>{if(t)t(`<p${e}>The QRange component is a great way to offer the user the selection of a sub-range of values between a minimum and maximum value, with optional steps to select those values. An example use case for the Range component would be to offer a price range selection.</p><p${e}>Also check out its “sibling”, the `),t(a(k,{to:"/vue-components/slider"},{default:g((r,b,Q,M)=>{if(b)b("QSlider");else return[n("QSlider")]}),_:1},o,e)),t(" component.</p>"),t(a(v,{file:"QRange"},null,o,e)),t(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><p${e}>Notice we are using an object for the selection, which holds values for both the lower value of the selected range - <code class="doc-token"${e}>rangeValues.min</code> and the higher value - <code class="doc-token"${e}>rangeValues.max</code>.</p><h3 id="standard" class="doc-heading doc-h3"${e}>Standard</h3><div class="doc-note doc-note--warning"${e}><p class="doc-note__title"${e}>WARNING</p><p${e}>You are responsible for accommodating the space around QRange so that the label and marker labels won’t overlap the other content on your page. You can use CSS margin or padding for this purpose.</p></div>`),t(a(i,{title:"Standard",file:"Standard"},null,o,e)),t(`<h3 id="vertical" class="doc-heading doc-h3"${e}>Vertical</h3>`),t(a(i,{title:"Vertical orientation",file:"Vertical"},null,o,e)),t(`<h3 id="with-inner-min-max" class="doc-heading doc-h3"${e}>With inner min/max `),t(a(c,{label:"v2.4+"},null,o,e)),t(`</h3><p${e}>Sometimes you need to restrict the model value to an interval inside of the track’s length. For this purpose, use <code class="doc-token"${e}>inner-min</code> and <code class="doc-token"${e}>inner-max</code> props. First prop needs to be higher or equal to <code class="doc-token"${e}>min</code> prop while the latter needs to be lower or equal to the <code class="doc-token"${e}>max</code> prop.</p>`),t(a(i,{title:"Inner min/max",file:"InnerMinMax"},null,o,e)),t(`<h3 id="with-step" class="doc-heading doc-h3"${e}>With step</h3>`),t(a(i,{title:"With Step",file:"Step"},null,o,e)),t(`<p${e}>The <code class="doc-token"${e}>step</code> property can also be a floating point number (or numeric <code class="doc-token"${e}>0</code> if you need infinite precision).</p>`),t(a(i,{title:"Floating point",file:"FloatingPoint"},null,o,e)),t(a(i,{title:"Snaps to steps",file:"Snap"},null,o,e)),t(`<h3 id="with-label" class="doc-heading doc-h3"${e}>With label</h3><p${e}>In the example below, move the slider to see the label.</p>`),t(a(i,{title:"With label",file:"Label"},null,o,e)),t(a(i,{title:"Always display label",file:"LabelAlways"},null,o,e)),t(a(i,{title:"Custom label values",file:"LabelValue"},null,o,e)),t(`<p${e}>The example below is better highlighting how QRange handles label positioning so that it always stays inside the QRange’s box horizontally.</p>`),t(a(i,{title:"Long label",file:"LabelLong"},null,o,e)),t(`<h3 id="markers" class="doc-heading doc-h3"${e}>Markers</h3>`),t(a(i,{title:"Markers",file:"Markers"},null,o,e)),t(`<h3 id="marker-labels" class="doc-heading doc-h3"${e}>Marker labels `),t(a(c,{label:"v2.4+"},null,o,e)),t("</h3>"),t(a(i,{title:"Marker labels",file:"MarkerLabels"},null,o,e)),t(`<div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP on slots</p><p${e}>In order to use the marker label slots (see below), you must enable them by using the <code class="doc-token"${e}>marker-labels</code> prop.</p></div>`),t(a(i,{title:"Marker label slots",file:"MarkerLabelSlots"},null,o,e)),t(`<h3 id="other-customizations" class="doc-heading doc-h3"${e}>Other customizations `),t(a(c,{label:"v2.4+"},null,o,e)),t("</h3>"),t(a(i,{title:"Color customizations",file:"RangeColoring"},null,o,e)),t(a(i,{title:"Hide selection bar",file:"NoSelection"},null,o,e)),t(a(i,{title:"Custom track images",file:"TrackImages"},null,o,e)),t(a(i,{title:"Track & thumb size",file:"RangeSizes"},null,o,e)),t(`<h3 id="dragging-range" class="doc-heading doc-h3"${e}>Dragging range</h3><p${e}>Use the <code class="doc-token"${e}>drag-range</code> or <code class="doc-token"${e}>drag-only-range</code> props to allow the user to move the selected range or only a predetermined range as a whole.</p>`),t(a(i,{title:"Drag range",file:"Drag"},null,o,e)),t(a(i,{title:"Drag range + snap to step",file:"DragSnap"},null,o,e)),t(a(i,{title:"Drag only range (fixed interval)",file:"DragOnly"},null,o,e)),t(`<h3 id="lazy-input" class="doc-heading doc-h3"${e}>Lazy input</h3>`),t(a(i,{title:"Lazy input",file:"Lazy"},null,o,e)),t(`<h3 id="null-values" class="doc-heading doc-h3"${e}>Null values</h3>`),t(a(i,{title:"Null values",file:"Null"},null,o,e)),t(`<h3 id="reverse" class="doc-heading doc-h3"${e}>Reverse</h3>`),t(a(i,{title:"In reverse",file:"Reverse"},null,o,e)),t(`<h3 id="force-dark-mode" class="doc-heading doc-h3"${e}>Force dark mode</h3>`),t(a(i,{title:"Force dark mode",file:"Dark"},null,o,e)),t(`<h3 id="readonly-and-disable" class="doc-heading doc-h3"${e}>Readonly and disable</h3>`),t(a(i,{title:"Readonly",file:"Readonly"},null,o,e)),t(a(i,{title:"Disable",file:"Disable"},null,o,e)),t(`<h3 id="with-qitem" class="doc-heading doc-h3"${e}>With QItem</h3>`),t(a(i,{title:"With QItem",file:"List"},null,o,e)),t(`<h3 id="native-form-submit" class="doc-heading doc-h3"${e}>Native form submit</h3><p${e}>When dealing with a native form which has an <code class="doc-token"${e}>action</code> and a <code class="doc-token"${e}>method</code> (eg. when using Quasar with ASP.NET controllers), you need to specify the <code class="doc-token"${e}>name</code> property on QRange, otherwise formData will not contain it (if it should):</p>`),t(a(i,{title:"Native form",file:"NativeForm"},null,o,e));else return[l("p",null,"The QRange component is a great way to offer the user the selection of a sub-range of values between a minimum and maximum value, with optional steps to select those values. An example use case for the Range component would be to offer a price range selection."),l("p",null,[n("Also check out its “sibling”, the "),l(k,{to:"/vue-components/slider"},{default:g(()=>[n("QSlider")]),_:1}),n(" component.")]),l(v,{file:"QRange"}),l("h2",{id:"usage",class:"doc-heading doc-h2",onClick:r=>s(d)("usage")},"Usage",8,["onClick"]),l("p",null,[n("Notice we are using an object for the selection, which holds values for both the lower value of the selected range - "),l("code",{class:"doc-token"},"rangeValues.min"),n(" and the higher value - "),l("code",{class:"doc-token"},"rangeValues.max"),n(".")]),l("h3",{id:"standard",class:"doc-heading doc-h3",onClick:r=>s(d)("standard")},"Standard",8,["onClick"]),l("div",{class:"doc-note doc-note--warning"},[l("p",{class:"doc-note__title"},"WARNING"),l("p",null,"You are responsible for accommodating the space around QRange so that the label and marker labels won’t overlap the other content on your page. You can use CSS margin or padding for this purpose.")]),l(i,{title:"Standard",file:"Standard"}),l("h3",{id:"vertical",class:"doc-heading doc-h3",onClick:r=>s(d)("vertical")},"Vertical",8,["onClick"]),l(i,{title:"Vertical orientation",file:"Vertical"}),l("h3",{id:"with-inner-min-max",class:"doc-heading doc-h3",onClick:r=>s(d)("with-inner-min-max")},[n("With inner min/max "),l(c,{label:"v2.4+"})],8,["onClick"]),l("p",null,[n("Sometimes you need to restrict the model value to an interval inside of the track’s length. For this purpose, use "),l("code",{class:"doc-token"},"inner-min"),n(" and "),l("code",{class:"doc-token"},"inner-max"),n(" props. First prop needs to be higher or equal to "),l("code",{class:"doc-token"},"min"),n(" prop while the latter needs to be lower or equal to the "),l("code",{class:"doc-token"},"max"),n(" prop.")]),l(i,{title:"Inner min/max",file:"InnerMinMax"}),l("h3",{id:"with-step",class:"doc-heading doc-h3",onClick:r=>s(d)("with-step")},"With step",8,["onClick"]),l(i,{title:"With Step",file:"Step"}),l("p",null,[n("The "),l("code",{class:"doc-token"},"step"),n(" property can also be a floating point number (or numeric "),l("code",{class:"doc-token"},"0"),n(" if you need infinite precision).")]),l(i,{title:"Floating point",file:"FloatingPoint"}),l(i,{title:"Snaps to steps",file:"Snap"}),l("h3",{id:"with-label",class:"doc-heading doc-h3",onClick:r=>s(d)("with-label")},"With label",8,["onClick"]),l("p",null,"In the example below, move the slider to see the label."),l(i,{title:"With label",file:"Label"}),l(i,{title:"Always display label",file:"LabelAlways"}),l(i,{title:"Custom label values",file:"LabelValue"}),l("p",null,"The example below is better highlighting how QRange handles label positioning so that it always stays inside the QRange’s box horizontally."),l(i,{title:"Long label",file:"LabelLong"}),l("h3",{id:"markers",class:"doc-heading doc-h3",onClick:r=>s(d)("markers")},"Markers",8,["onClick"]),l(i,{title:"Markers",file:"Markers"}),l("h3",{id:"marker-labels",class:"doc-heading doc-h3",onClick:r=>s(d)("marker-labels")},[n("Marker labels "),l(c,{label:"v2.4+"})],8,["onClick"]),l(i,{title:"Marker labels",file:"MarkerLabels"}),l("div",{class:"doc-note doc-note--tip"},[l("p",{class:"doc-note__title"},"TIP on slots"),l("p",null,[n("In order to use the marker label slots (see below), you must enable them by using the "),l("code",{class:"doc-token"},"marker-labels"),n(" prop.")])]),l(i,{title:"Marker label slots",file:"MarkerLabelSlots"}),l("h3",{id:"other-customizations",class:"doc-heading doc-h3",onClick:r=>s(d)("other-customizations")},[n("Other customizations "),l(c,{label:"v2.4+"})],8,["onClick"]),l(i,{title:"Color customizations",file:"RangeColoring"}),l(i,{title:"Hide selection bar",file:"NoSelection"}),l(i,{title:"Custom track images",file:"TrackImages"}),l(i,{title:"Track & thumb size",file:"RangeSizes"}),l("h3",{id:"dragging-range",class:"doc-heading doc-h3",onClick:r=>s(d)("dragging-range")},"Dragging range",8,["onClick"]),l("p",null,[n("Use the "),l("code",{class:"doc-token"},"drag-range"),n(" or "),l("code",{class:"doc-token"},"drag-only-range"),n(" props to allow the user to move the selected range or only a predetermined range as a whole.")]),l(i,{title:"Drag range",file:"Drag"}),l(i,{title:"Drag range + snap to step",file:"DragSnap"}),l(i,{title:"Drag only range (fixed interval)",file:"DragOnly"}),l("h3",{id:"lazy-input",class:"doc-heading doc-h3",onClick:r=>s(d)("lazy-input")},"Lazy input",8,["onClick"]),l(i,{title:"Lazy input",file:"Lazy"}),l("h3",{id:"null-values",class:"doc-heading doc-h3",onClick:r=>s(d)("null-values")},"Null values",8,["onClick"]),l(i,{title:"Null values",file:"Null"}),l("h3",{id:"reverse",class:"doc-heading doc-h3",onClick:r=>s(d)("reverse")},"Reverse",8,["onClick"]),l(i,{title:"In reverse",file:"Reverse"}),l("h3",{id:"force-dark-mode",class:"doc-heading doc-h3",onClick:r=>s(d)("force-dark-mode")},"Force dark mode",8,["onClick"]),l(i,{title:"Force dark mode",file:"Dark"}),l("h3",{id:"readonly-and-disable",class:"doc-heading doc-h3",onClick:r=>s(d)("readonly-and-disable")},"Readonly and disable",8,["onClick"]),l(i,{title:"Readonly",file:"Readonly"}),l(i,{title:"Disable",file:"Disable"}),l("h3",{id:"with-qitem",class:"doc-heading doc-h3",onClick:r=>s(d)("with-qitem")},"With QItem",8,["onClick"]),l(i,{title:"With QItem",file:"List"}),l("h3",{id:"native-form-submit",class:"doc-heading doc-h3",onClick:r=>s(d)("native-form-submit")},"Native form submit",8,["onClick"]),l("p",null,[n("When dealing with a native form which has an "),l("code",{class:"doc-token"},"action"),n(" and a "),l("code",{class:"doc-token"},"method"),n(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),l("code",{class:"doc-token"},"name"),n(" property on QRange, otherwise formData will not contain it (if it should):")]),l(i,{title:"Native form",file:"NativeForm"})]}),_:1},$))}}},w=u.setup;u.setup=(f,m)=>{const h=S();return(h.modules||(h.modules=new Set)).add("src/pages/vue-components/range.md"),w?w(f,m):void 0};const _=z(u,[["__file","range.md"]]);export{_ as default};
