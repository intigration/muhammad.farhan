import{mergeProps as b,withCtx as i,createTextVNode as e,unref as l,createVNode as n,useSSRContext as R}from"vue";import{ssrRenderComponent as r}from"vue/server-renderer";import{c as V}from"./page-utils-C-QWsEHe.js";import{D,a as g}from"./DocPage-DKr-0pQn.js";import{D as f}from"./DocPrerender-DPOnWPFO.js";import{C as u}from"./CopyButton-l3ndfN49.js";import{_ as P}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const d={__name:"vue-ssr-directives",__ssrInlineRender:!0,setup(k){const c=[{id:"how-to-declare-a-directive",title:"2. How to declare a directive"}];return(p,w,$,y)=>{w(r(D,b({title:"Vue SSR Directives",desc:"(@quasar/app-webpack) Managing the Vue directives for SSR in a Quasar app.",overline:"Quasar CLI with Webpack - @quasar/app-webpack",heading:"","edit-link":"quasar-cli-webpack/developing-ssr/vue-ssr-directives",toc:c},y),{default:i((q,o,m,a)=>{if(o)o(`<div class="doc-note doc-note--warning"${a}><p class="doc-note__title"${a}>WARNING</p><p${a}>This guide refers to usage with Quasar v2.6+ and @quasar/app-webpack v3.4+</p></div><p${a}>A SSR app has the same code running on server and on client. Declaring a Vue directive (or directly importing it) in a .vue SFC file is usually enough for making it to work on non-SSR builds. But on SSR builds and due to the architecture of Vue 3 it requires some extra leg work.</p><p${a}>Server-side builds require all Vue directives to also specify a getSSRProps() method in their definition.</p><div class="doc-note doc-note--tip"${a}><p class="doc-note__title"${a}>TIP</p><ul${a}><li${a}>You will NOT need to do anything for the Quasar supplied Vue directives to work.</li><li${a}>However, if you are using a third-party supplied Vue directive and the CLI errors out on it then you will need to contact the owner of that package in order for them to make it compliant with Vue 3 SSR specs (which is to add the getSSRProps() method in the directive’s definition).</li></ul></div><h2 id="how-to-declare-a-directive" class="doc-heading doc-h2"${a}>How to declare a directive</h2><p${a}>The following is taken from `),o(r(g,{to:"https://vuejs.org/guide/scaling-up/ssr.html#custom-directives"},{default:i((h,s,v,t)=>{if(s)s("Vue.js docs");else return[e("Vue.js docs")]}),_:1},m,a)),o(`:</p><blockquote class="doc-note"${a}><p${a}>Since most custom directives involve direct DOM manipulation, they are ignored during SSR. However, if you want to specify how a custom directive should be rendered (i.e. what attributes it should add to the rendered element), you can use the getSSRProps directive hook:</p></blockquote>`),o(r(l(f),null,{default:i((h,s,v,t)=>{if(s)s(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>const</span> myDirective <span class="token operator"${t}>=</span> <span class="token punctuation"${t}>{</span>
  <span class="token function"${t}>mounted</span> <span class="token punctuation"${t}>(</span><span class="token parameter"${t}>el<span class="token punctuation"${t}>,</span> binding</span><span class="token punctuation"${t}>)</span> <span class="token punctuation"${t}>{</span>
    <span class="token comment"${t}>// client-side implementation:</span>
    <span class="token comment"${t}>// directly update the DOM</span>
    el<span class="token punctuation"${t}>.</span>id <span class="token operator"${t}>=</span> binding<span class="token punctuation"${t}>.</span>value
  <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>,</span>

  <span class="token function"${t}>getSSRProps</span> <span class="token punctuation"${t}>(</span><span class="token parameter"${t}>binding</span><span class="token punctuation"${t}>)</span> <span class="token punctuation"${t}>{</span>
    <span class="token comment"${t}>// server-side implementation:</span>
    <span class="token comment"${t}>// return the props to be rendered.</span>
    <span class="token comment"${t}>// getSSRProps only receives the directive binding.</span>
    <span class="token keyword"${t}>return</span> <span class="token punctuation"${t}>{</span>
      <span class="token literal-property property"${t}>id</span><span class="token operator"${t}>:</span> binding<span class="token punctuation"${t}>.</span>value
    <span class="token punctuation"${t}>}</span>
  <span class="token punctuation"${t}>}</span>
<span class="token punctuation"${t}>}</span></code></pre>`),s(r(u,null,null,v,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"const"),e(" myDirective "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token function"},"mounted"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[e("el"),n("span",{class:"token punctuation"},","),e(" binding")]),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token comment"},"// client-side implementation:"),e(`
    `),n("span",{class:"token comment"},"// directly update the DOM"),e(`
    el`),n("span",{class:"token punctuation"},"."),e("id "),n("span",{class:"token operator"},"="),e(" binding"),n("span",{class:"token punctuation"},"."),e(`value
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),e(`

  `),n("span",{class:"token function"},"getSSRProps"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"binding"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token comment"},"// server-side implementation:"),e(`
    `),n("span",{class:"token comment"},"// return the props to be rendered."),e(`
    `),n("span",{class:"token comment"},"// getSSRProps only receives the directive binding."),e(`
    `),n("span",{class:"token keyword"},"return"),e(),n("span",{class:"token punctuation"},"{"),e(`
      `),n("span",{class:"token literal-property property"},"id"),n("span",{class:"token operator"},":"),e(" binding"),n("span",{class:"token punctuation"},"."),e(`value
    `),n("span",{class:"token punctuation"},"}"),e(`
  `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},m,a));else return[n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"WARNING"),n("p",null,"This guide refers to usage with Quasar v2.6+ and @quasar/app-webpack v3.4+")]),n("p",null,"A SSR app has the same code running on server and on client. Declaring a Vue directive (or directly importing it) in a .vue SFC file is usually enough for making it to work on non-SSR builds. But on SSR builds and due to the architecture of Vue 3 it requires some extra leg work."),n("p",null,"Server-side builds require all Vue directives to also specify a getSSRProps() method in their definition."),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("ul",null,[n("li",null,"You will NOT need to do anything for the Quasar supplied Vue directives to work."),n("li",null,"However, if you are using a third-party supplied Vue directive and the CLI errors out on it then you will need to contact the owner of that package in order for them to make it compliant with Vue 3 SSR specs (which is to add the getSSRProps() method in the directive’s definition).")])]),n("h2",{id:"how-to-declare-a-directive",class:"doc-heading doc-h2",onClick:h=>l(V)("how-to-declare-a-directive")},"How to declare a directive",8,["onClick"]),n("p",null,[e("The following is taken from "),n(g,{to:"https://vuejs.org/guide/scaling-up/ssr.html#custom-directives"},{default:i(()=>[e("Vue.js docs")]),_:1}),e(":")]),n("blockquote",{class:"doc-note"},[n("p",null,"Since most custom directives involve direct DOM manipulation, they are ignored during SSR. However, if you want to specify how a custom directive should be rendered (i.e. what attributes it should add to the rendered element), you can use the getSSRProps directive hook:")]),n(l(f),null,{default:i(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"const"),e(" myDirective "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token function"},"mounted"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[e("el"),n("span",{class:"token punctuation"},","),e(" binding")]),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token comment"},"// client-side implementation:"),e(`
    `),n("span",{class:"token comment"},"// directly update the DOM"),e(`
    el`),n("span",{class:"token punctuation"},"."),e("id "),n("span",{class:"token operator"},"="),e(" binding"),n("span",{class:"token punctuation"},"."),e(`value
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),e(`

  `),n("span",{class:"token function"},"getSSRProps"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"binding"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token comment"},"// server-side implementation:"),e(`
    `),n("span",{class:"token comment"},"// return the props to be rendered."),e(`
    `),n("span",{class:"token comment"},"// getSSRProps only receives the directive binding."),e(`
    `),n("span",{class:"token keyword"},"return"),e(),n("span",{class:"token punctuation"},"{"),e(`
      `),n("span",{class:"token literal-property property"},"id"),n("span",{class:"token operator"},":"),e(" binding"),n("span",{class:"token punctuation"},"."),e(`value
    `),n("span",{class:"token punctuation"},"}"),e(`
  `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1})]}),_:1},$))}}},S=d.setup;d.setup=(k,c)=>{const p=R();return(p.modules||(p.modules=new Set)).add("src/pages/quasar-cli-webpack/developing-ssr/vue-ssr-directives.md"),S?S(k,c):void 0};const G=P(d,[["__file","vue-ssr-directives.md"]]);export{G as default};
