import{provide as y,mergeProps as S,withCtx as d,createTextVNode as s,createVNode as t,unref as Q,useSSRContext as x}from"vue";import{ssrRenderComponent as l}from"vue/server-renderer";import{c as k}from"./page-utils-C-QWsEHe.js";import{D as $,a as h}from"./DocPage-DKr-0pQn.js";import{D as o}from"./DocExample-BcaABDtE.js";import{D as f}from"./DocApi-Df9ryd6x.js";import{_ as D}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const m={__name:"slide-item",__ssrInlineRender:!0,setup(c){y("_q_ex",{name:"QSlideItem"});const r=[{name:"List & List Items",category:"Vue Components",path:"/vue-components/list-and-list-items"},{name:"Expansion Item",category:"Vue Components",path:"/vue-components/expansion-item"}],a=[{id:"qslideitem-api",title:"2. QSlideItem API",deep:!0},{id:"usage",title:"3. Usage"}];return(I,g,w,v)=>{g(l($,S({title:"Slide Item",desc:"The QSlideItem Vue component is essentially a QItem with two additional slots (left and right) which allows the user to drag it to one of the sides in order to apply a specific action.",heading:"","edit-link":"vue-components/slide-item",toc:a,related:r},v),{default:d((V,i,n,e)=>{if(i)i(`<p${e}>The QSlideItem component is essentially a `),i(l(h,{to:"/vue-components/list-and-list-items"},{default:d((C,u,b,T)=>{if(u)u("QItem");else return[s("QItem")]}),_:1},n,e)),i(` with two additional slots (<code class="doc-token"${e}>left</code> and <code class="doc-token"${e}>right</code>) which allows user to drag the item (through mouse or with the finger on a touch device) to one of the sides in order to apply a specific action.</p>`),i(l(f,{file:"QSlideItem"},null,n,e)),i(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><p${e}>Drag with the mouse or use your finger to pan to left or right side to see QSlideItem in action.</p><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>If your content also has images, you might want to add <code class="doc-token"${e}>draggable=&quot;false&quot;</code> to them, otherwise the native browser behavior might interfere in a negative way.</p></div>`),i(l(o,{title:"Basic",file:"Basic"},null,n,e)),i(l(o,{title:"Vertical",file:"Vertical"},null,n,e)),i(l(o,{title:"Custom colors",file:"CustomColors"},null,n,e)),i(l(o,{title:"Customize while sliding",file:"CustomizeSlide"},null,n,e)),i(l(o,{title:"One sided or no sides",file:"OneSided"},null,n,e));else return[t("p",null,[s("The QSlideItem component is essentially a "),t(h,{to:"/vue-components/list-and-list-items"},{default:d(()=>[s("QItem")]),_:1}),s(" with two additional slots ("),t("code",{class:"doc-token"},"left"),s(" and "),t("code",{class:"doc-token"},"right"),s(") which allows user to drag the item (through mouse or with the finger on a touch device) to one of the sides in order to apply a specific action.")]),t(f,{file:"QSlideItem"}),t("h2",{id:"usage",class:"doc-heading doc-h2",onClick:C=>Q(k)("usage")},"Usage",8,["onClick"]),t("p",null,"Drag with the mouse or use your finger to pan to left or right side to see QSlideItem in action."),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,[s("If your content also has images, you might want to add "),t("code",{class:"doc-token"},'draggable="false"'),s(" to them, otherwise the native browser behavior might interfere in a negative way.")])]),t(o,{title:"Basic",file:"Basic"}),t(o,{title:"Vertical",file:"Vertical"}),t(o,{title:"Custom colors",file:"CustomColors"}),t(o,{title:"Customize while sliding",file:"CustomizeSlide"}),t(o,{title:"One sided or no sides",file:"OneSided"})]}),_:1},w))}}},p=m.setup;m.setup=(c,r)=>{const a=x();return(a.modules||(a.modules=new Set)).add("src/pages/vue-components/slide-item.md"),p?p(c,r):void 0};const Y=D(m,[["__file","slide-item.md"]]);export{Y as default};
