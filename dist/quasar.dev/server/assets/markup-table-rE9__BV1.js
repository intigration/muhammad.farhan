import{provide as q,mergeProps as D,withCtx as r,createTextVNode as a,unref as d,createVNode as t,useSSRContext as Q}from"vue";import{ssrRenderComponent as s}from"vue/server-renderer";import{c as C}from"./page-utils-C-QWsEHe.js";import{D as N,a as $}from"./DocPage-DKr-0pQn.js";import{D as l}from"./DocExample-BcaABDtE.js";import{D as h}from"./DocApi-Df9ryd6x.js";import{D as v}from"./DocPrerender-DPOnWPFO.js";import{C as k}from"./CopyButton-l3ndfN49.js";import{_ as x}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const m={__name:"markup-table",__ssrInlineRender:!0,setup(g){q("_q_ex",{name:"QMarkupTable"});const u=[{name:"Table",category:"Vue Components",path:"/vue-components/table"}],p=[{id:"qmarkuptable-api",title:"2. QMarkupTable API",deep:!0},{id:"usage",title:"3. Usage"}];return(P,w,y,M)=>{w(s(N,D({title:"Markup Table",desc:"The QMarkupTable Vue component is a helper wrapper which styles a native table.",heading:"","edit-link":"vue-components/markup-table",toc:p,related:u},M),{default:r((B,o,c,e)=>{if(o)o(`<p${e}>The QMarkupTable is a way for you to simply wrap a native <code class="doc-token"${e}>&lt;table&gt;</code> in order to make it look like a Material Design table.</p><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>For advanced functionality like pagination, sorting, filtering, and many more, you may want to check out `),o(s($,{to:"/vue-components/table"},{default:r((f,i,b,n)=>{if(i)i("QTable");else return[a("QTable")]}),_:1},c,e)),o(" component instead.</p></div>"),o(s(h,{file:"QMarkupTable"},null,c,e)),o(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><div class="doc-note doc-note--warning"${e}><p class="doc-note__title"${e}>WARNING</p><p${e}>Notice that the content of <code class="doc-token"${e}>QMarkupTable</code> reflects an accurate markup representation of a native HTML <code class="doc-token"${e}>&lt;table&gt;</code>, having a <code class="doc-token"${e}>&lt;thead&gt;</code> and <code class="doc-token"${e}>&lt;tbody&gt;</code> to wrap header and table body. This is required.</p></div><div class="doc-note doc-note--warning"${e}><p class="doc-note__title"${e}>UMD developers</p><p${e}>This component will <em${e}>NOT</em> work as-is within the UMD version of Quasar. Browsers parse the template HTML before Vue kicks in and renders it, so the markup needs to be correct. <code class="doc-token"${e}>&lt;q-markup-table&gt; &lt;thead&gt;</code> or <code class="doc-token"${e}>&lt;q-markup-table&gt; &lt;tbody&gt;</code> is not. The solution is to wrap the content in a <code class="doc-token"${e}>&lt;template&gt;</code> like the following:</p><br${e}>`),o(s(d(v),null,{default:r((f,i,b,n)=>{if(i)i(`<pre class="doc-code"${n}><code${n}><span class="token tag"${n}><span class="token tag"${n}><span class="token punctuation"${n}>&lt;</span>q-markup-table</span><span class="token punctuation"${n}>&gt;</span></span>
  <span class="token tag"${n}><span class="token tag"${n}><span class="token punctuation"${n}>&lt;</span>template</span><span class="token punctuation"${n}>&gt;</span></span>
    <span class="token comment"${n}>&lt;!-- your content --&gt;</span>
  <span class="token tag"${n}><span class="token tag"${n}><span class="token punctuation"${n}>&lt;/</span>template</span><span class="token punctuation"${n}>&gt;</span></span>
<span class="token tag"${n}><span class="token tag"${n}><span class="token punctuation"${n}>&lt;/</span>q-markup-table</span><span class="token punctuation"${n}>&gt;</span></span></code></pre>`),i(s(k,null,null,b,n));else return[t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("q-markup-table")]),t("span",{class:"token punctuation"},">")]),a(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("template")]),t("span",{class:"token punctuation"},">")]),a(`
    `),t("span",{class:"token comment"},"<!-- your content -->"),a(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),a("template")]),t("span",{class:"token punctuation"},">")]),a(`
`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),a("q-markup-table")]),t("span",{class:"token punctuation"},">")])])]),t(k)]}),_:1},c,e)),o("</div>"),o(s(l,{title:"Basic",file:"Basic","no-edit":""},null,c,e)),o(s(l,{title:"Separators",file:"Separators","no-edit":""},null,c,e)),o(s(l,{title:"Force dark mode",file:"Dark","no-edit":""},null,c,e)),o(s(l,{title:"Customization",file:"Customization","no-edit":""},null,c,e)),o(`<div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>If you want to remove the hover effect on some rows or some cells add a <code class="doc-token"${e}>q-tr--no-hover</code> or <code class="doc-token"${e}>q-td--no-hover</code> class to them.</p></div>`);else return[t("p",null,[a("The QMarkupTable is a way for you to simply wrap a native "),t("code",{class:"doc-token"},"<table>"),a(" in order to make it look like a Material Design table.")]),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,[a("For advanced functionality like pagination, sorting, filtering, and many more, you may want to check out "),t($,{to:"/vue-components/table"},{default:r(()=>[a("QTable")]),_:1}),a(" component instead.")])]),t(h,{file:"QMarkupTable"}),t("h2",{id:"usage",class:"doc-heading doc-h2",onClick:f=>d(C)("usage")},"Usage",8,["onClick"]),t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"WARNING"),t("p",null,[a("Notice that the content of "),t("code",{class:"doc-token"},"QMarkupTable"),a(" reflects an accurate markup representation of a native HTML "),t("code",{class:"doc-token"},"<table>"),a(", having a "),t("code",{class:"doc-token"},"<thead>"),a(" and "),t("code",{class:"doc-token"},"<tbody>"),a(" to wrap header and table body. This is required.")])]),t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"UMD developers"),t("p",null,[a("This component will "),t("em",null,"NOT"),a(" work as-is within the UMD version of Quasar. Browsers parse the template HTML before Vue kicks in and renders it, so the markup needs to be correct. "),t("code",{class:"doc-token"},"<q-markup-table> <thead>"),a(" or "),t("code",{class:"doc-token"},"<q-markup-table> <tbody>"),a(" is not. The solution is to wrap the content in a "),t("code",{class:"doc-token"},"<template>"),a(" like the following:")]),t("br"),t(d(v),null,{default:r(()=>[t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("q-markup-table")]),t("span",{class:"token punctuation"},">")]),a(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("template")]),t("span",{class:"token punctuation"},">")]),a(`
    `),t("span",{class:"token comment"},"<!-- your content -->"),a(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),a("template")]),t("span",{class:"token punctuation"},">")]),a(`
`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),a("q-markup-table")]),t("span",{class:"token punctuation"},">")])])]),t(k)]),_:1})]),t(l,{title:"Basic",file:"Basic","no-edit":""}),t(l,{title:"Separators",file:"Separators","no-edit":""}),t(l,{title:"Force dark mode",file:"Dark","no-edit":""}),t(l,{title:"Customization",file:"Customization","no-edit":""}),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,[a("If you want to remove the hover effect on some rows or some cells add a "),t("code",{class:"doc-token"},"q-tr--no-hover"),a(" or "),t("code",{class:"doc-token"},"q-td--no-hover"),a(" class to them.")])])]}),_:1},y))}}},T=m.setup;m.setup=(g,u)=>{const p=Q();return(p.modules||(p.modules=new Set)).add("src/pages/vue-components/markup-table.md"),T?T(g,u):void 0};const tt=x(m,[["__file","markup-table.md"]]);export{tt as default};
