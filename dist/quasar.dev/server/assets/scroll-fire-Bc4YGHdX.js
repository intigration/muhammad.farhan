import{provide as D,mergeProps as $,withCtx as l,createTextVNode as r,createVNode as t,unref as F,useSSRContext as x}from"vue";import{ssrRenderComponent as n}from"vue/server-renderer";import{c as y}from"./page-utils-C-QWsEHe.js";import{D as P,a}from"./DocPage-DKr-0pQn.js";import{D as v}from"./DocExample-BcaABDtE.js";import{D as f}from"./DocApi-Df9ryd6x.js";import{_ as T}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const p={__name:"scroll-fire",__ssrInlineRender:!0,setup(m){D("_q_ex",{name:"ScrollFire"});const d=[{name:"Scroll",category:"Vue Directives",path:"/vue-directives/scroll"},{name:"Intersection",category:"Vue Directives",path:"/vue-directives/intersection"}],c=[{id:"scrollfire-api",title:"2. ScrollFire API",deep:!0},{id:"usage",title:"3. Usage"}];return(C,g,b,w)=>{g(n(P,$({title:"Scroll Fire Directive",desc:"Vue directive that triggers an event when user scrolls and brings a component into view.",heading:"","edit-link":"vue-directives/scroll-fire",toc:c,related:d},w),{default:l((R,o,s,e)=>{if(o)o(`<p${e}>“Scroll Fire” is a directive that enables a method to be called (once and only once) when the user scrolls current page and the DOM element (or component) that it is applied to comes into the viewport.</p><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>There is also a `),o(n(a,{to:"/vue-directives/scroll"},{default:l((u,i,S,_)=>{if(i)i("Scroll");else return[r("Scroll")]}),_:1},s,e)),o(" directive which fires whenever user scrolls the page.</p></div>"),o(n(f,{file:"ScrollFire"},null,s,e)),o(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>Scrolling container</p><p${e}>Please read `),o(n(a,{to:"/vue-components/scroll-observer#determining-scrolling-container"},{default:l((u,i,S,_)=>{if(i)i("here");else return[r("here")]}),_:1},s,e)),o(" about how Quasar determines the container to attach scrolling events to.</p></div>"),o(n(v,{title:"Basic",file:"Basic",scrollable:""},null,s,e)),o(`<div class="doc-note doc-note--warning"${e}><p class="doc-note__title"${e}>IMPORTANT</p><p${e}>For performance purposes, the scroll listener function injected is by default debounced by 50ms.</p></div>`);else return[t("p",null,"“Scroll Fire” is a directive that enables a method to be called (once and only once) when the user scrolls current page and the DOM element (or component) that it is applied to comes into the viewport."),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,[r("There is also a "),t(a,{to:"/vue-directives/scroll"},{default:l(()=>[r("Scroll")]),_:1}),r(" directive which fires whenever user scrolls the page.")])]),t(f,{file:"ScrollFire"}),t("h2",{id:"usage",class:"doc-heading doc-h2",onClick:u=>F(y)("usage")},"Usage",8,["onClick"]),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"Scrolling container"),t("p",null,[r("Please read "),t(a,{to:"/vue-components/scroll-observer#determining-scrolling-container"},{default:l(()=>[r("here")]),_:1}),r(" about how Quasar determines the container to attach scrolling events to.")])]),t(v,{title:"Basic",file:"Basic",scrollable:""}),t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"IMPORTANT"),t("p",null,"For performance purposes, the scroll listener function injected is by default debounced by 50ms.")])]}),_:1},b))}}},h=p.setup;p.setup=(m,d)=>{const c=x();return(c.modules||(c.modules=new Set)).add("src/pages/vue-directives/scroll-fire.md"),h?h(m,d):void 0};const Y=T(p,[["__file","scroll-fire.md"]]);export{Y as default};
