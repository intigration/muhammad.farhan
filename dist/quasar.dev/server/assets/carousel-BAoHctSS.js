import{provide as S,mergeProps as T,withCtx as h,createTextVNode as l,createVNode as o,unref as r,useSSRContext as Q}from"vue";import{ssrRenderComponent as a}from"vue/server-renderer";import{c}from"./page-utils-C-QWsEHe.js";import{D as A,a as g}from"./DocPage-DKr-0pQn.js";import{D as i}from"./DocExample-BcaABDtE.js";import{D as d}from"./DocApi-Df9ryd6x.js";import{_ as x}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const p={__name:"carousel",__ssrInlineRender:!0,setup(v){S("_q_ex",{name:"QCarousel"});const m=[{id:"qcarousel-api",title:"2. QCarousel API",deep:!0},{id:"qcarouselcontrol-api",title:"3. QCarouselControl API",deep:!0},{id:"qcarouselslide-api",title:"4. QCarouselSlide API",deep:!0},{id:"usage",title:"5. Usage"},{id:"basic",title:"5.1. Basic",sub:!0},{id:"transitions",title:"5.2. Transitions",sub:!0},{id:"vertical",title:"5.3. Vertical",sub:!0},{id:"control-type",title:"5.4. Control type",sub:!0},{id:"navigation-position",title:"5.5. Navigation position",sub:!0},{id:"custom-navigation",title:"5.6. Custom navigation",sub:!0},{id:"auto-padding",title:"5.7. Auto padding",sub:!0},{id:"media-content",title:"5.8. Media content",sub:!0},{id:"infinite-and-autoplay",title:"5.9. Infinite and autoplay",sub:!0},{id:"controls",title:"5.10. Controls",sub:!0},{id:"with-qscrollarea",title:"5.11. With QScrollArea",sub:!0},{id:"fullscreen",title:"5.12. Fullscreen",sub:!0}];return(f,w,y,k)=>{w(a(A,T({title:"Carousel",desc:"The QCarousel Vue component allows you to display a series of slides, useful for wizards or an image gallery.",heading:"","edit-link":"vue-components/carousel",toc:m},k),{default:h((P,t,n,e)=>{if(t)t(`<p${e}>The QCarousel component allows you to display more information with less real estate, using slides. Useful for creating Wizards or an image gallery too.</p>`),t(a(d,{file:"QCarousel"},null,n,e)),t(a(d,{file:"QCarouselControl"},null,n,e)),t(a(d,{file:"QCarouselSlide"},null,n,e)),t(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>If the QCarouselSlide content also has images and you want to use swipe actions to navigate, you might want to add <code class="doc-token"${e}>draggable=&quot;false&quot;</code> to them, otherwise the native browser behavior might interfere in a negative way.</p></div><div class="doc-note doc-note--danger"${e}><p class="doc-note__title"${e}>Keep Alive</p><ul${e}><li${e}>Please take notice of the Boolean <code class="doc-token"${e}>keep-alive</code> prop for QCarousel, if you need this behavior. Do NOT use Vue’s native <code class="doc-token"${e}>&lt;keep-alive&gt;</code> component over QCarouselSlide.</li><li${e}>Should you need the <code class="doc-token"${e}>keep-alive-include</code> or <code class="doc-token"${e}>keep-alive-exclude</code> props then the QCarouselSlide <code class="doc-token"${e}>name</code>s must be valid Vue component names (no spaces allowed, don’t start with a number etc).</li></ul></div><h3 id="basic" class="doc-heading doc-h3"${e}>Basic</h3><p${e}>Below is an almost stripped down basic Carousel (it is just animated and only has custom transitions specified) with no navigation embedded. For this reason, we are controlling the current slide through the model.</p>`),t(a(i,{title:"Basic",file:"Basic"},null,n,e)),t(`<h3 id="transitions" class="doc-heading doc-h3"${e}>Transitions</h3><p${e}>In the example below:</p><ul${e}><li${e}>There are just a few transitions demoed. For a complete list of transitions, head to the `),t(a(g,{to:"/options/transitions"},{default:h((s,u,b,$)=>{if(u)u("Transitions");else return[l("Transitions")]}),_:1},n,e)),t(` page.</li><li${e}>You can also swipe with your finger (or swiping with the mouse – clicking and quickly dragging to left/right then releasing).</li></ul>`),t(a(i,{title:"Transitions, bottom navigation, arrows and auto padding",file:"Transitions"},null,n,e)),t(`<h3 id="vertical" class="doc-heading doc-h3"${e}>Vertical</h3>`),t(a(i,{title:"Vertical mode",file:"Vertical"},null,n,e)),t(`<h3 id="control-type" class="doc-heading doc-h3"${e}>Control type</h3><p${e}>The notion of “control” here refers to the arrows and navigation buttons. Since they are buttons, you can also pick their type to better match your design. You also benefit from the <code class="doc-token"${e}>control-color</code> and <code class="doc-token"${e}>control-text-color</code> props.</p>`),t(a(i,{title:"Control Type",file:"ControlType"},null,n,e)),t(`<h3 id="navigation-position" class="doc-heading doc-h3"${e}>Navigation position</h3>`),t(a(i,{title:"Navigation position",file:"NavigationPosition"},null,n,e)),t(`<h3 id="custom-navigation" class="doc-heading doc-h3"${e}>Custom navigation</h3><p${e}>For a full list of properties of the <code class="doc-token"${e}>navigation-icon</code> slot, please consult the API card.</p>`),t(a(i,{title:"Custom navigation",file:"CustomNavigation"},null,n,e)),t(`<h3 id="auto-padding" class="doc-heading doc-h3"${e}>Auto padding</h3><p${e}>Below is an example with which you can play with different QCarousel settings so you can see the padding (or lack of) in action:</p>`),t(a(i,{title:"Padding",file:"AutoPadding"},null,n,e)),t(`<h3 id="media-content" class="doc-heading doc-h3"${e}>Media content</h3>`),t(a(i,{title:"Image slides",file:"ImageSlides"},null,n,e)),t(a(i,{title:"Multi-image slides",file:"MultiImageSlides"},null,n,e)),t(a(i,{title:"Captions",file:"Captions"},null,n,e)),t(a(i,{title:"Video slides",file:"VideoSlides"},null,n,e)),t(`<p${e}>In the example below there are thumbnails being generated automatically. Thumbnails only applies to image slides.</p>`),t(a(i,{title:"Thumbnails",file:"Thumbnails"},null,n,e)),t(`<div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>Don’t use the property <code class="doc-token"${e}>navigation</code> along with <code class="doc-token"${e}>thumbnails</code> as the first supercedes the latter so the thumbnails will not be displayed.</p></div><h3 id="infinite-and-autoplay" class="doc-heading doc-h3"${e}>Infinite and autoplay</h3><p${e}>You can pause autoplay when the pointer is over the carousel or over a region of interest.</p>`),t(a(i,{title:"Autoplay",file:"InfiniteAutoplay"},null,n,e)),t(`<h3 id="controls" class="doc-heading doc-h3"${e}>Controls</h3>`),t(a(i,{title:"Controls",file:"Controls"},null,n,e)),t(`<h3 id="with-qscrollarea" class="doc-heading doc-h3"${e}>With QScrollArea</h3><p${e}>Please note how `),t(a(g,{to:"/vue-components/scroll-area"},{default:h((s,u,b,$)=>{if(u)u("QScrollArea");else return[l("QScrollArea")]}),_:1},n,e)),t(` is used in the two examples below. Also note the <code class="doc-token"${e}>q-carousel--padding</code> CSS helper class in the second example.</p>`),t(a(i,{title:"With QScrollArea and padding",file:"WithScrollareaPadding"},null,n,e)),t(a(i,{title:"With QScrollArea on whole slide",file:"WithScrollareaFull"},null,n,e)),t(`<h3 id="fullscreen" class="doc-heading doc-h3"${e}>Fullscreen</h3>`),t(a(i,{title:"Fullscreen",file:"Fullscreen"},null,n,e));else return[o("p",null,"The QCarousel component allows you to display more information with less real estate, using slides. Useful for creating Wizards or an image gallery too."),o(d,{file:"QCarousel"}),o(d,{file:"QCarouselControl"}),o(d,{file:"QCarouselSlide"}),o("h2",{id:"usage",class:"doc-heading doc-h2",onClick:s=>r(c)("usage")},"Usage",8,["onClick"]),o("div",{class:"doc-note doc-note--tip"},[o("p",{class:"doc-note__title"},"TIP"),o("p",null,[l("If the QCarouselSlide content also has images and you want to use swipe actions to navigate, you might want to add "),o("code",{class:"doc-token"},'draggable="false"'),l(" to them, otherwise the native browser behavior might interfere in a negative way.")])]),o("div",{class:"doc-note doc-note--danger"},[o("p",{class:"doc-note__title"},"Keep Alive"),o("ul",null,[o("li",null,[l("Please take notice of the Boolean "),o("code",{class:"doc-token"},"keep-alive"),l(" prop for QCarousel, if you need this behavior. Do NOT use Vue’s native "),o("code",{class:"doc-token"},"<keep-alive>"),l(" component over QCarouselSlide.")]),o("li",null,[l("Should you need the "),o("code",{class:"doc-token"},"keep-alive-include"),l(" or "),o("code",{class:"doc-token"},"keep-alive-exclude"),l(" props then the QCarouselSlide "),o("code",{class:"doc-token"},"name"),l("s must be valid Vue component names (no spaces allowed, don’t start with a number etc).")])])]),o("h3",{id:"basic",class:"doc-heading doc-h3",onClick:s=>r(c)("basic")},"Basic",8,["onClick"]),o("p",null,"Below is an almost stripped down basic Carousel (it is just animated and only has custom transitions specified) with no navigation embedded. For this reason, we are controlling the current slide through the model."),o(i,{title:"Basic",file:"Basic"}),o("h3",{id:"transitions",class:"doc-heading doc-h3",onClick:s=>r(c)("transitions")},"Transitions",8,["onClick"]),o("p",null,"In the example below:"),o("ul",null,[o("li",null,[l("There are just a few transitions demoed. For a complete list of transitions, head to the "),o(g,{to:"/options/transitions"},{default:h(()=>[l("Transitions")]),_:1}),l(" page.")]),o("li",null,"You can also swipe with your finger (or swiping with the mouse – clicking and quickly dragging to left/right then releasing).")]),o(i,{title:"Transitions, bottom navigation, arrows and auto padding",file:"Transitions"}),o("h3",{id:"vertical",class:"doc-heading doc-h3",onClick:s=>r(c)("vertical")},"Vertical",8,["onClick"]),o(i,{title:"Vertical mode",file:"Vertical"}),o("h3",{id:"control-type",class:"doc-heading doc-h3",onClick:s=>r(c)("control-type")},"Control type",8,["onClick"]),o("p",null,[l("The notion of “control” here refers to the arrows and navigation buttons. Since they are buttons, you can also pick their type to better match your design. You also benefit from the "),o("code",{class:"doc-token"},"control-color"),l(" and "),o("code",{class:"doc-token"},"control-text-color"),l(" props.")]),o(i,{title:"Control Type",file:"ControlType"}),o("h3",{id:"navigation-position",class:"doc-heading doc-h3",onClick:s=>r(c)("navigation-position")},"Navigation position",8,["onClick"]),o(i,{title:"Navigation position",file:"NavigationPosition"}),o("h3",{id:"custom-navigation",class:"doc-heading doc-h3",onClick:s=>r(c)("custom-navigation")},"Custom navigation",8,["onClick"]),o("p",null,[l("For a full list of properties of the "),o("code",{class:"doc-token"},"navigation-icon"),l(" slot, please consult the API card.")]),o(i,{title:"Custom navigation",file:"CustomNavigation"}),o("h3",{id:"auto-padding",class:"doc-heading doc-h3",onClick:s=>r(c)("auto-padding")},"Auto padding",8,["onClick"]),o("p",null,"Below is an example with which you can play with different QCarousel settings so you can see the padding (or lack of) in action:"),o(i,{title:"Padding",file:"AutoPadding"}),o("h3",{id:"media-content",class:"doc-heading doc-h3",onClick:s=>r(c)("media-content")},"Media content",8,["onClick"]),o(i,{title:"Image slides",file:"ImageSlides"}),o(i,{title:"Multi-image slides",file:"MultiImageSlides"}),o(i,{title:"Captions",file:"Captions"}),o(i,{title:"Video slides",file:"VideoSlides"}),o("p",null,"In the example below there are thumbnails being generated automatically. Thumbnails only applies to image slides."),o(i,{title:"Thumbnails",file:"Thumbnails"}),o("div",{class:"doc-note doc-note--tip"},[o("p",{class:"doc-note__title"},"TIP"),o("p",null,[l("Don’t use the property "),o("code",{class:"doc-token"},"navigation"),l(" along with "),o("code",{class:"doc-token"},"thumbnails"),l(" as the first supercedes the latter so the thumbnails will not be displayed.")])]),o("h3",{id:"infinite-and-autoplay",class:"doc-heading doc-h3",onClick:s=>r(c)("infinite-and-autoplay")},"Infinite and autoplay",8,["onClick"]),o("p",null,"You can pause autoplay when the pointer is over the carousel or over a region of interest."),o(i,{title:"Autoplay",file:"InfiniteAutoplay"}),o("h3",{id:"controls",class:"doc-heading doc-h3",onClick:s=>r(c)("controls")},"Controls",8,["onClick"]),o(i,{title:"Controls",file:"Controls"}),o("h3",{id:"with-qscrollarea",class:"doc-heading doc-h3",onClick:s=>r(c)("with-qscrollarea")},"With QScrollArea",8,["onClick"]),o("p",null,[l("Please note how "),o(g,{to:"/vue-components/scroll-area"},{default:h(()=>[l("QScrollArea")]),_:1}),l(" is used in the two examples below. Also note the "),o("code",{class:"doc-token"},"q-carousel--padding"),l(" CSS helper class in the second example.")]),o(i,{title:"With QScrollArea and padding",file:"WithScrollareaPadding"}),o(i,{title:"With QScrollArea on whole slide",file:"WithScrollareaFull"}),o("h3",{id:"fullscreen",class:"doc-heading doc-h3",onClick:s=>r(c)("fullscreen")},"Fullscreen",8,["onClick"]),o(i,{title:"Fullscreen",file:"Fullscreen"})]}),_:1},y))}}},C=p.setup;p.setup=(v,m)=>{const f=Q();return(f.modules||(f.modules=new Set)).add("src/pages/vue-components/carousel.md"),C?C(v,m):void 0};const X=x(p,[["__file","carousel.md"]]);export{X as default};
