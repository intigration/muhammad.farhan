import{mergeProps as A,withCtx as r,createTextVNode as t,unref as i,createVNode as e,useSSRContext as E}from"vue";import{ssrRenderComponent as d}from"vue/server-renderer";import{c as h}from"./page-utils-C-QWsEHe.js";import{D as C,a as f}from"./DocPage-DKr-0pQn.js";import{D as u}from"./DocPrerender-DPOnWPFO.js";import{C as c}from"./CopyButton-l3ndfN49.js";import{_ as q}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const w={__name:"introduction",__ssrInlineRender:!0,setup(k){const x=[{id:"what-can-an-app-extension-do",title:"2. What can an App Extension do?"},{id:"app-extension-ext-id",title:"3. App Extension ext-id"},{id:"anatomy-of-app-extensions",title:"4. Anatomy of App Extensions"},{id:"installing-an-app-extension",title:"4.1. Installing an App Extension",sub:!0},{id:"list-installed-app-extensions",title:"4.2. List Installed App Extensions",sub:!0},{id:"running-app-extensions",title:"4.3. “Running” App Extensions",sub:!0},{id:"updating-an-app-extension",title:"4.4. Updating an App Extension",sub:!0},{id:"removing-an-app-extension",title:"4.5. Removing an App Extension",sub:!0},{id:"list-of-official-app-extensions",title:"5. List of official app-extensions"}];return(g,$,v,b)=>{$(d(C,A({title:"App Extensions",desc:"What Quasar App Extensions are and how they can help both you and the community.",heading:"","edit-link":"app-extensions/introduction",toc:x},b),{default:r((Q,s,m,n)=>{if(s)s(`<p${n}>App Extensions are a way to painlessly inject complicated (or simple) libraries with a variety of dependencies, boot files, templates and custom logic. They can extend webpack, the <code class="doc-token"${n}>quasar.config</code> file, tightly couple external UI components to core, and even register new commands with the Quasar CLI. They can be run with <code class="doc-token"${n}>quasar dev</code> and have complete access to the current live <code class="doc-token"${n}>ctx</code> (context).</p><p${n}>The patterns for development literally open the floodgates to making Quasar one of the most extensible and powerful frameworks out there - now limited only by your imagination and innovation. This page will introduce you to the usage of App Extensions.</p><div class="doc-note doc-note--warning"${n}><p class="doc-note__title"${n}>WARNING</p><p${n}>App Extensions are designed specifically <strong${n}>for Quasar CLI only</strong>. This means that you will not be able to install them or run them with the Quasar Vite plugin or with Vue CLI or in UMD environments.</p></div><h2 id="what-can-an-app-extension-do" class="doc-heading doc-h2"${n}>What can an App Extension do?</h2><ol${n}><li${n}>Enhance CLI behavior with new commands</li><li${n}>Make a Quasar UI plug-in</li><li${n}>Install an accompanying application</li><li${n}>Create and share a custom component</li><li${n}>Create and share added features to the framework or other applications</li><li${n}>Build, launch and control an API server</li><li${n}>Hook, combine and extend Quasar core components</li><li${n}>Modify code based on dynamically changing values that sit outside of the Quasar environment</li><li${n}>Create and manage abstractions of platform specific interfaces</li><li${n}>… and a whole lot more</li></ol><p${n}>App Extensions <strong${n}>replace the need to create custom starter kits</strong>. Anything you add on top of the official starter kit can come in the form of an App Extension. This also eliminates maintenance overhead of keeping unofficial starter kits up to date with the official one and so we can ensure that every developer will always get the latest and greatest Quasar specs out of the box.</p><h2 id="app-extension-ext-id" class="doc-heading doc-h2"${n}>App Extension ext-id</h2><p${n}>All App Extensions must prefix their name with <code class="doc-token"${n}>quasar-app-extension-</code>. Everything that follows after this prefix is considered to be the short alias of it. We call this the <code class="doc-token"${n}>ext-id</code> throughout the documentation.</p><p${n}>Example:</p><ul${n}><li${n}>ext-id for <code class="doc-token"${n}>quasar-app-extension-awesomeness</code> is <code class="doc-token"${n}>awesomeness</code></li><li${n}>ext-id for <code class="doc-token"${n}>@some-npm-org/quasar-app-extension-awesomeness</code> is <code class="doc-token"${n}>@some-npm-org/awesomeness</code></li></ul><p${n}>One of the benefits of this naming scheme is that it makes Quasar App Extensions discoverability easy while searching for their npm packages: `),s(d(f,{to:"/app-extensions/discover"},{default:r((l,o,p,a)=>{if(o)o("App Extension - Discover");else return[t("App Extension - Discover")]}),_:1},m,n)),s(`.</p><h2 id="anatomy-of-app-extensions" class="doc-heading doc-h2"${n}>Anatomy of App Extensions</h2><p${n}>App Extensions can be installed, executed and also uninstalled. The following guide discusses this in an abstract way. For details about individual extensions and how to work with them, please consult their respective repositories.</p><h3 id="installing-an-app-extension" class="doc-heading doc-h3"${n}>Installing an App Extension</h3>`),s(d(i(u),null,{default:r((l,o,p,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}>$ quasar ext <span class="token function"${a}>add</span> <span class="token operator"${a}>&lt;</span>ext-id<span class="token operator"${a}>&gt;</span></code></pre>`),o(d(c,{lang:"bash"},null,p,a));else return[e("pre",{class:"doc-code"},[e("code",null,[t("$ quasar ext "),e("span",{class:"token function"},"add"),t(),e("span",{class:"token operator"},"<"),t("ext-id"),e("span",{class:"token operator"},">")])]),e(c,{lang:"bash"})]}),_:1},m,n)),s(`<p${n}>This command will find and install the extension’s module. After installation is complete, there may be one or more prompts asking you to make choices or add information needed by the extension. When the installation is concluded, you will be returned to the command line.</p><h3 id="list-installed-app-extensions" class="doc-heading doc-h3"${n}>List Installed App Extensions</h3><p${n}>There are several ways to “discover” what App Extensions have been installed:</p>`),s(d(i(u),null,{default:r((l,o,p,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}>$ quasar ext
$ quasar info
$ <span class="token function"${a}>cat</span> quasar.extensions.json</code></pre>`),o(d(c,{lang:"bash"},null,p,a));else return[e("pre",{class:"doc-code"},[e("code",null,[t(`$ quasar ext
$ quasar info
$ `),e("span",{class:"token function"},"cat"),t(" quasar.extensions.json")])]),e(c,{lang:"bash"})]}),_:1},m,n)),s(`<h3 id="running-app-extensions" class="doc-heading doc-h3"${n}>“Running” App Extensions</h3><p${n}>There is no one way to run app extensions, because some of them might not even have any code to run (i.e. are merely template files copied to specific folders within your project), whereas others may merely be installation helpers and others might choose to add a new command to the Quasar CLI.</p><p${n}>Nevertheless, each and every App Extension will be initialized during <code class="doc-token"${n}>quasar dev</code> and <code class="doc-token"${n}>quasar build</code>.</p><h3 id="updating-an-app-extension" class="doc-heading doc-h3"${n}>Updating an App Extension</h3><p${n}>You may need to update your extension, and this is done with the same command as used for installation:</p>`),s(d(i(u),null,{default:r((l,o,p,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}>$ quasar ext <span class="token function"${a}>add</span> <span class="token operator"${a}>&lt;</span>ext-id<span class="token operator"${a}>&gt;</span></code></pre>`),o(d(c,{lang:"bash"},null,p,a));else return[e("pre",{class:"doc-code"},[e("code",null,[t("$ quasar ext "),e("span",{class:"token function"},"add"),t(),e("span",{class:"token operator"},"<"),t("ext-id"),e("span",{class:"token operator"},">")])]),e(c,{lang:"bash"})]}),_:1},m,n)),s(`<div class="doc-note doc-note--warning"${n}><p class="doc-note__title"${n}>WARNING</p><p${n}>Reinstalling the extension MIGHT overwrite files that you have changed. You will be presented with the option to overwrite the files detected.</p></div><h3 id="removing-an-app-extension" class="doc-heading doc-h3"${n}>Removing an App Extension</h3><p${n}>You can remove an App Extension from being hooked from the Quasar CLI by running this command. Depending upon the author and the extension itself, you may have to manually clean up files though.</p>`),s(d(i(u),null,{default:r((l,o,p,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}>$ quasar ext remove <span class="token operator"${a}>&lt;</span>ext-id<span class="token operator"${a}>&gt;</span></code></pre>`),o(d(c,{lang:"bash"},null,p,a));else return[e("pre",{class:"doc-code"},[e("code",null,[t("$ quasar ext remove "),e("span",{class:"token operator"},"<"),t("ext-id"),e("span",{class:"token operator"},">")])]),e(c,{lang:"bash"})]}),_:1},m,n)),s(`<h2 id="list-of-official-app-extensions" class="doc-heading doc-h2"${n}>List of official app-extensions</h2><p${n}>Check out `),s(d(f,{to:"/app-extensions/discover"},{default:r((l,o,p,a)=>{if(o)o("Discover App Extensions");else return[t("Discover App Extensions")]}),_:1},m,n)),s(" page.</p>");else return[e("p",null,[t("App Extensions are a way to painlessly inject complicated (or simple) libraries with a variety of dependencies, boot files, templates and custom logic. They can extend webpack, the "),e("code",{class:"doc-token"},"quasar.config"),t(" file, tightly couple external UI components to core, and even register new commands with the Quasar CLI. They can be run with "),e("code",{class:"doc-token"},"quasar dev"),t(" and have complete access to the current live "),e("code",{class:"doc-token"},"ctx"),t(" (context).")]),e("p",null,"The patterns for development literally open the floodgates to making Quasar one of the most extensible and powerful frameworks out there - now limited only by your imagination and innovation. This page will introduce you to the usage of App Extensions."),e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,[t("App Extensions are designed specifically "),e("strong",null,"for Quasar CLI only"),t(". This means that you will not be able to install them or run them with the Quasar Vite plugin or with Vue CLI or in UMD environments.")])]),e("h2",{id:"what-can-an-app-extension-do",class:"doc-heading doc-h2",onClick:l=>i(h)("what-can-an-app-extension-do")},"What can an App Extension do?",8,["onClick"]),e("ol",null,[e("li",null,"Enhance CLI behavior with new commands"),e("li",null,"Make a Quasar UI plug-in"),e("li",null,"Install an accompanying application"),e("li",null,"Create and share a custom component"),e("li",null,"Create and share added features to the framework or other applications"),e("li",null,"Build, launch and control an API server"),e("li",null,"Hook, combine and extend Quasar core components"),e("li",null,"Modify code based on dynamically changing values that sit outside of the Quasar environment"),e("li",null,"Create and manage abstractions of platform specific interfaces"),e("li",null,"… and a whole lot more")]),e("p",null,[t("App Extensions "),e("strong",null,"replace the need to create custom starter kits"),t(". Anything you add on top of the official starter kit can come in the form of an App Extension. This also eliminates maintenance overhead of keeping unofficial starter kits up to date with the official one and so we can ensure that every developer will always get the latest and greatest Quasar specs out of the box.")]),e("h2",{id:"app-extension-ext-id",class:"doc-heading doc-h2",onClick:l=>i(h)("app-extension-ext-id")},"App Extension ext-id",8,["onClick"]),e("p",null,[t("All App Extensions must prefix their name with "),e("code",{class:"doc-token"},"quasar-app-extension-"),t(". Everything that follows after this prefix is considered to be the short alias of it. We call this the "),e("code",{class:"doc-token"},"ext-id"),t(" throughout the documentation.")]),e("p",null,"Example:"),e("ul",null,[e("li",null,[t("ext-id for "),e("code",{class:"doc-token"},"quasar-app-extension-awesomeness"),t(" is "),e("code",{class:"doc-token"},"awesomeness")]),e("li",null,[t("ext-id for "),e("code",{class:"doc-token"},"@some-npm-org/quasar-app-extension-awesomeness"),t(" is "),e("code",{class:"doc-token"},"@some-npm-org/awesomeness")])]),e("p",null,[t("One of the benefits of this naming scheme is that it makes Quasar App Extensions discoverability easy while searching for their npm packages: "),e(f,{to:"/app-extensions/discover"},{default:r(()=>[t("App Extension - Discover")]),_:1}),t(".")]),e("h2",{id:"anatomy-of-app-extensions",class:"doc-heading doc-h2",onClick:l=>i(h)("anatomy-of-app-extensions")},"Anatomy of App Extensions",8,["onClick"]),e("p",null,"App Extensions can be installed, executed and also uninstalled. The following guide discusses this in an abstract way. For details about individual extensions and how to work with them, please consult their respective repositories."),e("h3",{id:"installing-an-app-extension",class:"doc-heading doc-h3",onClick:l=>i(h)("installing-an-app-extension")},"Installing an App Extension",8,["onClick"]),e(i(u),null,{default:r(()=>[e("pre",{class:"doc-code"},[e("code",null,[t("$ quasar ext "),e("span",{class:"token function"},"add"),t(),e("span",{class:"token operator"},"<"),t("ext-id"),e("span",{class:"token operator"},">")])]),e(c,{lang:"bash"})]),_:1}),e("p",null,"This command will find and install the extension’s module. After installation is complete, there may be one or more prompts asking you to make choices or add information needed by the extension. When the installation is concluded, you will be returned to the command line."),e("h3",{id:"list-installed-app-extensions",class:"doc-heading doc-h3",onClick:l=>i(h)("list-installed-app-extensions")},"List Installed App Extensions",8,["onClick"]),e("p",null,"There are several ways to “discover” what App Extensions have been installed:"),e(i(u),null,{default:r(()=>[e("pre",{class:"doc-code"},[e("code",null,[t(`$ quasar ext
$ quasar info
$ `),e("span",{class:"token function"},"cat"),t(" quasar.extensions.json")])]),e(c,{lang:"bash"})]),_:1}),e("h3",{id:"running-app-extensions",class:"doc-heading doc-h3",onClick:l=>i(h)("running-app-extensions")},"“Running” App Extensions",8,["onClick"]),e("p",null,"There is no one way to run app extensions, because some of them might not even have any code to run (i.e. are merely template files copied to specific folders within your project), whereas others may merely be installation helpers and others might choose to add a new command to the Quasar CLI."),e("p",null,[t("Nevertheless, each and every App Extension will be initialized during "),e("code",{class:"doc-token"},"quasar dev"),t(" and "),e("code",{class:"doc-token"},"quasar build"),t(".")]),e("h3",{id:"updating-an-app-extension",class:"doc-heading doc-h3",onClick:l=>i(h)("updating-an-app-extension")},"Updating an App Extension",8,["onClick"]),e("p",null,"You may need to update your extension, and this is done with the same command as used for installation:"),e(i(u),null,{default:r(()=>[e("pre",{class:"doc-code"},[e("code",null,[t("$ quasar ext "),e("span",{class:"token function"},"add"),t(),e("span",{class:"token operator"},"<"),t("ext-id"),e("span",{class:"token operator"},">")])]),e(c,{lang:"bash"})]),_:1}),e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,"Reinstalling the extension MIGHT overwrite files that you have changed. You will be presented with the option to overwrite the files detected.")]),e("h3",{id:"removing-an-app-extension",class:"doc-heading doc-h3",onClick:l=>i(h)("removing-an-app-extension")},"Removing an App Extension",8,["onClick"]),e("p",null,"You can remove an App Extension from being hooked from the Quasar CLI by running this command. Depending upon the author and the extension itself, you may have to manually clean up files though."),e(i(u),null,{default:r(()=>[e("pre",{class:"doc-code"},[e("code",null,[t("$ quasar ext remove "),e("span",{class:"token operator"},"<"),t("ext-id"),e("span",{class:"token operator"},">")])]),e(c,{lang:"bash"})]),_:1}),e("h2",{id:"list-of-official-app-extensions",class:"doc-heading doc-h2",onClick:l=>i(h)("list-of-official-app-extensions")},"List of official app-extensions",8,["onClick"]),e("p",null,[t("Check out "),e(f,{to:"/app-extensions/discover"},{default:r(()=>[t("Discover App Extensions")]),_:1}),t(" page.")])]}),_:1},v))}}},y=w.setup;w.setup=(k,x)=>{const g=E();return(g.modules||(g.modules=new Set)).add("src/pages/app-extensions/introduction.md"),y?y(k,x):void 0};const B=q(w,[["__file","introduction.md"]]);export{B as default};
