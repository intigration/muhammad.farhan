import{resolveComponent as L,mergeProps as Q,withCtx as o,createTextVNode as a,unref as k,createVNode as n,useSSRContext as T}from"vue";import{ssrRenderComponent as c}from"vue/server-renderer";import{c as w}from"./page-utils-C-QWsEHe.js";import{D as j,a as d}from"./DocPage-DKr-0pQn.js";import{D as m}from"./DocPrerender-DPOnWPFO.js";import{C as l}from"./CopyButton-l3ndfN49.js";import{_ as U}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const q={__name:"app-internationalization",__ssrInlineRender:!0,setup(x){const b=[{name:"RTL Support",category:"Options & Helpers",path:"/options/rtl-support"},{name:"Quasar Language Packs",category:"Options & Helpers",path:"/options/quasar-language-packs"}],v=[{id:"setup-manually",title:"2. Setup manually"},{id:"setting-up-translation-blocks-in-your-sfcs",title:"3. Setting up Translation Blocks in your SFCs"},{id:"how-to-use",title:"4. How to use"},{id:"add-new-language",title:"5. Add new language"},{id:"create-language-switcher",title:"6. Create language switcher"},{id:"uppercase",title:"7. UPPERCASE"},{id:"detecting-locale",title:"8. Detecting Locale"}];return(M,C,P,N)=>{const $=L("q-tab-panel");C(c(j,Q({title:"App Internationalization (i18n)",desc:"How to use vue-i18n in a Quasar app.",heading:"","edit-link":"options/app-internationalization",toc:v,related:b},N),{default:o((B,u,f,t)=>{if(u)u(`<p${t}>Internationalization is a design process that ensures a product (a website or application) can be adapted to various languages and regions without requiring engineering changes to the source code. Think of internationalization as readiness for localization.</p><div class="doc-note doc-note--tip"${t}><p class="doc-note__title"${t}>TIP</p><p${t}>The recommended package for handling website/app is `),u(c(d,{to:"https://github.com/intlify/vue-i18n-next"},{default:o((g,e,i,s)=>{if(e)e("vue-i18n");else return[a("vue-i18n")]}),_:1},f,t)),u(". This package should be added through a "),u(c(d,{to:"/quasar-cli-vite/boot-files"},{default:o((g,e,i,s)=>{if(e)e("@quasar/app-vite Boot File");else return[a("@quasar/app-vite Boot File")]}),_:1},f,t)),u(" or a "),u(c(d,{to:"/quasar-cli-webpack/boot-files"},{default:o((g,e,i,s)=>{if(e)e("@quasar/app-webpack Boot File");else return[a("@quasar/app-webpack Boot File")]}),_:1},f,t)),u(`. On the Boot File documentation page you can see a specific example for plugging in vue-i18n.</p></div><div class="doc-note doc-note--warning"${t}><p class="doc-note__title"${t}>WARNING</p><p${t}>Quasar documentation assumes you are already familiar with `),u(c(d,{to:"https://github.com/intlify/vue-i18n-next"},{default:o((g,e,i,s)=>{if(e)e("vue-i18n");else return[a("vue-i18n")]}),_:1},f,t)),u(". Below it’s described only the basics of how to make use of it in a Quasar CLI project. For the full list of its features please visit the "),u(c(d,{to:"https://vue-i18n.intlify.dev"},{default:o((g,e,i,s)=>{if(e)e("Vue I18n documentation");else return[a("Vue I18n documentation")]}),_:1},f,t)),u(`.</p></div><h2 id="setup-manually" class="doc-heading doc-h2"${t}>Setup manually</h2><p${t}>If you missed enabling i18n during <code class="doc-token"${t}>yarn create quasar</code> (or <code class="doc-token"${t}>npm init quasar</code> or the pnpm or Bun equivalent) wizard, here is how you can set it up manually.</p><ol${t}><li${t}>Install the <code class="doc-token"${t}>vue-i18n</code> dependency into your app.</li></ol>`),u(c(k(m),{tabs:["Yarn","NPM","PNPM","Bun"]},{default:o((g,e,i,s)=>{if(e)e(c($,{class:"q-pa-none",name:"Yarn"},{default:o((h,r,y,p)=>{if(r)r(`<pre class="doc-code"${p}><code${p}>$ <span class="token function"${p}>yarn</span> <span class="token function"${p}>add</span> vue-i18n@next</code></pre>`),r(c(l,{lang:"bash"},null,y,p));else return[n("pre",{class:"doc-code"},[n("code",null,[a("$ "),n("span",{class:"token function"},"yarn"),a(),n("span",{class:"token function"},"add"),a(" vue-i18n@next")])]),n(l,{lang:"bash"})]}),_:1},i,s)),e(c($,{class:"q-pa-none",name:"NPM"},{default:o((h,r,y,p)=>{if(r)r(`<pre class="doc-code"${p}><code${p}>$ <span class="token function"${p}>npm</span> <span class="token function"${p}>install</span> <span class="token parameter variable"${p}>--save</span> vue-i18n@next</code></pre>`),r(c(l,{lang:"bash"},null,y,p));else return[n("pre",{class:"doc-code"},[n("code",null,[a("$ "),n("span",{class:"token function"},"npm"),a(),n("span",{class:"token function"},"install"),a(),n("span",{class:"token parameter variable"},"--save"),a(" vue-i18n@next")])]),n(l,{lang:"bash"})]}),_:1},i,s)),e(c($,{class:"q-pa-none",name:"PNPM"},{default:o((h,r,y,p)=>{if(r)r(`<pre class="doc-code"${p}><code${p}><span class="token comment"${p}># experimental support</span>
$ <span class="token function"${p}>pnpm</span> <span class="token function"${p}>add</span> vue-i18n@next</code></pre>`),r(c(l,{lang:"bash"},null,y,p));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"# experimental support"),a(`
$ `),n("span",{class:"token function"},"pnpm"),a(),n("span",{class:"token function"},"add"),a(" vue-i18n@next")])]),n(l,{lang:"bash"})]}),_:1},i,s)),e(c($,{class:"q-pa-none",name:"Bun"},{default:o((h,r,y,p)=>{if(r)r(`<pre class="doc-code"${p}><code${p}>$ bun <span class="token function"${p}>add</span> vue-i18n@next</code></pre>`),r(c(l,{lang:"bash"},null,y,p));else return[n("pre",{class:"doc-code"},[n("code",null,[a("$ bun "),n("span",{class:"token function"},"add"),a(" vue-i18n@next")])]),n(l,{lang:"bash"})]}),_:1},i,s));else return[n($,{class:"q-pa-none",name:"Yarn"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[a("$ "),n("span",{class:"token function"},"yarn"),a(),n("span",{class:"token function"},"add"),a(" vue-i18n@next")])]),n(l,{lang:"bash"})]),_:1}),n($,{class:"q-pa-none",name:"NPM"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[a("$ "),n("span",{class:"token function"},"npm"),a(),n("span",{class:"token function"},"install"),a(),n("span",{class:"token parameter variable"},"--save"),a(" vue-i18n@next")])]),n(l,{lang:"bash"})]),_:1}),n($,{class:"q-pa-none",name:"PNPM"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"# experimental support"),a(`
$ `),n("span",{class:"token function"},"pnpm"),a(),n("span",{class:"token function"},"add"),a(" vue-i18n@next")])]),n(l,{lang:"bash"})]),_:1}),n($,{class:"q-pa-none",name:"Bun"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[a("$ bun "),n("span",{class:"token function"},"add"),a(" vue-i18n@next")])]),n(l,{lang:"bash"})]),_:1})]}),_:1},f,t)),u(`<ol start="2"${t}><li${t}>Create a file <code class="doc-token"${t}>src/boot/i18n.js</code> with following content:</li></ol>`),u(c(k(m),null,{default:o((g,e,i,s)=>{if(e)e(`<pre class="doc-code"${s}><code${s}><span class="token keyword"${s}>import</span> <span class="token punctuation"${s}>{</span> createI18n <span class="token punctuation"${s}>}</span> <span class="token keyword"${s}>from</span> <span class="token string"${s}>&#39;vue-i18n&#39;</span>
<span class="token keyword"${s}>import</span> messages <span class="token keyword"${s}>from</span> <span class="token string"${s}>&#39;src/i18n&#39;</span>

<span class="token keyword"${s}>export</span> <span class="token keyword"${s}>default</span> <span class="token punctuation"${s}>(</span><span class="token parameter"${s}><span class="token punctuation"${s}>{</span> app <span class="token punctuation"${s}>}</span></span><span class="token punctuation"${s}>)</span> <span class="token operator"${s}>=&gt;</span> <span class="token punctuation"${s}>{</span>
  <span class="token comment"${s}>// Create I18n instance</span>
  <span class="token keyword"${s}>const</span> i18n <span class="token operator"${s}>=</span> <span class="token function"${s}>createI18n</span><span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>{</span>
    <span class="token literal-property property"${s}>locale</span><span class="token operator"${s}>:</span> <span class="token string"${s}>&#39;en-US&#39;</span><span class="token punctuation"${s}>,</span>
    <span class="token literal-property property"${s}>legacy</span><span class="token operator"${s}>:</span> <span class="token boolean"${s}>false</span><span class="token punctuation"${s}>,</span> <span class="token comment"${s}>// comment this out if not using Composition API</span>
    messages
  <span class="token punctuation"${s}>}</span><span class="token punctuation"${s}>)</span>

  <span class="token comment"${s}>// Tell app to use the I18n instance</span>
  app<span class="token punctuation"${s}>.</span><span class="token function"${s}>use</span><span class="token punctuation"${s}>(</span>i18n<span class="token punctuation"${s}>)</span>
<span class="token punctuation"${s}>}</span></code></pre>`),e(c(l,null,null,i,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" createI18n "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'vue-i18n'"),a(`
`),n("span",{class:"token keyword"},"import"),a(" messages "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'src/i18n'"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" app "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// Create I18n instance"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" i18n "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"createI18n"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token literal-property property"},"locale"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'en-US'"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token literal-property property"},"legacy"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token comment"},"// comment this out if not using Composition API"),a(`
    messages
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

  `),n("span",{class:"token comment"},"// Tell app to use the I18n instance"),a(`
  app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),a("i18n"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(l)]}),_:1},f,t)),u(`<ol start="3"${t}><li${t}><p${t}>Create a folder (/src/i18n/) in your app which will hold the definitions for each language that you’ll support. Example: `),u(c(d,{to:"https://github.com/quasarframework/quasar-starter-kit/tree/master/template/src/i18n"},{default:o((g,e,i,s)=>{if(e)e("src/i18n");else return[a("src/i18n")]}),_:1},f,t)),u(`. Notice the “import messages from ‘src/i18n’” from step 2. This is step where you write the content that gets imported.</p></li><li${t}><p${t}>Now reference this file in <code class="doc-token"${t}>quasar.config</code> one in the <code class="doc-token"${t}>boot</code> section:</p></li></ol>`),u(c(k(m),{title:"/quasar.config file"},{default:o((g,e,i,s)=>{if(e)e(`<pre class="doc-code"${s}><code${s}><span class="token keyword"${s}>return</span> <span class="token punctuation"${s}>{</span>
  <span class="token literal-property property"${s}>boot</span><span class="token operator"${s}>:</span> <span class="token punctuation"${s}>[</span>
    <span class="token comment"${s}>// ...</span>
    <span class="token string"${s}>&#39;i18n&#39;</span>
  <span class="token punctuation"${s}>]</span><span class="token punctuation"${s}>,</span>

  <span class="token comment"${s}>// ...</span>
<span class="token punctuation"${s}>}</span></code></pre>`),e(c(l,null,null,i,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"["),a(`
    `),n("span",{class:"token comment"},"// ..."),a(`
    `),n("span",{class:"token string"},"'i18n'"),a(`
  `),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),a(`

  `),n("span",{class:"token comment"},"// ..."),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(l)]}),_:1},f,t)),u(`<p${t}>Now you are ready to use it in your pages.</p><h2 id="setting-up-translation-blocks-in-your-sfcs" class="doc-heading doc-h2"${t}>Setting up Translation Blocks in your SFCs</h2><p${t}>If we want to add support to the <code class="doc-token"${t}>&lt;i18n&gt;</code> tag inside a SFC (single file component) in a Quasar CLI project then we need to modify the existing configuration.</p><p${t}>We first install the <code class="doc-token"${t}>@intlify/vue-i18n-loader</code> package:</p>`),u(c(k(m),{tabs:["Yarn","NPM","PNPM","Bun"]},{default:o((g,e,i,s)=>{if(e)e(c($,{class:"q-pa-none",name:"Yarn"},{default:o((h,r,y,p)=>{if(r)r(`<pre class="doc-code"${p}><code${p}>$ <span class="token function"${p}>yarn</span> <span class="token function"${p}>add</span> <span class="token parameter variable"${p}>--dev</span> @intlify/vue-i18n-loader</code></pre>`),r(c(l,{lang:"bash"},null,y,p));else return[n("pre",{class:"doc-code"},[n("code",null,[a("$ "),n("span",{class:"token function"},"yarn"),a(),n("span",{class:"token function"},"add"),a(),n("span",{class:"token parameter variable"},"--dev"),a(" @intlify/vue-i18n-loader")])]),n(l,{lang:"bash"})]}),_:1},i,s)),e(c($,{class:"q-pa-none",name:"NPM"},{default:o((h,r,y,p)=>{if(r)r(`<pre class="doc-code"${p}><code${p}>$ <span class="token function"${p}>npm</span> <span class="token function"${p}>install</span> --save-dev @intlify/vue-i18n-loader</code></pre>`),r(c(l,{lang:"bash"},null,y,p));else return[n("pre",{class:"doc-code"},[n("code",null,[a("$ "),n("span",{class:"token function"},"npm"),a(),n("span",{class:"token function"},"install"),a(" --save-dev @intlify/vue-i18n-loader")])]),n(l,{lang:"bash"})]}),_:1},i,s)),e(c($,{class:"q-pa-none",name:"PNPM"},{default:o((h,r,y,p)=>{if(r)r(`<pre class="doc-code"${p}><code${p}>$ <span class="token function"${p}>pnpm</span> <span class="token function"${p}>add</span> <span class="token parameter variable"${p}>-D</span> @intlify/vue-i18n-loader</code></pre>`),r(c(l,{lang:"bash"},null,y,p));else return[n("pre",{class:"doc-code"},[n("code",null,[a("$ "),n("span",{class:"token function"},"pnpm"),a(),n("span",{class:"token function"},"add"),a(),n("span",{class:"token parameter variable"},"-D"),a(" @intlify/vue-i18n-loader")])]),n(l,{lang:"bash"})]}),_:1},i,s)),e(c($,{class:"q-pa-none",name:"Bun"},{default:o((h,r,y,p)=>{if(r)r(`<pre class="doc-code"${p}><code${p}>$ bun <span class="token function"${p}>add</span> <span class="token parameter variable"${p}>--dev</span> @intlify/vue-i18n-loader</code></pre>`),r(c(l,{lang:"bash"},null,y,p));else return[n("pre",{class:"doc-code"},[n("code",null,[a("$ bun "),n("span",{class:"token function"},"add"),a(),n("span",{class:"token parameter variable"},"--dev"),a(" @intlify/vue-i18n-loader")])]),n(l,{lang:"bash"})]}),_:1},i,s));else return[n($,{class:"q-pa-none",name:"Yarn"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[a("$ "),n("span",{class:"token function"},"yarn"),a(),n("span",{class:"token function"},"add"),a(),n("span",{class:"token parameter variable"},"--dev"),a(" @intlify/vue-i18n-loader")])]),n(l,{lang:"bash"})]),_:1}),n($,{class:"q-pa-none",name:"NPM"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[a("$ "),n("span",{class:"token function"},"npm"),a(),n("span",{class:"token function"},"install"),a(" --save-dev @intlify/vue-i18n-loader")])]),n(l,{lang:"bash"})]),_:1}),n($,{class:"q-pa-none",name:"PNPM"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[a("$ "),n("span",{class:"token function"},"pnpm"),a(),n("span",{class:"token function"},"add"),a(),n("span",{class:"token parameter variable"},"-D"),a(" @intlify/vue-i18n-loader")])]),n(l,{lang:"bash"})]),_:1}),n($,{class:"q-pa-none",name:"Bun"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[a("$ bun "),n("span",{class:"token function"},"add"),a(),n("span",{class:"token parameter variable"},"--dev"),a(" @intlify/vue-i18n-loader")])]),n(l,{lang:"bash"})]),_:1})]}),_:1},f,t)),u(`<p${t}>We then edit the <code class="doc-token"${t}>quasar.config</code> file at the root of our project. We have to include the following:</p>`),u(c(k(m),{title:"/quasar.config file"},{default:o((g,e,i,s)=>{if(e)e(`<pre class="doc-code"${s}><code${s}><span class="token keyword"${s}>const</span> path <span class="token operator"${s}>=</span> <span class="token function"${s}>require</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;node:path&#39;</span><span class="token punctuation"${s}>)</span>

<span class="token literal-property property"${s}>build</span><span class="token operator"${s}>:</span> <span class="token punctuation"${s}>{</span>
  <span class="token function-variable function"${s}>chainWebpack</span><span class="token operator"${s}>:</span> <span class="token parameter"${s}>chain</span> <span class="token operator"${s}>=&gt;</span> <span class="token punctuation"${s}>{</span>
    chain<span class="token punctuation"${s}>.</span>module
      <span class="token punctuation"${s}>.</span><span class="token function"${s}>rule</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;i18n-resource&#39;</span><span class="token punctuation"${s}>)</span>
        <span class="token punctuation"${s}>.</span><span class="token function"${s}>test</span><span class="token punctuation"${s}>(</span><span class="token regex"${s}><span class="token regex-delimiter"${s}>/</span><span class="token regex-source language-regex"${s}>\\.(json5?|ya?ml)$</span><span class="token regex-delimiter"${s}>/</span></span><span class="token punctuation"${s}>)</span>
          <span class="token punctuation"${s}>.</span>include<span class="token punctuation"${s}>.</span><span class="token function"${s}>add</span><span class="token punctuation"${s}>(</span>path<span class="token punctuation"${s}>.</span><span class="token function"${s}>resolve</span><span class="token punctuation"${s}>(</span>__dirname<span class="token punctuation"${s}>,</span> <span class="token string"${s}>&#39;./src/i18n&#39;</span><span class="token punctuation"${s}>)</span><span class="token punctuation"${s}>)</span>
          <span class="token punctuation"${s}>.</span><span class="token function"${s}>end</span><span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span>
        <span class="token punctuation"${s}>.</span><span class="token function"${s}>type</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;javascript/auto&#39;</span><span class="token punctuation"${s}>)</span>
        <span class="token punctuation"${s}>.</span><span class="token function"${s}>use</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;i18n-resource&#39;</span><span class="token punctuation"${s}>)</span>
          <span class="token punctuation"${s}>.</span><span class="token function"${s}>loader</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;@intlify/vue-i18n-loader&#39;</span><span class="token punctuation"${s}>)</span>
    chain<span class="token punctuation"${s}>.</span>module
      <span class="token punctuation"${s}>.</span><span class="token function"${s}>rule</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;i18n&#39;</span><span class="token punctuation"${s}>)</span>
        <span class="token punctuation"${s}>.</span><span class="token function"${s}>resourceQuery</span><span class="token punctuation"${s}>(</span><span class="token regex"${s}><span class="token regex-delimiter"${s}>/</span><span class="token regex-source language-regex"${s}>blockType=i18n</span><span class="token regex-delimiter"${s}>/</span></span><span class="token punctuation"${s}>)</span>
        <span class="token punctuation"${s}>.</span><span class="token function"${s}>type</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;javascript/auto&#39;</span><span class="token punctuation"${s}>)</span>
        <span class="token punctuation"${s}>.</span><span class="token function"${s}>use</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;i18n&#39;</span><span class="token punctuation"${s}>)</span>
          <span class="token punctuation"${s}>.</span><span class="token function"${s}>loader</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;@intlify/vue-i18n-loader&#39;</span><span class="token punctuation"${s}>)</span>
  <span class="token punctuation"${s}>}</span>
<span class="token punctuation"${s}>}</span></code></pre>`),e(c(l,null,null,i,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"const"),a(" path "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'node:path'"),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token function-variable function"},"chainWebpack"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token parameter"},"chain"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
    chain`),n("span",{class:"token punctuation"},"."),a(`module
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rule"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'i18n-resource'"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"test"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"\\.(json5?|ya?ml)$"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},")"),a(`
          `),n("span",{class:"token punctuation"},"."),a("include"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),a("path"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"resolve"),n("span",{class:"token punctuation"},"("),a("__dirname"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},"'./src/i18n'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
          `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"end"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"type"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'javascript/auto'"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'i18n-resource'"),n("span",{class:"token punctuation"},")"),a(`
          `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"loader"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'@intlify/vue-i18n-loader'"),n("span",{class:"token punctuation"},")"),a(`
    chain`),n("span",{class:"token punctuation"},"."),a(`module
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rule"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'i18n'"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"resourceQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"blockType=i18n"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"type"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'javascript/auto'"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'i18n'"),n("span",{class:"token punctuation"},")"),a(`
          `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"loader"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'@intlify/vue-i18n-loader'"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(l)]}),_:1},f,t)),u(`<h2 id="how-to-use" class="doc-heading doc-h2"${t}>How to use</h2><p${t}>There are 4 main cases:</p>`),u(c(k(m),null,{default:o((g,e,i,s)=>{if(e)e(`<pre class="doc-code"${s}><code${s}><span class="token tag"${s}><span class="token tag"${s}><span class="token punctuation"${s}>&lt;</span>template</span><span class="token punctuation"${s}>&gt;</span></span>
  <span class="token tag"${s}><span class="token tag"${s}><span class="token punctuation"${s}>&lt;</span>q-page</span><span class="token punctuation"${s}>&gt;</span></span>
    <span class="token tag"${s}><span class="token tag"${s}><span class="token punctuation"${s}>&lt;</span>q-btn</span> <span class="token attr-name"${s}>:label</span><span class="token attr-value"${s}><span class="token punctuation attr-equals"${s}>=</span><span class="token punctuation"${s}>&quot;</span>$t(&#39;mykey2&#39;)<span class="token punctuation"${s}>&quot;</span></span><span class="token punctuation"${s}>&gt;</span></span>
    {{ $t(&#39;mykey1&#39;) }}
    <span class="token tag"${s}><span class="token tag"${s}><span class="token punctuation"${s}>&lt;</span>span</span> <span class="token attr-name"${s}>v-html</span><span class="token attr-value"${s}><span class="token punctuation attr-equals"${s}>=</span><span class="token punctuation"${s}>&quot;</span>content<span class="token punctuation"${s}>&quot;</span></span><span class="token punctuation"${s}>&gt;</span></span><span class="token tag"${s}><span class="token tag"${s}><span class="token punctuation"${s}>&lt;/</span>span</span><span class="token punctuation"${s}>&gt;</span></span>
  <span class="token tag"${s}><span class="token tag"${s}><span class="token punctuation"${s}>&lt;/</span>q-page</span><span class="token punctuation"${s}>&gt;</span></span>
<span class="token tag"${s}><span class="token tag"${s}><span class="token punctuation"${s}>&lt;/</span>template</span><span class="token punctuation"${s}>&gt;</span></span>

<span class="token tag"${s}><span class="token tag"${s}><span class="token punctuation"${s}>&lt;</span>script</span><span class="token punctuation"${s}>&gt;</span></span><span class="token script"${s}><span class="token language-javascript"${s}>
<span class="token comment"${s}>// Options API variant</span>
<span class="token keyword"${s}>export</span> <span class="token keyword"${s}>default</span> <span class="token punctuation"${s}>{</span>
  <span class="token function"${s}>data</span><span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span> <span class="token punctuation"${s}>{</span>
    <span class="token keyword"${s}>return</span> <span class="token punctuation"${s}>{</span>
      <span class="token literal-property property"${s}>content</span><span class="token operator"${s}>:</span> <span class="token keyword"${s}>this</span><span class="token punctuation"${s}>.</span><span class="token function"${s}>$t</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;mykey3&#39;</span><span class="token punctuation"${s}>)</span>
    <span class="token punctuation"${s}>}</span>
  <span class="token punctuation"${s}>}</span>
<span class="token punctuation"${s}>}</span>
</span></span><span class="token tag"${s}><span class="token tag"${s}><span class="token punctuation"${s}>&lt;/</span>script</span><span class="token punctuation"${s}>&gt;</span></span></code></pre>`),e(c(l,null,null,i,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("template")]),n("span",{class:"token punctuation"},">")]),a(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("q-page")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("q-btn")]),a(),n("span",{class:"token attr-name"},":label"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("$t('mykey2')"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
    {{ $t('mykey1') }}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("span")]),a(),n("span",{class:"token attr-name"},"v-html"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("content"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("span")]),n("span",{class:"token punctuation"},">")]),a(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("q-page")]),n("span",{class:"token punctuation"},">")]),a(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("template")]),n("span",{class:"token punctuation"},">")]),a(`

`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("script")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"},[n("span",{class:"token language-javascript"},[a(`
`),n("span",{class:"token comment"},"// Options API variant"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token function"},"data"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token punctuation"},"{"),a(`
      `),n("span",{class:"token literal-property property"},"content"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"$t"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'mykey3'"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("script")]),n("span",{class:"token punctuation"},">")])])]),n(l)]}),_:1},f,t)),u(c(k(m),null,{default:o((g,e,i,s)=>{if(e)e(`<pre class="doc-code"${s}><code${s}><span class="token tag"${s}><span class="token tag"${s}><span class="token punctuation"${s}>&lt;</span>script</span> <span class="token attr-name"${s}>setup</span><span class="token punctuation"${s}>&gt;</span></span><span class="token script"${s}><span class="token language-javascript"${s}>
<span class="token comment"${s}>// Composition API variant</span>
<span class="token keyword"${s}>import</span> <span class="token punctuation"${s}>{</span> useI18n <span class="token punctuation"${s}>}</span> <span class="token keyword"${s}>from</span> <span class="token string"${s}>&quot;vue-i18n&quot;</span>
<span class="token keyword"${s}>const</span> <span class="token punctuation"${s}>{</span> t <span class="token punctuation"${s}>}</span> <span class="token operator"${s}>=</span> <span class="token function"${s}>useI18n</span><span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span>

<span class="token keyword"${s}>const</span> content <span class="token operator"${s}>=</span> <span class="token function"${s}>ref</span><span class="token punctuation"${s}>(</span><span class="token function"${s}>t</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;mykey4&#39;</span><span class="token punctuation"${s}>)</span><span class="token punctuation"${s}>)</span>
</span></span><span class="token tag"${s}><span class="token tag"${s}><span class="token punctuation"${s}>&lt;/</span>script</span><span class="token punctuation"${s}>&gt;</span></span></code></pre>`),e(c(l,null,null,i,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("script")]),a(),n("span",{class:"token attr-name"},"setup"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"},[n("span",{class:"token language-javascript"},[a(`
`),n("span",{class:"token comment"},"// Composition API variant"),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" useI18n "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},'"vue-i18n"'),a(`
`),n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token punctuation"},"{"),a(" t "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"useI18n"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token keyword"},"const"),a(" content "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"ref"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"t"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'mykey4'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("script")]),n("span",{class:"token punctuation"},">")])])]),n(l)]}),_:1},f,t)),u(`<ol${t}><li${t}><code class="doc-token"${t}>mykey1</code> in HTML body</li><li${t}><code class="doc-token"${t}>mykey2</code> in attribute</li><li${t}><code class="doc-token"${t}>mykey3</code> programmatically with option api</li><li${t}><code class="doc-token"${t}>mykey4</code> programmatically with composition api</li></ol><h2 id="add-new-language" class="doc-heading doc-h2"${t}>Add new language</h2><p${t}>Let’s say you want to add new German language.</p><ol${t}><li${t}>Create the new file <code class="doc-token"${t}>src/i18n/de/index.js</code> and copy there the content of the file <code class="doc-token"${t}>src/i18n/en-US/index.js</code> then make changes to the language strings.</li><li${t}>Now change <code class="doc-token"${t}>src/i18n/index.js</code> and add the new <code class="doc-token"${t}>de</code> language there.</li></ol>`),u(c(k(m),null,{default:o((g,e,i,s)=>{if(e)e(`<pre class="doc-code"${s}><code${s}><span class="token keyword"${s}>import</span> enUS <span class="token keyword"${s}>from</span> <span class="token string"${s}>&#39;./en-US&#39;</span>
<span class="token keyword"${s}>import</span> de <span class="token keyword"${s}>from</span> <span class="token string"${s}>&#39;./de&#39;</span>

<span class="token keyword"${s}>export</span> <span class="token keyword"${s}>default</span> <span class="token punctuation"${s}>{</span>
  <span class="token string-property property"${s}>&#39;en-US&#39;</span><span class="token operator"${s}>:</span> enUS<span class="token punctuation"${s}>,</span>
  <span class="token string-property property"${s}>&#39;de&#39;</span><span class="token operator"${s}>:</span> de
<span class="token punctuation"${s}>}</span></code></pre>`),e(c(l,null,null,i,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(" enUS "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'./en-US'"),a(`
`),n("span",{class:"token keyword"},"import"),a(" de "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'./de'"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token string-property property"},"'en-US'"),n("span",{class:"token operator"},":"),a(" enUS"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token string-property property"},"'de'"),n("span",{class:"token operator"},":"),a(` de
`),n("span",{class:"token punctuation"},"}")])]),n(l)]}),_:1},f,t)),u(`<h2 id="create-language-switcher" class="doc-heading doc-h2"${t}>Create language switcher</h2>`),u(c(k(m),{title:"Some Vue file"},{default:o((g,e,i,s)=>{if(e)e(`<pre class="doc-code"${s}><code${s}><span class="token tag"${s}><span class="token tag"${s}><span class="token punctuation"${s}>&lt;</span>template</span><span class="token punctuation"${s}>&gt;</span></span>
  <span class="token comment"${s}>&lt;!-- ...... --&gt;</span>
  <span class="token tag"${s}><span class="token tag"${s}><span class="token punctuation"${s}>&lt;</span>q-select</span>
    <span class="token attr-name"${s}>v-model</span><span class="token attr-value"${s}><span class="token punctuation attr-equals"${s}>=</span><span class="token punctuation"${s}>&quot;</span>locale<span class="token punctuation"${s}>&quot;</span></span>
    <span class="token attr-name"${s}>:options</span><span class="token attr-value"${s}><span class="token punctuation attr-equals"${s}>=</span><span class="token punctuation"${s}>&quot;</span>localeOptions<span class="token punctuation"${s}>&quot;</span></span>
    <span class="token attr-name"${s}>label</span><span class="token attr-value"${s}><span class="token punctuation attr-equals"${s}>=</span><span class="token punctuation"${s}>&quot;</span>Quasar Language<span class="token punctuation"${s}>&quot;</span></span>
    <span class="token attr-name"${s}>dense</span>
    <span class="token attr-name"${s}>borderless</span>
    <span class="token attr-name"${s}>emit-value</span>
    <span class="token attr-name"${s}>map-options</span>
    <span class="token attr-name"${s}>options-dense</span>
    <span class="token special-attr"${s}><span class="token attr-name"${s}>style</span><span class="token attr-value"${s}><span class="token punctuation attr-equals"${s}>=</span><span class="token punctuation"${s}>&quot;</span><span class="token value css language-css"${s}><span class="token property"${s}>min-width</span><span class="token punctuation"${s}>:</span> 150px</span><span class="token punctuation"${s}>&quot;</span></span></span>
  <span class="token punctuation"${s}>/&gt;</span></span>
  <span class="token comment"${s}>&lt;!-- ...... --&gt;</span>
<span class="token tag"${s}><span class="token tag"${s}><span class="token punctuation"${s}>&lt;/</span>template</span><span class="token punctuation"${s}>&gt;</span></span>

<span class="token tag"${s}><span class="token tag"${s}><span class="token punctuation"${s}>&lt;</span>script</span><span class="token punctuation"${s}>&gt;</span></span><span class="token script"${s}><span class="token language-javascript"${s}>
<span class="token keyword"${s}>import</span> <span class="token punctuation"${s}>{</span> useI18n <span class="token punctuation"${s}>}</span> <span class="token keyword"${s}>from</span> <span class="token string"${s}>&#39;vue-i18n&#39;</span>

<span class="token keyword"${s}>export</span> <span class="token keyword"${s}>default</span> <span class="token punctuation"${s}>{</span>
  <span class="token function"${s}>setup</span> <span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span> <span class="token punctuation"${s}>{</span>
    <span class="token keyword"${s}>const</span> <span class="token punctuation"${s}>{</span> locale <span class="token punctuation"${s}>}</span> <span class="token operator"${s}>=</span> <span class="token function"${s}>useI18n</span><span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>{</span> <span class="token literal-property property"${s}>useScope</span><span class="token operator"${s}>:</span> <span class="token string"${s}>&#39;global&#39;</span> <span class="token punctuation"${s}>}</span><span class="token punctuation"${s}>)</span>

    <span class="token keyword"${s}>return</span> <span class="token punctuation"${s}>{</span>
      locale<span class="token punctuation"${s}>,</span>
      <span class="token literal-property property"${s}>localeOptions</span><span class="token operator"${s}>:</span> <span class="token punctuation"${s}>[</span>
        <span class="token punctuation"${s}>{</span> <span class="token literal-property property"${s}>value</span><span class="token operator"${s}>:</span> <span class="token string"${s}>&#39;en-US&#39;</span><span class="token punctuation"${s}>,</span> <span class="token literal-property property"${s}>label</span><span class="token operator"${s}>:</span> <span class="token string"${s}>&#39;English&#39;</span> <span class="token punctuation"${s}>}</span><span class="token punctuation"${s}>,</span>
        <span class="token punctuation"${s}>{</span> <span class="token literal-property property"${s}>value</span><span class="token operator"${s}>:</span> <span class="token string"${s}>&#39;de&#39;</span><span class="token punctuation"${s}>,</span> <span class="token literal-property property"${s}>label</span><span class="token operator"${s}>:</span> <span class="token string"${s}>&#39;German&#39;</span> <span class="token punctuation"${s}>}</span>
      <span class="token punctuation"${s}>]</span>
    <span class="token punctuation"${s}>}</span>
  <span class="token punctuation"${s}>}</span>
<span class="token punctuation"${s}>}</span>
</span></span><span class="token tag"${s}><span class="token tag"${s}><span class="token punctuation"${s}>&lt;/</span>script</span><span class="token punctuation"${s}>&gt;</span></span></code></pre>`),e(c(l,null,null,i,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("template")]),n("span",{class:"token punctuation"},">")]),a(`
  `),n("span",{class:"token comment"},"<!-- ...... -->"),a(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("q-select")]),a(`
    `),n("span",{class:"token attr-name"},"v-model"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("locale"),n("span",{class:"token punctuation"},'"')]),a(`
    `),n("span",{class:"token attr-name"},":options"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("localeOptions"),n("span",{class:"token punctuation"},'"')]),a(`
    `),n("span",{class:"token attr-name"},"label"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("Quasar Language"),n("span",{class:"token punctuation"},'"')]),a(`
    `),n("span",{class:"token attr-name"},"dense"),a(`
    `),n("span",{class:"token attr-name"},"borderless"),a(`
    `),n("span",{class:"token attr-name"},"emit-value"),a(`
    `),n("span",{class:"token attr-name"},"map-options"),a(`
    `),n("span",{class:"token attr-name"},"options-dense"),a(`
    `),n("span",{class:"token special-attr"},[n("span",{class:"token attr-name"},"style"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),n("span",{class:"token value css language-css"},[n("span",{class:"token property"},"min-width"),n("span",{class:"token punctuation"},":"),a(" 150px")]),n("span",{class:"token punctuation"},'"')])]),a(`
  `),n("span",{class:"token punctuation"},"/>")]),a(`
  `),n("span",{class:"token comment"},"<!-- ...... -->"),a(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("template")]),n("span",{class:"token punctuation"},">")]),a(`

`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("script")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"},[n("span",{class:"token language-javascript"},[a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" useI18n "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'vue-i18n'"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token function"},"setup"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token punctuation"},"{"),a(" locale "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"useI18n"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"useScope"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'global'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

    `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token punctuation"},"{"),a(`
      locale`),n("span",{class:"token punctuation"},","),a(`
      `),n("span",{class:"token literal-property property"},"localeOptions"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"["),a(`
        `),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"value"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'en-US'"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token literal-property property"},"label"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'English'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"value"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'de'"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token literal-property property"},"label"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'German'"),a(),n("span",{class:"token punctuation"},"}"),a(`
      `),n("span",{class:"token punctuation"},"]"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("script")]),n("span",{class:"token punctuation"},">")])])]),n(l)]}),_:1},f,t)),u(`<h2 id="uppercase" class="doc-heading doc-h2"${t}>UPPERCASE</h2><p${t}>Many languages, such as Greek, German and Dutch have non-intuitive rules for uppercase display, and there is an edge case that you should be aware of:</p><p${t}>QBtn component will use the CSS <code class="doc-token"${t}>text-transform: uppercase</code> rule to automatically turn its label into all-caps. According to the `),u(c(d,{to:"https://developer.mozilla.org/en-US/docs/Web/CSS/text-transform"},{default:o((g,e,i,s)=>{if(e)e("MDN webdocs");else return[a("MDN webdocs")]}),_:1},f,t)),u(`, “The language is defined by the lang HTML attribute or the xml:lang XML attribute.” Unfortunately, this has spotty implementation across browsers, and the 2017 ISO standard for the uppercase German eszett <code class="doc-token"${t}>ß</code> has not really entered the canon. At the moment you have two options:</p><ol${t}><li${t}>use the prop <code class="doc-token"${t}>no-caps</code> in your label and write the string as it should appear</li><li${t}>use the prop <code class="doc-token"${t}>no-caps</code> in your label and rewrite the string with `),u(c(d,{to:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleUpperCase"},{default:o((g,e,i,s)=>{if(e)e("toLocaleUpperCase");else return[a("toLocaleUpperCase")]}),_:1},f,t)),u(` by using the locale as detected by <code class="doc-token"${t}>$q.lang.getLocale()</code></li></ol><h2 id="detecting-locale" class="doc-heading doc-h2"${t}>Detecting Locale</h2><p${t}>There’s also a method to determine user locale which is supplied by Quasar out of the box:</p>`),u(c(k(m),null,{default:o((g,e,i,s)=>{if(e)e(`<pre class="doc-code"${s}><code${s}><span class="token comment"${s}>// outside of a Vue file</span>
<span class="token keyword"${s}>import</span> <span class="token punctuation"${s}>{</span> Quasar <span class="token punctuation"${s}>}</span> <span class="token keyword"${s}>from</span> <span class="token string"${s}>&#39;quasar&#39;</span>
Quasar<span class="token punctuation"${s}>.</span>lang<span class="token punctuation"${s}>.</span><span class="token function"${s}>getLocale</span><span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span> <span class="token comment"${s}>// returns a string</span>

<span class="token comment"${s}>// inside of a Vue file</span>
<span class="token keyword"${s}>import</span> <span class="token punctuation"${s}>{</span> useQuasar <span class="token punctuation"${s}>}</span> <span class="token keyword"${s}>from</span> <span class="token string"${s}>&#39;quasar&#39;</span>

<span class="token function"${s}>setup</span> <span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span> <span class="token punctuation"${s}>{</span>
  <span class="token keyword"${s}>const</span> $q <span class="token operator"${s}>=</span> <span class="token function"${s}>useQuasar</span><span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span>
  $q<span class="token punctuation"${s}>.</span>lang<span class="token punctuation"${s}>.</span><span class="token function"${s}>getLocale</span><span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span> <span class="token comment"${s}>// returns a string</span>
<span class="token punctuation"${s}>}</span></code></pre>`),e(c(l,null,null,i,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// outside of a Vue file"),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`
Quasar`),n("span",{class:"token punctuation"},"."),a("lang"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getLocale"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// returns a string"),a(`

`),n("span",{class:"token comment"},"// inside of a Vue file"),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" useQuasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token function"},"setup"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" $q "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
  $q`),n("span",{class:"token punctuation"},"."),a("lang"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getLocale"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// returns a string"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(l)]}),_:1},f,t)),u(`<div class="doc-note doc-note--warning"${t}><p class="doc-note__title"${t}>WARNING</p><p${t}>If you use Quasar’s set method (<code class="doc-token"${t}>$q.lang.set()</code>), this will not be reflected by Quasar’s getLocale above. The reason for this is that <code class="doc-token"${t}>getLocale()</code> will always return the <em${t}>users</em> locale (based on browser settings). The <code class="doc-token"${t}>set()</code> method refers to Quasars internal locale setting which is used to determine which language file to use. If you would like to see which language has been set using <code class="doc-token"${t}>set()</code> you can use <code class="doc-token"${t}>$q.lang.isoName</code>.</p></div>`);else return[n("p",null,"Internationalization is a design process that ensures a product (a website or application) can be adapted to various languages and regions without requiring engineering changes to the source code. Think of internationalization as readiness for localization."),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,[a("The recommended package for handling website/app is "),n(d,{to:"https://github.com/intlify/vue-i18n-next"},{default:o(()=>[a("vue-i18n")]),_:1}),a(". This package should be added through a "),n(d,{to:"/quasar-cli-vite/boot-files"},{default:o(()=>[a("@quasar/app-vite Boot File")]),_:1}),a(" or a "),n(d,{to:"/quasar-cli-webpack/boot-files"},{default:o(()=>[a("@quasar/app-webpack Boot File")]),_:1}),a(". On the Boot File documentation page you can see a specific example for plugging in vue-i18n.")])]),n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"WARNING"),n("p",null,[a("Quasar documentation assumes you are already familiar with "),n(d,{to:"https://github.com/intlify/vue-i18n-next"},{default:o(()=>[a("vue-i18n")]),_:1}),a(". Below it’s described only the basics of how to make use of it in a Quasar CLI project. For the full list of its features please visit the "),n(d,{to:"https://vue-i18n.intlify.dev"},{default:o(()=>[a("Vue I18n documentation")]),_:1}),a(".")])]),n("h2",{id:"setup-manually",class:"doc-heading doc-h2",onClick:g=>k(w)("setup-manually")},"Setup manually",8,["onClick"]),n("p",null,[a("If you missed enabling i18n during "),n("code",{class:"doc-token"},"yarn create quasar"),a(" (or "),n("code",{class:"doc-token"},"npm init quasar"),a(" or the pnpm or Bun equivalent) wizard, here is how you can set it up manually.")]),n("ol",null,[n("li",null,[a("Install the "),n("code",{class:"doc-token"},"vue-i18n"),a(" dependency into your app.")])]),n(k(m),{tabs:["Yarn","NPM","PNPM","Bun"]},{default:o(()=>[n($,{class:"q-pa-none",name:"Yarn"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[a("$ "),n("span",{class:"token function"},"yarn"),a(),n("span",{class:"token function"},"add"),a(" vue-i18n@next")])]),n(l,{lang:"bash"})]),_:1}),n($,{class:"q-pa-none",name:"NPM"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[a("$ "),n("span",{class:"token function"},"npm"),a(),n("span",{class:"token function"},"install"),a(),n("span",{class:"token parameter variable"},"--save"),a(" vue-i18n@next")])]),n(l,{lang:"bash"})]),_:1}),n($,{class:"q-pa-none",name:"PNPM"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"# experimental support"),a(`
$ `),n("span",{class:"token function"},"pnpm"),a(),n("span",{class:"token function"},"add"),a(" vue-i18n@next")])]),n(l,{lang:"bash"})]),_:1}),n($,{class:"q-pa-none",name:"Bun"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[a("$ bun "),n("span",{class:"token function"},"add"),a(" vue-i18n@next")])]),n(l,{lang:"bash"})]),_:1})]),_:1}),n("ol",{start:"2"},[n("li",null,[a("Create a file "),n("code",{class:"doc-token"},"src/boot/i18n.js"),a(" with following content:")])]),n(k(m),null,{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" createI18n "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'vue-i18n'"),a(`
`),n("span",{class:"token keyword"},"import"),a(" messages "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'src/i18n'"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" app "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// Create I18n instance"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" i18n "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"createI18n"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token literal-property property"},"locale"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'en-US'"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token literal-property property"},"legacy"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token comment"},"// comment this out if not using Composition API"),a(`
    messages
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

  `),n("span",{class:"token comment"},"// Tell app to use the I18n instance"),a(`
  app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),a("i18n"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(l)]),_:1}),n("ol",{start:"3"},[n("li",null,[n("p",null,[a("Create a folder (/src/i18n/) in your app which will hold the definitions for each language that you’ll support. Example: "),n(d,{to:"https://github.com/quasarframework/quasar-starter-kit/tree/master/template/src/i18n"},{default:o(()=>[a("src/i18n")]),_:1}),a(". Notice the “import messages from ‘src/i18n’” from step 2. This is step where you write the content that gets imported.")])]),n("li",null,[n("p",null,[a("Now reference this file in "),n("code",{class:"doc-token"},"quasar.config"),a(" one in the "),n("code",{class:"doc-token"},"boot"),a(" section:")])])]),n(k(m),{title:"/quasar.config file"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"["),a(`
    `),n("span",{class:"token comment"},"// ..."),a(`
    `),n("span",{class:"token string"},"'i18n'"),a(`
  `),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),a(`

  `),n("span",{class:"token comment"},"// ..."),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(l)]),_:1}),n("p",null,"Now you are ready to use it in your pages."),n("h2",{id:"setting-up-translation-blocks-in-your-sfcs",class:"doc-heading doc-h2",onClick:g=>k(w)("setting-up-translation-blocks-in-your-sfcs")},"Setting up Translation Blocks in your SFCs",8,["onClick"]),n("p",null,[a("If we want to add support to the "),n("code",{class:"doc-token"},"<i18n>"),a(" tag inside a SFC (single file component) in a Quasar CLI project then we need to modify the existing configuration.")]),n("p",null,[a("We first install the "),n("code",{class:"doc-token"},"@intlify/vue-i18n-loader"),a(" package:")]),n(k(m),{tabs:["Yarn","NPM","PNPM","Bun"]},{default:o(()=>[n($,{class:"q-pa-none",name:"Yarn"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[a("$ "),n("span",{class:"token function"},"yarn"),a(),n("span",{class:"token function"},"add"),a(),n("span",{class:"token parameter variable"},"--dev"),a(" @intlify/vue-i18n-loader")])]),n(l,{lang:"bash"})]),_:1}),n($,{class:"q-pa-none",name:"NPM"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[a("$ "),n("span",{class:"token function"},"npm"),a(),n("span",{class:"token function"},"install"),a(" --save-dev @intlify/vue-i18n-loader")])]),n(l,{lang:"bash"})]),_:1}),n($,{class:"q-pa-none",name:"PNPM"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[a("$ "),n("span",{class:"token function"},"pnpm"),a(),n("span",{class:"token function"},"add"),a(),n("span",{class:"token parameter variable"},"-D"),a(" @intlify/vue-i18n-loader")])]),n(l,{lang:"bash"})]),_:1}),n($,{class:"q-pa-none",name:"Bun"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[a("$ bun "),n("span",{class:"token function"},"add"),a(),n("span",{class:"token parameter variable"},"--dev"),a(" @intlify/vue-i18n-loader")])]),n(l,{lang:"bash"})]),_:1})]),_:1}),n("p",null,[a("We then edit the "),n("code",{class:"doc-token"},"quasar.config"),a(" file at the root of our project. We have to include the following:")]),n(k(m),{title:"/quasar.config file"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"const"),a(" path "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'node:path'"),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token literal-property property"},"build"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token function-variable function"},"chainWebpack"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token parameter"},"chain"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
    chain`),n("span",{class:"token punctuation"},"."),a(`module
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rule"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'i18n-resource'"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"test"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"\\.(json5?|ya?ml)$"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},")"),a(`
          `),n("span",{class:"token punctuation"},"."),a("include"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),a("path"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"resolve"),n("span",{class:"token punctuation"},"("),a("__dirname"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},"'./src/i18n'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
          `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"end"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"type"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'javascript/auto'"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'i18n-resource'"),n("span",{class:"token punctuation"},")"),a(`
          `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"loader"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'@intlify/vue-i18n-loader'"),n("span",{class:"token punctuation"},")"),a(`
    chain`),n("span",{class:"token punctuation"},"."),a(`module
      `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rule"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'i18n'"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"resourceQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"blockType=i18n"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"type"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'javascript/auto'"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'i18n'"),n("span",{class:"token punctuation"},")"),a(`
          `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"loader"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'@intlify/vue-i18n-loader'"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(l)]),_:1}),n("h2",{id:"how-to-use",class:"doc-heading doc-h2",onClick:g=>k(w)("how-to-use")},"How to use",8,["onClick"]),n("p",null,"There are 4 main cases:"),n(k(m),null,{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("template")]),n("span",{class:"token punctuation"},">")]),a(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("q-page")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("q-btn")]),a(),n("span",{class:"token attr-name"},":label"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("$t('mykey2')"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
    {{ $t('mykey1') }}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("span")]),a(),n("span",{class:"token attr-name"},"v-html"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("content"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("span")]),n("span",{class:"token punctuation"},">")]),a(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("q-page")]),n("span",{class:"token punctuation"},">")]),a(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("template")]),n("span",{class:"token punctuation"},">")]),a(`

`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("script")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"},[n("span",{class:"token language-javascript"},[a(`
`),n("span",{class:"token comment"},"// Options API variant"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token function"},"data"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token punctuation"},"{"),a(`
      `),n("span",{class:"token literal-property property"},"content"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"$t"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'mykey3'"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("script")]),n("span",{class:"token punctuation"},">")])])]),n(l)]),_:1}),n(k(m),null,{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("script")]),a(),n("span",{class:"token attr-name"},"setup"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"},[n("span",{class:"token language-javascript"},[a(`
`),n("span",{class:"token comment"},"// Composition API variant"),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" useI18n "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},'"vue-i18n"'),a(`
`),n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token punctuation"},"{"),a(" t "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"useI18n"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token keyword"},"const"),a(" content "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"ref"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"t"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'mykey4'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("script")]),n("span",{class:"token punctuation"},">")])])]),n(l)]),_:1}),n("ol",null,[n("li",null,[n("code",{class:"doc-token"},"mykey1"),a(" in HTML body")]),n("li",null,[n("code",{class:"doc-token"},"mykey2"),a(" in attribute")]),n("li",null,[n("code",{class:"doc-token"},"mykey3"),a(" programmatically with option api")]),n("li",null,[n("code",{class:"doc-token"},"mykey4"),a(" programmatically with composition api")])]),n("h2",{id:"add-new-language",class:"doc-heading doc-h2",onClick:g=>k(w)("add-new-language")},"Add new language",8,["onClick"]),n("p",null,"Let’s say you want to add new German language."),n("ol",null,[n("li",null,[a("Create the new file "),n("code",{class:"doc-token"},"src/i18n/de/index.js"),a(" and copy there the content of the file "),n("code",{class:"doc-token"},"src/i18n/en-US/index.js"),a(" then make changes to the language strings.")]),n("li",null,[a("Now change "),n("code",{class:"doc-token"},"src/i18n/index.js"),a(" and add the new "),n("code",{class:"doc-token"},"de"),a(" language there.")])]),n(k(m),null,{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(" enUS "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'./en-US'"),a(`
`),n("span",{class:"token keyword"},"import"),a(" de "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'./de'"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token string-property property"},"'en-US'"),n("span",{class:"token operator"},":"),a(" enUS"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token string-property property"},"'de'"),n("span",{class:"token operator"},":"),a(` de
`),n("span",{class:"token punctuation"},"}")])]),n(l)]),_:1}),n("h2",{id:"create-language-switcher",class:"doc-heading doc-h2",onClick:g=>k(w)("create-language-switcher")},"Create language switcher",8,["onClick"]),n(k(m),{title:"Some Vue file"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("template")]),n("span",{class:"token punctuation"},">")]),a(`
  `),n("span",{class:"token comment"},"<!-- ...... -->"),a(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("q-select")]),a(`
    `),n("span",{class:"token attr-name"},"v-model"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("locale"),n("span",{class:"token punctuation"},'"')]),a(`
    `),n("span",{class:"token attr-name"},":options"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("localeOptions"),n("span",{class:"token punctuation"},'"')]),a(`
    `),n("span",{class:"token attr-name"},"label"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("Quasar Language"),n("span",{class:"token punctuation"},'"')]),a(`
    `),n("span",{class:"token attr-name"},"dense"),a(`
    `),n("span",{class:"token attr-name"},"borderless"),a(`
    `),n("span",{class:"token attr-name"},"emit-value"),a(`
    `),n("span",{class:"token attr-name"},"map-options"),a(`
    `),n("span",{class:"token attr-name"},"options-dense"),a(`
    `),n("span",{class:"token special-attr"},[n("span",{class:"token attr-name"},"style"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),n("span",{class:"token value css language-css"},[n("span",{class:"token property"},"min-width"),n("span",{class:"token punctuation"},":"),a(" 150px")]),n("span",{class:"token punctuation"},'"')])]),a(`
  `),n("span",{class:"token punctuation"},"/>")]),a(`
  `),n("span",{class:"token comment"},"<!-- ...... -->"),a(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("template")]),n("span",{class:"token punctuation"},">")]),a(`

`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("script")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"},[n("span",{class:"token language-javascript"},[a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" useI18n "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'vue-i18n'"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token function"},"setup"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token punctuation"},"{"),a(" locale "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"useI18n"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"useScope"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'global'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

    `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token punctuation"},"{"),a(`
      locale`),n("span",{class:"token punctuation"},","),a(`
      `),n("span",{class:"token literal-property property"},"localeOptions"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"["),a(`
        `),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"value"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'en-US'"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token literal-property property"},"label"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'English'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"value"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'de'"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token literal-property property"},"label"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'German'"),a(),n("span",{class:"token punctuation"},"}"),a(`
      `),n("span",{class:"token punctuation"},"]"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("script")]),n("span",{class:"token punctuation"},">")])])]),n(l)]),_:1}),n("h2",{id:"uppercase",class:"doc-heading doc-h2",onClick:g=>k(w)("uppercase")},"UPPERCASE",8,["onClick"]),n("p",null,"Many languages, such as Greek, German and Dutch have non-intuitive rules for uppercase display, and there is an edge case that you should be aware of:"),n("p",null,[a("QBtn component will use the CSS "),n("code",{class:"doc-token"},"text-transform: uppercase"),a(" rule to automatically turn its label into all-caps. According to the "),n(d,{to:"https://developer.mozilla.org/en-US/docs/Web/CSS/text-transform"},{default:o(()=>[a("MDN webdocs")]),_:1}),a(", “The language is defined by the lang HTML attribute or the xml:lang XML attribute.” Unfortunately, this has spotty implementation across browsers, and the 2017 ISO standard for the uppercase German eszett "),n("code",{class:"doc-token"},"ß"),a(" has not really entered the canon. At the moment you have two options:")]),n("ol",null,[n("li",null,[a("use the prop "),n("code",{class:"doc-token"},"no-caps"),a(" in your label and write the string as it should appear")]),n("li",null,[a("use the prop "),n("code",{class:"doc-token"},"no-caps"),a(" in your label and rewrite the string with "),n(d,{to:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleUpperCase"},{default:o(()=>[a("toLocaleUpperCase")]),_:1}),a(" by using the locale as detected by "),n("code",{class:"doc-token"},"$q.lang.getLocale()")])]),n("h2",{id:"detecting-locale",class:"doc-heading doc-h2",onClick:g=>k(w)("detecting-locale")},"Detecting Locale",8,["onClick"]),n("p",null,"There’s also a method to determine user locale which is supplied by Quasar out of the box:"),n(k(m),null,{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// outside of a Vue file"),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`
Quasar`),n("span",{class:"token punctuation"},"."),a("lang"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getLocale"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// returns a string"),a(`

`),n("span",{class:"token comment"},"// inside of a Vue file"),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" useQuasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token function"},"setup"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" $q "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
  $q`),n("span",{class:"token punctuation"},"."),a("lang"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getLocale"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// returns a string"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(l)]),_:1}),n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"WARNING"),n("p",null,[a("If you use Quasar’s set method ("),n("code",{class:"doc-token"},"$q.lang.set()"),a("), this will not be reflected by Quasar’s getLocale above. The reason for this is that "),n("code",{class:"doc-token"},"getLocale()"),a(" will always return the "),n("em",null,"users"),a(" locale (based on browser settings). The "),n("code",{class:"doc-token"},"set()"),a(" method refers to Quasars internal locale setting which is used to determine which language file to use. If you would like to see which language has been set using "),n("code",{class:"doc-token"},"set()"),a(" you can use "),n("code",{class:"doc-token"},"$q.lang.isoName"),a(".")])])]}),_:1},P))}}},S=q.setup;q.setup=(x,b)=>{const v=T();return(v.modules||(v.modules=new Set)).add("src/pages/options/app-internationalization.md"),S?S(x,b):void 0};const K=U(q,[["__file","app-internationalization.md"]]);export{K as default};
