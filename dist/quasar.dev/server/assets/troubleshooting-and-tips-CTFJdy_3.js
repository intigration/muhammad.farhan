import{mergeProps as D,withCtx as r,createTextVNode as e,unref as s,createVNode as n,useSSRContext as A}from"vue";import{ssrRenderComponent as u,ssrRenderStyle as T}from"vue/server-renderer";import{c as h}from"./page-utils-C-QWsEHe.js";import{D as E,a as S}from"./DocPage-DKr-0pQn.js";import{D as p}from"./DocPrerender-DPOnWPFO.js";import{C as l}from"./CopyButton-l3ndfN49.js";import{_ as M}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const m={__name:"troubleshooting-and-tips",__ssrInlineRender:!0,setup(f){const k=[{id:"q-cordova",title:"2. $q.cordova"},{id:"android-tips",title:"3. Android Tips"},{id:"android-remote-debugging",title:"3.1. Android remote debugging",sub:!0},{id:"accept-licenses",title:"3.2. Accept Licenses",sub:!0},{id:"android-sdk-not-found-after-installation-of-the-sdk",title:"3.3. Android SDK not found after installation of the SDK",sub:!0},{id:"android-studio",title:"3.4. Android Studio",sub:!0},{id:"setting-up-device-on-linux",title:"3.5. Setting up device on Linux",sub:!0},{id:"post-build-debugging",title:"3.6. Post-build debugging",sub:!0},{id:"ios-tips",title:"4. iOS Tips"},{id:"device-type-not-found",title:"4.1. Device type not found",sub:!0},{id:"enabling-modern-build",title:"4.2. Enabling modern build",sub:!0},{id:"ios-remote-debugging",title:"4.3. iOS remote debugging",sub:!0},{id:"status-bar-and-notch-safe-areas",title:"4.4. Status bar and notch safe-areas",sub:!0},{id:"disabling-ios-rubber-band-effect",title:"4.5. Disabling iOS rubber band effect",sub:!0}];return(g,y,$,q)=>{y(u(E,D({title:"Cordova Troubleshooting and Tips",desc:"(@quasar/app-webpack) Tips and tricks for a Quasar hybrid mobile app with Cordova.",overline:"Quasar CLI with Webpack - @quasar/app-webpack",heading:"","edit-link":"quasar-cli-webpack/developing-cordova-apps/troubleshooting-and-tips",toc:k},q),{default:r((O,i,b,a)=>{if(i)i(`<h2 id="q-cordova" class="doc-heading doc-h2"${a}>$q.cordova</h2><p${a}>While you are developing a Mobile App with Cordova Mode, you can access <code class="doc-token"${a}>$q.cordova</code> in your Vue files. This is an alias to the global <code class="doc-token"${a}>cordova</code> Object.</p><h2 id="android-tips" class="doc-heading doc-h2"${a}>Android Tips</h2><h3 id="android-remote-debugging" class="doc-heading doc-h3"${a}>Android remote debugging</h3><p${a}>If you are debugging Android Apps, you can use Google Chrome `),i(u(S,{to:"https://developers.google.com/web/tools/chrome-devtools/debug/remote-debugging/remote-debugging?hl=en"},{default:r((d,t,c,o)=>{if(t)t("Remote Debugging");else return[e("Remote Debugging")]}),_:1},b,a)),i(` through a USB cable attached to your Android phone/tablet. It can be used for emulator too.</p><p${a}>This way you have Chrome Dev Tools directly for your App running on the emulator/phone/table. Inspect elements, check console output, and so on and so forth.</p><p${a}><img src="https://cdn.quasar.dev/img/remote-debug.png" alt="" title="Android Remote Debugging" class="doc-img"${a}><img src="https://cdn.quasar.dev/img/remote-debug-2.png" alt="" title="Android Remote Debugging" class="doc-img"${a}></p><h3 id="accept-licenses" class="doc-heading doc-h3"${a}>Accept Licenses</h3><p${a}>If you are having problems getting Android builds to finish and you see a message like:</p>`),i(u(s(p),null,{default:r((d,t,c,o)=>{if(t)t(`<pre class="doc-code"${o}><code${o}>&gt; Failed to install the following Android SDK packages as some licenses have not been accepted.</code></pre>`),t(u(l,null,null,c,o));else return[n("pre",{class:"doc-code"},[n("code",null,"> Failed to install the following Android SDK packages as some licenses have not been accepted.")]),n(l)]}),_:1},b,a)),i(`<p${a}>If this is the case you need to accept ALL the licenses. Thankfully there is a tool for this:</p><ul${a}><li${a}>Linux: <code class="doc-token"${a}>sdkmanager --licenses</code></li><li${a}>macOS: <code class="doc-token"${a}>~/Library/Android/sdk/tools/bin/sdkmanager --licenses</code></li><li${a}>Windows: <code class="doc-token"${a}>%ANDROID_SDK_ROOT%/tools/bin/sdkmanager --licenses</code></li></ul><h3 id="android-sdk-not-found-after-installation-of-the-sdk" class="doc-heading doc-h3"${a}>Android SDK not found after installation of the SDK</h3><div class="doc-note doc-note--warning"${a}><p class="doc-note__title"${a}>WARNING</p><p${a}>The environmental variable <code class="doc-token"${a}>ANDROID_HOME</code> has been deprecated and replaced with <code class="doc-token"${a}>ANDROID_SDK_ROOT</code>. Depending on your version of Android Studio you may need one or the other. It doesn’t hurt to have both set.</p></div><p${a}>Some newer Debian-based OS (e.g. ubuntu, elementary OS) might leave you with a <code class="doc-token"${a}>Android SDK not found.</code> after you installed and (correctly) configured the environment. The output might look similar to this:</p>`),i(u(s(p),null,{default:r((d,t,c,o)=>{if(t)t(`<pre class="doc-code"${o}><code${o}>$ cordova requirements

Requirements check results <span class="token keyword"${o}>for</span> android:
Java JDK: installed <span class="token number"${o}>1.8</span>.0
Android SDK: installed <span class="token boolean"${o}>true</span>
Android target: not installed
Android SDK not found. Make sure that it is installed. If it is not at the default location, <span class="token builtin class-name"${o}>set</span> the ANDROID_HOME <span class="token punctuation"${o}>(</span>or ANDROID_SDK_ROOT<span class="token punctuation"${o}>)</span> environment variable.
Gradle: not installed
Could not <span class="token function"${o}>find</span> gradle wrapper within Android SDK. Might need to update your Android SDK.
Looked here: /home/your_user/Android/Sdk/tools/templates/gradle/wrapper
Error: Some of requirements check failed</code></pre>`),t(u(l,{lang:"bash"},null,c,o));else return[n("pre",{class:"doc-code"},[n("code",null,[e(`$ cordova requirements

Requirements check results `),n("span",{class:"token keyword"},"for"),e(` android:
Java JDK: installed `),n("span",{class:"token number"},"1.8"),e(`.0
Android SDK: installed `),n("span",{class:"token boolean"},"true"),e(`
Android target: not installed
Android SDK not found. Make sure that it is installed. If it is not at the default location, `),n("span",{class:"token builtin class-name"},"set"),e(" the ANDROID_HOME "),n("span",{class:"token punctuation"},"("),e("or ANDROID_SDK_ROOT"),n("span",{class:"token punctuation"},")"),e(` environment variable.
Gradle: not installed
Could not `),n("span",{class:"token function"},"find"),e(` gradle wrapper within Android SDK. Might need to update your Android SDK.
Looked here: /home/your_user/Android/Sdk/tools/templates/gradle/wrapper
Error: Some of requirements check failed`)])]),n(l,{lang:"bash"})]}),_:1},b,a)),i(`<p${a}>This could have two different reasons: Usually the paths aren’t configured correctly. The first step is to verify if your paths are set correctly. This can be done by running the following commands:</p>`),i(u(s(p),null,{default:r((d,t,c,o)=>{if(t)t(`<pre class="doc-code"${o}><code${o}>$ <span class="token builtin class-name"${o}>echo</span> <span class="token variable"${o}>$ANDROID_HOME</span>

<span class="token comment"${o}># or</span>

$ <span class="token builtin class-name"${o}>echo</span> <span class="token variable"${o}>$ANDROID_SDK_ROOT</span></code></pre>`),t(u(l,{lang:"bash"},null,c,o));else return[n("pre",{class:"doc-code"},[n("code",null,[e("$ "),n("span",{class:"token builtin class-name"},"echo"),e(),n("span",{class:"token variable"},"$ANDROID_HOME"),e(`

`),n("span",{class:"token comment"},"# or"),e(`

$ `),n("span",{class:"token builtin class-name"},"echo"),e(),n("span",{class:"token variable"},"$ANDROID_SDK_ROOT")])]),n(l,{lang:"bash"})]}),_:1},b,a)),i(`<p${a}>The expected output should be a path similar to this <code class="doc-token"${a}>$HOME/Android/Sdk</code>. After this run:</p>`),i(u(s(p),null,{default:r((d,t,c,o)=>{if(t)t(`<pre class="doc-code"${o}><code${o}>$ <span class="token function"${o}>ls</span> <span class="token parameter variable"${o}>-la</span> <span class="token variable"${o}>$ANDROID_HOME</span>

<span class="token comment"${o}># or</span>

$ <span class="token function"${o}>ls</span> <span class="token parameter variable"${o}>-la</span> <span class="token variable"${o}>$ANDROID_SDK_ROOT</span></code></pre>`),t(u(l,{lang:"bash"},null,c,o));else return[n("pre",{class:"doc-code"},[n("code",null,[e("$ "),n("span",{class:"token function"},"ls"),e(),n("span",{class:"token parameter variable"},"-la"),e(),n("span",{class:"token variable"},"$ANDROID_HOME"),e(`

`),n("span",{class:"token comment"},"# or"),e(`

$ `),n("span",{class:"token function"},"ls"),e(),n("span",{class:"token parameter variable"},"-la"),e(),n("span",{class:"token variable"},"$ANDROID_SDK_ROOT")])]),n(l,{lang:"bash"})]}),_:1},b,a)),i(`<p${a}>To ensure the folder contains the SDK. The expected output should contain folders like ‘tools’, ‘sources’, ‘platform-tools’, etc.</p>`),i(u(s(p),null,{default:r((d,t,c,o)=>{if(t)t(`<pre class="doc-code"${o}><code${o}>$ <span class="token builtin class-name"${o}>echo</span> <span class="token environment constant"${o}>$PATH</span></code></pre>`),t(u(l,{lang:"bash"},null,c,o));else return[n("pre",{class:"doc-code"},[n("code",null,[e("$ "),n("span",{class:"token builtin class-name"},"echo"),e(),n("span",{class:"token environment constant"},"$PATH")])]),n(l,{lang:"bash"})]}),_:1},b,a)),i(`<p${a}>The output should contain each one entry for the Android SDK ‘tools’-folder and ‘platform-tools’-tools. This could look like this:</p>`),i(u(s(p),null,{default:r((d,t,c,o)=>{if(t)t(`<pre class="doc-code"${o}><code${o}>/home/your_user/bin:/home/your_user/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/your_user/Android/Sdk/tools:/home/your_user/Android/Sdk/platform-tools</code></pre>`),t(u(l,{lang:"bash"},null,c,o));else return[n("pre",{class:"doc-code"},[n("code",null,"/home/your_user/bin:/home/your_user/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/your_user/Android/Sdk/tools:/home/your_user/Android/Sdk/platform-tools")]),n(l,{lang:"bash"})]}),_:1},b,a)),i(`<blockquote class="doc-note"${a}><p${a}>If you ensured your paths are set correctly and still get the error on <code class="doc-token"${a}>cordova requirements</code> you can try the following fix: `),i(u(S,{to:"https://github.com/meteor/meteor/issues/8464#issuecomment-288112504"},{default:r((d,t,c,o)=>{if(t)t("Replacing the Android Studio ‘tools’ folder manually");else return[e("Replacing the Android Studio ‘tools’ folder manually")]}),_:1},b,a)),i(`</p></blockquote><h3 id="android-studio" class="doc-heading doc-h3"${a}>Android Studio</h3><p${a}>In Android Studio (if you open it on <code class="doc-token"${a}>/src-cordova/platforms/android</code>), you will be greeted with a message recommending to upgrade the Gradle version. <strong${a}>DO NOT UPGRADE GRADLE</strong> as it will break the Cordova project. Same goes for any other requested upgrades.</p><img src="https://cdn.quasar.dev/img/gradle-upgrade-notice.png" alt="Gradle upgrade" class="q-mb-md rounded-borders" style="${T({"max-width":"350px"})}"${a}><p${a}>If you encounter any IDE errors then click on File &gt; Invalidate caches and restart.</p><img src="https://cdn.quasar.dev/img/gradle-invalidate-cache.png" alt="Gradle upgrade" class="rounded-borders" style="${T({"max-width":"350px"})}"${a}><h3 id="setting-up-device-on-linux" class="doc-heading doc-h3"${a}>Setting up device on Linux</h3><p${a}>You may bump into <code class="doc-token"${a}>?????? no permissions</code> problem when trying to run your App directly on an Android phone/tablet.</p><p${a}>Here’s how you fix this:</p>`),i(u(s(p),null,{default:r((d,t,c,o)=>{if(t)t(`<pre class="doc-code"${o}><code${o}><span class="token comment"${o}># create the .rules file and insert the content</span>
<span class="token comment"${o}># from below this example</span>
<span class="token function"${o}>sudo</span> <span class="token function"${o}>vim</span> /etc/udev/rules.d/51-android.rules
<span class="token function"${o}>sudo</span> <span class="token function"${o}>chmod</span> <span class="token number"${o}>644</span>   /etc/udev/rules.d/51-android.rules
<span class="token function"${o}>sudo</span> <span class="token function"${o}>chown</span> root. /etc/udev/rules.d/51-android.rules
<span class="token function"${o}>sudo</span> <span class="token function"${o}>service</span> udev restart
<span class="token function"${o}>sudo</span> <span class="token function"${o}>killall</span> adb</code></pre>`),t(u(l,{lang:"bash"},null,c,o));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"# create the .rules file and insert the content"),e(`
`),n("span",{class:"token comment"},"# from below this example"),e(`
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"vim"),e(` /etc/udev/rules.d/51-android.rules
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"chmod"),e(),n("span",{class:"token number"},"644"),e(`   /etc/udev/rules.d/51-android.rules
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"chown"),e(` root. /etc/udev/rules.d/51-android.rules
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"service"),e(` udev restart
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"killall"),e(" adb")])]),n(l,{lang:"bash"})]}),_:1},b,a)),i(`<p${a}>The content for <code class="doc-token"${a}>51-android.rules</code>:</p>`),i(u(s(p),null,{default:r((d,t,c,o)=>{if(t)t(`<pre class="doc-code"${o}><code${o}>SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;0bb4&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;0e79&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;0502&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;0b05&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;413c&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;0489&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;091e&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;18d1&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;0bb4&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;12d1&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;24e3&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;2116&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;0482&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;17ef&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;1004&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;22b8&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;0409&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;2080&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;0955&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;2257&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;10a9&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;1d4d&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;0471&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;04da&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;05c6&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;1f53&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;04e8&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;04dd&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;0fce&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;0930&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;19d2&quot;, MODE=&quot;0666&quot;
SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;1bbb&quot;, MODE=&quot;0666&quot;</code></pre>`),t(u(l,null,null,c,o));else return[n("pre",{class:"doc-code"},[n("code",null,`SUBSYSTEM=="usb", ATTRS{idVendor}=="0bb4", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0e79", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0502", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0b05", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="413c", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0489", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="091e", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="18d1", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0bb4", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="12d1", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="24e3", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="2116", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0482", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="17ef", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="1004", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="22b8", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0409", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="2080", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0955", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="2257", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="10a9", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="1d4d", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0471", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="04da", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="05c6", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="1f53", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="04e8", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="04dd", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0fce", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0930", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="19d2", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="1bbb", MODE="0666"`)]),n(l)]}),_:1},b,a)),i(`<p${a}>Now running <code class="doc-token"${a}>adb devices</code> should discover your device.</p><h3 id="post-build-debugging" class="doc-heading doc-h3"${a}>Post-build debugging</h3><p${a}>There are intermediate states to help with debugging, between <code class="doc-token"${a}>quasar dev</code> and distributing a completed app. If your app works fine on <code class="doc-token"${a}>quasar dev</code> but is not running properly after <code class="doc-token"${a}>quasar build</code>, you have two options:</p><ul${a}><li${a}>go to your <code class="doc-token"${a}>src-cordova</code> directory and <code class="doc-token"${a}>cordova run [platform]</code>. <ul${a}><li${a}>You will be running the final build, but you can still use Chrome DevTools Remote Debugging with a wired connection (see above), to inspect the internal web internals. You cannot do this while running the .apk file.</li><li${a}>For more detail, read the Cordova `),i(u(S,{to:"https://cordova.apache.org/docs/en/latest/guide/platforms/android/#using-buildjson"},{default:r((d,t,c,o)=>{if(t)t("platform guide");else return[e("platform guide")]}),_:1},b,a)),i(" and the "),i(u(S,{to:"https://cordova.apache.org/docs/en/latest/reference/cordova-cli/index.html"},{default:r((d,t,c,o)=>{if(t)t("CLI reference");else return[e("CLI reference")]}),_:1},b,a)),i(`</li></ul></li><li${a}>open Android Studio and watch the Logcat <ul${a}><li${a}>Here you can watch everything related to the app and its interaction with the underlying Android OS. After opening your Cordova project in Android Studio, go to <code class="doc-token"${a}>Run</code>…<code class="doc-token"${a}>Debug</code> from the top menu. Android Studio will ask you to confirm the device or emulator, then will deploy the app. In the bottom window, choose <code class="doc-token"${a}>Logcat</code> You may want to use the filters to reduce the volume of messages. You should see <code class="doc-token"${a}>[your app id].MainActivity.onCreate()</code> signifying the app launch, then various messages related to your app functionality.</li><li${a}>Note: this should be for experienced Android developers only. If your app is not functioning properly, it is much more likely that <code class="doc-token"${a}>quasar dev</code> or <code class="doc-token"${a}>cordova run</code> can reveal the issue.</li></ul></li></ul><div class="doc-note doc-note--danger"${a}><p class="doc-note__title"${a}>Important!</p><p${a}>If you find a bug using one of the above methods, do not edit the output files (probably the <code class="doc-token"${a}>www</code> folder) directly, as they will soon be overwritten. Go back to your quasar source, fix the bug, then re-run <code class="doc-token"${a}>quasar build</code>.</p></div><h2 id="ios-tips" class="doc-heading doc-h2"${a}>iOS Tips</h2><h3 id="device-type-not-found" class="doc-heading doc-h3"${a}>Device type not found</h3><p${a}>If you get this error while running <code class="doc-token"${a}>$ quasar dev -m cordova -T ios</code>:</p>`),i(u(s(p),null,{default:r((d,t,c,o)=>{if(t)t(`<pre class="doc-code"${o}><code${o}>No target specified for emulator. Deploying to undefined simulator
Device type &quot;com.apple.CoreSimulator.SimDeviceType.undefined&quot; could not be found.</code></pre>`),t(u(l,null,null,c,o));else return[n("pre",{class:"doc-code"},[n("code",null,`No target specified for emulator. Deploying to undefined simulator
Device type "com.apple.CoreSimulator.SimDeviceType.undefined" could not be found.`)]),n(l)]}),_:1},b,a)),i(`<p${a}>Then it means you need to specify an emulator. Depending on your Cordova CLI version, here are some examples:</p>`),i(u(s(p),null,{default:r((d,t,c,o)=>{if(t)t(`<pre class="doc-code"${o}><code${o}>$ quasar dev <span class="token parameter variable"${o}>-m</span> cordova <span class="token parameter variable"${o}>-T</span> ios <span class="token parameter variable"${o}>-e</span> iPhone-X,12.2
<span class="token comment"${o}># or with older versions of Cordova CLI installed on your machine:</span>
$ quasar dev <span class="token parameter variable"${o}>-m</span> cordova <span class="token parameter variable"${o}>-T</span> ios <span class="token parameter variable"${o}>-e</span> iPhone-X,com.apple.CoreSimulator.SimRuntime.iOS-12-2</code></pre>`),t(u(l,{lang:"bash"},null,c,o));else return[n("pre",{class:"doc-code"},[n("code",null,[e("$ quasar dev "),n("span",{class:"token parameter variable"},"-m"),e(" cordova "),n("span",{class:"token parameter variable"},"-T"),e(" ios "),n("span",{class:"token parameter variable"},"-e"),e(` iPhone-X,12.2
`),n("span",{class:"token comment"},"# or with older versions of Cordova CLI installed on your machine:"),e(`
$ quasar dev `),n("span",{class:"token parameter variable"},"-m"),e(" cordova "),n("span",{class:"token parameter variable"},"-T"),e(" ios "),n("span",{class:"token parameter variable"},"-e"),e(" iPhone-X,com.apple.CoreSimulator.SimRuntime.iOS-12-2")])]),n(l,{lang:"bash"})]}),_:1},b,a)),i(`<h3 id="enabling-modern-build" class="doc-heading doc-h3"${a}>Enabling modern build</h3><p${a}>By default, Xcode modern build for iOS is disabled due to Cordova issues. However, if you know what you are doing and you want to enable it, do so from the <code class="doc-token"${a}>/quasar.config</code> file:</p>`),i(u(s(p),null,{default:r((d,t,c,o)=>{if(t)t(`<pre class="doc-code"${o}><code${o}><span class="token literal-property property"${o}>cordova</span><span class="token operator"${o}>:</span> <span class="token punctuation"${o}>{</span>
  <span class="token literal-property property"${o}>noIosLegacyBuildFlag</span><span class="token operator"${o}>:</span> <span class="token boolean"${o}>true</span>
<span class="token punctuation"${o}>}</span></code></pre>`),t(u(l,null,null,c,o));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"cordova"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token literal-property property"},"noIosLegacyBuildFlag"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token boolean"},"true"),e(`
`),n("span",{class:"token punctuation"},"}")])]),n(l)]}),_:1},b,a)),i(`<p${a}>The above applies also if you want to specify the build type in your “build.json”.</p><h3 id="ios-remote-debugging" class="doc-heading doc-h3"${a}>iOS remote debugging</h3><p${a}>If you are debugging iOS Apps, you can use the Safari developer tools to remotely debug through a USB cable attached to your iOS phone/tablet. It can be used for emulator too.</p><p${a}>This way you have Safari developer tools directly for your App running on the emulator/phone/table. Inspect elements, check console output, and so on and so forth.</p><p${a}>First enable the “developer” menu option in the Settings of Safari. Then if you navigate to the “developer” menu option you will see your emulator or connected device listed near the top. From here you can open the developer tools.</p><h3 id="status-bar-and-notch-safe-areas" class="doc-heading doc-h3"${a}>Status bar and notch safe-areas</h3><p${a}>Since mobile phones have a status bar and/or notches, your app’s styling might need some tweaking when building on Cordova. In order to prevent parts of your app from going behind the status bar, there is a global CSS variable that can be used for creating a “safe-area”. This variable can then be applied in your app’s top and bottom padding or margin.</p><p${a}>Quasar has support for these CSS safe-areas by default in QHeader/QFooter and Notify. However it’s important to always check your Cordova build on several models to see if all cases of your app are dealing with the safe areas correctly.</p><p${a}>In cases you need to manually tweak your CSS you can do so with:</p>`),i(u(s(p),null,{default:r((d,t,c,o)=>{if(t)t(`<pre class="doc-code language-css"${o}><code${o}><span class="token comment"${o}>/* for your app&#39;s header */</span>
<span class="token property"${o}>padding-top</span><span class="token punctuation"${o}>:</span> <span class="token function"${o}>constant</span><span class="token punctuation"${o}>(</span>safe-area-inset-top<span class="token punctuation"${o}>)</span><span class="token punctuation"${o}>;</span> // for iOS 11.0
<span class="token property"${o}>padding-top</span><span class="token punctuation"${o}>:</span> <span class="token function"${o}>env</span><span class="token punctuation"${o}>(</span>safe-area-inset-top<span class="token punctuation"${o}>)</span><span class="token punctuation"${o}>;</span> // for iOS 11.2 +
<span class="token comment"${o}>/* for your app&#39;s footer */</span>
<span class="token property"${o}>padding-bottom</span><span class="token punctuation"${o}>:</span> <span class="token function"${o}>constant</span><span class="token punctuation"${o}>(</span>safe-area-inset-bottom<span class="token punctuation"${o}>)</span><span class="token punctuation"${o}>;</span>
<span class="token property"${o}>padding-bottom</span><span class="token punctuation"${o}>:</span> <span class="token function"${o}>env</span><span class="token punctuation"${o}>(</span>safe-area-inset-bottom<span class="token punctuation"${o}>)</span><span class="token punctuation"${o}>;</span></code></pre>`),t(u(l,null,null,c,o));else return[n("pre",{class:"doc-code language-css"},[n("code",null,[n("span",{class:"token comment"},"/* for your app's header */"),e(`
`),n("span",{class:"token property"},"padding-top"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token function"},"constant"),n("span",{class:"token punctuation"},"("),e("safe-area-inset-top"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(` // for iOS 11.0
`),n("span",{class:"token property"},"padding-top"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token function"},"env"),n("span",{class:"token punctuation"},"("),e("safe-area-inset-top"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(` // for iOS 11.2 +
`),n("span",{class:"token comment"},"/* for your app's footer */"),e(`
`),n("span",{class:"token property"},"padding-bottom"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token function"},"constant"),n("span",{class:"token punctuation"},"("),e("safe-area-inset-bottom"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token property"},"padding-bottom"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token function"},"env"),n("span",{class:"token punctuation"},"("),e("safe-area-inset-bottom"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")])]),n(l)]}),_:1},b,a)),i(`<p${a}>Of course you can also use the above example with <code class="doc-token"${a}>margin</code> instead of <code class="doc-token"${a}>padding</code> depending on your app.</p><p${a}>In order to make sure these are only added when opened on mobile via the Cordova build, you can check for the CSS class <code class="doc-token"${a}>.cordova</code> which is automatically added to the body by Quasar. Example:</p>`),i(u(s(p),null,{default:r((d,t,c,o)=>{if(t)t(`<pre class="doc-code language-css"${o}><code${o}><span class="token selector"${o}>body.cordova .my-selector</span> <span class="token punctuation"${o}>{</span>
  <span class="token property"${o}>padding-top</span><span class="token punctuation"${o}>:</span> <span class="token function"${o}>constant</span><span class="token punctuation"${o}>(</span>safe-area-inset-top<span class="token punctuation"${o}>)</span><span class="token punctuation"${o}>;</span>
  <span class="token property"${o}>padding-top</span><span class="token punctuation"${o}>:</span> <span class="token function"${o}>env</span><span class="token punctuation"${o}>(</span>safe-area-inset-top<span class="token punctuation"${o}>)</span><span class="token punctuation"${o}>;</span>
<span class="token punctuation"${o}>}</span></code></pre>`),t(u(l,null,null,c,o));else return[n("pre",{class:"doc-code language-css"},[n("code",null,[n("span",{class:"token selector"},"body.cordova .my-selector"),e(),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token property"},"padding-top"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token function"},"constant"),n("span",{class:"token punctuation"},"("),e("safe-area-inset-top"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
  `),n("span",{class:"token property"},"padding-top"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token function"},"env"),n("span",{class:"token punctuation"},"("),e("safe-area-inset-top"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}")])]),n(l)]}),_:1},b,a)),i(`<h3 id="disabling-ios-rubber-band-effect" class="doc-heading doc-h3"${a}>Disabling iOS rubber band effect</h3><p${a}>When building an iOS app with Cordova and you want to `),i(u(S,{to:"https://www.youtube.com/watch?v=UjuNGpU29Mk"},{default:r((d,t,c,o)=>{if(t)t("disable the rubber band effect");else return[e("disable the rubber band effect")]}),_:1},b,a)),i(`, add this to your <code class="doc-token"${a}>/src-cordova/config.xml</code>:</p>`),i(u(s(p),null,{default:r((d,t,c,o)=>{if(t)t(`<pre class="doc-code"${o}><code${o}><span class="token tag"${o}><span class="token tag"${o}><span class="token punctuation"${o}>&lt;</span>preference</span> <span class="token attr-name"${o}>name</span><span class="token attr-value"${o}><span class="token punctuation attr-equals"${o}>=</span><span class="token punctuation"${o}>&quot;</span>DisallowOverscroll<span class="token punctuation"${o}>&quot;</span></span> <span class="token attr-name"${o}>value</span><span class="token attr-value"${o}><span class="token punctuation attr-equals"${o}>=</span><span class="token punctuation"${o}>&quot;</span>true<span class="token punctuation"${o}>&quot;</span></span> <span class="token punctuation"${o}>/&gt;</span></span></code></pre>`),t(u(l,null,null,c,o));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),e("preference")]),e(),n("span",{class:"token attr-name"},"name"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),e("DisallowOverscroll"),n("span",{class:"token punctuation"},'"')]),e(),n("span",{class:"token attr-name"},"value"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),e("true"),n("span",{class:"token punctuation"},'"')]),e(),n("span",{class:"token punctuation"},"/>")])])]),n(l)]}),_:1},b,a));else return[n("h2",{id:"q-cordova",class:"doc-heading doc-h2",onClick:d=>s(h)("q-cordova")},"$q.cordova",8,["onClick"]),n("p",null,[e("While you are developing a Mobile App with Cordova Mode, you can access "),n("code",{class:"doc-token"},"$q.cordova"),e(" in your Vue files. This is an alias to the global "),n("code",{class:"doc-token"},"cordova"),e(" Object.")]),n("h2",{id:"android-tips",class:"doc-heading doc-h2",onClick:d=>s(h)("android-tips")},"Android Tips",8,["onClick"]),n("h3",{id:"android-remote-debugging",class:"doc-heading doc-h3",onClick:d=>s(h)("android-remote-debugging")},"Android remote debugging",8,["onClick"]),n("p",null,[e("If you are debugging Android Apps, you can use Google Chrome "),n(S,{to:"https://developers.google.com/web/tools/chrome-devtools/debug/remote-debugging/remote-debugging?hl=en"},{default:r(()=>[e("Remote Debugging")]),_:1}),e(" through a USB cable attached to your Android phone/tablet. It can be used for emulator too.")]),n("p",null,"This way you have Chrome Dev Tools directly for your App running on the emulator/phone/table. Inspect elements, check console output, and so on and so forth."),n("p",null,[n("img",{src:"https://cdn.quasar.dev/img/remote-debug.png",alt:"",title:"Android Remote Debugging",class:"doc-img"}),n("img",{src:"https://cdn.quasar.dev/img/remote-debug-2.png",alt:"",title:"Android Remote Debugging",class:"doc-img"})]),n("h3",{id:"accept-licenses",class:"doc-heading doc-h3",onClick:d=>s(h)("accept-licenses")},"Accept Licenses",8,["onClick"]),n("p",null,"If you are having problems getting Android builds to finish and you see a message like:"),n(s(p),null,{default:r(()=>[n("pre",{class:"doc-code"},[n("code",null,"> Failed to install the following Android SDK packages as some licenses have not been accepted.")]),n(l)]),_:1}),n("p",null,"If this is the case you need to accept ALL the licenses. Thankfully there is a tool for this:"),n("ul",null,[n("li",null,[e("Linux: "),n("code",{class:"doc-token"},"sdkmanager --licenses")]),n("li",null,[e("macOS: "),n("code",{class:"doc-token"},"~/Library/Android/sdk/tools/bin/sdkmanager --licenses")]),n("li",null,[e("Windows: "),n("code",{class:"doc-token"},"%ANDROID_SDK_ROOT%/tools/bin/sdkmanager --licenses")])]),n("h3",{id:"android-sdk-not-found-after-installation-of-the-sdk",class:"doc-heading doc-h3",onClick:d=>s(h)("android-sdk-not-found-after-installation-of-the-sdk")},"Android SDK not found after installation of the SDK",8,["onClick"]),n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"WARNING"),n("p",null,[e("The environmental variable "),n("code",{class:"doc-token"},"ANDROID_HOME"),e(" has been deprecated and replaced with "),n("code",{class:"doc-token"},"ANDROID_SDK_ROOT"),e(". Depending on your version of Android Studio you may need one or the other. It doesn’t hurt to have both set.")])]),n("p",null,[e("Some newer Debian-based OS (e.g. ubuntu, elementary OS) might leave you with a "),n("code",{class:"doc-token"},"Android SDK not found."),e(" after you installed and (correctly) configured the environment. The output might look similar to this:")]),n(s(p),null,{default:r(()=>[n("pre",{class:"doc-code"},[n("code",null,[e(`$ cordova requirements

Requirements check results `),n("span",{class:"token keyword"},"for"),e(` android:
Java JDK: installed `),n("span",{class:"token number"},"1.8"),e(`.0
Android SDK: installed `),n("span",{class:"token boolean"},"true"),e(`
Android target: not installed
Android SDK not found. Make sure that it is installed. If it is not at the default location, `),n("span",{class:"token builtin class-name"},"set"),e(" the ANDROID_HOME "),n("span",{class:"token punctuation"},"("),e("or ANDROID_SDK_ROOT"),n("span",{class:"token punctuation"},")"),e(` environment variable.
Gradle: not installed
Could not `),n("span",{class:"token function"},"find"),e(` gradle wrapper within Android SDK. Might need to update your Android SDK.
Looked here: /home/your_user/Android/Sdk/tools/templates/gradle/wrapper
Error: Some of requirements check failed`)])]),n(l,{lang:"bash"})]),_:1}),n("p",null,"This could have two different reasons: Usually the paths aren’t configured correctly. The first step is to verify if your paths are set correctly. This can be done by running the following commands:"),n(s(p),null,{default:r(()=>[n("pre",{class:"doc-code"},[n("code",null,[e("$ "),n("span",{class:"token builtin class-name"},"echo"),e(),n("span",{class:"token variable"},"$ANDROID_HOME"),e(`

`),n("span",{class:"token comment"},"# or"),e(`

$ `),n("span",{class:"token builtin class-name"},"echo"),e(),n("span",{class:"token variable"},"$ANDROID_SDK_ROOT")])]),n(l,{lang:"bash"})]),_:1}),n("p",null,[e("The expected output should be a path similar to this "),n("code",{class:"doc-token"},"$HOME/Android/Sdk"),e(". After this run:")]),n(s(p),null,{default:r(()=>[n("pre",{class:"doc-code"},[n("code",null,[e("$ "),n("span",{class:"token function"},"ls"),e(),n("span",{class:"token parameter variable"},"-la"),e(),n("span",{class:"token variable"},"$ANDROID_HOME"),e(`

`),n("span",{class:"token comment"},"# or"),e(`

$ `),n("span",{class:"token function"},"ls"),e(),n("span",{class:"token parameter variable"},"-la"),e(),n("span",{class:"token variable"},"$ANDROID_SDK_ROOT")])]),n(l,{lang:"bash"})]),_:1}),n("p",null,"To ensure the folder contains the SDK. The expected output should contain folders like ‘tools’, ‘sources’, ‘platform-tools’, etc."),n(s(p),null,{default:r(()=>[n("pre",{class:"doc-code"},[n("code",null,[e("$ "),n("span",{class:"token builtin class-name"},"echo"),e(),n("span",{class:"token environment constant"},"$PATH")])]),n(l,{lang:"bash"})]),_:1}),n("p",null,"The output should contain each one entry for the Android SDK ‘tools’-folder and ‘platform-tools’-tools. This could look like this:"),n(s(p),null,{default:r(()=>[n("pre",{class:"doc-code"},[n("code",null,"/home/your_user/bin:/home/your_user/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/your_user/Android/Sdk/tools:/home/your_user/Android/Sdk/platform-tools")]),n(l,{lang:"bash"})]),_:1}),n("blockquote",{class:"doc-note"},[n("p",null,[e("If you ensured your paths are set correctly and still get the error on "),n("code",{class:"doc-token"},"cordova requirements"),e(" you can try the following fix: "),n(S,{to:"https://github.com/meteor/meteor/issues/8464#issuecomment-288112504"},{default:r(()=>[e("Replacing the Android Studio ‘tools’ folder manually")]),_:1})])]),n("h3",{id:"android-studio",class:"doc-heading doc-h3",onClick:d=>s(h)("android-studio")},"Android Studio",8,["onClick"]),n("p",null,[e("In Android Studio (if you open it on "),n("code",{class:"doc-token"},"/src-cordova/platforms/android"),e("), you will be greeted with a message recommending to upgrade the Gradle version. "),n("strong",null,"DO NOT UPGRADE GRADLE"),e(" as it will break the Cordova project. Same goes for any other requested upgrades.")]),n("img",{src:"https://cdn.quasar.dev/img/gradle-upgrade-notice.png",alt:"Gradle upgrade",class:"q-mb-md rounded-borders",style:{"max-width":"350px"}}),n("p",null,"If you encounter any IDE errors then click on File > Invalidate caches and restart."),n("img",{src:"https://cdn.quasar.dev/img/gradle-invalidate-cache.png",alt:"Gradle upgrade",class:"rounded-borders",style:{"max-width":"350px"}}),n("h3",{id:"setting-up-device-on-linux",class:"doc-heading doc-h3",onClick:d=>s(h)("setting-up-device-on-linux")},"Setting up device on Linux",8,["onClick"]),n("p",null,[e("You may bump into "),n("code",{class:"doc-token"},"?????? no permissions"),e(" problem when trying to run your App directly on an Android phone/tablet.")]),n("p",null,"Here’s how you fix this:"),n(s(p),null,{default:r(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"# create the .rules file and insert the content"),e(`
`),n("span",{class:"token comment"},"# from below this example"),e(`
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"vim"),e(` /etc/udev/rules.d/51-android.rules
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"chmod"),e(),n("span",{class:"token number"},"644"),e(`   /etc/udev/rules.d/51-android.rules
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"chown"),e(` root. /etc/udev/rules.d/51-android.rules
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"service"),e(` udev restart
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"killall"),e(" adb")])]),n(l,{lang:"bash"})]),_:1}),n("p",null,[e("The content for "),n("code",{class:"doc-token"},"51-android.rules"),e(":")]),n(s(p),null,{default:r(()=>[n("pre",{class:"doc-code"},[n("code",null,`SUBSYSTEM=="usb", ATTRS{idVendor}=="0bb4", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0e79", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0502", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0b05", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="413c", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0489", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="091e", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="18d1", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0bb4", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="12d1", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="24e3", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="2116", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0482", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="17ef", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="1004", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="22b8", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0409", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="2080", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0955", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="2257", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="10a9", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="1d4d", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0471", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="04da", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="05c6", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="1f53", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="04e8", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="04dd", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0fce", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0930", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="19d2", MODE="0666"
SUBSYSTEM=="usb", ATTRS{idVendor}=="1bbb", MODE="0666"`)]),n(l)]),_:1}),n("p",null,[e("Now running "),n("code",{class:"doc-token"},"adb devices"),e(" should discover your device.")]),n("h3",{id:"post-build-debugging",class:"doc-heading doc-h3",onClick:d=>s(h)("post-build-debugging")},"Post-build debugging",8,["onClick"]),n("p",null,[e("There are intermediate states to help with debugging, between "),n("code",{class:"doc-token"},"quasar dev"),e(" and distributing a completed app. If your app works fine on "),n("code",{class:"doc-token"},"quasar dev"),e(" but is not running properly after "),n("code",{class:"doc-token"},"quasar build"),e(", you have two options:")]),n("ul",null,[n("li",null,[e("go to your "),n("code",{class:"doc-token"},"src-cordova"),e(" directory and "),n("code",{class:"doc-token"},"cordova run [platform]"),e(". "),n("ul",null,[n("li",null,"You will be running the final build, but you can still use Chrome DevTools Remote Debugging with a wired connection (see above), to inspect the internal web internals. You cannot do this while running the .apk file."),n("li",null,[e("For more detail, read the Cordova "),n(S,{to:"https://cordova.apache.org/docs/en/latest/guide/platforms/android/#using-buildjson"},{default:r(()=>[e("platform guide")]),_:1}),e(" and the "),n(S,{to:"https://cordova.apache.org/docs/en/latest/reference/cordova-cli/index.html"},{default:r(()=>[e("CLI reference")]),_:1})])])]),n("li",null,[e("open Android Studio and watch the Logcat "),n("ul",null,[n("li",null,[e("Here you can watch everything related to the app and its interaction with the underlying Android OS. After opening your Cordova project in Android Studio, go to "),n("code",{class:"doc-token"},"Run"),e("…"),n("code",{class:"doc-token"},"Debug"),e(" from the top menu. Android Studio will ask you to confirm the device or emulator, then will deploy the app. In the bottom window, choose "),n("code",{class:"doc-token"},"Logcat"),e(" You may want to use the filters to reduce the volume of messages. You should see "),n("code",{class:"doc-token"},"[your app id].MainActivity.onCreate()"),e(" signifying the app launch, then various messages related to your app functionality.")]),n("li",null,[e("Note: this should be for experienced Android developers only. If your app is not functioning properly, it is much more likely that "),n("code",{class:"doc-token"},"quasar dev"),e(" or "),n("code",{class:"doc-token"},"cordova run"),e(" can reveal the issue.")])])])]),n("div",{class:"doc-note doc-note--danger"},[n("p",{class:"doc-note__title"},"Important!"),n("p",null,[e("If you find a bug using one of the above methods, do not edit the output files (probably the "),n("code",{class:"doc-token"},"www"),e(" folder) directly, as they will soon be overwritten. Go back to your quasar source, fix the bug, then re-run "),n("code",{class:"doc-token"},"quasar build"),e(".")])]),n("h2",{id:"ios-tips",class:"doc-heading doc-h2",onClick:d=>s(h)("ios-tips")},"iOS Tips",8,["onClick"]),n("h3",{id:"device-type-not-found",class:"doc-heading doc-h3",onClick:d=>s(h)("device-type-not-found")},"Device type not found",8,["onClick"]),n("p",null,[e("If you get this error while running "),n("code",{class:"doc-token"},"$ quasar dev -m cordova -T ios"),e(":")]),n(s(p),null,{default:r(()=>[n("pre",{class:"doc-code"},[n("code",null,`No target specified for emulator. Deploying to undefined simulator
Device type "com.apple.CoreSimulator.SimDeviceType.undefined" could not be found.`)]),n(l)]),_:1}),n("p",null,"Then it means you need to specify an emulator. Depending on your Cordova CLI version, here are some examples:"),n(s(p),null,{default:r(()=>[n("pre",{class:"doc-code"},[n("code",null,[e("$ quasar dev "),n("span",{class:"token parameter variable"},"-m"),e(" cordova "),n("span",{class:"token parameter variable"},"-T"),e(" ios "),n("span",{class:"token parameter variable"},"-e"),e(` iPhone-X,12.2
`),n("span",{class:"token comment"},"# or with older versions of Cordova CLI installed on your machine:"),e(`
$ quasar dev `),n("span",{class:"token parameter variable"},"-m"),e(" cordova "),n("span",{class:"token parameter variable"},"-T"),e(" ios "),n("span",{class:"token parameter variable"},"-e"),e(" iPhone-X,com.apple.CoreSimulator.SimRuntime.iOS-12-2")])]),n(l,{lang:"bash"})]),_:1}),n("h3",{id:"enabling-modern-build",class:"doc-heading doc-h3",onClick:d=>s(h)("enabling-modern-build")},"Enabling modern build",8,["onClick"]),n("p",null,[e("By default, Xcode modern build for iOS is disabled due to Cordova issues. However, if you know what you are doing and you want to enable it, do so from the "),n("code",{class:"doc-token"},"/quasar.config"),e(" file:")]),n(s(p),null,{default:r(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"cordova"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token literal-property property"},"noIosLegacyBuildFlag"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token boolean"},"true"),e(`
`),n("span",{class:"token punctuation"},"}")])]),n(l)]),_:1}),n("p",null,"The above applies also if you want to specify the build type in your “build.json”."),n("h3",{id:"ios-remote-debugging",class:"doc-heading doc-h3",onClick:d=>s(h)("ios-remote-debugging")},"iOS remote debugging",8,["onClick"]),n("p",null,"If you are debugging iOS Apps, you can use the Safari developer tools to remotely debug through a USB cable attached to your iOS phone/tablet. It can be used for emulator too."),n("p",null,"This way you have Safari developer tools directly for your App running on the emulator/phone/table. Inspect elements, check console output, and so on and so forth."),n("p",null,"First enable the “developer” menu option in the Settings of Safari. Then if you navigate to the “developer” menu option you will see your emulator or connected device listed near the top. From here you can open the developer tools."),n("h3",{id:"status-bar-and-notch-safe-areas",class:"doc-heading doc-h3",onClick:d=>s(h)("status-bar-and-notch-safe-areas")},"Status bar and notch safe-areas",8,["onClick"]),n("p",null,"Since mobile phones have a status bar and/or notches, your app’s styling might need some tweaking when building on Cordova. In order to prevent parts of your app from going behind the status bar, there is a global CSS variable that can be used for creating a “safe-area”. This variable can then be applied in your app’s top and bottom padding or margin."),n("p",null,"Quasar has support for these CSS safe-areas by default in QHeader/QFooter and Notify. However it’s important to always check your Cordova build on several models to see if all cases of your app are dealing with the safe areas correctly."),n("p",null,"In cases you need to manually tweak your CSS you can do so with:"),n(s(p),null,{default:r(()=>[n("pre",{class:"doc-code language-css"},[n("code",null,[n("span",{class:"token comment"},"/* for your app's header */"),e(`
`),n("span",{class:"token property"},"padding-top"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token function"},"constant"),n("span",{class:"token punctuation"},"("),e("safe-area-inset-top"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(` // for iOS 11.0
`),n("span",{class:"token property"},"padding-top"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token function"},"env"),n("span",{class:"token punctuation"},"("),e("safe-area-inset-top"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(` // for iOS 11.2 +
`),n("span",{class:"token comment"},"/* for your app's footer */"),e(`
`),n("span",{class:"token property"},"padding-bottom"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token function"},"constant"),n("span",{class:"token punctuation"},"("),e("safe-area-inset-bottom"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token property"},"padding-bottom"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token function"},"env"),n("span",{class:"token punctuation"},"("),e("safe-area-inset-bottom"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")])]),n(l)]),_:1}),n("p",null,[e("Of course you can also use the above example with "),n("code",{class:"doc-token"},"margin"),e(" instead of "),n("code",{class:"doc-token"},"padding"),e(" depending on your app.")]),n("p",null,[e("In order to make sure these are only added when opened on mobile via the Cordova build, you can check for the CSS class "),n("code",{class:"doc-token"},".cordova"),e(" which is automatically added to the body by Quasar. Example:")]),n(s(p),null,{default:r(()=>[n("pre",{class:"doc-code language-css"},[n("code",null,[n("span",{class:"token selector"},"body.cordova .my-selector"),e(),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token property"},"padding-top"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token function"},"constant"),n("span",{class:"token punctuation"},"("),e("safe-area-inset-top"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
  `),n("span",{class:"token property"},"padding-top"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token function"},"env"),n("span",{class:"token punctuation"},"("),e("safe-area-inset-top"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}")])]),n(l)]),_:1}),n("h3",{id:"disabling-ios-rubber-band-effect",class:"doc-heading doc-h3",onClick:d=>s(h)("disabling-ios-rubber-band-effect")},"Disabling iOS rubber band effect",8,["onClick"]),n("p",null,[e("When building an iOS app with Cordova and you want to "),n(S,{to:"https://www.youtube.com/watch?v=UjuNGpU29Mk"},{default:r(()=>[e("disable the rubber band effect")]),_:1}),e(", add this to your "),n("code",{class:"doc-token"},"/src-cordova/config.xml"),e(":")]),n(s(p),null,{default:r(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),e("preference")]),e(),n("span",{class:"token attr-name"},"name"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),e("DisallowOverscroll"),n("span",{class:"token punctuation"},'"')]),e(),n("span",{class:"token attr-name"},"value"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),e("true"),n("span",{class:"token punctuation"},'"')]),e(),n("span",{class:"token punctuation"},"/>")])])]),n(l)]),_:1})]}),_:1},$))}}},v=m.setup;m.setup=(f,k)=>{const g=A();return(g.modules||(g.modules=new Set)).add("src/pages/quasar-cli-webpack/developing-cordova-apps/troubleshooting-and-tips.md"),v?v(f,k):void 0};const F=M(m,[["__file","troubleshooting-and-tips.md"]]);export{F as default};
