import{mergeProps as y,withCtx as s,unref as c,createVNode as e,createTextVNode as a,useSSRContext as C}from"vue";import{ssrRenderComponent as t}from"vue/server-renderer";import"quasar";import{D as k,a as v}from"./DocPage-DKr-0pQn.js";import{D as w}from"./DocTree-Kz2iQlb5.js";import{D as m}from"./DocPrerender-DPOnWPFO.js";import{C as l}from"./CopyButton-l3ndfN49.js";import{_ as A}from"../server-entry.js";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const g={__name:"preparation",__ssrInlineRender:!0,setup(S){const f=[{name:"The quasar.config file",category:"Quasar CLI (with Vite)",path:"/quasar-cli-vite/quasar-config-file"}],d={nodeJsTree:{l:"src-ssr",c:[{l:"middlewares/",e:"SSR middleware files"},{l:"server.js",e:"SSR webserver"}]}};return(T,R,h,$)=>{R(t(k,y({title:"Preparation for SSR",desc:"(@quasar/app-vite) How to add SSR mode with Quasar CLI.",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/developing-ssr/preparation",related:f},$),{default:s((x,i,u,n)=>{if(i)i(`<p${n}>We’ll be using Quasar CLI to develop and build a SSR website. The difference between building a SPA, Mobile App, Electron App, PWA or SSR is simply determined by the “mode” parameter in “quasar dev” and “quasar build” commands.</p><p${n}>In order to develop or build a SSR website, we first need to add the SSR mode to our Quasar project:</p>`),i(t(c(m),null,{default:s((b,r,p,o)=>{if(r)r(`<pre class="doc-code"${o}><code${o}>$ quasar mode <span class="token function"${o}>add</span> ssr</code></pre>`),r(t(l,{lang:"bash"},null,p,o));else return[e("pre",{class:"doc-code"},[e("code",null,[a("$ quasar mode "),e("span",{class:"token function"},"add"),a(" ssr")])]),e(l,{lang:"bash"})]}),_:1},u,n)),i(`<p${n}>If you want to jump right in and start developing, you can skip the “quasar mode” command and issue:</p>`),i(t(c(m),null,{default:s((b,r,p,o)=>{if(r)r(`<pre class="doc-code"${o}><code${o}>$ quasar dev <span class="token parameter variable"${o}>-m</span> ssr</code></pre>`),r(t(l,{lang:"bash"},null,p,o));else return[e("pre",{class:"doc-code"},[e("code",null,[a("$ quasar dev "),e("span",{class:"token parameter variable"},"-m"),a(" ssr")])]),e(l,{lang:"bash"})]}),_:1},u,n)),i(`<p${n}>This will add SSR mode automatically, if it is missing.</p><p${n}>A new folder will appear in your project folder (which is explained in detail on the `),i(t(v,{to:"/quasar-cli-vite/developing-ssr/configuring-ssr"},{default:s((b,r,p,o)=>{if(r)r("Configuring SSR");else return[a("Configuring SSR")]}),_:1},u,n)),i(" page):</p>"),i(t(w,{def:d.nodeJsTree},null,u,n));else return[e("p",null,"We’ll be using Quasar CLI to develop and build a SSR website. The difference between building a SPA, Mobile App, Electron App, PWA or SSR is simply determined by the “mode” parameter in “quasar dev” and “quasar build” commands."),e("p",null,"In order to develop or build a SSR website, we first need to add the SSR mode to our Quasar project:"),e(c(m),null,{default:s(()=>[e("pre",{class:"doc-code"},[e("code",null,[a("$ quasar mode "),e("span",{class:"token function"},"add"),a(" ssr")])]),e(l,{lang:"bash"})]),_:1}),e("p",null,"If you want to jump right in and start developing, you can skip the “quasar mode” command and issue:"),e(c(m),null,{default:s(()=>[e("pre",{class:"doc-code"},[e("code",null,[a("$ quasar dev "),e("span",{class:"token parameter variable"},"-m"),a(" ssr")])]),e(l,{lang:"bash"})]),_:1}),e("p",null,"This will add SSR mode automatically, if it is missing."),e("p",null,[a("A new folder will appear in your project folder (which is explained in detail on the "),e(v,{to:"/quasar-cli-vite/developing-ssr/configuring-ssr"},{default:s(()=>[a("Configuring SSR")]),_:1}),a(" page):")]),e(w,{def:d.nodeJsTree},null,8,["def"])]}),_:1},h))}}},q=g.setup;g.setup=(S,f)=>{const d=C();return(d.modules||(d.modules=new Set)).add("src/pages/quasar-cli-vite/developing-ssr/preparation.md"),q?q(S,f):void 0};const F=A(g,[["__file","preparation.md"]]);export{F as default};
