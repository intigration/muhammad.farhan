import{resolveComponent as v,mergeProps as C,withCtx as o,createVNode as t,createTextVNode as a,unref as p,useSSRContext as z}from"vue";import{ssrRenderComponent as r}from"vue/server-renderer";import{c as M}from"./page-utils-C-QWsEHe.js";import{D,a as x}from"./DocPage-DKr-0pQn.js";import{D as k}from"./DocPrerender-DPOnWPFO.js";import{C as c}from"./CopyButton-l3ndfN49.js";import{_ as L}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const f={__name:"breakpoints",__ssrInlineRender:!0,setup(b){const m=[{name:"Spacing",category:"Style & Identity",path:"/style/spacing"}],$=[{id:"sass",title:"1.1. Sass",sub:!0}];return(T,h,w,S)=>{const g=v("q-markup-table");h(r(D,C({title:"Breakpoints",desc:"Quasar's list of CSS breakpoints.",heading:"","edit-link":"style/breakpoints",toc:$,related:m},S),{default:o((E,e,u,s)=>{if(e)e(`<p${s}>Quasar uses the following CSS breakpoints:</p>`),e(r(g,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:o((d,l,i,n)=>{if(l)l(`<thead${n}><tr${n}><th class="text-left"${n}>Window Size</th><th class="text-left"${n}>Name</th><th class="text-left"${n}>Min-width threshold in pixels</th><th class="text-left"${n}>Max-width threshold in pixels</th></tr></thead><tbody${n}><tr${n}><td${n}>Extra Small</td><td${n}><code class="doc-token"${n}>xs</code></td><td${n}>0px</td><td${n}>599.99px</td></tr><tr${n}><td${n}>Small</td><td${n}><code class="doc-token"${n}>sm</code></td><td${n}>600px</td><td${n}>1023.99px</td></tr><tr${n}><td${n}>Medium</td><td${n}><code class="doc-token"${n}>md</code></td><td${n}>1024px</td><td${n}>1439.99px</td></tr><tr${n}><td${n}>Large</td><td${n}><code class="doc-token"${n}>lg</code></td><td${n}>1440px</td><td${n}>1919.99px</td></tr><tr${n}><td${n}>Extra Large</td><td${n}><code class="doc-token"${n}>xl</code></td><td${n}>1920px</td><td${n}>Infinity</td></tr></tbody>`);else return[t("thead",null,[t("tr",null,[t("th",{class:"text-left"},"Window Size"),t("th",{class:"text-left"},"Name"),t("th",{class:"text-left"},"Min-width threshold in pixels"),t("th",{class:"text-left"},"Max-width threshold in pixels")])]),t("tbody",null,[t("tr",null,[t("td",null,"Extra Small"),t("td",null,[t("code",{class:"doc-token"},"xs")]),t("td",null,"0px"),t("td",null,"599.99px")]),t("tr",null,[t("td",null,"Small"),t("td",null,[t("code",{class:"doc-token"},"sm")]),t("td",null,"600px"),t("td",null,"1023.99px")]),t("tr",null,[t("td",null,"Medium"),t("td",null,[t("code",{class:"doc-token"},"md")]),t("td",null,"1024px"),t("td",null,"1439.99px")]),t("tr",null,[t("td",null,"Large"),t("td",null,[t("code",{class:"doc-token"},"lg")]),t("td",null,"1440px"),t("td",null,"1919.99px")]),t("tr",null,[t("td",null,"Extra Large"),t("td",null,[t("code",{class:"doc-token"},"xl")]),t("td",null,"1920px"),t("td",null,"Infinity")])])]}),_:1},u,s)),e(`<p${s}>To learn how to use them, please visit the `),e(r(x,{to:"/style/visibility"},{default:o((d,l,i,n)=>{if(l)l("Visibility");else return[a("Visibility")]}),_:1},u,s)),e(` page.</p><p${s}>You might also want to take a look at the `),e(r(x,{to:"/layout/grid/introduction-to-flexbox#responsive-design"},{default:o((d,l,i,n)=>{if(l)l("Introduction to Flexbox");else return[a("Introduction to Flexbox")]}),_:1},u,s)),e(` on the “Responsive Design” section.</p><h3 id="sass" class="doc-heading doc-h3"${s}>Sass</h3><p${s}>You can also use the breakpoints in Sass:</p>`),e(r(p(k),null,{default:o((d,l,i,n)=>{if(l)l(`<pre class="doc-code"${n}><code${n}><span class="token atrule-line"${n}><span class="token atrule"${n}>@media</span> (max-width: $breakpoint-xs-max)</span>
<span class="token property-line"${n}>  <span class="token property"${n}>font-size</span><span class="token punctuation"${n}>:</span> 10px</span></code></pre>`),l(r(c,null,null,i,n));else return[t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token atrule-line"},[t("span",{class:"token atrule"},"@media"),a(" (max-width: $breakpoint-xs-max)")]),a(`
`),t("span",{class:"token property-line"},[a("  "),t("span",{class:"token property"},"font-size"),t("span",{class:"token punctuation"},":"),a(" 10px")])])]),t(c)]}),_:1},u,s)),e(`<p${s}>The syntax for these variables is shown below, where <code class="doc-token"${s}>&lt;breakpoint&gt;</code> is to be replaced by “xs”, “sm”, “md”, “lg” or “xl”:</p>`),e(r(p(k),null,{default:o((d,l,i,n)=>{if(l)l(`<pre class="doc-code"${n}><code${n}>$breakpoint-<span class="token tag"${n}><span class="token tag"${n}><span class="token punctuation"${n}>&lt;</span>breakpoint</span><span class="token punctuation"${n}>&gt;</span></span>-min
$breakpoint-<span class="token tag"${n}><span class="token tag"${n}><span class="token punctuation"${n}>&lt;</span>breakpoint</span><span class="token punctuation"${n}>&gt;</span></span>-max</code></pre>`),l(r(c,null,null,i,n));else return[t("pre",{class:"doc-code"},[t("code",null,[a("$breakpoint-"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("breakpoint")]),t("span",{class:"token punctuation"},">")]),a(`-min
$breakpoint-`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("breakpoint")]),t("span",{class:"token punctuation"},">")]),a("-max")])]),t(c)]}),_:1},u,s)),e(`<p${s}>There’s also:</p>`),e(r(p(k),null,{default:o((d,l,i,n)=>{if(l)l(`<pre class="doc-code"${n}><code${n}>$sizes.<span class="token tag"${n}><span class="token tag"${n}><span class="token punctuation"${n}>&lt;</span>breakpoint</span><span class="token punctuation"${n}>&gt;</span></span>
// replace <span class="token tag"${n}><span class="token tag"${n}><span class="token punctuation"${n}>&lt;</span>breakpoint</span><span class="token punctuation"${n}>&gt;</span></span> with xs, sm, md, lg or xl</code></pre>`),l(r(c,null,null,i,n));else return[t("pre",{class:"doc-code"},[t("code",null,[a("$sizes."),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("breakpoint")]),t("span",{class:"token punctuation"},">")]),a(`
// replace `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("breakpoint")]),t("span",{class:"token punctuation"},">")]),a(" with xs, sm, md, lg or xl")])]),t(c)]}),_:1},u,s)),e(`<p${s}>`),e(r(x,{to:"/options/screen-plugin#how-to-enable-body-classes"},{default:o((d,l,i,n)=>{if(l)l("If enabled (only)");else return[a("If enabled (only)")]}),_:1},u,s)),e(`, you can also style your content based on a particular set of CSS classes applied to document.body: <code class="doc-token"${s}>screen--xs</code>, <code class="doc-token"${s}>screen--sm</code>, …, <code class="doc-token"${s}>screen--xl</code>.</p>`),e(r(p(k),null,{default:o((d,l,i,n)=>{if(l)l(`<pre class="doc-code"${n}><code${n}><span class="token selector"${n}>.my-div</span>
  <span class="token selector"${n}>body.screen--xs &amp;</span>
<span class="token property-line"${n}>    <span class="token property"${n}>color</span><span class="token punctuation"${n}>:</span> #000</span>
  <span class="token selector"${n}>body.screen--sm &amp;</span>
<span class="token property-line"${n}>    <span class="token property"${n}>color</span><span class="token punctuation"${n}>:</span> #fff</span></code></pre>`),l(r(c,null,null,i,n));else return[t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token selector"},".my-div"),a(`
  `),t("span",{class:"token selector"},"body.screen--xs &"),a(`
`),t("span",{class:"token property-line"},[a("    "),t("span",{class:"token property"},"color"),t("span",{class:"token punctuation"},":"),a(" #000")]),a(`
  `),t("span",{class:"token selector"},"body.screen--sm &"),a(`
`),t("span",{class:"token property-line"},[a("    "),t("span",{class:"token property"},"color"),t("span",{class:"token punctuation"},":"),a(" #fff")])])]),t(c)]}),_:1},u,s));else return[t("p",null,"Quasar uses the following CSS breakpoints:"),t(g,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:o(()=>[t("thead",null,[t("tr",null,[t("th",{class:"text-left"},"Window Size"),t("th",{class:"text-left"},"Name"),t("th",{class:"text-left"},"Min-width threshold in pixels"),t("th",{class:"text-left"},"Max-width threshold in pixels")])]),t("tbody",null,[t("tr",null,[t("td",null,"Extra Small"),t("td",null,[t("code",{class:"doc-token"},"xs")]),t("td",null,"0px"),t("td",null,"599.99px")]),t("tr",null,[t("td",null,"Small"),t("td",null,[t("code",{class:"doc-token"},"sm")]),t("td",null,"600px"),t("td",null,"1023.99px")]),t("tr",null,[t("td",null,"Medium"),t("td",null,[t("code",{class:"doc-token"},"md")]),t("td",null,"1024px"),t("td",null,"1439.99px")]),t("tr",null,[t("td",null,"Large"),t("td",null,[t("code",{class:"doc-token"},"lg")]),t("td",null,"1440px"),t("td",null,"1919.99px")]),t("tr",null,[t("td",null,"Extra Large"),t("td",null,[t("code",{class:"doc-token"},"xl")]),t("td",null,"1920px"),t("td",null,"Infinity")])])]),_:1}),t("p",null,[a("To learn how to use them, please visit the "),t(x,{to:"/style/visibility"},{default:o(()=>[a("Visibility")]),_:1}),a(" page.")]),t("p",null,[a("You might also want to take a look at the "),t(x,{to:"/layout/grid/introduction-to-flexbox#responsive-design"},{default:o(()=>[a("Introduction to Flexbox")]),_:1}),a(" on the “Responsive Design” section.")]),t("h3",{id:"sass",class:"doc-heading doc-h3",onClick:d=>p(M)("sass")},"Sass",8,["onClick"]),t("p",null,"You can also use the breakpoints in Sass:"),t(p(k),null,{default:o(()=>[t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token atrule-line"},[t("span",{class:"token atrule"},"@media"),a(" (max-width: $breakpoint-xs-max)")]),a(`
`),t("span",{class:"token property-line"},[a("  "),t("span",{class:"token property"},"font-size"),t("span",{class:"token punctuation"},":"),a(" 10px")])])]),t(c)]),_:1}),t("p",null,[a("The syntax for these variables is shown below, where "),t("code",{class:"doc-token"},"<breakpoint>"),a(" is to be replaced by “xs”, “sm”, “md”, “lg” or “xl”:")]),t(p(k),null,{default:o(()=>[t("pre",{class:"doc-code"},[t("code",null,[a("$breakpoint-"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("breakpoint")]),t("span",{class:"token punctuation"},">")]),a(`-min
$breakpoint-`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("breakpoint")]),t("span",{class:"token punctuation"},">")]),a("-max")])]),t(c)]),_:1}),t("p",null,"There’s also:"),t(p(k),null,{default:o(()=>[t("pre",{class:"doc-code"},[t("code",null,[a("$sizes."),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("breakpoint")]),t("span",{class:"token punctuation"},">")]),a(`
// replace `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("breakpoint")]),t("span",{class:"token punctuation"},">")]),a(" with xs, sm, md, lg or xl")])]),t(c)]),_:1}),t("p",null,[t(x,{to:"/options/screen-plugin#how-to-enable-body-classes"},{default:o(()=>[a("If enabled (only)")]),_:1}),a(", you can also style your content based on a particular set of CSS classes applied to document.body: "),t("code",{class:"doc-token"},"screen--xs"),a(", "),t("code",{class:"doc-token"},"screen--sm"),a(", …, "),t("code",{class:"doc-token"},"screen--xl"),a(".")]),t(p(k),null,{default:o(()=>[t("pre",{class:"doc-code"},[t("code",null,[t("span",{class:"token selector"},".my-div"),a(`
  `),t("span",{class:"token selector"},"body.screen--xs &"),a(`
`),t("span",{class:"token property-line"},[a("    "),t("span",{class:"token property"},"color"),t("span",{class:"token punctuation"},":"),a(" #000")]),a(`
  `),t("span",{class:"token selector"},"body.screen--sm &"),a(`
`),t("span",{class:"token property-line"},[a("    "),t("span",{class:"token property"},"color"),t("span",{class:"token punctuation"},":"),a(" #fff")])])]),t(c)]),_:1})]}),_:1},w))}}},y=f.setup;f.setup=(b,m)=>{const $=z();return($.modules||($.modules=new Set)).add("src/pages/style/breakpoints.md"),y?y(b,m):void 0};const J=L(f,[["__file","breakpoints.md"]]);export{J as default};
