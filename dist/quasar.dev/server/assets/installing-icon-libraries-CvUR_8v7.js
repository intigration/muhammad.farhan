import{resolveComponent as F,mergeProps as M,withCtx as e,createTextVNode as o,unref as k,createVNode as n,useSSRContext as T}from"vue";import{ssrRenderComponent as c}from"vue/server-renderer";import{c as v}from"./page-utils-C-QWsEHe.js";import{D as E,a as p}from"./DocPage-DKr-0pQn.js";import{D as d}from"./DocPrerender-DPOnWPFO.js";import{C as r}from"./CopyButton-l3ndfN49.js";import{_ as S}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const q={__name:"installing-icon-libraries",__ssrInlineRender:!0,setup(x){const b=[{name:"Quasar Icon Sets",category:"Options & Helpers",path:"/options/quasar-icon-sets"},{name:"Icon",category:"Vue Components",path:"/vue-components/icon"}],y=[{id:"installing-webfonts",title:"2. Installing Webfonts"},{id:"using-cdn-as-alternative",title:"3. Using CDN as alternative"},{id:"using-fontawesome-pro",title:"4. Using Fontawesome-Pro"}];return(A,P,N,C)=>{const g=F("q-tab-panel");P(c(E,M({title:"Installing Icon Libraries",desc:"How to use icon libraries in a Quasar app.",heading:"","edit-link":"options/installing-icon-libraries",toc:y,related:b},C),{default:e((O,l,m,t)=>{if(l)l(`<div class="doc-note doc-note--tip"${t}><p class="doc-note__title"${t}>TIP</p><p${t}><strong${t}>This page refers to using `),l(c(p,{to:"/vue-components/icon#webfont-icons"},{default:e((u,a,i,s)=>{if(a)a("webfont icons");else return[o("webfont icons")]}),_:1},m,t)),l(" only.</strong> "),l(c(p,{to:"https://quasar.dev/vue-components/icon#svg-icons"},{default:e((u,a,i,s)=>{if(a)a("Svg icons");else return[o("Svg icons")]}),_:1},m,t)),l(` do not need any installation step.</p></div><p${t}>You’ll most likely want icons in your website/app and Quasar offers an easy way out of the box for the following icon libraries: `),l(c(p,{to:"https://fonts.google.com/icons?icon.set=Material+Icons"},{default:e((u,a,i,s)=>{if(a)a("Material Icons");else return[o("Material Icons")]}),_:1},m,t)),l(", "),l(c(p,{to:"https://fonts.google.com/icons?icon.set=Material+Symbols"},{default:e((u,a,i,s)=>{if(a)a("Material Symbols");else return[o("Material Symbols")]}),_:1},m,t)),l(", "),l(c(p,{to:"https://fontawesome.com/icons"},{default:e((u,a,i,s)=>{if(a)a("Font Awesome");else return[o("Font Awesome")]}),_:1},m,t)),l(", "),l(c(p,{to:"http://ionicons.com/"},{default:e((u,a,i,s)=>{if(a)a("Ionicons");else return[o("Ionicons")]}),_:1},m,t)),l(", "),l(c(p,{to:"https://materialdesignicons.com/"},{default:e((u,a,i,s)=>{if(a)a("MDI");else return[o("MDI")]}),_:1},m,t)),l(", "),l(c(p,{to:"https://akveo.github.io/eva-icons"},{default:e((u,a,i,s)=>{if(a)a("Eva Icons");else return[o("Eva Icons")]}),_:1},m,t)),l(", "),l(c(p,{to:"https://themify.me/themify-icons"},{default:e((u,a,i,s)=>{if(a)a("Themify Icons");else return[o("Themify Icons")]}),_:1},m,t)),l(", "),l(c(p,{to:"https://icons8.com/line-awesome"},{default:e((u,a,i,s)=>{if(a)a("Line Awesome");else return[o("Line Awesome")]}),_:1},m,t)),l(" and "),l(c(p,{to:"https://icons.getbootstrap.com/"},{default:e((u,a,i,s)=>{if(a)a("Bootstrap Icons");else return[o("Bootstrap Icons")]}),_:1},m,t)),l(". But you can "),l(c(p,{to:"/vue-components/icon#custom-mapping"},{default:e((u,a,i,s)=>{if(a)a("add support for others");else return[o("add support for others")]}),_:1},m,t)),l(` by yourself.</p><div class="doc-note doc-note--tip"${t}><p class="doc-note__title"${t}>TIP</p><p${t}>In regards to webfont icons, you can choose to install one or more of these icon libraries.</p></div><h2 id="installing-webfonts" class="doc-heading doc-h2"${t}>Installing Webfonts</h2><p${t}>If you are building a website only, then using a CDN (Content Delivery Network) approach can be an option you can follow. However, when building a mobile or Electron app, you most likely do not want to depend on an Internet connection and Quasar comes with a solution to this problem:</p><p${t}>Edit the <code class="doc-token"${t}>/quasar.config</code> file:</p>`),l(c(k(d),null,{default:e((u,a,i,s)=>{if(a)a(`<pre class="doc-code"${s}><code${s}><span class="token literal-property property"${s}>extras</span><span class="token operator"${s}>:</span> <span class="token punctuation"${s}>[</span>
  <span class="token string"${s}>&#39;material-icons&#39;</span>
<span class="token punctuation"${s}>]</span></code></pre>`),a(c(r,null,null,i,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"extras"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"["),o(`
  `),n("span",{class:"token string"},"'material-icons'"),o(`
`),n("span",{class:"token punctuation"},"]")])]),n(r)]}),_:1},m,t)),l(`<p${t}>Webfont icons are available through `),l(c(p,{to:"https://github.com/quasarframework/quasar/tree/dev/extras"},{default:e((u,a,i,s)=>{if(a)a("@quasar/extras");else return[o("@quasar/extras")]}),_:1},m,t)),l(` package. You don’t need to import it in your app, just configure the <code class="doc-token"${t}>/quasar.config</code> file as indicated above.</p><p${t}>Adding more than one set:</p>`),l(c(k(d),null,{default:e((u,a,i,s)=>{if(a)a(`<pre class="doc-code"${s}><code${s}><span class="token literal-property property"${s}>extras</span><span class="token operator"${s}>:</span> <span class="token punctuation"${s}>[</span>
  <span class="token string"${s}>&#39;material-icons&#39;</span><span class="token punctuation"${s}>,</span>
  <span class="token string"${s}>&#39;mdi-v7&#39;</span><span class="token punctuation"${s}>,</span>
  <span class="token string"${s}>&#39;ionicons-v4&#39;</span><span class="token punctuation"${s}>,</span> <span class="token comment"${s}>// last webfont was available in v4.6.3</span>
  <span class="token string"${s}>&#39;eva-icons&#39;</span><span class="token punctuation"${s}>,</span>
  <span class="token string"${s}>&#39;fontawesome-v6&#39;</span><span class="token punctuation"${s}>,</span>
  <span class="token string"${s}>&#39;themify&#39;</span><span class="token punctuation"${s}>,</span>
  <span class="token string"${s}>&#39;line-awesome&#39;</span><span class="token punctuation"${s}>,</span>
  <span class="token string"${s}>&#39;bootstrap-icons&#39;</span>
<span class="token punctuation"${s}>]</span></code></pre>`),a(c(r,null,null,i,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"extras"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"["),o(`
  `),n("span",{class:"token string"},"'material-icons'"),n("span",{class:"token punctuation"},","),o(`
  `),n("span",{class:"token string"},"'mdi-v7'"),n("span",{class:"token punctuation"},","),o(`
  `),n("span",{class:"token string"},"'ionicons-v4'"),n("span",{class:"token punctuation"},","),o(),n("span",{class:"token comment"},"// last webfont was available in v4.6.3"),o(`
  `),n("span",{class:"token string"},"'eva-icons'"),n("span",{class:"token punctuation"},","),o(`
  `),n("span",{class:"token string"},"'fontawesome-v6'"),n("span",{class:"token punctuation"},","),o(`
  `),n("span",{class:"token string"},"'themify'"),n("span",{class:"token punctuation"},","),o(`
  `),n("span",{class:"token string"},"'line-awesome'"),n("span",{class:"token punctuation"},","),o(`
  `),n("span",{class:"token string"},"'bootstrap-icons'"),o(`
`),n("span",{class:"token punctuation"},"]")])]),n(r)]}),_:1},m,t)),l(`<p${t}>For all available options, visit the `),l(c(p,{to:"https://github.com/quasarframework/quasar/tree/dev/extras#webfonts"},{default:e((u,a,i,s)=>{if(a)a("GitHub");else return[o("GitHub")]}),_:1},m,t)),l(` repository.</p><p${t}>You’re now ready to use the `),l(c(p,{to:"/vue-components/icon"},{default:e((u,a,i,s)=>{if(a)a("QIcon");else return[o("QIcon")]}),_:1},m,t)),l(` component.</p><h2 id="using-cdn-as-alternative" class="doc-heading doc-h2"${t}>Using CDN as alternative</h2><p${t}>If you want to make use of a CDN (Content Delivery Network), all you need to do is to include style tags in your /index.html or /src/index.template.html file which point to the CDN URL.</p><p${t}>In case you follow this path, do not also add the icon sets that you want in <code class="doc-token"${t}>/quasar.config file &gt; extras</code>. Play with the `),l(c(p,{to:"/start/umd#installation"},{default:e((u,a,i,s)=>{if(a)a("UMD Installation Guide");else return[o("UMD Installation Guide")]}),_:1},m,t)),l(` and edit /index.html or /src/index.template.html as described there.</p><h2 id="using-fontawesome-pro" class="doc-heading doc-h2"${t}>Using Fontawesome-Pro</h2><p${t}>If you have a Fontawesome v6 Pro license and want to use it instead of the Fontawesome Free version, follow these instructions:</p><ol${t}><li${t}>Open the `),l(c(p,{to:"https://fontawesome.com/account"},{default:e((u,a,i,s)=>{if(a)a("Linked Accounts section");else return[o("Linked Accounts section")]}),_:1},m,t)),l(` in Fontawesome’s user account page to grab the npm TOKENID (login if necessary).</li><li${t}>Create or append TOKENID into the <code class="doc-token"${t}>.npmrc</code> file (file path same as package.json):</li></ol>`),l(c(k(d),null,{default:e((u,a,i,s)=>{if(a)a(`<pre class="doc-code"${s}><code${s}>@fortawesome:registry=https://npm.fontawesome.com/
//npm.fontawesome.com/:_authToken=TOKENID</code></pre>`),a(c(r,null,null,i,s));else return[n("pre",{class:"doc-code"},[n("code",null,`@fortawesome:registry=https://npm.fontawesome.com/
//npm.fontawesome.com/:_authToken=TOKENID`)]),n(r)]}),_:1},m,t)),l(`<ol start="3"${t}><li${t}>Install Fontawesome webfonts:</li></ol>`),l(c(k(d),{tabs:["Yarn","NPM","PNPM","Bun"]},{default:e((u,a,i,s)=>{if(a)a(c(g,{class:"q-pa-none",name:"Yarn"},{default:e((h,w,$,f)=>{if(w)w(`<pre class="doc-code"${f}><code${f}>$ <span class="token function"${f}>yarn</span> <span class="token function"${f}>add</span> @fortawesome/fontawesome-pro</code></pre>`),w(c(r,{lang:"bash"},null,$,f));else return[n("pre",{class:"doc-code"},[n("code",null,[o("$ "),n("span",{class:"token function"},"yarn"),o(),n("span",{class:"token function"},"add"),o(" @fortawesome/fontawesome-pro")])]),n(r,{lang:"bash"})]}),_:1},i,s)),a(c(g,{class:"q-pa-none",name:"NPM"},{default:e((h,w,$,f)=>{if(w)w(`<pre class="doc-code"${f}><code${f}>$ <span class="token function"${f}>npm</span> <span class="token function"${f}>install</span> <span class="token parameter variable"${f}>--save</span> @fortawesome/fontawesome-pro</code></pre>`),w(c(r,{lang:"bash"},null,$,f));else return[n("pre",{class:"doc-code"},[n("code",null,[o("$ "),n("span",{class:"token function"},"npm"),o(),n("span",{class:"token function"},"install"),o(),n("span",{class:"token parameter variable"},"--save"),o(" @fortawesome/fontawesome-pro")])]),n(r,{lang:"bash"})]}),_:1},i,s)),a(c(g,{class:"q-pa-none",name:"PNPM"},{default:e((h,w,$,f)=>{if(w)w(`<pre class="doc-code"${f}><code${f}>$ <span class="token function"${f}>pnpm</span> <span class="token function"${f}>add</span> @fortawesome/fontawesome-pro</code></pre>`),w(c(r,{lang:"bash"},null,$,f));else return[n("pre",{class:"doc-code"},[n("code",null,[o("$ "),n("span",{class:"token function"},"pnpm"),o(),n("span",{class:"token function"},"add"),o(" @fortawesome/fontawesome-pro")])]),n(r,{lang:"bash"})]}),_:1},i,s)),a(c(g,{class:"q-pa-none",name:"Bun"},{default:e((h,w,$,f)=>{if(w)w(`<pre class="doc-code"${f}><code${f}>$ bun <span class="token function"${f}>add</span> @fortawesome/fontawesome-pro</code></pre>`),w(c(r,{lang:"bash"},null,$,f));else return[n("pre",{class:"doc-code"},[n("code",null,[o("$ bun "),n("span",{class:"token function"},"add"),o(" @fortawesome/fontawesome-pro")])]),n(r,{lang:"bash"})]}),_:1},i,s));else return[n(g,{class:"q-pa-none",name:"Yarn"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[o("$ "),n("span",{class:"token function"},"yarn"),o(),n("span",{class:"token function"},"add"),o(" @fortawesome/fontawesome-pro")])]),n(r,{lang:"bash"})]),_:1}),n(g,{class:"q-pa-none",name:"NPM"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[o("$ "),n("span",{class:"token function"},"npm"),o(),n("span",{class:"token function"},"install"),o(),n("span",{class:"token parameter variable"},"--save"),o(" @fortawesome/fontawesome-pro")])]),n(r,{lang:"bash"})]),_:1}),n(g,{class:"q-pa-none",name:"PNPM"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[o("$ "),n("span",{class:"token function"},"pnpm"),o(),n("span",{class:"token function"},"add"),o(" @fortawesome/fontawesome-pro")])]),n(r,{lang:"bash"})]),_:1}),n(g,{class:"q-pa-none",name:"Bun"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[o("$ bun "),n("span",{class:"token function"},"add"),o(" @fortawesome/fontawesome-pro")])]),n(r,{lang:"bash"})]),_:1})]}),_:1},m,t)),l(`<ol start="4"${t}><li${t}>Create new boot file:</li></ol>`),l(c(k(d),null,{default:e((u,a,i,s)=>{if(a)a(`<pre class="doc-code"${s}><code${s}>$ quasar new boot fontawesome-pro <span class="token punctuation"${s}>[</span>--format ts<span class="token punctuation"${s}>]</span></code></pre>`),a(c(r,{lang:"bash"},null,i,s));else return[n("pre",{class:"doc-code"},[n("code",null,[o("$ quasar new boot fontawesome-pro "),n("span",{class:"token punctuation"},"["),o("--format ts"),n("span",{class:"token punctuation"},"]")])]),n(r,{lang:"bash"})]}),_:1},m,t)),l(`<ol start="5"${t}><li${t}>Edit the <code class="doc-token"${t}>/quasar.config</code> file:</li></ol>`),l(c(k(d),null,{default:e((u,a,i,s)=>{if(a)a(`<pre class="doc-code"${s}><code${s}><span class="token literal-property property"${s}>boot</span><span class="token operator"${s}>:</span> <span class="token punctuation"${s}>[</span>
  <span class="token operator"${s}>...</span>
  <span class="token string"${s}>&#39;fontawesome-pro&#39;</span> <span class="token comment"${s}>// Add boot file</span>
<span class="token punctuation"${s}>]</span><span class="token punctuation"${s}>,</span>
<span class="token literal-property property"${s}>extras</span><span class="token operator"${s}>:</span> <span class="token punctuation"${s}>[</span>
  <span class="token comment"${s}>// &#39;fontawesome-v6&#39; // Disable free version!</span>
<span class="token punctuation"${s}>]</span><span class="token punctuation"${s}>,</span>
<span class="token literal-property property"${s}>framework</span><span class="token operator"${s}>:</span> <span class="token punctuation"${s}>{</span>
  <span class="token comment"${s}>// if you want Quasar to use Fontawesome for its icons</span>
  <span class="token literal-property property"${s}>iconSet</span><span class="token operator"${s}>:</span> <span class="token string"${s}>&#39;fontawesome-v6-pro&#39;</span>
<span class="token punctuation"${s}>}</span></code></pre>`),a(c(r,null,null,i,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"["),o(`
  `),n("span",{class:"token operator"},"..."),o(`
  `),n("span",{class:"token string"},"'fontawesome-pro'"),o(),n("span",{class:"token comment"},"// Add boot file"),o(`
`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),o(`
`),n("span",{class:"token literal-property property"},"extras"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"["),o(`
  `),n("span",{class:"token comment"},"// 'fontawesome-v6' // Disable free version!"),o(`
`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),o(`
`),n("span",{class:"token literal-property property"},"framework"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"{"),o(`
  `),n("span",{class:"token comment"},"// if you want Quasar to use Fontawesome for its icons"),o(`
  `),n("span",{class:"token literal-property property"},"iconSet"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token string"},"'fontawesome-v6-pro'"),o(`
`),n("span",{class:"token punctuation"},"}")])]),n(r)]}),_:1},m,t)),l(`<ol start="6"${t}><li${t}>Edit <code class="doc-token"${t}>/src/boot/fontawesome-pro.js</code>:</li></ol>`),l(c(k(d),null,{default:e((u,a,i,s)=>{if(a)a(`<pre class="doc-code"${s}><code${s}><span class="token comment"${s}>// required</span>
<span class="token keyword"${s}>import</span> <span class="token string"${s}>&#39;@fortawesome/fontawesome-pro/css/fontawesome.css&#39;</span>
<span class="token keyword"${s}>import</span> <span class="token string"${s}>&#39;@fortawesome/fontawesome-pro/css/light.css&#39;</span>
<span class="token comment"${s}>// do you want these too?</span>
<span class="token comment"${s}>// import &#39;@fortawesome/fontawesome-pro/css/thin.css&#39;</span>
<span class="token comment"${s}>// import &#39;@fortawesome/fontawesome-pro/css/duotone.css&#39;</span>
<span class="token comment"${s}>// import &#39;@fortawesome/fontawesome-pro/css/brands.css&#39;</span>
<span class="token comment"${s}>// import &#39;@fortawesome/fontawesome-pro/css/solid.css&#39;</span>
<span class="token comment"${s}>// import &#39;@fortawesome/fontawesome-pro/css/regular.css&#39;</span></code></pre>`),a(c(r,null,null,i,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// required"),o(`
`),n("span",{class:"token keyword"},"import"),o(),n("span",{class:"token string"},"'@fortawesome/fontawesome-pro/css/fontawesome.css'"),o(`
`),n("span",{class:"token keyword"},"import"),o(),n("span",{class:"token string"},"'@fortawesome/fontawesome-pro/css/light.css'"),o(`
`),n("span",{class:"token comment"},"// do you want these too?"),o(`
`),n("span",{class:"token comment"},"// import '@fortawesome/fontawesome-pro/css/thin.css'"),o(`
`),n("span",{class:"token comment"},"// import '@fortawesome/fontawesome-pro/css/duotone.css'"),o(`
`),n("span",{class:"token comment"},"// import '@fortawesome/fontawesome-pro/css/brands.css'"),o(`
`),n("span",{class:"token comment"},"// import '@fortawesome/fontawesome-pro/css/solid.css'"),o(`
`),n("span",{class:"token comment"},"// import '@fortawesome/fontawesome-pro/css/regular.css'")])]),n(r)]}),_:1},m,t)),l(`<ol start="7"${t}><li${t}>(Optional) Override default icons:</li></ol><p${t}>Since the default <code class="doc-token"${t}>font-weight</code> for fontawesome-pro is <code class="doc-token"${t}>light</code> or <code class="doc-token"${t}>fal</code>, some icons used by the framework components may not be desirable. The best way to handle this is to override it in the boot file that you created.</p><p${t}>For instance, to override the <code class="doc-token"${t}>fal</code> version of the close icon for chips, do this:</p><p${t}><em${t}>First</em>, find the icon used for chip close in Quasar Fontawesome v6 Pro `),l(c(p,{to:"https://github.com/quasarframework/quasar/blob/dev/ui/icon-set/fontawesome-v6-pro.js"},{default:e((u,a,i,s)=>{if(a)a("icon-set source");else return[o("icon-set source")]}),_:1},m,t)),l(`.</p><p${t}>(Alternatively, you can check inside the render function of the component you are overriding.)</p>`),l(c(k(d),{title:"Example"},{default:e((u,a,i,s)=>{if(a)a(`<pre class="doc-code"${s}><code${s}><span class="token literal-property property"${s}>chip</span><span class="token operator"${s}>:</span> <span class="token punctuation"${s}>{</span>
  <span class="token literal-property property"${s}>remove</span><span class="token operator"${s}>:</span> <span class="token string"${s}>&#39;fal fa-times-circle&#39;</span></code></pre>`),a(c(r,null,null,i,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"chip"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"{"),o(`
  `),n("span",{class:"token literal-property property"},"remove"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token string"},"'fal fa-times-circle'")])]),n(r)]}),_:1},m,t)),l(`<p${t}><em${t}>Then</em>, override it in your <code class="doc-token"${t}>/src/boot/fontawesome-pro.js</code></p>`),l(c(k(d),null,{default:e((u,a,i,s)=>{if(a)a(`<pre class="doc-code"${s}><code${s}><span class="token keyword"${s}>import</span> <span class="token string"${s}>&#39;@fortawesome/fontawesome-pro/css/fontawesome.min.css&#39;</span>
<span class="token keyword"${s}>import</span> <span class="token string"${s}>&#39;@fortawesome/fontawesome-pro/css/solid.min.css&#39;</span>
<span class="token keyword"${s}>import</span> <span class="token string"${s}>&#39;@fortawesome/fontawesome-pro/css/light.min.css&#39;</span>

<span class="token comment"${s}>// example</span>
<span class="token keyword"${s}>export</span> <span class="token keyword"${s}>default</span> <span class="token punctuation"${s}>(</span><span class="token parameter"${s}><span class="token punctuation"${s}>{</span> app <span class="token punctuation"${s}>}</span></span><span class="token punctuation"${s}>)</span> <span class="token operator"${s}>=&gt;</span> <span class="token punctuation"${s}>{</span>
  app<span class="token punctuation"${s}>.</span>config<span class="token punctuation"${s}>.</span>globalProperties<span class="token punctuation"${s}>.</span>$q<span class="token punctuation"${s}>.</span>iconSet<span class="token punctuation"${s}>.</span>chip<span class="token punctuation"${s}>.</span>remove <span class="token operator"${s}>=</span> <span class="token string"${s}>&#39;fas fa-times-circle&#39;</span>
<span class="token punctuation"${s}>}</span></code></pre>`),a(c(r,null,null,i,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),o(),n("span",{class:"token string"},"'@fortawesome/fontawesome-pro/css/fontawesome.min.css'"),o(`
`),n("span",{class:"token keyword"},"import"),o(),n("span",{class:"token string"},"'@fortawesome/fontawesome-pro/css/solid.min.css'"),o(`
`),n("span",{class:"token keyword"},"import"),o(),n("span",{class:"token string"},"'@fortawesome/fontawesome-pro/css/light.min.css'"),o(`

`),n("span",{class:"token comment"},"// example"),o(`
`),n("span",{class:"token keyword"},"export"),o(),n("span",{class:"token keyword"},"default"),o(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),o(" app "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),o(),n("span",{class:"token operator"},"=>"),o(),n("span",{class:"token punctuation"},"{"),o(`
  app`),n("span",{class:"token punctuation"},"."),o("config"),n("span",{class:"token punctuation"},"."),o("globalProperties"),n("span",{class:"token punctuation"},"."),o("$q"),n("span",{class:"token punctuation"},"."),o("iconSet"),n("span",{class:"token punctuation"},"."),o("chip"),n("span",{class:"token punctuation"},"."),o("remove "),n("span",{class:"token operator"},"="),o(),n("span",{class:"token string"},"'fas fa-times-circle'"),o(`
`),n("span",{class:"token punctuation"},"}")])]),n(r)]}),_:1},m,t));else return[n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,[n("strong",null,[o("This page refers to using "),n(p,{to:"/vue-components/icon#webfont-icons"},{default:e(()=>[o("webfont icons")]),_:1}),o(" only.")]),o(),n(p,{to:"https://quasar.dev/vue-components/icon#svg-icons"},{default:e(()=>[o("Svg icons")]),_:1}),o(" do not need any installation step.")])]),n("p",null,[o("You’ll most likely want icons in your website/app and Quasar offers an easy way out of the box for the following icon libraries: "),n(p,{to:"https://fonts.google.com/icons?icon.set=Material+Icons"},{default:e(()=>[o("Material Icons")]),_:1}),o(", "),n(p,{to:"https://fonts.google.com/icons?icon.set=Material+Symbols"},{default:e(()=>[o("Material Symbols")]),_:1}),o(", "),n(p,{to:"https://fontawesome.com/icons"},{default:e(()=>[o("Font Awesome")]),_:1}),o(", "),n(p,{to:"http://ionicons.com/"},{default:e(()=>[o("Ionicons")]),_:1}),o(", "),n(p,{to:"https://materialdesignicons.com/"},{default:e(()=>[o("MDI")]),_:1}),o(", "),n(p,{to:"https://akveo.github.io/eva-icons"},{default:e(()=>[o("Eva Icons")]),_:1}),o(", "),n(p,{to:"https://themify.me/themify-icons"},{default:e(()=>[o("Themify Icons")]),_:1}),o(", "),n(p,{to:"https://icons8.com/line-awesome"},{default:e(()=>[o("Line Awesome")]),_:1}),o(" and "),n(p,{to:"https://icons.getbootstrap.com/"},{default:e(()=>[o("Bootstrap Icons")]),_:1}),o(". But you can "),n(p,{to:"/vue-components/icon#custom-mapping"},{default:e(()=>[o("add support for others")]),_:1}),o(" by yourself.")]),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,"In regards to webfont icons, you can choose to install one or more of these icon libraries.")]),n("h2",{id:"installing-webfonts",class:"doc-heading doc-h2",onClick:u=>k(v)("installing-webfonts")},"Installing Webfonts",8,["onClick"]),n("p",null,"If you are building a website only, then using a CDN (Content Delivery Network) approach can be an option you can follow. However, when building a mobile or Electron app, you most likely do not want to depend on an Internet connection and Quasar comes with a solution to this problem:"),n("p",null,[o("Edit the "),n("code",{class:"doc-token"},"/quasar.config"),o(" file:")]),n(k(d),null,{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"extras"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"["),o(`
  `),n("span",{class:"token string"},"'material-icons'"),o(`
`),n("span",{class:"token punctuation"},"]")])]),n(r)]),_:1}),n("p",null,[o("Webfont icons are available through "),n(p,{to:"https://github.com/quasarframework/quasar/tree/dev/extras"},{default:e(()=>[o("@quasar/extras")]),_:1}),o(" package. You don’t need to import it in your app, just configure the "),n("code",{class:"doc-token"},"/quasar.config"),o(" file as indicated above.")]),n("p",null,"Adding more than one set:"),n(k(d),null,{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"extras"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"["),o(`
  `),n("span",{class:"token string"},"'material-icons'"),n("span",{class:"token punctuation"},","),o(`
  `),n("span",{class:"token string"},"'mdi-v7'"),n("span",{class:"token punctuation"},","),o(`
  `),n("span",{class:"token string"},"'ionicons-v4'"),n("span",{class:"token punctuation"},","),o(),n("span",{class:"token comment"},"// last webfont was available in v4.6.3"),o(`
  `),n("span",{class:"token string"},"'eva-icons'"),n("span",{class:"token punctuation"},","),o(`
  `),n("span",{class:"token string"},"'fontawesome-v6'"),n("span",{class:"token punctuation"},","),o(`
  `),n("span",{class:"token string"},"'themify'"),n("span",{class:"token punctuation"},","),o(`
  `),n("span",{class:"token string"},"'line-awesome'"),n("span",{class:"token punctuation"},","),o(`
  `),n("span",{class:"token string"},"'bootstrap-icons'"),o(`
`),n("span",{class:"token punctuation"},"]")])]),n(r)]),_:1}),n("p",null,[o("For all available options, visit the "),n(p,{to:"https://github.com/quasarframework/quasar/tree/dev/extras#webfonts"},{default:e(()=>[o("GitHub")]),_:1}),o(" repository.")]),n("p",null,[o("You’re now ready to use the "),n(p,{to:"/vue-components/icon"},{default:e(()=>[o("QIcon")]),_:1}),o(" component.")]),n("h2",{id:"using-cdn-as-alternative",class:"doc-heading doc-h2",onClick:u=>k(v)("using-cdn-as-alternative")},"Using CDN as alternative",8,["onClick"]),n("p",null,"If you want to make use of a CDN (Content Delivery Network), all you need to do is to include style tags in your /index.html or /src/index.template.html file which point to the CDN URL."),n("p",null,[o("In case you follow this path, do not also add the icon sets that you want in "),n("code",{class:"doc-token"},"/quasar.config file > extras"),o(". Play with the "),n(p,{to:"/start/umd#installation"},{default:e(()=>[o("UMD Installation Guide")]),_:1}),o(" and edit /index.html or /src/index.template.html as described there.")]),n("h2",{id:"using-fontawesome-pro",class:"doc-heading doc-h2",onClick:u=>k(v)("using-fontawesome-pro")},"Using Fontawesome-Pro",8,["onClick"]),n("p",null,"If you have a Fontawesome v6 Pro license and want to use it instead of the Fontawesome Free version, follow these instructions:"),n("ol",null,[n("li",null,[o("Open the "),n(p,{to:"https://fontawesome.com/account"},{default:e(()=>[o("Linked Accounts section")]),_:1}),o(" in Fontawesome’s user account page to grab the npm TOKENID (login if necessary).")]),n("li",null,[o("Create or append TOKENID into the "),n("code",{class:"doc-token"},".npmrc"),o(" file (file path same as package.json):")])]),n(k(d),null,{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,`@fortawesome:registry=https://npm.fontawesome.com/
//npm.fontawesome.com/:_authToken=TOKENID`)]),n(r)]),_:1}),n("ol",{start:"3"},[n("li",null,"Install Fontawesome webfonts:")]),n(k(d),{tabs:["Yarn","NPM","PNPM","Bun"]},{default:e(()=>[n(g,{class:"q-pa-none",name:"Yarn"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[o("$ "),n("span",{class:"token function"},"yarn"),o(),n("span",{class:"token function"},"add"),o(" @fortawesome/fontawesome-pro")])]),n(r,{lang:"bash"})]),_:1}),n(g,{class:"q-pa-none",name:"NPM"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[o("$ "),n("span",{class:"token function"},"npm"),o(),n("span",{class:"token function"},"install"),o(),n("span",{class:"token parameter variable"},"--save"),o(" @fortawesome/fontawesome-pro")])]),n(r,{lang:"bash"})]),_:1}),n(g,{class:"q-pa-none",name:"PNPM"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[o("$ "),n("span",{class:"token function"},"pnpm"),o(),n("span",{class:"token function"},"add"),o(" @fortawesome/fontawesome-pro")])]),n(r,{lang:"bash"})]),_:1}),n(g,{class:"q-pa-none",name:"Bun"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[o("$ bun "),n("span",{class:"token function"},"add"),o(" @fortawesome/fontawesome-pro")])]),n(r,{lang:"bash"})]),_:1})]),_:1}),n("ol",{start:"4"},[n("li",null,"Create new boot file:")]),n(k(d),null,{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[o("$ quasar new boot fontawesome-pro "),n("span",{class:"token punctuation"},"["),o("--format ts"),n("span",{class:"token punctuation"},"]")])]),n(r,{lang:"bash"})]),_:1}),n("ol",{start:"5"},[n("li",null,[o("Edit the "),n("code",{class:"doc-token"},"/quasar.config"),o(" file:")])]),n(k(d),null,{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"["),o(`
  `),n("span",{class:"token operator"},"..."),o(`
  `),n("span",{class:"token string"},"'fontawesome-pro'"),o(),n("span",{class:"token comment"},"// Add boot file"),o(`
`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),o(`
`),n("span",{class:"token literal-property property"},"extras"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"["),o(`
  `),n("span",{class:"token comment"},"// 'fontawesome-v6' // Disable free version!"),o(`
`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),o(`
`),n("span",{class:"token literal-property property"},"framework"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"{"),o(`
  `),n("span",{class:"token comment"},"// if you want Quasar to use Fontawesome for its icons"),o(`
  `),n("span",{class:"token literal-property property"},"iconSet"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token string"},"'fontawesome-v6-pro'"),o(`
`),n("span",{class:"token punctuation"},"}")])]),n(r)]),_:1}),n("ol",{start:"6"},[n("li",null,[o("Edit "),n("code",{class:"doc-token"},"/src/boot/fontawesome-pro.js"),o(":")])]),n(k(d),null,{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// required"),o(`
`),n("span",{class:"token keyword"},"import"),o(),n("span",{class:"token string"},"'@fortawesome/fontawesome-pro/css/fontawesome.css'"),o(`
`),n("span",{class:"token keyword"},"import"),o(),n("span",{class:"token string"},"'@fortawesome/fontawesome-pro/css/light.css'"),o(`
`),n("span",{class:"token comment"},"// do you want these too?"),o(`
`),n("span",{class:"token comment"},"// import '@fortawesome/fontawesome-pro/css/thin.css'"),o(`
`),n("span",{class:"token comment"},"// import '@fortawesome/fontawesome-pro/css/duotone.css'"),o(`
`),n("span",{class:"token comment"},"// import '@fortawesome/fontawesome-pro/css/brands.css'"),o(`
`),n("span",{class:"token comment"},"// import '@fortawesome/fontawesome-pro/css/solid.css'"),o(`
`),n("span",{class:"token comment"},"// import '@fortawesome/fontawesome-pro/css/regular.css'")])]),n(r)]),_:1}),n("ol",{start:"7"},[n("li",null,"(Optional) Override default icons:")]),n("p",null,[o("Since the default "),n("code",{class:"doc-token"},"font-weight"),o(" for fontawesome-pro is "),n("code",{class:"doc-token"},"light"),o(" or "),n("code",{class:"doc-token"},"fal"),o(", some icons used by the framework components may not be desirable. The best way to handle this is to override it in the boot file that you created.")]),n("p",null,[o("For instance, to override the "),n("code",{class:"doc-token"},"fal"),o(" version of the close icon for chips, do this:")]),n("p",null,[n("em",null,"First"),o(", find the icon used for chip close in Quasar Fontawesome v6 Pro "),n(p,{to:"https://github.com/quasarframework/quasar/blob/dev/ui/icon-set/fontawesome-v6-pro.js"},{default:e(()=>[o("icon-set source")]),_:1}),o(".")]),n("p",null,"(Alternatively, you can check inside the render function of the component you are overriding.)"),n(k(d),{title:"Example"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"chip"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token punctuation"},"{"),o(`
  `),n("span",{class:"token literal-property property"},"remove"),n("span",{class:"token operator"},":"),o(),n("span",{class:"token string"},"'fal fa-times-circle'")])]),n(r)]),_:1}),n("p",null,[n("em",null,"Then"),o(", override it in your "),n("code",{class:"doc-token"},"/src/boot/fontawesome-pro.js")]),n(k(d),null,{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),o(),n("span",{class:"token string"},"'@fortawesome/fontawesome-pro/css/fontawesome.min.css'"),o(`
`),n("span",{class:"token keyword"},"import"),o(),n("span",{class:"token string"},"'@fortawesome/fontawesome-pro/css/solid.min.css'"),o(`
`),n("span",{class:"token keyword"},"import"),o(),n("span",{class:"token string"},"'@fortawesome/fontawesome-pro/css/light.min.css'"),o(`

`),n("span",{class:"token comment"},"// example"),o(`
`),n("span",{class:"token keyword"},"export"),o(),n("span",{class:"token keyword"},"default"),o(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),o(" app "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),o(),n("span",{class:"token operator"},"=>"),o(),n("span",{class:"token punctuation"},"{"),o(`
  app`),n("span",{class:"token punctuation"},"."),o("config"),n("span",{class:"token punctuation"},"."),o("globalProperties"),n("span",{class:"token punctuation"},"."),o("$q"),n("span",{class:"token punctuation"},"."),o("iconSet"),n("span",{class:"token punctuation"},"."),o("chip"),n("span",{class:"token punctuation"},"."),o("remove "),n("span",{class:"token operator"},"="),o(),n("span",{class:"token string"},"'fas fa-times-circle'"),o(`
`),n("span",{class:"token punctuation"},"}")])]),n(r)]),_:1})]}),_:1},N))}}},D=q.setup;q.setup=(x,b)=>{const y=T();return(y.modules||(y.modules=new Set)).add("src/pages/options/installing-icon-libraries.md"),D?D(x,b):void 0};const X=S(q,[["__file","installing-icon-libraries.md"]]);export{X as default};
