import{resolveComponent as w,mergeProps as C,withCtx as n,createTextVNode as l,createVNode as t,useSSRContext as g}from"vue";import{ssrRenderComponent as r}from"vue/server-renderer";import"quasar";import{D as S,a as o}from"./DocPage-DKr-0pQn.js";import{_ as Q}from"../server-entry.js";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const i={__name:"body-classes",__ssrInlineRender:!0,setup(k){return(m,c,p,x)=>{const h=w("q-markup-table");c(r(S,C({title:"Body classes",desc:"Quasar's helper classes that get added to document.body.",heading:"","edit-link":"style/body-classes"},x),{default:n((N,s,v,$)=>{if(s)s(`<p${$}>Quasar attaches some very useful helper CSS classes to document.body which you can take advantage of:</p>`),s(r(h,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:n((L,d,u,e)=>{if(d)d(`<thead${e}><tr${e}><th class="text-left"${e}>Name</th><th class="text-left"${e}>Description</th></tr></thead><tbody${e}><tr${e}><td${e}><code class="doc-token"${e}>body--dark</code></td><td${e}>When in `),d(r(o,{to:"/style/dark-mode"},{default:n((f,a,b,y)=>{if(a)a("dark mode");else return[l("dark mode")]}),_:1},u,e)),d(`</td></tr><tr${e}><td${e}><code class="doc-token"${e}>body--light</code></td><td${e}>When not in `),d(r(o,{to:"/style/dark-mode"},{default:n((f,a,b,y)=>{if(a)a("dark mode");else return[l("dark mode")]}),_:1},u,e)),d(`</td></tr><tr${e}><td${e}><code class="doc-token"${e}>desktop</code></td><td${e}>When client is on a desktop</td></tr><tr${e}><td${e}><code class="doc-token"${e}>mobile</code></td><td${e}>When client is on a mobile device</td></tr><tr${e}><td${e}><code class="doc-token"${e}>touch</code></td><td${e}>When client has touch support</td></tr><tr${e}><td${e}><code class="doc-token"${e}>no-touch</code></td><td${e}>When client does NOT have touch support</td></tr><tr${e}><td${e}><code class="doc-token"${e}>platform-android</code></td><td${e}>When client is on an Android device</td></tr><tr${e}><td${e}><code class="doc-token"${e}>platform-ios</code></td><td${e}>When client is on an iOS device</td></tr><tr${e}><td${e}><code class="doc-token"${e}>native-mobile</code></td><td${e}>When client is on a Quasar CLI Cordova or Capacitor app</td></tr><tr${e}><td${e}><code class="doc-token"${e}>electron</code></td><td${e}>When client is on a Quasar CLI Electron app</td></tr><tr${e}><td${e}><code class="doc-token"${e}>bex</code></td><td${e}>When app runs from a browser extension</td></tr><tr${e}><td${e}><code class="doc-token"${e}>within-iframe</code></td><td${e}>When app runs from an iframe</td></tr><tr${e}><td${e}><code class="doc-token"${e}>screen--*</code></td><td${e}>If `),d(r(o,{to:"/options/screen-plugin#how-to-enable-body-classes"},{default:n((f,a,b,y)=>{if(a)a("enabled (only)");else return[l("enabled (only)")]}),_:1},u,e)),d(`, tells current window breakpoint (<code class="doc-token"${e}>screen--xs</code>, <code class="doc-token"${e}>screen--sm</code>, …, <code class="doc-token"${e}>screen--xl</code>)</td></tr></tbody>`);else return[t("thead",null,[t("tr",null,[t("th",{class:"text-left"},"Name"),t("th",{class:"text-left"},"Description")])]),t("tbody",null,[t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"body--dark")]),t("td",null,[l("When in "),t(o,{to:"/style/dark-mode"},{default:n(()=>[l("dark mode")]),_:1})])]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"body--light")]),t("td",null,[l("When not in "),t(o,{to:"/style/dark-mode"},{default:n(()=>[l("dark mode")]),_:1})])]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"desktop")]),t("td",null,"When client is on a desktop")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"mobile")]),t("td",null,"When client is on a mobile device")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"touch")]),t("td",null,"When client has touch support")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"no-touch")]),t("td",null,"When client does NOT have touch support")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"platform-android")]),t("td",null,"When client is on an Android device")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"platform-ios")]),t("td",null,"When client is on an iOS device")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"native-mobile")]),t("td",null,"When client is on a Quasar CLI Cordova or Capacitor app")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"electron")]),t("td",null,"When client is on a Quasar CLI Electron app")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"bex")]),t("td",null,"When app runs from a browser extension")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"within-iframe")]),t("td",null,"When app runs from an iframe")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"screen--*")]),t("td",null,[l("If "),t(o,{to:"/options/screen-plugin#how-to-enable-body-classes"},{default:n(()=>[l("enabled (only)")]),_:1}),l(", tells current window breakpoint ("),t("code",{class:"doc-token"},"screen--xs"),l(", "),t("code",{class:"doc-token"},"screen--sm"),l(", …, "),t("code",{class:"doc-token"},"screen--xl"),l(")")])])])]}),_:1},v,$));else return[t("p",null,"Quasar attaches some very useful helper CSS classes to document.body which you can take advantage of:"),t(h,{class:"doc-page-table","wrap-cells":!0,flat:!0,bordered:!0},{default:n(()=>[t("thead",null,[t("tr",null,[t("th",{class:"text-left"},"Name"),t("th",{class:"text-left"},"Description")])]),t("tbody",null,[t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"body--dark")]),t("td",null,[l("When in "),t(o,{to:"/style/dark-mode"},{default:n(()=>[l("dark mode")]),_:1})])]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"body--light")]),t("td",null,[l("When not in "),t(o,{to:"/style/dark-mode"},{default:n(()=>[l("dark mode")]),_:1})])]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"desktop")]),t("td",null,"When client is on a desktop")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"mobile")]),t("td",null,"When client is on a mobile device")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"touch")]),t("td",null,"When client has touch support")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"no-touch")]),t("td",null,"When client does NOT have touch support")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"platform-android")]),t("td",null,"When client is on an Android device")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"platform-ios")]),t("td",null,"When client is on an iOS device")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"native-mobile")]),t("td",null,"When client is on a Quasar CLI Cordova or Capacitor app")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"electron")]),t("td",null,"When client is on a Quasar CLI Electron app")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"bex")]),t("td",null,"When app runs from a browser extension")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"within-iframe")]),t("td",null,"When app runs from an iframe")]),t("tr",null,[t("td",null,[t("code",{class:"doc-token"},"screen--*")]),t("td",null,[l("If "),t(o,{to:"/options/screen-plugin#how-to-enable-body-classes"},{default:n(()=>[l("enabled (only)")]),_:1}),l(", tells current window breakpoint ("),t("code",{class:"doc-token"},"screen--xs"),l(", "),t("code",{class:"doc-token"},"screen--sm"),l(", …, "),t("code",{class:"doc-token"},"screen--xl"),l(")")])])])]),_:1})]}),_:1},p))}}},W=i.setup;i.setup=(k,m)=>{const c=g();return(c.modules||(c.modules=new Set)).add("src/pages/style/body-classes.md"),W?W(k,m):void 0};const z=Q(i,[["__file","body-classes.md"]]);export{z as default};
