import{resolveComponent as T,mergeProps as C,withCtx as s,createTextVNode as e,createVNode as t,unref as g,useSSRContext as x}from"vue";import{ssrRenderComponent as u}from"vue/server-renderer";import{c as h}from"./page-utils-C-QWsEHe.js";import{D as E,a as o}from"./DocPage-DKr-0pQn.js";import{D as w}from"./DocPrerender-DPOnWPFO.js";import{C as f}from"./CopyButton-l3ndfN49.js";import{_ as A}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const k={__name:"testing-and-auditing",__ssrInlineRender:!0,setup(v){const m=[{id:"high-level-overview",title:"2. High level overview"},{id:"testing-documentation",title:"3. Testing documentation"},{id:"installing",title:"4. Installing"},{id:"further-reading",title:"5. Further Reading"},{id:"books",title:"5.1. Books",sub:!0},{id:"tutorials",title:"5.2. Tutorials",sub:!0},{id:"documentation",title:"5.3. Documentation",sub:!0}];return(p,$,q,j)=>{const b=T("q-btn");$(u(E,C({title:"Testing & Auditing",desc:"(@quasar/app-webpack) How to unit and end to end test a Quasar app.",overline:"Quasar CLI with Webpack - @quasar/app-webpack",heading:"","edit-link":"quasar-cli-webpack/testing-and-auditing",toc:m},j),{default:s((R,i,c,n)=>{if(i)i(`<p${n}>Your Quasar projects have the ability to add unit and e2e testing harnesses. This introduction will not go into details about how to write and use tests, for that please consult the specially prepared and maintained documentation at the `),i(u(o,{to:"https://github.com/quasarframework/quasar-testing/tree/dev"},{default:s((r,a,d,l)=>{if(a)a("testing repo at GitHub");else return[e("testing repo at GitHub")]}),_:1},c,n)),i(`. If you are a beginner, consider reading one of the books in the “Further Reading” section.</p><h2 id="high-level-overview" class="doc-heading doc-h2"${n}>High level overview</h2><p${n}>You can install multiple pre-rigged testing harnesses to your existing Quasar application by running a simple command. This command will pull and install a node module (with dependencies) into your project’s <code class="doc-token"${n}>package.json</code>, place necessary configuration files as appropriate and add script commands that expose some of the functionality of the respective harness. You can add multiple harnesses and even use them for your continuous integration pipelines - as appropriate.</p><p${n}>Testing is not in and of itself hard. The most complicated part is setting up the testing harness. The trick lies in knowing what to test. If you are new to testing, it is absolutely imperative that you familiarize yourself with some of the concepts and patterns. There are some links for further reading at the end of this document page.</p><h2 id="testing-documentation" class="doc-heading doc-h2"${n}>Testing documentation</h2><p${n}>You can find the documentation of testing AEs at https://testing.quasar.dev or into `),i(u(o,{to:"https://github.com/quasarframework/quasar-testing/tree/dev"},{default:s((r,a,d,l)=>{if(a)a(`<code class="doc-token"${l}>dev</code> branch`);else return[t("code",{class:"doc-token"},"dev"),e(" branch")]}),_:1},c,n)),i(" of quasar-testing repo.</p>"),i(u(b,{label:"Testing AEs documentation","icon-right":"launch",href:"https://testing.quasar.dev",target:"_blank"},null,c,n)),i(`<h2 id="installing" class="doc-heading doc-h2"${n}>Installing</h2>`),i(u(g(w),null,{default:s((r,a,d,l)=>{if(a)a(`<pre class="doc-code"${l}><code${l}>$ <span class="token builtin class-name"${l}>cd</span> your-quasar-project

$ quasar ext <span class="token function"${l}>add</span> @quasar/testing-e2e-cypress
<span class="token comment"${l}># or</span>
$ quasar ext <span class="token function"${l}>add</span> @quasar/testing-unit-jest
<span class="token comment"${l}># or</span>
$ quasar ext <span class="token function"${l}>add</span> @quasar/testing-unit-vitest</code></pre>`),a(u(f,{lang:"bash"},null,d,l));else return[t("pre",{class:"doc-code"},[t("code",null,[e("$ "),t("span",{class:"token builtin class-name"},"cd"),e(` your-quasar-project

$ quasar ext `),t("span",{class:"token function"},"add"),e(` @quasar/testing-e2e-cypress
`),t("span",{class:"token comment"},"# or"),e(`
$ quasar ext `),t("span",{class:"token function"},"add"),e(` @quasar/testing-unit-jest
`),t("span",{class:"token comment"},"# or"),e(`
$ quasar ext `),t("span",{class:"token function"},"add"),e(" @quasar/testing-unit-vitest")])]),t(f,{lang:"bash"})]}),_:1},c,n)),i(`<p${n}>These extension will install the respective harnesses, which you can configure as you like. It is how multiple testing harnesses are ideally managed within a Quasar project. If you ever need to review your installation choices you can take a look at <code class="doc-token"${n}>quasar.extensions.json</code>.</p><blockquote class="doc-note"${n}><p${n}>Note that we previously suggested to use <code class="doc-token"${n}>@quasar/testing</code> AE to manage all testing harnesses in a project. This is no longer the case, as `),i(u(o,{to:"https://github.com/quasarframework/quasar-testing/tree/dev/packages/testing/README.md#DEPRECATION-NOTICE"},{default:s((r,a,d,l)=>{if(a)a("it is now deprecated");else return[e("it is now deprecated")]}),_:1},c,n)),i(`. Please use the above commands instead.</p></blockquote><h2 id="further-reading" class="doc-heading doc-h2"${n}>Further Reading</h2><h3 id="books" class="doc-heading doc-h3"${n}>Books</h3><ul${n}><li${n}>`),i(u(o,{to:"https://www.manning.com/books/testing-vue-js-applications"},{default:s((r,a,d,l)=>{if(a)a("Testing Vue.js Applications");else return[e("Testing Vue.js Applications")]}),_:1},c,n)),i(` by Edd Yerburgh, the author of the <code class="doc-token"${n}>@vue/test-utils</code> repo</li><li${n}>`),i(u(o,{to:"https://lmiller1990.github.io/vue-testing-handbook/"},{default:s((r,a,d,l)=>{if(a)a("Free Vue Testing Handbook");else return[e("Free Vue Testing Handbook")]}),_:1},c,n)),i(`</li></ul><h3 id="tutorials" class="doc-heading doc-h3"${n}>Tutorials</h3><ul${n}><li${n}>`),i(u(o,{to:"https://medium.com/js-dojo/unit-testing-vue-router-1d091241312"},{default:s((r,a,d,l)=>{if(a)a("Unit Testing Vue Router with Jest");else return[e("Unit Testing Vue Router with Jest")]}),_:1},c,n)),i(`</li></ul><h3 id="documentation" class="doc-heading doc-h3"${n}>Documentation</h3><ul${n}><li${n}>`),i(u(o,{to:"https://test-utils.vuejs.org"},{default:s((r,a,d,l)=>{if(a)a("@vue/test-utils");else return[e("@vue/test-utils")]}),_:1},c,n)),i(`</li><li${n}>`),i(u(o,{to:"https://facebook.github.io/jest/"},{default:s((r,a,d,l)=>{if(a)a("jest 24");else return[e("jest 24")]}),_:1},c,n)),i(`</li><li${n}>`),i(u(o,{to:"https://docs.cypress.io/guides/core-concepts/introduction-to-cypress.html#Cypress-Is-Simple"},{default:s((r,a,d,l)=>{if(a)a("cypress");else return[e("cypress")]}),_:1},c,n)),i(`</li><li${n}>`),i(u(o,{to:"https://developers.google.com/web/tools/lighthouse/#cli"},{default:s((r,a,d,l)=>{if(a)a("lighthouse");else return[e("lighthouse")]}),_:1},c,n)),i(`</li><li${n}>`),i(u(o,{to:"https://snyk.io/test"},{default:s((r,a,d,l)=>{if(a)a("snyk");else return[e("snyk")]}),_:1},c,n)),i(`</li><li${n}>`),i(u(o,{to:"https://www.npmjs.com/package/nlf"},{default:s((r,a,d,l)=>{if(a)a("nlf");else return[e("nlf")]}),_:1},c,n)),i(`</li><li${n}>`),i(u(o,{to:"http://www.chaijs.com/"},{default:s((r,a,d,l)=>{if(a)a("chai");else return[e("chai")]}),_:1},c,n)),i(`</li><li${n}>`),i(u(o,{to:"https://istanbul.js.org/"},{default:s((r,a,d,l)=>{if(a)a("istanbul");else return[e("istanbul")]}),_:1},c,n)),i("</li></ul>");else return[t("p",null,[e("Your Quasar projects have the ability to add unit and e2e testing harnesses. This introduction will not go into details about how to write and use tests, for that please consult the specially prepared and maintained documentation at the "),t(o,{to:"https://github.com/quasarframework/quasar-testing/tree/dev"},{default:s(()=>[e("testing repo at GitHub")]),_:1}),e(". If you are a beginner, consider reading one of the books in the “Further Reading” section.")]),t("h2",{id:"high-level-overview",class:"doc-heading doc-h2",onClick:r=>g(h)("high-level-overview")},"High level overview",8,["onClick"]),t("p",null,[e("You can install multiple pre-rigged testing harnesses to your existing Quasar application by running a simple command. This command will pull and install a node module (with dependencies) into your project’s "),t("code",{class:"doc-token"},"package.json"),e(", place necessary configuration files as appropriate and add script commands that expose some of the functionality of the respective harness. You can add multiple harnesses and even use them for your continuous integration pipelines - as appropriate.")]),t("p",null,"Testing is not in and of itself hard. The most complicated part is setting up the testing harness. The trick lies in knowing what to test. If you are new to testing, it is absolutely imperative that you familiarize yourself with some of the concepts and patterns. There are some links for further reading at the end of this document page."),t("h2",{id:"testing-documentation",class:"doc-heading doc-h2",onClick:r=>g(h)("testing-documentation")},"Testing documentation",8,["onClick"]),t("p",null,[e("You can find the documentation of testing AEs at https://testing.quasar.dev or into "),t(o,{to:"https://github.com/quasarframework/quasar-testing/tree/dev"},{default:s(()=>[t("code",{class:"doc-token"},"dev"),e(" branch")]),_:1}),e(" of quasar-testing repo.")]),t(b,{label:"Testing AEs documentation","icon-right":"launch",href:"https://testing.quasar.dev",target:"_blank"}),t("h2",{id:"installing",class:"doc-heading doc-h2",onClick:r=>g(h)("installing")},"Installing",8,["onClick"]),t(g(w),null,{default:s(()=>[t("pre",{class:"doc-code"},[t("code",null,[e("$ "),t("span",{class:"token builtin class-name"},"cd"),e(` your-quasar-project

$ quasar ext `),t("span",{class:"token function"},"add"),e(` @quasar/testing-e2e-cypress
`),t("span",{class:"token comment"},"# or"),e(`
$ quasar ext `),t("span",{class:"token function"},"add"),e(` @quasar/testing-unit-jest
`),t("span",{class:"token comment"},"# or"),e(`
$ quasar ext `),t("span",{class:"token function"},"add"),e(" @quasar/testing-unit-vitest")])]),t(f,{lang:"bash"})]),_:1}),t("p",null,[e("These extension will install the respective harnesses, which you can configure as you like. It is how multiple testing harnesses are ideally managed within a Quasar project. If you ever need to review your installation choices you can take a look at "),t("code",{class:"doc-token"},"quasar.extensions.json"),e(".")]),t("blockquote",{class:"doc-note"},[t("p",null,[e("Note that we previously suggested to use "),t("code",{class:"doc-token"},"@quasar/testing"),e(" AE to manage all testing harnesses in a project. This is no longer the case, as "),t(o,{to:"https://github.com/quasarframework/quasar-testing/tree/dev/packages/testing/README.md#DEPRECATION-NOTICE"},{default:s(()=>[e("it is now deprecated")]),_:1}),e(". Please use the above commands instead.")])]),t("h2",{id:"further-reading",class:"doc-heading doc-h2",onClick:r=>g(h)("further-reading")},"Further Reading",8,["onClick"]),t("h3",{id:"books",class:"doc-heading doc-h3",onClick:r=>g(h)("books")},"Books",8,["onClick"]),t("ul",null,[t("li",null,[t(o,{to:"https://www.manning.com/books/testing-vue-js-applications"},{default:s(()=>[e("Testing Vue.js Applications")]),_:1}),e(" by Edd Yerburgh, the author of the "),t("code",{class:"doc-token"},"@vue/test-utils"),e(" repo")]),t("li",null,[t(o,{to:"https://lmiller1990.github.io/vue-testing-handbook/"},{default:s(()=>[e("Free Vue Testing Handbook")]),_:1})])]),t("h3",{id:"tutorials",class:"doc-heading doc-h3",onClick:r=>g(h)("tutorials")},"Tutorials",8,["onClick"]),t("ul",null,[t("li",null,[t(o,{to:"https://medium.com/js-dojo/unit-testing-vue-router-1d091241312"},{default:s(()=>[e("Unit Testing Vue Router with Jest")]),_:1})])]),t("h3",{id:"documentation",class:"doc-heading doc-h3",onClick:r=>g(h)("documentation")},"Documentation",8,["onClick"]),t("ul",null,[t("li",null,[t(o,{to:"https://test-utils.vuejs.org"},{default:s(()=>[e("@vue/test-utils")]),_:1})]),t("li",null,[t(o,{to:"https://facebook.github.io/jest/"},{default:s(()=>[e("jest 24")]),_:1})]),t("li",null,[t(o,{to:"https://docs.cypress.io/guides/core-concepts/introduction-to-cypress.html#Cypress-Is-Simple"},{default:s(()=>[e("cypress")]),_:1})]),t("li",null,[t(o,{to:"https://developers.google.com/web/tools/lighthouse/#cli"},{default:s(()=>[e("lighthouse")]),_:1})]),t("li",null,[t(o,{to:"https://snyk.io/test"},{default:s(()=>[e("snyk")]),_:1})]),t("li",null,[t(o,{to:"https://www.npmjs.com/package/nlf"},{default:s(()=>[e("nlf")]),_:1})]),t("li",null,[t(o,{to:"http://www.chaijs.com/"},{default:s(()=>[e("chai")]),_:1})]),t("li",null,[t(o,{to:"https://istanbul.js.org/"},{default:s(()=>[e("istanbul")]),_:1})])])]}),_:1},q))}}},y=k.setup;k.setup=(v,m)=>{const p=x();return(p.modules||(p.modules=new Set)).add("src/pages/quasar-cli-webpack/testing-and-auditing.md"),y?y(v,m):void 0};const z=A(k,[["__file","testing-and-auditing.md"]]);export{z as default};
