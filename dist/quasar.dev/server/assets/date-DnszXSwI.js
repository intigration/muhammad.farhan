import{provide as C,resolveComponent as T,mergeProps as M,withCtx as d,createTextVNode as o,createVNode as t,unref as u,useSSRContext as P}from"vue";import{ssrRenderComponent as n}from"vue/server-renderer";import{c as h}from"./page-utils-C-QWsEHe.js";import{D as S,a as r}from"./DocPage-DKr-0pQn.js";import{D as a}from"./DocExample-BcaABDtE.js";import{D as b}from"./DocApi-Df9ryd6x.js";import{_ as Y}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const k={__name:"date",__ssrInlineRender:!0,setup(v){C("_q_ex",{name:"QDate"});const p=[{name:"Time Picker",category:"Form Components",path:"/vue-components/time"},{name:"Date Utils",category:"Genis Utils",path:"/quasar-utils/date-utils"},{name:"Field (wrapper)",category:"Form Components",path:"/vue-components/field"}],g=[{id:"qdate-api",title:"2. QDate API",deep:!0},{id:"usage",title:"3. Usage"},{id:"basic",title:"3.1. Basic",sub:!0},{id:"multiple-selection",title:"3.2. Multiple selection",sub:!0},{id:"range-selection",title:"3.3. Range selection",sub:!0},{id:"custom-title-and-subtitle",title:"3.4. Custom title and subtitle",sub:!0},{id:"functionality",title:"3.5. Functionality",sub:!0},{id:"model-mask",title:"3.6. Model mask",sub:!0},{id:"custom-ad-hoc-locale",title:"3.7. Custom ad-hoc locale",sub:!0},{id:"coloring",title:"3.8. Coloring",sub:!0},{id:"highlighting-events",title:"3.9. Highlighting events",sub:!0},{id:"limiting-options",title:"3.10. Limiting options",sub:!0},{id:"applying-navigation-boundaries",title:"3.11. Applying navigation boundaries",sub:!0},{id:"with-additional-buttons",title:"3.12. With additional buttons",sub:!0},{id:"with-qsplitter-and-qtabpanels",title:"3.13. With QSplitter and QTabPanels",sub:!0},{id:"with-qinput",title:"3.14. With QInput",sub:!0},{id:"persian-calendar",title:"3.15. Persian calendar",sub:!0},{id:"native-form-submit",title:"3.16. Native form submit",sub:!0}];return(N,$,Q,D)=>{const w=T("q-btn");$(n(S,M({title:"QDate",desc:"The QDate Vue component provides a method to input dates from Gregorian or Persian calendars.",heading:"","edit-link":"vue-components/date",toc:g,related:p},D),{default:d((q,l,i,e)=>{if(l)l(`<p${e}>The QDate component provides a method to input date. Currently it supports Gregorian (default) and Persian calendars.</p><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>For handling date and/or time, also check out `),l(n(r,{to:"/quasar-utils/date-utils"},{default:d((c,s,m,f)=>{if(s)s("Quasar Date Utils");else return[o("Quasar Date Utils")]}),_:1},i,e)),l(".</p></div>"),l(n(b,{file:"QDate"},null,i,e)),l(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><div class="doc-note doc-note--warning"${e}><p class="doc-note__title"${e}>WARNING</p><p${e}>Notice that the actual date(s) of the model are all in String format.</p></div><h3 id="basic" class="doc-heading doc-h3"${e}>Basic</h3>`),l(n(a,{title:"Basic",file:"Basic",overflow:""},null,i,e)),l(`<div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>For landscape mode, you can use it along with <code class="doc-token"${e}>$q.screen</code> to make QDate responsive. Example: <code class="doc-token"${e}>:landscape=&quot;$q.screen.gt.xs&quot;</code>. More info: `),l(n(r,{to:"/options/screen-plugin"},{default:d((c,s,m,f)=>{if(s)s("Quasar Screen Plugin");else return[o("Quasar Screen Plugin")]}),_:1},i,e)),l(".</p></div>"),l(n(a,{title:"Landscape",file:"Landscape",overflow:""},null,i,e)),l(`<h3 id="multiple-selection" class="doc-heading doc-h3"${e}>Multiple selection</h3><p${e}>Notice below that the model is an Array and we specify the “multiple” prop.</p><p${e}>Clicking on an already selected day will deselect it.</p>`),l(n(a,{title:"Multiple days",file:"SelectionMultiple",overflow:""},null,i,e)),l(`<h3 id="range-selection" class="doc-heading doc-h3"${e}>Range selection</h3><p${e}>Notice in the examples below that the model is an Object (single selection) or an Array of Objects (multiple selection).</p><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIPS</p><ul${e}><li${e}>Clicking on an already selected day will deselect it.</li><li${e}>The user’s current editing range can also be set programmatic through the <code class="doc-token"${e}>setEditingRange</code> method (check the API card).</li><li${e}>There are two useful events in regards to the current editing range: <code class="doc-token"${e}>range-start</code> and <code class="doc-token"${e}>range-end</code> (check the API card).</li></ul></div><div class="doc-note doc-note--warning"${e}><p class="doc-note__title"${e}>WARNING</p><p${e}>The <code class="doc-token"${e}>range</code> property is only partially compatible with the <code class="doc-token"${e}>options</code> prop: selected ranges might also include “unselectable” days.</p></div>`),l(n(a,{title:"Single Range",file:"SelectionRange",overflow:""},null,i,e)),l(n(a,{title:"Multiple ranges",file:"SelectionRangeMultiple",overflow:""},null,i,e)),l(`<h3 id="custom-title-and-subtitle" class="doc-heading doc-h3"${e}>Custom title and subtitle</h3><p${e}>When not in ‘minimal’ mode, QDate has a computed header title and subtitle. You can override it, like in the example below.</p><p${e}>When clicking on title then the QDate’s view is changed to the calendar and when clicking on subtitle, the view will switch to year picking.</p>`),l(n(a,{title:"Custom title and subtitle",file:"CustomTitleSubtitle",overflow:""},null,i,e)),l(`<h3 id="functionality" class="doc-heading doc-h3"${e}>Functionality</h3><p${e}>When model is unfilled (like <code class="doc-token"${e}>null</code>, <code class="doc-token"${e}>void 0</code> / <code class="doc-token"${e}>undefined</code>) QDate still has to show the calendar for a month of a year. You can use <code class="doc-token"${e}>default-year-month</code> prop for this, otherwise the current month of the year will be shown:</p>`),l(n(a,{title:"Default year month",file:"DefaultYearMonth",overflow:""},null,i,e)),l(`<p${e}>The default view can be changed.</p>`),l(n(a,{title:"Default view",file:"DefaultView",overflow:""},null,i,e)),l(`<p${e}>The first day of the week is applied depending on the `),l(n(r,{to:"/options/quasar-language-packs"},{default:d((c,s,m,f)=>{if(s)s("Quasar Language Pack");else return[o("Quasar Language Pack")]}),_:1},i,e)),l(" that you’ve set, but you can also force it, like in the example below.</p>"),l(n(a,{title:"First day of week",file:"FirstDayOfWeek",overflow:""},null,i,e)),l(`<p${e}>Clicking on the “Today” button sets date to current user date. Requires the header, so you can’t use it along with “minimal” mode:</p>`),l(n(a,{title:"Today button",file:"TodayBtn",overflow:""},null,i,e)),l(n(a,{title:"Disable and readonly",file:"DisableReadonly",overflow:""},null,i,e)),l(`<h3 id="model-mask" class="doc-heading doc-h3"${e}>Model mask</h3><p${e}>The default model mask is <code class="doc-token"${e}>YYYY/MM/DD</code>, however you can use custom ones too.</p><p${e}>The <code class="doc-token"${e}>mask</code> prop tokens can be found at `),l(n(r,{to:"/quasar-utils/date-utils#format-for-display"},{default:d((c,s,m,f)=>{if(s)s("Quasar Utils &gt; Date utils");else return[o("Quasar Utils > Date utils")]}),_:1},i,e)),l(`.</p><div class="doc-note doc-note--warning"${e}><p class="doc-note__title"${e}>Note on SSR</p><p${e}>Using <code class="doc-token"${e}>x</code> or <code class="doc-token"${e}>X</code> (timestamps) in the mask may cause hydration errors on the client, because decoding the model String must be done with <code class="doc-token"${e}>new Date()</code> which takes into account the local timezone. As a result, if the server is in a different timezone than the client, then the rendered output of the server will differ than the one on the client so hydration will fail.</p></div><div class="doc-note doc-note--danger"${e}><p class="doc-note__title"${e}>Note on persian calendar</p><p${e}>When using the persian calendar, the mask for QDate is forced to <code class="doc-token"${e}>YYYY/MM/DD</code>.</p></div>`),l(n(a,{title:"Simple mask",file:"MaskSimple",overflow:""},null,i,e)),l(`<p${e}>If you want to insert strings (including <code class="doc-token"${e}>[</code> and <code class="doc-token"${e}>]</code> characters) into your mask, make sure you escape them by surrounding them with <code class="doc-token"${e}>[</code> and <code class="doc-token"${e}>]</code>, otherwise the characters might be interpreted as format tokens.</p>`),l(n(a,{title:"Mask with escaped characters",file:"MaskEscape",overflow:""},null,i,e)),l(`<p${e}>Using the mask to connect a QDate and `),l(n(r,{to:"/vue-components/time"},{default:d((c,s,m,f)=>{if(s)s("QTime");else return[o("QTime")]}),_:1},i,e)),l(" to the same model:</p>"),l(n(a,{title:"QDate and QTime on same model",file:"MaskDateTime",overflow:""},null,i,e)),l(`<div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>If you want to programmatically set the value of QDate, you can do so by just re-assigning the value that you pass. However, the updated value needs to be a string in the same format as your mask. Eg. in the case your mask is <code class="doc-token"${e}>&#39;dddd, MMM D, YYYY&#39;</code>, passing <code class="doc-token"${e}>&#39;2019/04/28&#39;</code> as value won’t work, you would need to pass <code class="doc-token"${e}>&#39;Sunday, Apr 28, 2019&#39;</code> instead.</p></div><h3 id="custom-ad-hoc-locale" class="doc-heading doc-h3"${e}>Custom ad-hoc locale</h3><p${e}>If, for some reason, you need to use a custom ad-hoc locale rather than the current Quasar Language Pack that has been set, you can use the <code class="doc-token"${e}>locale</code> prop:</p>`),l(n(a,{title:"Custom ad-hoc locale",file:"CustomLocale",overflow:""},null,i,e)),l(`<h3 id="coloring" class="doc-heading doc-h3"${e}>Coloring</h3>`),l(n(a,{title:"Coloring",file:"Color",overflow:""},null,i,e)),l(n(a,{title:"Force dark mode",file:"Dark",overflow:""},null,i,e)),l(`<h3 id="highlighting-events" class="doc-heading doc-h3"${e}>Highlighting events</h3><p${e}>The first example is using an array and the second example is using a function.</p>`),l(n(a,{title:"Events",file:"Events",overflow:""},null,i,e)),l(n(a,{title:"Event color",file:"EventColor",overflow:""},null,i,e)),l(`<h3 id="limiting-options" class="doc-heading doc-h3"${e}>Limiting options</h3><ul${e}><li${e}>You can use the <code class="doc-token"${e}>options</code> prop to limit user selection to certain times.</li><li${e}>Alternatively, for a more in-depth way of limiting options, you can also supply a function (second and third example below) to <code class="doc-token"${e}>options-fn</code> prop.</li></ul><div class="doc-note doc-note--warning"${e}><p class="doc-note__title"${e}>WARNING</p><p${e}>The <code class="doc-token"${e}>options</code> property is only partially compatible with the <code class="doc-token"${e}>range</code> prop. Ranges might contain “unselectable” days.</p></div>`),l(n(a,{title:"Options",file:"Options",overflow:""},null,i,e)),l(`<h3 id="applying-navigation-boundaries" class="doc-heading doc-h3"${e}>Applying navigation boundaries</h3><p${e}>In the example below the navigation is restricted between 2020/07 and 2020/09.</p>`),l(n(a,{title:"Navigation boundaries",file:"NavigationBoundaries",overflow:""},null,i,e)),l(`<h3 id="with-additional-buttons" class="doc-heading doc-h3"${e}>With additional buttons</h3><p${e}>You can use the default slot for adding buttons:</p>`),l(n(a,{title:"With additional buttons",file:"AdditionalButtons",overflow:""},null,i,e)),l(`<h3 id="with-qsplitter-and-qtabpanels" class="doc-heading doc-h3"${e}>With QSplitter and QTabPanels</h3>`),l(n(a,{title:"With QSplitter and QTabPanels",file:"Splitter"},null,i,e)),l(`<p${e}>More info: `),l(n(r,{to:"/vue-components/splitter"},{default:d((c,s,m,f)=>{if(s)s("QSplitter");else return[o("QSplitter")]}),_:1},i,e)),l(", "),l(n(r,{to:"/vue-components/tab-panels"},{default:d((c,s,m,f)=>{if(s)s("QTabPanels");else return[o("QTabPanels")]}),_:1},i,e)),l(`.</p><h3 id="with-qinput" class="doc-heading doc-h3"${e}>With QInput</h3>`),l(n(a,{title:"With QInput",file:"Input"},null,i,e)),l(`<p${e}>Connecting a QDate and QTime with same model on a QInput:</p>`),l(n(a,{title:"QDate and QTime with QInput",file:"InputFull",overflow:""},null,i,e)),l(`<p${e}>The following are <strong${e}>helpers</strong> for QInput <code class="doc-token"${e}>mask</code> and <code class="doc-token"${e}>rules</code> props. You can use these for convenience or write the string specifying your `),l(n(r,{to:"/vue-components/input#mask"},{default:d((c,s,m,f)=>{if(s)s("custom needs");else return[o("custom needs")]}),_:1},i,e)),l(`.</p><ul${e}><li${e}>Property <code class="doc-token"${e}>mask</code> helpers: `),l(n(r,{to:"https://github.com/quasarframework/quasar/blob/dev/ui/src/components/input/use-mask.js#L6"},{default:d((c,s,m,f)=>{if(s)s("full list");else return[o("full list")]}),_:1},i,e)),l(`.</li><li${e}>Property <code class="doc-token"${e}>rules</code> helpers: `),l(n(r,{to:"https://github.com/quasarframework/quasar/blob/dev/ui/src/utils/patterns.js"},{default:d((c,s,m,f)=>{if(s)s("full list");else return[o("full list")]}),_:1},i,e)),l(`.</li></ul><p${e}>Examples: “date”, “time”, “fulltime”.</p><p${e}>More info: `),l(n(r,{to:"/vue-components/input"},{default:d((c,s,m,f)=>{if(s)s("QInput");else return[o("QInput")]}),_:1},i,e)),l(`.</p><h3 id="persian-calendar" class="doc-heading doc-h3"${e}>Persian calendar</h3><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>You can couple this with a Quasar `),l(n(r,{to:"/options/quasar-language-packs"},{default:d((c,s,m,f)=>{if(s)s("language pack");else return[o("language pack")]}),_:1},i,e)),l(` such as Persian (Farsi, <code class="doc-token"${e}>fa-ir</code>) to have the QDate strings translated too, for the full experience.</p></div><div class="doc-note doc-note--warning"${e}><p class="doc-note__title"${e}>WARNING</p><p${e}>When using the persian calendar, the mask for QDate is forced to <code class="doc-token"${e}>YYYY/MM/DD</code>.</p></div>`),l(n(w,{href:"https://codepen.io/rstoenescu/pen/MWKpbNa",target:"_blank",label:"See example","icon-right":"launch",rel:"noopener noreferrer"},null,i,e)),l(`<h3 id="native-form-submit" class="doc-heading doc-h3"${e}>Native form submit</h3><p${e}>When dealing with a native form which has an <code class="doc-token"${e}>action</code> and a <code class="doc-token"${e}>method</code> (eg. when using Quasar with ASP.NET controllers), you need to specify the <code class="doc-token"${e}>name</code> property on QDate, otherwise formData will not contain it (if it should):</p>`),l(n(a,{title:"Native form",file:"NativeForm"},null,i,e));else return[t("p",null,"The QDate component provides a method to input date. Currently it supports Gregorian (default) and Persian calendars."),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,[o("For handling date and/or time, also check out "),t(r,{to:"/quasar-utils/date-utils"},{default:d(()=>[o("Quasar Date Utils")]),_:1}),o(".")])]),t(b,{file:"QDate"}),t("h2",{id:"usage",class:"doc-heading doc-h2",onClick:c=>u(h)("usage")},"Usage",8,["onClick"]),t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"WARNING"),t("p",null,"Notice that the actual date(s) of the model are all in String format.")]),t("h3",{id:"basic",class:"doc-heading doc-h3",onClick:c=>u(h)("basic")},"Basic",8,["onClick"]),t(a,{title:"Basic",file:"Basic",overflow:""}),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,[o("For landscape mode, you can use it along with "),t("code",{class:"doc-token"},"$q.screen"),o(" to make QDate responsive. Example: "),t("code",{class:"doc-token"},':landscape="$q.screen.gt.xs"'),o(". More info: "),t(r,{to:"/options/screen-plugin"},{default:d(()=>[o("Quasar Screen Plugin")]),_:1}),o(".")])]),t(a,{title:"Landscape",file:"Landscape",overflow:""}),t("h3",{id:"multiple-selection",class:"doc-heading doc-h3",onClick:c=>u(h)("multiple-selection")},"Multiple selection",8,["onClick"]),t("p",null,"Notice below that the model is an Array and we specify the “multiple” prop."),t("p",null,"Clicking on an already selected day will deselect it."),t(a,{title:"Multiple days",file:"SelectionMultiple",overflow:""}),t("h3",{id:"range-selection",class:"doc-heading doc-h3",onClick:c=>u(h)("range-selection")},"Range selection",8,["onClick"]),t("p",null,"Notice in the examples below that the model is an Object (single selection) or an Array of Objects (multiple selection)."),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIPS"),t("ul",null,[t("li",null,"Clicking on an already selected day will deselect it."),t("li",null,[o("The user’s current editing range can also be set programmatic through the "),t("code",{class:"doc-token"},"setEditingRange"),o(" method (check the API card).")]),t("li",null,[o("There are two useful events in regards to the current editing range: "),t("code",{class:"doc-token"},"range-start"),o(" and "),t("code",{class:"doc-token"},"range-end"),o(" (check the API card).")])])]),t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"WARNING"),t("p",null,[o("The "),t("code",{class:"doc-token"},"range"),o(" property is only partially compatible with the "),t("code",{class:"doc-token"},"options"),o(" prop: selected ranges might also include “unselectable” days.")])]),t(a,{title:"Single Range",file:"SelectionRange",overflow:""}),t(a,{title:"Multiple ranges",file:"SelectionRangeMultiple",overflow:""}),t("h3",{id:"custom-title-and-subtitle",class:"doc-heading doc-h3",onClick:c=>u(h)("custom-title-and-subtitle")},"Custom title and subtitle",8,["onClick"]),t("p",null,"When not in ‘minimal’ mode, QDate has a computed header title and subtitle. You can override it, like in the example below."),t("p",null,"When clicking on title then the QDate’s view is changed to the calendar and when clicking on subtitle, the view will switch to year picking."),t(a,{title:"Custom title and subtitle",file:"CustomTitleSubtitle",overflow:""}),t("h3",{id:"functionality",class:"doc-heading doc-h3",onClick:c=>u(h)("functionality")},"Functionality",8,["onClick"]),t("p",null,[o("When model is unfilled (like "),t("code",{class:"doc-token"},"null"),o(", "),t("code",{class:"doc-token"},"void 0"),o(" / "),t("code",{class:"doc-token"},"undefined"),o(") QDate still has to show the calendar for a month of a year. You can use "),t("code",{class:"doc-token"},"default-year-month"),o(" prop for this, otherwise the current month of the year will be shown:")]),t(a,{title:"Default year month",file:"DefaultYearMonth",overflow:""}),t("p",null,"The default view can be changed."),t(a,{title:"Default view",file:"DefaultView",overflow:""}),t("p",null,[o("The first day of the week is applied depending on the "),t(r,{to:"/options/quasar-language-packs"},{default:d(()=>[o("Quasar Language Pack")]),_:1}),o(" that you’ve set, but you can also force it, like in the example below.")]),t(a,{title:"First day of week",file:"FirstDayOfWeek",overflow:""}),t("p",null,"Clicking on the “Today” button sets date to current user date. Requires the header, so you can’t use it along with “minimal” mode:"),t(a,{title:"Today button",file:"TodayBtn",overflow:""}),t(a,{title:"Disable and readonly",file:"DisableReadonly",overflow:""}),t("h3",{id:"model-mask",class:"doc-heading doc-h3",onClick:c=>u(h)("model-mask")},"Model mask",8,["onClick"]),t("p",null,[o("The default model mask is "),t("code",{class:"doc-token"},"YYYY/MM/DD"),o(", however you can use custom ones too.")]),t("p",null,[o("The "),t("code",{class:"doc-token"},"mask"),o(" prop tokens can be found at "),t(r,{to:"/quasar-utils/date-utils#format-for-display"},{default:d(()=>[o("Quasar Utils > Date utils")]),_:1}),o(".")]),t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"Note on SSR"),t("p",null,[o("Using "),t("code",{class:"doc-token"},"x"),o(" or "),t("code",{class:"doc-token"},"X"),o(" (timestamps) in the mask may cause hydration errors on the client, because decoding the model String must be done with "),t("code",{class:"doc-token"},"new Date()"),o(" which takes into account the local timezone. As a result, if the server is in a different timezone than the client, then the rendered output of the server will differ than the one on the client so hydration will fail.")])]),t("div",{class:"doc-note doc-note--danger"},[t("p",{class:"doc-note__title"},"Note on persian calendar"),t("p",null,[o("When using the persian calendar, the mask for QDate is forced to "),t("code",{class:"doc-token"},"YYYY/MM/DD"),o(".")])]),t(a,{title:"Simple mask",file:"MaskSimple",overflow:""}),t("p",null,[o("If you want to insert strings (including "),t("code",{class:"doc-token"},"["),o(" and "),t("code",{class:"doc-token"},"]"),o(" characters) into your mask, make sure you escape them by surrounding them with "),t("code",{class:"doc-token"},"["),o(" and "),t("code",{class:"doc-token"},"]"),o(", otherwise the characters might be interpreted as format tokens.")]),t(a,{title:"Mask with escaped characters",file:"MaskEscape",overflow:""}),t("p",null,[o("Using the mask to connect a QDate and "),t(r,{to:"/vue-components/time"},{default:d(()=>[o("QTime")]),_:1}),o(" to the same model:")]),t(a,{title:"QDate and QTime on same model",file:"MaskDateTime",overflow:""}),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,[o("If you want to programmatically set the value of QDate, you can do so by just re-assigning the value that you pass. However, the updated value needs to be a string in the same format as your mask. Eg. in the case your mask is "),t("code",{class:"doc-token"},"'dddd, MMM D, YYYY'"),o(", passing "),t("code",{class:"doc-token"},"'2019/04/28'"),o(" as value won’t work, you would need to pass "),t("code",{class:"doc-token"},"'Sunday, Apr 28, 2019'"),o(" instead.")])]),t("h3",{id:"custom-ad-hoc-locale",class:"doc-heading doc-h3",onClick:c=>u(h)("custom-ad-hoc-locale")},"Custom ad-hoc locale",8,["onClick"]),t("p",null,[o("If, for some reason, you need to use a custom ad-hoc locale rather than the current Quasar Language Pack that has been set, you can use the "),t("code",{class:"doc-token"},"locale"),o(" prop:")]),t(a,{title:"Custom ad-hoc locale",file:"CustomLocale",overflow:""}),t("h3",{id:"coloring",class:"doc-heading doc-h3",onClick:c=>u(h)("coloring")},"Coloring",8,["onClick"]),t(a,{title:"Coloring",file:"Color",overflow:""}),t(a,{title:"Force dark mode",file:"Dark",overflow:""}),t("h3",{id:"highlighting-events",class:"doc-heading doc-h3",onClick:c=>u(h)("highlighting-events")},"Highlighting events",8,["onClick"]),t("p",null,"The first example is using an array and the second example is using a function."),t(a,{title:"Events",file:"Events",overflow:""}),t(a,{title:"Event color",file:"EventColor",overflow:""}),t("h3",{id:"limiting-options",class:"doc-heading doc-h3",onClick:c=>u(h)("limiting-options")},"Limiting options",8,["onClick"]),t("ul",null,[t("li",null,[o("You can use the "),t("code",{class:"doc-token"},"options"),o(" prop to limit user selection to certain times.")]),t("li",null,[o("Alternatively, for a more in-depth way of limiting options, you can also supply a function (second and third example below) to "),t("code",{class:"doc-token"},"options-fn"),o(" prop.")])]),t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"WARNING"),t("p",null,[o("The "),t("code",{class:"doc-token"},"options"),o(" property is only partially compatible with the "),t("code",{class:"doc-token"},"range"),o(" prop. Ranges might contain “unselectable” days.")])]),t(a,{title:"Options",file:"Options",overflow:""}),t("h3",{id:"applying-navigation-boundaries",class:"doc-heading doc-h3",onClick:c=>u(h)("applying-navigation-boundaries")},"Applying navigation boundaries",8,["onClick"]),t("p",null,"In the example below the navigation is restricted between 2020/07 and 2020/09."),t(a,{title:"Navigation boundaries",file:"NavigationBoundaries",overflow:""}),t("h3",{id:"with-additional-buttons",class:"doc-heading doc-h3",onClick:c=>u(h)("with-additional-buttons")},"With additional buttons",8,["onClick"]),t("p",null,"You can use the default slot for adding buttons:"),t(a,{title:"With additional buttons",file:"AdditionalButtons",overflow:""}),t("h3",{id:"with-qsplitter-and-qtabpanels",class:"doc-heading doc-h3",onClick:c=>u(h)("with-qsplitter-and-qtabpanels")},"With QSplitter and QTabPanels",8,["onClick"]),t(a,{title:"With QSplitter and QTabPanels",file:"Splitter"}),t("p",null,[o("More info: "),t(r,{to:"/vue-components/splitter"},{default:d(()=>[o("QSplitter")]),_:1}),o(", "),t(r,{to:"/vue-components/tab-panels"},{default:d(()=>[o("QTabPanels")]),_:1}),o(".")]),t("h3",{id:"with-qinput",class:"doc-heading doc-h3",onClick:c=>u(h)("with-qinput")},"With QInput",8,["onClick"]),t(a,{title:"With QInput",file:"Input"}),t("p",null,"Connecting a QDate and QTime with same model on a QInput:"),t(a,{title:"QDate and QTime with QInput",file:"InputFull",overflow:""}),t("p",null,[o("The following are "),t("strong",null,"helpers"),o(" for QInput "),t("code",{class:"doc-token"},"mask"),o(" and "),t("code",{class:"doc-token"},"rules"),o(" props. You can use these for convenience or write the string specifying your "),t(r,{to:"/vue-components/input#mask"},{default:d(()=>[o("custom needs")]),_:1}),o(".")]),t("ul",null,[t("li",null,[o("Property "),t("code",{class:"doc-token"},"mask"),o(" helpers: "),t(r,{to:"https://github.com/quasarframework/quasar/blob/dev/ui/src/components/input/use-mask.js#L6"},{default:d(()=>[o("full list")]),_:1}),o(".")]),t("li",null,[o("Property "),t("code",{class:"doc-token"},"rules"),o(" helpers: "),t(r,{to:"https://github.com/quasarframework/quasar/blob/dev/ui/src/utils/patterns.js"},{default:d(()=>[o("full list")]),_:1}),o(".")])]),t("p",null,"Examples: “date”, “time”, “fulltime”."),t("p",null,[o("More info: "),t(r,{to:"/vue-components/input"},{default:d(()=>[o("QInput")]),_:1}),o(".")]),t("h3",{id:"persian-calendar",class:"doc-heading doc-h3",onClick:c=>u(h)("persian-calendar")},"Persian calendar",8,["onClick"]),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIP"),t("p",null,[o("You can couple this with a Quasar "),t(r,{to:"/options/quasar-language-packs"},{default:d(()=>[o("language pack")]),_:1}),o(" such as Persian (Farsi, "),t("code",{class:"doc-token"},"fa-ir"),o(") to have the QDate strings translated too, for the full experience.")])]),t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"WARNING"),t("p",null,[o("When using the persian calendar, the mask for QDate is forced to "),t("code",{class:"doc-token"},"YYYY/MM/DD"),o(".")])]),t(w,{href:"https://codepen.io/rstoenescu/pen/MWKpbNa",target:"_blank",label:"See example","icon-right":"launch",rel:"noopener noreferrer"}),t("h3",{id:"native-form-submit",class:"doc-heading doc-h3",onClick:c=>u(h)("native-form-submit")},"Native form submit",8,["onClick"]),t("p",null,[o("When dealing with a native form which has an "),t("code",{class:"doc-token"},"action"),o(" and a "),t("code",{class:"doc-token"},"method"),o(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),t("code",{class:"doc-token"},"name"),o(" property on QDate, otherwise formData will not contain it (if it should):")]),t(a,{title:"Native form",file:"NativeForm"})]}),_:1},Q))}}},y=k.setup;k.setup=(v,p)=>{const g=P();return(g.modules||(g.modules=new Set)).add("src/pages/vue-components/date.md"),y?y(v,p):void 0};const _=Y(k,[["__file","date.md"]]);export{_ as default};
