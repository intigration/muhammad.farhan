import{provide as k,mergeProps as $,withCtx as v,createVNode as i,createTextVNode as t,unref as a,useSSRContext as T}from"vue";import{ssrRenderComponent as s}from"vue/server-renderer";import{c as d}from"./page-utils-C-QWsEHe.js";import{D as w}from"./DocPage-DKr-0pQn.js";import{D as n}from"./DocExample-BcaABDtE.js";import{D as r}from"./DocApi-Df9ryd6x.js";import{_ as Q}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const g={__name:"timeline",__ssrInlineRender:!0,setup(m){k("_q_ex",{name:"QTimeline"});const h=[{id:"qtimeline-api",title:"2. QTimeline API",deep:!0},{id:"qtimelineentry-api",title:"3. QTimelineEntry API",deep:!0},{id:"usage",title:"4. Usage"},{id:"basic",title:"4.1. Basic",sub:!0},{id:"using-props-only",title:"4.2. Using props only",sub:!0},{id:"using-slots-only",title:"4.3. Using slots only",sub:!0},{id:"dark-design",title:"4.4. Dark design",sub:!0},{id:"layouts-and-side-selection",title:"4.5. Layouts and side selection",sub:!0},{id:"responsive",title:"4.6. Responsive",sub:!0}];return(u,p,f,b)=>{p(s(w,$({title:"Timeline",desc:"The QTimeline Vue component displays a list of events in chronological order. It is typically a graphic design showing a long bar labelled with dates alongside itself and usually events.",heading:"","edit-link":"vue-components/timeline",toc:h},b),{default:v((C,l,o,e)=>{if(l)l(`<p${e}>The QTimeline component displays a list of events in chronological order. It is typically a graphic design showing a long bar labelled with dates alongside itself and usually events. Timelines can use any time scale, depending on the subject and data.</p><p${e}>QTimeline has 3 layouts:</p><ul${e}><li${e}><code class="doc-token"${e}>dense</code> (default) is showing headings, titles, subtitles and content on the <strong${e}>timeline-specified side</strong> of the time line (default on right)</li><li${e}><code class="doc-token"${e}>comfortable</code> is showing headings, titles and content on the <strong${e}>timeline-specified side</strong> of the time line (default on right) and the subtitles on the other side</li><li${e}><code class="doc-token"${e}>loose</code> is showing headings on center, titles and content on the <strong${e}>entry-specified side</strong> of the time line (default on right) and the subtitles on the other side</li></ul>`),l(s(r,{file:"QTimeline"},null,o,e)),l(s(r,{file:"QTimelineEntry"},null,o,e)),l(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><h3 id="basic" class="doc-heading doc-h3"${e}>Basic</h3>`),l(s(n,{title:"Basic",file:"Basic",scrollable:""},null,o,e)),l(`<h3 id="using-props-only" class="doc-heading doc-h3"${e}>Using props only</h3><p${e}>Below is the same example, but using QTimelineEntry properties only instead of the default slot:</p>`),l(s(n,{title:"Props only",file:"PropsOnly",scrollable:""},null,o,e)),l(`<h3 id="using-slots-only" class="doc-heading doc-h3"${e}>Using slots only</h3><p${e}>Below is again the same example, but using only QTimelineEntry slots:</p>`),l(s(n,{title:"Slots only",file:"SlotsOnly",scrollable:""},null,o,e)),l(`<h3 id="dark-design" class="doc-heading doc-h3"${e}>Dark design</h3>`),l(s(n,{title:"Force dark mode",file:"Dark",scrollable:""},null,o,e)),l(`<h3 id="layouts-and-side-selection" class="doc-heading doc-h3"${e}>Layouts and side selection</h3><div class="doc-note doc-note--warning"${e}><p class="doc-note__title"${e}>WARNING</p><p${e}>QTimelineEntry only takes into account its <code class="doc-token"${e}>side</code> prop if QTimeline has the <code class="doc-token"${e}>loose</code> layout.</p></div>`),l(s(n,{title:"Layouts and side selection",file:"Layouts",scrollable:""},null,o,e)),l(`<h3 id="responsive" class="doc-heading doc-h3"${e}>Responsive</h3><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIP</p><p${e}>The examples below uses <code class="doc-token"${e}>$q.screen</code> to detect changes in window size to see all 3 layouts in action.</p></div>`),l(s(n,{title:"Responsive layout",file:"Responsive",scrollable:""},null,o,e));else return[i("p",null,"The QTimeline component displays a list of events in chronological order. It is typically a graphic design showing a long bar labelled with dates alongside itself and usually events. Timelines can use any time scale, depending on the subject and data."),i("p",null,"QTimeline has 3 layouts:"),i("ul",null,[i("li",null,[i("code",{class:"doc-token"},"dense"),t(" (default) is showing headings, titles, subtitles and content on the "),i("strong",null,"timeline-specified side"),t(" of the time line (default on right)")]),i("li",null,[i("code",{class:"doc-token"},"comfortable"),t(" is showing headings, titles and content on the "),i("strong",null,"timeline-specified side"),t(" of the time line (default on right) and the subtitles on the other side")]),i("li",null,[i("code",{class:"doc-token"},"loose"),t(" is showing headings on center, titles and content on the "),i("strong",null,"entry-specified side"),t(" of the time line (default on right) and the subtitles on the other side")])]),i(r,{file:"QTimeline"}),i(r,{file:"QTimelineEntry"}),i("h2",{id:"usage",class:"doc-heading doc-h2",onClick:c=>a(d)("usage")},"Usage",8,["onClick"]),i("h3",{id:"basic",class:"doc-heading doc-h3",onClick:c=>a(d)("basic")},"Basic",8,["onClick"]),i(n,{title:"Basic",file:"Basic",scrollable:""}),i("h3",{id:"using-props-only",class:"doc-heading doc-h3",onClick:c=>a(d)("using-props-only")},"Using props only",8,["onClick"]),i("p",null,"Below is the same example, but using QTimelineEntry properties only instead of the default slot:"),i(n,{title:"Props only",file:"PropsOnly",scrollable:""}),i("h3",{id:"using-slots-only",class:"doc-heading doc-h3",onClick:c=>a(d)("using-slots-only")},"Using slots only",8,["onClick"]),i("p",null,"Below is again the same example, but using only QTimelineEntry slots:"),i(n,{title:"Slots only",file:"SlotsOnly",scrollable:""}),i("h3",{id:"dark-design",class:"doc-heading doc-h3",onClick:c=>a(d)("dark-design")},"Dark design",8,["onClick"]),i(n,{title:"Force dark mode",file:"Dark",scrollable:""}),i("h3",{id:"layouts-and-side-selection",class:"doc-heading doc-h3",onClick:c=>a(d)("layouts-and-side-selection")},"Layouts and side selection",8,["onClick"]),i("div",{class:"doc-note doc-note--warning"},[i("p",{class:"doc-note__title"},"WARNING"),i("p",null,[t("QTimelineEntry only takes into account its "),i("code",{class:"doc-token"},"side"),t(" prop if QTimeline has the "),i("code",{class:"doc-token"},"loose"),t(" layout.")])]),i(n,{title:"Layouts and side selection",file:"Layouts",scrollable:""}),i("h3",{id:"responsive",class:"doc-heading doc-h3",onClick:c=>a(d)("responsive")},"Responsive",8,["onClick"]),i("div",{class:"doc-note doc-note--tip"},[i("p",{class:"doc-note__title"},"TIP"),i("p",null,[t("The examples below uses "),i("code",{class:"doc-token"},"$q.screen"),t(" to detect changes in window size to see all 3 layouts in action.")])]),i(n,{title:"Responsive layout",file:"Responsive",scrollable:""})]}),_:1},f))}}},y=g.setup;g.setup=(m,h)=>{const u=T();return(u.modules||(u.modules=new Set)).add("src/pages/vue-components/timeline.md"),y?y(m,h):void 0};const J=Q(g,[["__file","timeline.md"]]);export{J as default};
