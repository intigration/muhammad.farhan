import{provide as x,mergeProps as D,withCtx as u,unref as l,createVNode as n,createTextVNode as t,useSSRContext as P}from"vue";import{ssrRenderComponent as i}from"vue/server-renderer";import{c as g}from"./page-utils-C-QWsEHe.js";import{D as W,a as $}from"./DocPage-DKr-0pQn.js";import{D as c}from"./DocExample-BcaABDtE.js";import{D as b}from"./DocApi-Df9ryd6x.js";import{D as v}from"./DocInstallation-DgMazQjg.js";import{D as y}from"./DocPrerender-DPOnWPFO.js";import{C as k}from"./CopyButton-l3ndfN49.js";import{_ as B}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const d={__name:"notify",__ssrInlineRender:!0,setup(w){x("_q_ex",{name:"Notify"});const h=[{id:"notify-api",title:"2. Notify API",deep:!0},{id:"installation",title:"3. Installation",deep:!0},{id:"usage",title:"4. Usage"},{id:"basic",title:"4.1. Basic",sub:!0},{id:"with-caption",title:"4.2. With caption",sub:!0},{id:"with-icon-avatar-or-spinner",title:"4.3. With icon, avatar or spinner",sub:!0},{id:"with-actions",title:"4.4. With actions",sub:!0},{id:"multiline",title:"4.5. Multiline",sub:!0},{id:"positioning",title:"4.6. Positioning",sub:!0},{id:"grouping",title:"4.7. Grouping",sub:!0},{id:"timeout-progress",title:"4.8. Timeout progress",sub:!0},{id:"updatable-notifications",title:"4.9. Updatable notifications",sub:!0},{id:"predefined-types",title:"4.10. Predefined types",sub:!0},{id:"using-html",title:"4.11. Using HTML",sub:!0},{id:"setting-attributes",title:"4.12. Setting attributes",sub:!0},{id:"programmatically-closing",title:"4.13. Programmatically closing",sub:!0},{id:"setting-defaults",title:"4.14. Setting defaults",sub:!0}];return(m,C,T,N)=>{C(i(W,D({title:"Notify",desc:"A Quasar plugin to display animated messages to users like notifications, toasts and snackbars.",heading:"","edit-link":"quasar-plugins/notify",toc:h},N),{default:u((Q,o,p,s)=>{if(o)o(`<p${s}>Notify is a Quasar plugin that can display animated messages (floating above everything in your pages) to users in the form of a notification. They are useful for alerting the user of an event and can even engage the user through actions. Also known as a toast or snackbar.</p>`),o(i(b,{file:"Notify"},null,p,s)),o(i(v,{plugins:"Notify",config:"notify"},null,p,s)),o(`<h2 id="usage" class="doc-heading doc-h2"${s}>Usage</h2><h3 id="basic" class="doc-heading doc-h3"${s}>Basic</h3>`),o(i(l(y),{title:"Outside of a Vue file"},{default:u((r,e,f,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>import</span> <span class="token punctuation"${a}>{</span> Notify <span class="token punctuation"${a}>}</span> <span class="token keyword"${a}>from</span> <span class="token string"${a}>&#39;quasar&#39;</span>

Notify<span class="token punctuation"${a}>.</span><span class="token function"${a}>create</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;Danger, Will Robinson! Danger!&#39;</span><span class="token punctuation"${a}>)</span>
<span class="token comment"${a}>// or with a config object:</span>
Notify<span class="token punctuation"${a}>.</span><span class="token function"${a}>create</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>message</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;Danger, Will Robinson! Danger!&#39;</span>
<span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span></code></pre>`),e(i(k,null,null,f,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),t(),n("span",{class:"token punctuation"},"{"),t(" Notify "),n("span",{class:"token punctuation"},"}"),t(),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'quasar'"),t(`

Notify`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"create"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Danger, Will Robinson! Danger!'"),n("span",{class:"token punctuation"},")"),t(`
`),n("span",{class:"token comment"},"// or with a config object:"),t(`
Notify`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"create"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"message"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'Danger, Will Robinson! Danger!'"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(k)]}),_:1},p,s)),o(i(l(y),{title:"Inside of a Vue file"},{default:u((r,e,f,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>import</span> <span class="token punctuation"${a}>{</span> useQuasar <span class="token punctuation"${a}>}</span> <span class="token keyword"${a}>from</span> <span class="token string"${a}>&#39;quasar&#39;</span>

<span class="token function"${a}>setup</span> <span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
  <span class="token keyword"${a}>const</span> $q <span class="token operator"${a}>=</span> <span class="token function"${a}>useQuasar</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span>

  $q<span class="token punctuation"${a}>.</span><span class="token function"${a}>notify</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;Message&#39;</span><span class="token punctuation"${a}>)</span>
  <span class="token comment"${a}>// or with a config object:</span>
  $q<span class="token punctuation"${a}>.</span><span class="token function"${a}>notify</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>{</span><span class="token operator"${a}>...</span><span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(i(k,null,null,f,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),t(),n("span",{class:"token punctuation"},"{"),t(" useQuasar "),n("span",{class:"token punctuation"},"}"),t(),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'quasar'"),t(`

`),n("span",{class:"token function"},"setup"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token keyword"},"const"),t(" $q "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(`

  $q`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"notify"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Message'"),n("span",{class:"token punctuation"},")"),t(`
  `),n("span",{class:"token comment"},"// or with a config object:"),t(`
  $q`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"notify"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token operator"},"..."),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(k)]}),_:1},p,s)),o(i(c,{title:"Basic",file:"Basic"},null,p,s)),o(`<div class="doc-note doc-note--tip"${s}><p class="doc-note__title"${s}>TIP</p><p${s}>If you define any actions, the notification will automatically be dismissed when the user picks it.</p></div><h3 id="with-caption" class="doc-heading doc-h3"${s}>With caption</h3>`),o(i(c,{title:"Caption",file:"Caption"},null,p,s)),o(`<h3 id="with-icon-avatar-or-spinner" class="doc-heading doc-h3"${s}>With icon, avatar or spinner</h3>`),o(i(c,{title:"With icon",file:"Icon"},null,p,s)),o(i(c,{title:"With avatar",file:"Avatar"},null,p,s)),o(i(c,{title:"With spinner",file:"Spinner"},null,p,s)),o(`<h3 id="with-actions" class="doc-heading doc-h3"${s}>With actions</h3>`),o(i(c,{title:"With actions",file:"Actions"},null,p,s)),o(`<h3 id="multiline" class="doc-heading doc-h3"${s}>Multiline</h3>`),o(i(c,{title:"Multiline",file:"Multiline"},null,p,s)),o(`<h3 id="positioning" class="doc-heading doc-h3"${s}>Positioning</h3>`),o(i(c,{title:"Positioning & different options",file:"Positioning"},null,p,s)),o(`<div class="doc-note doc-note--tip"${s}><p class="doc-note__title"${s}>TIP</p><p${s}>For a full list of options, check the API section.</p></div><h3 id="grouping" class="doc-heading doc-h3"${s}>Grouping</h3><p${s}>Each notification has an underlying unique group which is computed out of the message + caption + multiLine + actions labels + position. When multiple notifications get triggered with the same group, instead of showing all of them and flooding the view, only the first one remains on screen along with a badge. The badge content represents the number of times that the same notification has been triggered (and with same position) since the first one appeared on screen.</p><p${s}>However, if you wish to disable this behavior, specify <code class="doc-token"${s}>group: false</code>. In the example below, the first button triggers the same notification twice each time is clicked. The second button has grouping disabled. The third button, however, has a custom group name so each subsequent notification replaces the old one and increments the badge number.</p>`),o(i(c,{title:"Grouping",file:"Grouping"},null,p,s)),o(i(c,{title:"Custom badge",file:"GroupingCustomBadge"},null,p,s)),o(`<h3 id="timeout-progress" class="doc-heading doc-h3"${s}>Timeout progress</h3><p${s}>Should you wish, there is a way to tell the user when the notification will disappear from the screen. That’s for the cases when timeout is not set to 0.</p>`),o(i(c,{title:"Timeout progress",file:"TimeoutProgress"},null,p,s)),o(`<h3 id="updatable-notifications" class="doc-heading doc-h3"${s}>Updatable notifications</h3><p${s}>Should you have an ongoing process and you want to inform the user of its progress without blocking what he is currently doing, then you can generate an updatable notification. It’s useful to also show a spinner while at it.</p><p${s}>Please note in the example below that we are explicitly setting “group: false” (because only non-grouped notifications can be updated) and “timeout: 0” (because we want to be in full control when the notification will be dismissed).</p>`),o(i(c,{title:"Updatable",file:"Updatable"},null,p,s)),o(`<h3 id="predefined-types" class="doc-heading doc-h3"${s}>Predefined types</h3><p${s}>There are four predefined types out of the box that you can use: “positive”, “negative”, “warning” and “info”:</p>`),o(i(c,{title:"Out of the box types",file:"PredefinedTypesDefault"},null,p,s)),o(`<p${s}>Furthermore, you can register your own types or even override the predefined ones. The best place to do this would be in a `),o(i($,{to:"/quasar-cli-vite/boot-files"},{default:u((r,e,f,a)=>{if(e)e("@quasar/app-vite Boot File");else return[t("@quasar/app-vite Boot File")]}),_:1},p,s)),o(" or a "),o(i($,{to:"/quasar-cli-webpack/boot-files"},{default:u((r,e,f,a)=>{if(e)e("@quasar/app-webpack Boot File");else return[t("@quasar/app-webpack Boot File")]}),_:1},p,s)),o(".</p>"),o(i(c,{title:"Custom type",file:"PredefinedTypesCustom"},null,p,s)),o(i(l(y),{title:"How to register in a boot file:"},{default:u((r,e,f,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>import</span> <span class="token punctuation"${a}>{</span> Notify <span class="token punctuation"${a}>}</span> <span class="token keyword"${a}>from</span> <span class="token string"${a}>&#39;quasar&#39;</span>

Notify<span class="token punctuation"${a}>.</span><span class="token function"${a}>registerType</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;my-notif&#39;</span><span class="token punctuation"${a}>,</span> <span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>icon</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;announcement&#39;</span><span class="token punctuation"${a}>,</span>
  <span class="token literal-property property"${a}>progress</span><span class="token operator"${a}>:</span> <span class="token boolean"${a}>true</span><span class="token punctuation"${a}>,</span>
  <span class="token literal-property property"${a}>color</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;brown&#39;</span><span class="token punctuation"${a}>,</span>
  <span class="token literal-property property"${a}>textColor</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;white&#39;</span><span class="token punctuation"${a}>,</span>
  <span class="token literal-property property"${a}>classes</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;glossy&#39;</span>
<span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span></code></pre>`),e(i(k,null,null,f,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),t(),n("span",{class:"token punctuation"},"{"),t(" Notify "),n("span",{class:"token punctuation"},"}"),t(),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'quasar'"),t(`

Notify`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"registerType"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'my-notif'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"icon"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'announcement'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"progress"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"color"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'brown'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"textColor"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'white'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"classes"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'glossy'"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(k)]}),_:1},p,s)),o(`<h3 id="using-html" class="doc-heading doc-h3"${s}>Using HTML</h3><p${s}>You can use HTML on message if you specify the <code class="doc-token"${s}>html: true</code> prop. <strong${s}>Please note that this can lead to XSS attacks</strong>, so make sure that you sanitize the message by yourself.</p>`),o(i(c,{title:"Unsafe HTML message",file:"UnsafeHtml"},null,p,s)),o(`<h3 id="setting-attributes" class="doc-heading doc-h3"${s}>Setting attributes</h3><p${s}>You can set custom HTML attributes on the notification itself by setting the <code class="doc-token"${s}>attrs</code> Object property. For individual notification actions, you can directly pass them just like any other prop.</p>`),o(i(l(y),null,{default:u((r,e,f,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>import</span> <span class="token punctuation"${a}>{</span> useQuasar <span class="token punctuation"${a}>}</span> <span class="token keyword"${a}>from</span> <span class="token string"${a}>&#39;quasar&#39;</span>

<span class="token function"${a}>setup</span> <span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
  <span class="token keyword"${a}>const</span> $q <span class="token operator"${a}>=</span> <span class="token function"${a}>useQuasar</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span>

  $q<span class="token punctuation"${a}>.</span><span class="token function"${a}>notify</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>{</span>
    <span class="token comment"${a}>// ...</span>

    <span class="token literal-property property"${a}>attrs</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
      <span class="token comment"${a}>// for the notification itself:</span>
      <span class="token literal-property property"${a}>role</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;alertdialog&#39;</span>
    <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>,</span>

    <span class="token literal-property property"${a}>actions</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>[</span>
      <span class="token punctuation"${a}>{</span>
        <span class="token literal-property property"${a}>icon</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;close&#39;</span><span class="token punctuation"${a}>,</span>
        <span class="token comment"${a}>// for individual action (button):</span>
        <span class="token string-property property"${a}>&#39;aria-label&#39;</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;Dismiss&#39;</span>
      <span class="token punctuation"${a}>}</span>
    <span class="token punctuation"${a}>]</span>
  <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(i(k,null,null,f,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),t(),n("span",{class:"token punctuation"},"{"),t(" useQuasar "),n("span",{class:"token punctuation"},"}"),t(),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'quasar'"),t(`

`),n("span",{class:"token function"},"setup"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token keyword"},"const"),t(" $q "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(`

  $q`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"notify"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token comment"},"// ..."),t(`

    `),n("span",{class:"token literal-property property"},"attrs"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
      `),n("span",{class:"token comment"},"// for the notification itself:"),t(`
      `),n("span",{class:"token literal-property property"},"role"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'alertdialog'"),t(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`

    `),n("span",{class:"token literal-property property"},"actions"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(`
      `),n("span",{class:"token punctuation"},"{"),t(`
        `),n("span",{class:"token literal-property property"},"icon"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'close'"),n("span",{class:"token punctuation"},","),t(`
        `),n("span",{class:"token comment"},"// for individual action (button):"),t(`
        `),n("span",{class:"token string-property property"},"'aria-label'"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'Dismiss'"),t(`
      `),n("span",{class:"token punctuation"},"}"),t(`
    `),n("span",{class:"token punctuation"},"]"),t(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(k)]}),_:1},p,s)),o(`<h3 id="programmatically-closing" class="doc-heading doc-h3"${s}>Programmatically closing</h3><p${s}>Notifications are meant to be dismissed only by the user, however for exceptional cases you can do it programmatically. Especially useful when you set indefinite timeout (0).</p>`),o(i(l(y),null,{default:u((r,e,f,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>const</span> dismiss <span class="token operator"${a}>=</span> $q<span class="token punctuation"${a}>.</span><span class="token function"${a}>notify</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>{</span><span class="token operator"${a}>...</span><span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span>
<span class="token operator"${a}>...</span>
<span class="token function"${a}>dismiss</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span></code></pre>`),e(i(k,null,null,f,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"const"),t(" dismiss "),n("span",{class:"token operator"},"="),t(" $q"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"notify"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token operator"},"..."),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(`
`),n("span",{class:"token operator"},"..."),t(`
`),n("span",{class:"token function"},"dismiss"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")])]),n(k)]}),_:1},p,s)),o(`<h3 id="setting-defaults" class="doc-heading doc-h3"${s}>Setting defaults</h3><p${s}>There are two ways of setting default configuration that will apply to all Notifications: through quasar.config file &gt; framework &gt; config &gt; notify Object (see Installation section) or programmatically (see below).</p><p${s}>We’ll describe setting the defaults through a `),o(i($,{to:"/quasar-cli-vite/boot-files"},{default:u((r,e,f,a)=>{if(e)e("@quasar/app-vite Boot File");else return[t("@quasar/app-vite Boot File")]}),_:1},p,s)),o(" or a "),o(i($,{to:"/quasar-cli-webpack/boot-files"},{default:u((r,e,f,a)=>{if(e)e("@quasar/app-webpack Boot File");else return[t("@quasar/app-webpack Boot File")]}),_:1},p,s)),o(` (works the same anywhere in your code, but a boot file ensures this is run before your app starts):</p><p${s}>First we create the boot file. Let’s name it “notify-defaults.js”.</p>`),o(i(l(y),null,{default:u((r,e,f,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}>$ quasar new boot notify-defaults <span class="token punctuation"${a}>[</span>--format ts<span class="token punctuation"${a}>]</span></code></pre>`),e(i(k,{lang:"bash"},null,f,a));else return[n("pre",{class:"doc-code"},[n("code",null,[t("$ quasar new boot notify-defaults "),n("span",{class:"token punctuation"},"["),t("--format ts"),n("span",{class:"token punctuation"},"]")])]),n(k,{lang:"bash"})]}),_:1},p,s)),o(`<p${s}>Add the created notify-defaults.js file to the boot array in the <code class="doc-token"${s}>/quasar.config</code> file:</p>`),o(i(l(y),null,{default:u((r,e,f,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}>module<span class="token punctuation"${a}>.</span><span class="token function-variable function"${a}>exports</span> <span class="token operator"${a}>=</span> <span class="token keyword"${a}>function</span> <span class="token punctuation"${a}>(</span><span class="token parameter"${a}>ctx</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
  <span class="token keyword"${a}>return</span> <span class="token punctuation"${a}>{</span>
    <span class="token comment"${a}>// ...</span>
    <span class="token literal-property property"${a}>boot</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>[</span><span class="token string"${a}>&#39;notify-defaults&#39;</span><span class="token punctuation"${a}>]</span><span class="token punctuation"${a}>,</span>
    <span class="token comment"${a}>// ...</span>
  <span class="token punctuation"${a}>}</span></code></pre>`),e(i(k,null,null,f,a));else return[n("pre",{class:"doc-code"},[n("code",null,[t("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token comment"},"// ..."),t(`
    `),n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'notify-defaults'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token comment"},"// ..."),t(`
  `),n("span",{class:"token punctuation"},"}")])]),n(k)]}),_:1},p,s)),o(`<p${s}>We then edit the newly created <code class="doc-token"${s}>/src/boot/notify-defaults.js</code>:</p>`),o(i(l(y),null,{default:u((r,e,f,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>import</span> <span class="token punctuation"${a}>{</span> Notify <span class="token punctuation"${a}>}</span> <span class="token keyword"${a}>from</span> <span class="token string"${a}>&#39;quasar&#39;</span>

Notify<span class="token punctuation"${a}>.</span><span class="token function"${a}>setDefaults</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>position</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;top-right&#39;</span><span class="token punctuation"${a}>,</span>
  <span class="token literal-property property"${a}>timeout</span><span class="token operator"${a}>:</span> <span class="token number"${a}>2500</span><span class="token punctuation"${a}>,</span>
  <span class="token literal-property property"${a}>textColor</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;white&#39;</span><span class="token punctuation"${a}>,</span>
  <span class="token literal-property property"${a}>actions</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>[</span><span class="token punctuation"${a}>{</span> <span class="token literal-property property"${a}>icon</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;close&#39;</span><span class="token punctuation"${a}>,</span> <span class="token literal-property property"${a}>color</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;white&#39;</span> <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>]</span>
<span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span></code></pre>`),e(i(k,null,null,f,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),t(),n("span",{class:"token punctuation"},"{"),t(" Notify "),n("span",{class:"token punctuation"},"}"),t(),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'quasar'"),t(`

Notify`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setDefaults"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"position"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'top-right'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"timeout"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token number"},"2500"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"textColor"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'white'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"actions"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token literal-property property"},"icon"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'close'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token literal-property property"},"color"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'white'"),t(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"]"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(k)]}),_:1},p,s)),o(`<div class="doc-note doc-note--warning"${s}><p class="doc-note__title"${s}>WARNING</p><p${s}>You can only set default <code class="doc-token"${s}>actions</code> through this method. Specifying <code class="doc-token"${s}>actions</code> with handlers in the <code class="doc-token"${s}>/quasar.config</code> file cannot and will NOT work.</p></div><p${s}>We could also set the defaults in some Vue file:</p>`),o(i(l(y),{title:"Inside of a Vue component"},{default:u((r,e,f,a)=>{if(e)e(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>import</span> <span class="token punctuation"${a}>{</span> useQuasar <span class="token punctuation"${a}>}</span> <span class="token keyword"${a}>from</span> <span class="token string"${a}>&#39;quasar&#39;</span>

<span class="token function"${a}>setup</span> <span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
  <span class="token keyword"${a}>const</span> $q <span class="token operator"${a}>=</span> <span class="token function"${a}>useQuasar</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span>

  $q<span class="token punctuation"${a}>.</span>notify<span class="token punctuation"${a}>.</span><span class="token function"${a}>setDefaults</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>{</span>
    <span class="token literal-property property"${a}>position</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;top-right&#39;</span><span class="token punctuation"${a}>,</span>
    <span class="token literal-property property"${a}>timeout</span><span class="token operator"${a}>:</span> <span class="token number"${a}>2500</span><span class="token punctuation"${a}>,</span>
    <span class="token literal-property property"${a}>textColor</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;white&#39;</span><span class="token punctuation"${a}>,</span>
    <span class="token literal-property property"${a}>actions</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>[</span><span class="token punctuation"${a}>{</span> <span class="token literal-property property"${a}>icon</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;close&#39;</span><span class="token punctuation"${a}>,</span> <span class="token literal-property property"${a}>color</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;white&#39;</span> <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>]</span>
  <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>)</span>
<span class="token punctuation"${a}>}</span></code></pre>`),e(i(k,null,null,f,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),t(),n("span",{class:"token punctuation"},"{"),t(" useQuasar "),n("span",{class:"token punctuation"},"}"),t(),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'quasar'"),t(`

`),n("span",{class:"token function"},"setup"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token keyword"},"const"),t(" $q "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(`

  $q`),n("span",{class:"token punctuation"},"."),t("notify"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setDefaults"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token literal-property property"},"position"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'top-right'"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"timeout"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token number"},"2500"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"textColor"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'white'"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"actions"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token literal-property property"},"icon"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'close'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token literal-property property"},"color"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'white'"),t(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"]"),t(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(k)]}),_:1},p,s));else return[n("p",null,"Notify is a Quasar plugin that can display animated messages (floating above everything in your pages) to users in the form of a notification. They are useful for alerting the user of an event and can even engage the user through actions. Also known as a toast or snackbar."),n(b,{file:"Notify"}),n(v,{plugins:"Notify",config:"notify"}),n("h2",{id:"usage",class:"doc-heading doc-h2",onClick:r=>l(g)("usage")},"Usage",8,["onClick"]),n("h3",{id:"basic",class:"doc-heading doc-h3",onClick:r=>l(g)("basic")},"Basic",8,["onClick"]),n(l(y),{title:"Outside of a Vue file"},{default:u(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),t(),n("span",{class:"token punctuation"},"{"),t(" Notify "),n("span",{class:"token punctuation"},"}"),t(),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'quasar'"),t(`

Notify`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"create"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Danger, Will Robinson! Danger!'"),n("span",{class:"token punctuation"},")"),t(`
`),n("span",{class:"token comment"},"// or with a config object:"),t(`
Notify`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"create"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"message"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'Danger, Will Robinson! Danger!'"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(k)]),_:1}),n(l(y),{title:"Inside of a Vue file"},{default:u(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),t(),n("span",{class:"token punctuation"},"{"),t(" useQuasar "),n("span",{class:"token punctuation"},"}"),t(),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'quasar'"),t(`

`),n("span",{class:"token function"},"setup"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token keyword"},"const"),t(" $q "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(`

  $q`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"notify"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Message'"),n("span",{class:"token punctuation"},")"),t(`
  `),n("span",{class:"token comment"},"// or with a config object:"),t(`
  $q`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"notify"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token operator"},"..."),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(k)]),_:1}),n(c,{title:"Basic",file:"Basic"}),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,"If you define any actions, the notification will automatically be dismissed when the user picks it.")]),n("h3",{id:"with-caption",class:"doc-heading doc-h3",onClick:r=>l(g)("with-caption")},"With caption",8,["onClick"]),n(c,{title:"Caption",file:"Caption"}),n("h3",{id:"with-icon-avatar-or-spinner",class:"doc-heading doc-h3",onClick:r=>l(g)("with-icon-avatar-or-spinner")},"With icon, avatar or spinner",8,["onClick"]),n(c,{title:"With icon",file:"Icon"}),n(c,{title:"With avatar",file:"Avatar"}),n(c,{title:"With spinner",file:"Spinner"}),n("h3",{id:"with-actions",class:"doc-heading doc-h3",onClick:r=>l(g)("with-actions")},"With actions",8,["onClick"]),n(c,{title:"With actions",file:"Actions"}),n("h3",{id:"multiline",class:"doc-heading doc-h3",onClick:r=>l(g)("multiline")},"Multiline",8,["onClick"]),n(c,{title:"Multiline",file:"Multiline"}),n("h3",{id:"positioning",class:"doc-heading doc-h3",onClick:r=>l(g)("positioning")},"Positioning",8,["onClick"]),n(c,{title:"Positioning & different options",file:"Positioning"}),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,"For a full list of options, check the API section.")]),n("h3",{id:"grouping",class:"doc-heading doc-h3",onClick:r=>l(g)("grouping")},"Grouping",8,["onClick"]),n("p",null,"Each notification has an underlying unique group which is computed out of the message + caption + multiLine + actions labels + position. When multiple notifications get triggered with the same group, instead of showing all of them and flooding the view, only the first one remains on screen along with a badge. The badge content represents the number of times that the same notification has been triggered (and with same position) since the first one appeared on screen."),n("p",null,[t("However, if you wish to disable this behavior, specify "),n("code",{class:"doc-token"},"group: false"),t(". In the example below, the first button triggers the same notification twice each time is clicked. The second button has grouping disabled. The third button, however, has a custom group name so each subsequent notification replaces the old one and increments the badge number.")]),n(c,{title:"Grouping",file:"Grouping"}),n(c,{title:"Custom badge",file:"GroupingCustomBadge"}),n("h3",{id:"timeout-progress",class:"doc-heading doc-h3",onClick:r=>l(g)("timeout-progress")},"Timeout progress",8,["onClick"]),n("p",null,"Should you wish, there is a way to tell the user when the notification will disappear from the screen. That’s for the cases when timeout is not set to 0."),n(c,{title:"Timeout progress",file:"TimeoutProgress"}),n("h3",{id:"updatable-notifications",class:"doc-heading doc-h3",onClick:r=>l(g)("updatable-notifications")},"Updatable notifications",8,["onClick"]),n("p",null,"Should you have an ongoing process and you want to inform the user of its progress without blocking what he is currently doing, then you can generate an updatable notification. It’s useful to also show a spinner while at it."),n("p",null,"Please note in the example below that we are explicitly setting “group: false” (because only non-grouped notifications can be updated) and “timeout: 0” (because we want to be in full control when the notification will be dismissed)."),n(c,{title:"Updatable",file:"Updatable"}),n("h3",{id:"predefined-types",class:"doc-heading doc-h3",onClick:r=>l(g)("predefined-types")},"Predefined types",8,["onClick"]),n("p",null,"There are four predefined types out of the box that you can use: “positive”, “negative”, “warning” and “info”:"),n(c,{title:"Out of the box types",file:"PredefinedTypesDefault"}),n("p",null,[t("Furthermore, you can register your own types or even override the predefined ones. The best place to do this would be in a "),n($,{to:"/quasar-cli-vite/boot-files"},{default:u(()=>[t("@quasar/app-vite Boot File")]),_:1}),t(" or a "),n($,{to:"/quasar-cli-webpack/boot-files"},{default:u(()=>[t("@quasar/app-webpack Boot File")]),_:1}),t(".")]),n(c,{title:"Custom type",file:"PredefinedTypesCustom"}),n(l(y),{title:"How to register in a boot file:"},{default:u(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),t(),n("span",{class:"token punctuation"},"{"),t(" Notify "),n("span",{class:"token punctuation"},"}"),t(),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'quasar'"),t(`

Notify`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"registerType"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'my-notif'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"icon"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'announcement'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"progress"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"color"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'brown'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"textColor"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'white'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"classes"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'glossy'"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(k)]),_:1}),n("h3",{id:"using-html",class:"doc-heading doc-h3",onClick:r=>l(g)("using-html")},"Using HTML",8,["onClick"]),n("p",null,[t("You can use HTML on message if you specify the "),n("code",{class:"doc-token"},"html: true"),t(" prop. "),n("strong",null,"Please note that this can lead to XSS attacks"),t(", so make sure that you sanitize the message by yourself.")]),n(c,{title:"Unsafe HTML message",file:"UnsafeHtml"}),n("h3",{id:"setting-attributes",class:"doc-heading doc-h3",onClick:r=>l(g)("setting-attributes")},"Setting attributes",8,["onClick"]),n("p",null,[t("You can set custom HTML attributes on the notification itself by setting the "),n("code",{class:"doc-token"},"attrs"),t(" Object property. For individual notification actions, you can directly pass them just like any other prop.")]),n(l(y),null,{default:u(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),t(),n("span",{class:"token punctuation"},"{"),t(" useQuasar "),n("span",{class:"token punctuation"},"}"),t(),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'quasar'"),t(`

`),n("span",{class:"token function"},"setup"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token keyword"},"const"),t(" $q "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(`

  $q`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"notify"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token comment"},"// ..."),t(`

    `),n("span",{class:"token literal-property property"},"attrs"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
      `),n("span",{class:"token comment"},"// for the notification itself:"),t(`
      `),n("span",{class:"token literal-property property"},"role"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'alertdialog'"),t(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`

    `),n("span",{class:"token literal-property property"},"actions"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(`
      `),n("span",{class:"token punctuation"},"{"),t(`
        `),n("span",{class:"token literal-property property"},"icon"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'close'"),n("span",{class:"token punctuation"},","),t(`
        `),n("span",{class:"token comment"},"// for individual action (button):"),t(`
        `),n("span",{class:"token string-property property"},"'aria-label'"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'Dismiss'"),t(`
      `),n("span",{class:"token punctuation"},"}"),t(`
    `),n("span",{class:"token punctuation"},"]"),t(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(k)]),_:1}),n("h3",{id:"programmatically-closing",class:"doc-heading doc-h3",onClick:r=>l(g)("programmatically-closing")},"Programmatically closing",8,["onClick"]),n("p",null,"Notifications are meant to be dismissed only by the user, however for exceptional cases you can do it programmatically. Especially useful when you set indefinite timeout (0)."),n(l(y),null,{default:u(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"const"),t(" dismiss "),n("span",{class:"token operator"},"="),t(" $q"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"notify"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token operator"},"..."),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(`
`),n("span",{class:"token operator"},"..."),t(`
`),n("span",{class:"token function"},"dismiss"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")])]),n(k)]),_:1}),n("h3",{id:"setting-defaults",class:"doc-heading doc-h3",onClick:r=>l(g)("setting-defaults")},"Setting defaults",8,["onClick"]),n("p",null,"There are two ways of setting default configuration that will apply to all Notifications: through quasar.config file > framework > config > notify Object (see Installation section) or programmatically (see below)."),n("p",null,[t("We’ll describe setting the defaults through a "),n($,{to:"/quasar-cli-vite/boot-files"},{default:u(()=>[t("@quasar/app-vite Boot File")]),_:1}),t(" or a "),n($,{to:"/quasar-cli-webpack/boot-files"},{default:u(()=>[t("@quasar/app-webpack Boot File")]),_:1}),t(" (works the same anywhere in your code, but a boot file ensures this is run before your app starts):")]),n("p",null,"First we create the boot file. Let’s name it “notify-defaults.js”."),n(l(y),null,{default:u(()=>[n("pre",{class:"doc-code"},[n("code",null,[t("$ quasar new boot notify-defaults "),n("span",{class:"token punctuation"},"["),t("--format ts"),n("span",{class:"token punctuation"},"]")])]),n(k,{lang:"bash"})]),_:1}),n("p",null,[t("Add the created notify-defaults.js file to the boot array in the "),n("code",{class:"doc-token"},"/quasar.config"),t(" file:")]),n(l(y),null,{default:u(()=>[n("pre",{class:"doc-code"},[n("code",null,[t("module"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"exports"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token comment"},"// ..."),t(`
    `),n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'notify-defaults'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token comment"},"// ..."),t(`
  `),n("span",{class:"token punctuation"},"}")])]),n(k)]),_:1}),n("p",null,[t("We then edit the newly created "),n("code",{class:"doc-token"},"/src/boot/notify-defaults.js"),t(":")]),n(l(y),null,{default:u(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),t(),n("span",{class:"token punctuation"},"{"),t(" Notify "),n("span",{class:"token punctuation"},"}"),t(),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'quasar'"),t(`

Notify`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setDefaults"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token literal-property property"},"position"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'top-right'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"timeout"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token number"},"2500"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"textColor"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'white'"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token literal-property property"},"actions"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token literal-property property"},"icon"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'close'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token literal-property property"},"color"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'white'"),t(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"]"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(k)]),_:1}),n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"WARNING"),n("p",null,[t("You can only set default "),n("code",{class:"doc-token"},"actions"),t(" through this method. Specifying "),n("code",{class:"doc-token"},"actions"),t(" with handlers in the "),n("code",{class:"doc-token"},"/quasar.config"),t(" file cannot and will NOT work.")])]),n("p",null,"We could also set the defaults in some Vue file:"),n(l(y),{title:"Inside of a Vue component"},{default:u(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),t(),n("span",{class:"token punctuation"},"{"),t(" useQuasar "),n("span",{class:"token punctuation"},"}"),t(),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'quasar'"),t(`

`),n("span",{class:"token function"},"setup"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token keyword"},"const"),t(" $q "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(`

  $q`),n("span",{class:"token punctuation"},"."),t("notify"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setDefaults"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token literal-property property"},"position"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'top-right'"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"timeout"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token number"},"2500"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"textColor"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'white'"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token literal-property property"},"actions"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token literal-property property"},"icon"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'close'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token literal-property property"},"color"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'white'"),t(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"]"),t(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(`
`),n("span",{class:"token punctuation"},"}")])]),n(k)]),_:1})]}),_:1},T))}}},q=d.setup;d.setup=(w,h)=>{const m=P();return(m.modules||(m.modules=new Set)).add("src/pages/quasar-plugins/notify.md"),q?q(w,h):void 0};const tn=B(d,[["__file","notify.md"]]);export{tn as default};
