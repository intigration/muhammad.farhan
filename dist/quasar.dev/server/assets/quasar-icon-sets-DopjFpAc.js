import{resolveComponent as D,mergeProps as N,withCtx as e,createTextVNode as a,unref as m,createVNode as n,useSSRContext as P}from"vue";import{ssrRenderComponent as l}from"vue/server-renderer";import{c as w}from"./page-utils-C-QWsEHe.js";import{D as R,a as k}from"./DocPage-DKr-0pQn.js";import{D as y}from"./DocPrerender-DPOnWPFO.js";import{C as u}from"./CopyButton-l3ndfN49.js";import{_ as W}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const q={__name:"quasar-icon-sets",__ssrInlineRender:!0,setup(b){const v=[{name:"Installing Icon Libraries",category:"Options & Helpers",path:"/options/installing-icon-libraries"},{name:"Icon",category:"Vue Components",path:"/vue-components/icon"}],S=[{id:"configuring-the-default-icon-set",title:"2. Configuring the default Icon Set"},{id:"hardcoded",title:"2.1. Hardcoded",sub:!0},{id:"dynamic-on-non-ssr-",title:"2.2. Dynamic (on non-SSR)",sub:!0},{id:"dynamic-on-ssr-",title:"2.3. Dynamic (on SSR)",sub:!0},{id:"change-quasar-icon-set-at-runtime",title:"3. Change Quasar Icon Set at Runtime"}];return(M,C,x,j)=>{const f=D("q-tab-panel");C(l(R,N({title:"Quasar Icon Sets",desc:"How to configure icon sets for Quasar components.",heading:"","edit-link":"options/quasar-icon-sets",toc:S,related:v},j),{default:e((T,p,$,c)=>{if(p)p(`<p${c}>Quasar components have their own icons. Rather than forcing you into using one icon library in particular (so that they can display correctly), Quasar lets you choose <strong${c}>which icons it should use for its components</strong>. This is called a <code class="doc-token"${c}>Quasar Icon Set</code>.</p><p${c}>You can install multiple icon libraries, but you must choose only one to use on Quasar’s components.</p><p${c}>Quasar currently supports: `),p(l(k,{to:"https://fonts.google.com/icons?icon.set=Material+Icons"},{default:e((r,o,i,t)=>{if(o)o("Material Icons");else return[a("Material Icons")]}),_:1},$,c)),p(", "),p(l(k,{to:"https://fonts.google.com/icons?icon.set=Material+Symbols"},{default:e((r,o,i,t)=>{if(o)o("Material Symbols");else return[a("Material Symbols")]}),_:1},$,c)),p(", "),p(l(k,{to:"https://fontawesome.com/icons"},{default:e((r,o,i,t)=>{if(o)o("Font Awesome");else return[a("Font Awesome")]}),_:1},$,c)),p(", "),p(l(k,{to:"http://ionicons.com/"},{default:e((r,o,i,t)=>{if(o)o("Ionicons");else return[a("Ionicons")]}),_:1},$,c)),p(", "),p(l(k,{to:"https://materialdesignicons.com/"},{default:e((r,o,i,t)=>{if(o)o("MDI");else return[a("MDI")]}),_:1},$,c)),p(", "),p(l(k,{to:"https://akveo.github.io/eva-icons"},{default:e((r,o,i,t)=>{if(o)o("Eva Icons");else return[a("Eva Icons")]}),_:1},$,c)),p(", "),p(l(k,{to:"https://themify.me/themify-icons"},{default:e((r,o,i,t)=>{if(o)o("Themify Icons");else return[a("Themify Icons")]}),_:1},$,c)),p(", "),p(l(k,{to:"https://icons8.com/line-awesome"},{default:e((r,o,i,t)=>{if(o)o("Line Awesome");else return[a("Line Awesome")]}),_:1},$,c)),p(" and "),p(l(k,{to:"https://icons.getbootstrap.com/"},{default:e((r,o,i,t)=>{if(o)o("Bootstrap Icons");else return[a("Bootstrap Icons")]}),_:1},$,c)),p(`.</p><p${c}>It is also possible to use your own icon files (SVG or any image format) with any Quasar component, see `),p(l(k,{to:"/vue-components/icon#image-icons"},{default:e((r,o,i,t)=>{if(o)o("QIcon | Image icons");else return[a("QIcon | Image icons")]}),_:1},$,c)),p(` page for more details.</p><p${c}>You can also provide an icon mapping function to add support for any other icon library or re-map some existing ones to your liking, see `),p(l(k,{to:"/vue-components/icon#custom-mapping"},{default:e((r,o,i,t)=>{if(o)o("QIcon | Custom mapping");else return[a("QIcon | Custom mapping")]}),_:1},$,c)),p(` for more details. You can use this to re-map long image file paths to short and understandable names, if using image icons, for example.</p><div class="doc-note doc-note--tip"${c}><p class="doc-note__title"${c}>TIP</p><p${c}>Related pages: `),p(l(k,{to:"/options/installing-icon-libraries"},{default:e((r,o,i,t)=>{if(o)o("Installing Icon Libraries");else return[a("Installing Icon Libraries")]}),_:1},$,c)),p(" and "),p(l(k,{to:"/vue-components/icon"},{default:e((r,o,i,t)=>{if(o)o("QIcon component");else return[a("QIcon component")]}),_:1},$,c)),p(`.</p></div><h2 id="configuring-the-default-icon-set" class="doc-heading doc-h2"${c}>Configuring the default Icon Set</h2><p${c}><strong${c}>There are two types of Quasar Icon Sets: webfont-based and svg-based.</strong></p><p${c}>Unless configured otherwise, Quasar uses Material Icons webfont as the icon set for its components. You can however tell Quasar to use some other Icon Set, but if it’s a webfont-based one then be sure to include its icon library in your website/app (see `),p(l(k,{to:"/options/installing-icon-libraries"},{default:e((r,o,i,t)=>{if(o)o("Installing Icon Libraries");else return[a("Installing Icon Libraries")]}),_:1},$,c)),p(`).</p><h3 id="hardcoded" class="doc-heading doc-h3"${c}>Hardcoded</h3><p${c}>If the default Quasar Icon Set is not dynamically determined (does not depends on cookies for example), then you can:</p><h4 id="quasar-cli-way" class="doc-heading doc-h4"${c}>Quasar CLI Way</h4><p${c}>We edit the <code class="doc-token"${c}>/quasar.config</code> file again:</p>`),p(l(m(y),null,{default:e((r,o,i,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token literal-property property"${t}>framework</span><span class="token operator"${t}>:</span> <span class="token punctuation"${t}>{</span>
  <span class="token comment"${t}>// webfont-based example</span>
  <span class="token literal-property property"${t}>iconSet</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;mdi-v7&#39;</span>
<span class="token punctuation"${t}>}</span></code></pre>`),o(l(u,null,null,i,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"framework"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// webfont-based example"),a(`
  `),n("span",{class:"token literal-property property"},"iconSet"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'mdi-v7'"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},$,c)),p(l(m(y),null,{default:e((r,o,i,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token literal-property property"${t}>framework</span><span class="token operator"${t}>:</span> <span class="token punctuation"${t}>{</span>
  <span class="token comment"${t}>// svg-based example</span>
  <span class="token literal-property property"${t}>iconSet</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;svg-mdi-v7&#39;</span>
<span class="token punctuation"${t}>}</span></code></pre>`),o(l(u,null,null,i,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"framework"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// svg-based example"),a(`
  `),n("span",{class:"token literal-property property"},"iconSet"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'svg-mdi-v7'"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},$,c)),p(`<p${c}>For all available options, visit the `),p(l(k,{to:"https://github.com/quasarframework/quasar/tree/dev/ui/icon-set"},{default:e((r,o,i,t)=>{if(o)o("GitHub");else return[a("GitHub")]}),_:1},$,c)),p(` repository.</p><p${c}>Full example of including MDI &amp; Fontawesome and telling Quasar to use Fontawesome for its components.</p>`),p(l(m(y),null,{default:e((r,o,i,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token literal-property property"${t}>extras</span><span class="token operator"${t}>:</span> <span class="token punctuation"${t}>[</span>
  <span class="token string"${t}>&#39;mdi-v7&#39;</span><span class="token punctuation"${t}>,</span>
  <span class="token string"${t}>&#39;fontawesome-v6&#39;</span>
<span class="token punctuation"${t}>]</span><span class="token punctuation"${t}>,</span>
<span class="token literal-property property"${t}>framework</span><span class="token operator"${t}>:</span> <span class="token punctuation"${t}>{</span>
  <span class="token literal-property property"${t}>iconSet</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;fontawesome-v6&#39;</span>
<span class="token punctuation"${t}>}</span></code></pre>`),o(l(u,null,null,i,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"extras"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"["),a(`
  `),n("span",{class:"token string"},"'mdi-v7'"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token string"},"'fontawesome-v6'"),a(`
`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token literal-property property"},"framework"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token literal-property property"},"iconSet"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'fontawesome-v6'"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},$,c)),p(`<p${c}>This will enable you to use both MDI &amp; Fontawesome webfonts in your app, and all Quasar components will display Fontawesome icons.</p><h4 id="umd-way" class="doc-heading doc-h4"${c}>UMD Way</h4><p${c}>Include the Quasar Icon Set tag for your Quasar version and also tell Quasar to use it. Example:</p>`),p(l(m(y),null,{default:e((r,o,i,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token comment"${t}>&lt;!-- include this after Quasar JS tag --&gt;</span>
<span class="token tag"${t}><span class="token tag"${t}><span class="token punctuation"${t}>&lt;</span>script</span> <span class="token attr-name"${t}>src</span><span class="token attr-value"${t}><span class="token punctuation attr-equals"${t}>=</span><span class="token punctuation"${t}>&quot;</span>https://cdn.jsdelivr.net/npm/quasar@v2/dist/icon-set/fontawesome-v6.umd.prod.js<span class="token punctuation"${t}>&quot;</span></span><span class="token punctuation"${t}>&gt;</span></span><span class="token script"${t}></span><span class="token tag"${t}><span class="token tag"${t}><span class="token punctuation"${t}>&lt;/</span>script</span><span class="token punctuation"${t}>&gt;</span></span>
<span class="token tag"${t}><span class="token tag"${t}><span class="token punctuation"${t}>&lt;</span>script</span><span class="token punctuation"${t}>&gt;</span></span><span class="token script"${t}><span class="token language-javascript"${t}>
  Quasar<span class="token punctuation"${t}>.</span>iconSet<span class="token punctuation"${t}>.</span><span class="token function"${t}>set</span><span class="token punctuation"${t}>(</span>Quasar<span class="token punctuation"${t}>.</span>iconSet<span class="token punctuation"${t}>.</span>fontawesomeV6<span class="token punctuation"${t}>)</span>
</span></span><span class="token tag"${t}><span class="token tag"${t}><span class="token punctuation"${t}>&lt;/</span>script</span><span class="token punctuation"${t}>&gt;</span></span></code></pre>`),o(l(u,null,null,i,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"<!-- include this after Quasar JS tag -->"),a(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("script")]),a(),n("span",{class:"token attr-name"},"src"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("https://cdn.jsdelivr.net/npm/quasar@v2/dist/icon-set/fontawesome-v6.umd.prod.js"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"}),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("script")]),n("span",{class:"token punctuation"},">")]),a(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("script")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"},[n("span",{class:"token language-javascript"},[a(`
  Quasar`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("Quasar"),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),a("fontawesomeV6"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("script")]),n("span",{class:"token punctuation"},">")])])]),n(u)]}),_:1},$,c)),p(`<p${c}>Check what tags you need to include in your HTML files on `),p(l(k,{to:"/start/umd"},{default:e((r,o,i,t)=>{if(o)o("UMD / Standalone");else return[a("UMD / Standalone")]}),_:1},$,c)),p(` page.</p><h4 id="quasar-vite-plugin-way" class="doc-heading doc-h4"${c}>Quasar Vite Plugin Way</h4><p${c}>We edit your <code class="doc-token"${c}>main.js</code>:</p>`),p(l(m(y),null,{default:e((r,o,i,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token comment"${t}>// ...</span>
<span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> Quasar <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar&#39;</span>
<span class="token comment"${t}>// ...</span>
<span class="token keyword"${t}>import</span> iconSet <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar/icon-set/fontawesome-v6&#39;</span>
<span class="token keyword"${t}>import</span> <span class="token string"${t}>&#39;@quasar/extras/fontawesome-v6/fontawesome-v6.css&#39;</span>
<span class="token comment"${t}>// ...</span>
app<span class="token punctuation"${t}>.</span><span class="token function"${t}>use</span><span class="token punctuation"${t}>(</span>Quasar<span class="token punctuation"${t}>,</span> <span class="token punctuation"${t}>{</span>
  <span class="token comment"${t}>// ...,</span>
  <span class="token literal-property property"${t}>iconSet</span><span class="token operator"${t}>:</span> iconSet
<span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span></code></pre>`),o(l(u,null,null,i,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// ..."),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`
`),n("span",{class:"token comment"},"// ..."),a(`
`),n("span",{class:"token keyword"},"import"),a(" iconSet "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/icon-set/fontawesome-v6'"),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token string"},"'@quasar/extras/fontawesome-v6/fontawesome-v6.css'"),a(`
`),n("span",{class:"token comment"},"// ..."),a(`
app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),a("Quasar"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// ...,"),a(`
  `),n("span",{class:"token literal-property property"},"iconSet"),n("span",{class:"token operator"},":"),a(` iconSet
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(u)]}),_:1},$,c)),p(`<h4 id="vue-cli-way" class="doc-heading doc-h4"${c}>Vue CLI Way</h4><p${c}>We edit your <code class="doc-token"${c}>main.js</code>:</p>`),p(l(m(y),null,{default:e((r,o,i,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> iconSet <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar/icon-set/fontawesome-v6&#39;</span>
<span class="token comment"${t}>// ...</span>
<span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> Quasar <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar&#39;</span>
<span class="token comment"${t}>// ...</span>
app<span class="token punctuation"${t}>.</span><span class="token function"${t}>use</span><span class="token punctuation"${t}>(</span>Quasar<span class="token punctuation"${t}>,</span> <span class="token punctuation"${t}>{</span>
  <span class="token comment"${t}>// ...,</span>
  <span class="token literal-property property"${t}>iconSet</span><span class="token operator"${t}>:</span> iconSet
<span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span></code></pre>`),o(l(u,null,null,i,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(" iconSet "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/icon-set/fontawesome-v6'"),a(`
`),n("span",{class:"token comment"},"// ..."),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`
`),n("span",{class:"token comment"},"// ..."),a(`
app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),a("Quasar"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// ...,"),a(`
  `),n("span",{class:"token literal-property property"},"iconSet"),n("span",{class:"token operator"},":"),a(` iconSet
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(u)]}),_:1},$,c)),p(`<h3 id="dynamic-on-non-ssr-" class="doc-heading doc-h3"${c}>Dynamic (on non-SSR)</h3><p${c}>Quasar CLI: If your desired Quasar Icon Set must be dynamically selected (example: depends on a cookie), then you need to create a boot file: <code class="doc-token"${c}>$ quasar new boot quasar-icon-set [--format ts]</code>. This will create <code class="doc-token"${c}>/src/boot/quasar-icon-set.js</code> file. Edit it to:</p>`),p(l(m(y),{tabs:["With @quasar/app-vite","With @quasar/app-webpack"]},{default:e((r,o,i,t)=>{if(o)o(l(f,{class:"q-pa-none",name:"With @quasar/app-vite"},{default:e((h,d,g,s)=>{if(d)d(`<pre class="doc-code"${s}><code${s}><span class="token keyword"${s}>import</span> <span class="token punctuation"${s}>{</span> Quasar <span class="token punctuation"${s}>}</span> <span class="token keyword"${s}>from</span> <span class="token string"${s}>&#39;quasar&#39;</span>

<span class="token comment"${s}>// relative path to your node_modules/quasar/..</span>
<span class="token comment"${s}>// change to YOUR path</span>
<span class="token keyword"${s}>const</span> iconSetList <span class="token operator"${s}>=</span> <span class="token keyword"${s}>import</span><span class="token punctuation"${s}>.</span>meta<span class="token punctuation"${s}>.</span><span class="token function"${s}>glob</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;../../node_modules/quasar/icon-set/*.mjs&#39;</span><span class="token punctuation"${s}>)</span>
<span class="token comment"${s}>// or just a select few (example below with only mdi-v7 and fontawesome-v6):</span>
<span class="token comment"${s}>// import.meta.glob(&#39;../../node_modules/quasar/icon-set/(mdi-v7|fontawesome-v6).mjs&#39;)</span>

<span class="token keyword"${s}>export</span> <span class="token keyword"${s}>default</span> <span class="token keyword"${s}>async</span> <span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span> <span class="token operator"${s}>=&gt;</span> <span class="token punctuation"${s}>{</span>
  <span class="token keyword"${s}>const</span> iconSetName <span class="token operator"${s}>=</span> <span class="token string"${s}>&#39;mdi-v7&#39;</span> <span class="token comment"${s}>// ... some logic to determine it (use Cookies Plugin?)</span>

  <span class="token keyword"${s}>try</span> <span class="token punctuation"${s}>{</span>
    iconSetList<span class="token punctuation"${s}>[</span> <span class="token template-string"${s}><span class="token template-punctuation string"${s}>\`</span><span class="token string"${s}>../../node_modules/quasar/icon-set/</span><span class="token interpolation"${s}><span class="token interpolation-punctuation punctuation"${s}>\${</span> iconSetName <span class="token interpolation-punctuation punctuation"${s}>}</span></span><span class="token string"${s}>.mjs</span><span class="token template-punctuation string"${s}>\`</span></span> <span class="token punctuation"${s}>]</span><span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span><span class="token punctuation"${s}>.</span><span class="token function"${s}>then</span><span class="token punctuation"${s}>(</span><span class="token parameter"${s}>lang</span> <span class="token operator"${s}>=&gt;</span> <span class="token punctuation"${s}>{</span>
      Quasar<span class="token punctuation"${s}>.</span>iconSet<span class="token punctuation"${s}>.</span><span class="token function"${s}>set</span><span class="token punctuation"${s}>(</span>setDefinition<span class="token punctuation"${s}>.</span>default<span class="token punctuation"${s}>)</span>
    <span class="token punctuation"${s}>}</span><span class="token punctuation"${s}>)</span>
  <span class="token punctuation"${s}>}</span>
  <span class="token keyword"${s}>catch</span> <span class="token punctuation"${s}>(</span>err<span class="token punctuation"${s}>)</span> <span class="token punctuation"${s}>{</span>
    <span class="token comment"${s}>// Requested Quasar Icon Set does not exist,</span>
    <span class="token comment"${s}>// let&#39;s not break the app, so catching error</span>
  <span class="token punctuation"${s}>}</span>
<span class="token punctuation"${s}>}</span></code></pre>`),d(l(u,null,null,g,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token comment"},"// relative path to your node_modules/quasar/.."),a(`
`),n("span",{class:"token comment"},"// change to YOUR path"),a(`
`),n("span",{class:"token keyword"},"const"),a(" iconSetList "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"import"),n("span",{class:"token punctuation"},"."),a("meta"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"glob"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'../../node_modules/quasar/icon-set/*.mjs'"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token comment"},"// or just a select few (example below with only mdi-v7 and fontawesome-v6):"),a(`
`),n("span",{class:"token comment"},"// import.meta.glob('../../node_modules/quasar/icon-set/(mdi-v7|fontawesome-v6).mjs')"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" iconSetName "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'mdi-v7'"),a(),n("span",{class:"token comment"},"// ... some logic to determine it (use Cookies Plugin?)"),a(`

  `),n("span",{class:"token keyword"},"try"),a(),n("span",{class:"token punctuation"},"{"),a(`
    iconSetList`),n("span",{class:"token punctuation"},"["),a(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"../../node_modules/quasar/icon-set/"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),a(" iconSetName "),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},".mjs"),n("span",{class:"token template-punctuation string"},"`")]),a(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"lang"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
      Quasar`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("setDefinition"),n("span",{class:"token punctuation"},"."),a("default"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"catch"),a(),n("span",{class:"token punctuation"},"("),a("err"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Requested Quasar Icon Set does not exist,"),a(`
    `),n("span",{class:"token comment"},"// let's not break the app, so catching error"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},i,t)),o(l(f,{class:"q-pa-none",name:"With @quasar/app-webpack"},{default:e((h,d,g,s)=>{if(d)d(`<pre class="doc-code"${s}><code${s}><span class="token keyword"${s}>import</span> <span class="token punctuation"${s}>{</span> Quasar <span class="token punctuation"${s}>}</span> <span class="token keyword"${s}>from</span> <span class="token string"${s}>&#39;quasar&#39;</span>

<span class="token keyword"${s}>export</span> <span class="token keyword"${s}>default</span> <span class="token keyword"${s}>async</span> <span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span> <span class="token operator"${s}>=&gt;</span> <span class="token punctuation"${s}>{</span>
  <span class="token keyword"${s}>const</span> iconSetName <span class="token operator"${s}>=</span> <span class="token string"${s}>&#39;mdi-v7&#39;</span> <span class="token comment"${s}>// ... some logic to determine it (use Cookies Plugin?)</span>

  <span class="token keyword"${s}>try</span> <span class="token punctuation"${s}>{</span>
    <span class="token keyword"${s}>await</span> <span class="token keyword"${s}>import</span><span class="token punctuation"${s}>(</span>
      <span class="token comment"${s}>/* webpackInclude: /(mdi-v7|fontawesome-v6)\\.js$/ */</span>
      <span class="token string"${s}>&#39;quasar/icon-set/&#39;</span> <span class="token operator"${s}>+</span> iconSetName
    <span class="token punctuation"${s}>)</span><span class="token punctuation"${s}>.</span><span class="token function"${s}>then</span><span class="token punctuation"${s}>(</span><span class="token parameter"${s}>setDefinition</span> <span class="token operator"${s}>=&gt;</span> <span class="token punctuation"${s}>{</span>
      Quasar<span class="token punctuation"${s}>.</span>iconSet<span class="token punctuation"${s}>.</span><span class="token function"${s}>set</span><span class="token punctuation"${s}>(</span>setDefinition<span class="token punctuation"${s}>.</span>default<span class="token punctuation"${s}>)</span>
    <span class="token punctuation"${s}>}</span><span class="token punctuation"${s}>)</span>
  <span class="token punctuation"${s}>}</span>
  <span class="token keyword"${s}>catch</span> <span class="token punctuation"${s}>(</span>err<span class="token punctuation"${s}>)</span> <span class="token punctuation"${s}>{</span>
    <span class="token comment"${s}>// Requested Quasar Icon Set does not exist,</span>
    <span class="token comment"${s}>// let&#39;s not break the app, so catching error</span>
  <span class="token punctuation"${s}>}</span>
<span class="token punctuation"${s}>}</span></code></pre>`),d(l(u,null,null,g,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" iconSetName "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'mdi-v7'"),a(),n("span",{class:"token comment"},"// ... some logic to determine it (use Cookies Plugin?)"),a(`

  `),n("span",{class:"token keyword"},"try"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"await"),a(),n("span",{class:"token keyword"},"import"),n("span",{class:"token punctuation"},"("),a(`
      `),n("span",{class:"token comment"},"/* webpackInclude: /(mdi-v7|fontawesome-v6)\\.js$/ */"),a(`
      `),n("span",{class:"token string"},"'quasar/icon-set/'"),a(),n("span",{class:"token operator"},"+"),a(` iconSetName
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"setDefinition"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
      Quasar`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("setDefinition"),n("span",{class:"token punctuation"},"."),a("default"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"catch"),a(),n("span",{class:"token punctuation"},"("),a("err"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Requested Quasar Icon Set does not exist,"),a(`
    `),n("span",{class:"token comment"},"// let's not break the app, so catching error"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},i,t));else return[n(f,{class:"q-pa-none",name:"With @quasar/app-vite"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token comment"},"// relative path to your node_modules/quasar/.."),a(`
`),n("span",{class:"token comment"},"// change to YOUR path"),a(`
`),n("span",{class:"token keyword"},"const"),a(" iconSetList "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"import"),n("span",{class:"token punctuation"},"."),a("meta"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"glob"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'../../node_modules/quasar/icon-set/*.mjs'"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token comment"},"// or just a select few (example below with only mdi-v7 and fontawesome-v6):"),a(`
`),n("span",{class:"token comment"},"// import.meta.glob('../../node_modules/quasar/icon-set/(mdi-v7|fontawesome-v6).mjs')"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" iconSetName "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'mdi-v7'"),a(),n("span",{class:"token comment"},"// ... some logic to determine it (use Cookies Plugin?)"),a(`

  `),n("span",{class:"token keyword"},"try"),a(),n("span",{class:"token punctuation"},"{"),a(`
    iconSetList`),n("span",{class:"token punctuation"},"["),a(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"../../node_modules/quasar/icon-set/"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),a(" iconSetName "),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},".mjs"),n("span",{class:"token template-punctuation string"},"`")]),a(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"lang"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
      Quasar`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("setDefinition"),n("span",{class:"token punctuation"},"."),a("default"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"catch"),a(),n("span",{class:"token punctuation"},"("),a("err"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Requested Quasar Icon Set does not exist,"),a(`
    `),n("span",{class:"token comment"},"// let's not break the app, so catching error"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n(f,{class:"q-pa-none",name:"With @quasar/app-webpack"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" iconSetName "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'mdi-v7'"),a(),n("span",{class:"token comment"},"// ... some logic to determine it (use Cookies Plugin?)"),a(`

  `),n("span",{class:"token keyword"},"try"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"await"),a(),n("span",{class:"token keyword"},"import"),n("span",{class:"token punctuation"},"("),a(`
      `),n("span",{class:"token comment"},"/* webpackInclude: /(mdi-v7|fontawesome-v6)\\.js$/ */"),a(`
      `),n("span",{class:"token string"},"'quasar/icon-set/'"),a(),n("span",{class:"token operator"},"+"),a(` iconSetName
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"setDefinition"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
      Quasar`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("setDefinition"),n("span",{class:"token punctuation"},"."),a("default"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"catch"),a(),n("span",{class:"token punctuation"},"("),a("err"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Requested Quasar Icon Set does not exist,"),a(`
    `),n("span",{class:"token comment"},"// let's not break the app, so catching error"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1})]}),_:1},$,c)),p(`<p${c}>Then register this boot file into the <code class="doc-token"${c}>/quasar.config</code> file:</p>`),p(l(m(y),null,{default:e((r,o,i,t)=>{if(o)o(`<pre class="doc-code"${t}><code${t}><span class="token literal-property property"${t}>boot</span><span class="token operator"${t}>:</span> <span class="token punctuation"${t}>[</span>
  <span class="token string"${t}>&#39;quasar-icon-set&#39;</span>
<span class="token punctuation"${t}>]</span></code></pre>`),o(l(u,null,null,i,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"["),a(`
  `),n("span",{class:"token string"},"'quasar-icon-set'"),a(`
`),n("span",{class:"token punctuation"},"]")])]),n(u)]}),_:1},$,c)),p(`<div class="doc-note doc-note--warning"${c}><p class="doc-note__title"${c}>Always constrain a dynamic import</p><p${c}>Notice the use of the `),p(l(k,{to:"https://webpack.js.org/api/module-methods/#magic-comments"},{default:e((r,o,i,t)=>{if(o)o("Webpack magic comment");else return[a("Webpack magic comment")]}),_:1},$,c)),p(` - <code class="doc-token"${c}>webpackInclude</code>. Otherwise all the available icon set files will be bundled, resulting in an increase in the compilation time and the bundle size. See `),p(l(k,{to:"https://quasar.dev/quasar-cli/lazy-loading#Caveat-for-dynamic-imports"},{default:e((r,o,i,t)=>{if(o)o("Caveat for dynamic imports");else return[a("Caveat for dynamic imports")]}),_:1},$,c)),p(`</p></div><h3 id="dynamic-on-ssr-" class="doc-heading doc-h3"${c}>Dynamic (on SSR)</h3><p${c}>When dealing with SSR, we can’t use singleton objects because that would pollute sessions. As a result, as opposed to the dynamical example above (read it first!), you must also specify the <code class="doc-token"${c}>ssrContext</code> from your boot file:</p>`),p(l(m(y),{tabs:["With @quasar/app-vite","With @quasar/app-webpack"]},{default:e((r,o,i,t)=>{if(o)o(l(f,{class:"q-pa-none",name:"With @quasar/app-vite"},{default:e((h,d,g,s)=>{if(d)d(`<pre class="doc-code"${s}><code${s}><span class="token keyword"${s}>import</span> <span class="token punctuation"${s}>{</span> Quasar <span class="token punctuation"${s}>}</span> <span class="token keyword"${s}>from</span> <span class="token string"${s}>&#39;quasar&#39;</span>

<span class="token comment"${s}>// relative path to your node_modules/quasar/..</span>
<span class="token comment"${s}>// change to YOUR path</span>
<span class="token keyword"${s}>const</span> iconSetList <span class="token operator"${s}>=</span> <span class="token keyword"${s}>import</span><span class="token punctuation"${s}>.</span>meta<span class="token punctuation"${s}>.</span><span class="token function"${s}>glob</span><span class="token punctuation"${s}>(</span><span class="token string"${s}>&#39;../../node_modules/quasar/icon-set/*.mjs&#39;</span><span class="token punctuation"${s}>)</span>
<span class="token comment"${s}>// or just a select few (example below with only mdi-v7 and fontawesome-v6):</span>
<span class="token comment"${s}>// import.meta.glob(&#39;../../node_modules/quasar/icon-set/(mdi-v7|fontawesome-v6).mjs&#39;)</span>

<span class="token comment"${s}>// ! NOTICE ssrContext param:</span>
<span class="token keyword"${s}>export</span> <span class="token keyword"${s}>default</span> <span class="token keyword"${s}>async</span> <span class="token punctuation"${s}>(</span><span class="token parameter"${s}><span class="token punctuation"${s}>{</span> ssrContext <span class="token punctuation"${s}>}</span></span><span class="token punctuation"${s}>)</span> <span class="token operator"${s}>=&gt;</span> <span class="token punctuation"${s}>{</span>
  <span class="token keyword"${s}>const</span> iconSetName <span class="token operator"${s}>=</span> <span class="token string"${s}>&#39;mdi-v7&#39;</span> <span class="token comment"${s}>// ... some logic to determine it (use Cookies Plugin?)</span>

  <span class="token keyword"${s}>try</span> <span class="token punctuation"${s}>{</span>
    iconSetList<span class="token punctuation"${s}>[</span> <span class="token template-string"${s}><span class="token template-punctuation string"${s}>\`</span><span class="token string"${s}>../../node_modules/quasar/icon-set/</span><span class="token interpolation"${s}><span class="token interpolation-punctuation punctuation"${s}>\${</span> iconSetName <span class="token interpolation-punctuation punctuation"${s}>}</span></span><span class="token string"${s}>.mjs</span><span class="token template-punctuation string"${s}>\`</span></span> <span class="token punctuation"${s}>]</span><span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span><span class="token punctuation"${s}>.</span><span class="token function"${s}>then</span><span class="token punctuation"${s}>(</span><span class="token parameter"${s}>lang</span> <span class="token operator"${s}>=&gt;</span> <span class="token punctuation"${s}>{</span>
      Quasar<span class="token punctuation"${s}>.</span>iconSet<span class="token punctuation"${s}>.</span><span class="token function"${s}>set</span><span class="token punctuation"${s}>(</span>setDefinition<span class="token punctuation"${s}>.</span>default<span class="token punctuation"${s}>,</span> ssrContext<span class="token punctuation"${s}>)</span>
    <span class="token punctuation"${s}>}</span><span class="token punctuation"${s}>)</span>
  <span class="token punctuation"${s}>}</span>
  <span class="token keyword"${s}>catch</span> <span class="token punctuation"${s}>(</span>err<span class="token punctuation"${s}>)</span> <span class="token punctuation"${s}>{</span>
    <span class="token comment"${s}>// Requested Quasar Icon Set does not exist,</span>
    <span class="token comment"${s}>// let&#39;s not break the app, so catching error</span>
  <span class="token punctuation"${s}>}</span>
<span class="token punctuation"${s}>}</span></code></pre>`),d(l(u,null,null,g,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token comment"},"// relative path to your node_modules/quasar/.."),a(`
`),n("span",{class:"token comment"},"// change to YOUR path"),a(`
`),n("span",{class:"token keyword"},"const"),a(" iconSetList "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"import"),n("span",{class:"token punctuation"},"."),a("meta"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"glob"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'../../node_modules/quasar/icon-set/*.mjs'"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token comment"},"// or just a select few (example below with only mdi-v7 and fontawesome-v6):"),a(`
`),n("span",{class:"token comment"},"// import.meta.glob('../../node_modules/quasar/icon-set/(mdi-v7|fontawesome-v6).mjs')"),a(`

`),n("span",{class:"token comment"},"// ! NOTICE ssrContext param:"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" ssrContext "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" iconSetName "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'mdi-v7'"),a(),n("span",{class:"token comment"},"// ... some logic to determine it (use Cookies Plugin?)"),a(`

  `),n("span",{class:"token keyword"},"try"),a(),n("span",{class:"token punctuation"},"{"),a(`
    iconSetList`),n("span",{class:"token punctuation"},"["),a(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"../../node_modules/quasar/icon-set/"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),a(" iconSetName "),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},".mjs"),n("span",{class:"token template-punctuation string"},"`")]),a(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"lang"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
      Quasar`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("setDefinition"),n("span",{class:"token punctuation"},"."),a("default"),n("span",{class:"token punctuation"},","),a(" ssrContext"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"catch"),a(),n("span",{class:"token punctuation"},"("),a("err"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Requested Quasar Icon Set does not exist,"),a(`
    `),n("span",{class:"token comment"},"// let's not break the app, so catching error"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},i,t)),o(l(f,{class:"q-pa-none",name:"With @quasar/app-webpack"},{default:e((h,d,g,s)=>{if(d)d(`<pre class="doc-code"${s}><code${s}><span class="token keyword"${s}>import</span> <span class="token punctuation"${s}>{</span> Quasar <span class="token punctuation"${s}>}</span> <span class="token keyword"${s}>from</span> <span class="token string"${s}>&#39;quasar&#39;</span>

<span class="token comment"${s}>// ! NOTICE ssrContext param:</span>
<span class="token keyword"${s}>export</span> <span class="token keyword"${s}>default</span> <span class="token keyword"${s}>async</span> <span class="token punctuation"${s}>(</span><span class="token parameter"${s}><span class="token punctuation"${s}>{</span> ssrContext <span class="token punctuation"${s}>}</span></span><span class="token punctuation"${s}>)</span> <span class="token operator"${s}>=&gt;</span> <span class="token punctuation"${s}>{</span>
  <span class="token keyword"${s}>const</span> iconSetName <span class="token operator"${s}>=</span> <span class="token string"${s}>&#39;mdi-v7&#39;</span> <span class="token comment"${s}>// ... some logic to determine it (use Cookies Plugin?)</span>

  <span class="token keyword"${s}>try</span> <span class="token punctuation"${s}>{</span>
    <span class="token keyword"${s}>await</span> <span class="token keyword"${s}>import</span><span class="token punctuation"${s}>(</span>
      <span class="token comment"${s}>/* webpackInclude: /(mdi-v7|fontawesome-v6)\\.js$/ */</span>
      <span class="token string"${s}>&#39;quasar/icon-set/&#39;</span> <span class="token operator"${s}>+</span> iconSetName
    <span class="token punctuation"${s}>)</span><span class="token punctuation"${s}>.</span><span class="token function"${s}>then</span><span class="token punctuation"${s}>(</span><span class="token parameter"${s}>setDefinition</span> <span class="token operator"${s}>=&gt;</span> <span class="token punctuation"${s}>{</span>
      Quasar<span class="token punctuation"${s}>.</span>iconSet<span class="token punctuation"${s}>.</span><span class="token function"${s}>set</span><span class="token punctuation"${s}>(</span>setDefinition<span class="token punctuation"${s}>.</span>default<span class="token punctuation"${s}>,</span> ssrContext<span class="token punctuation"${s}>)</span>
    <span class="token punctuation"${s}>}</span><span class="token punctuation"${s}>)</span>
  <span class="token punctuation"${s}>}</span>
  <span class="token keyword"${s}>catch</span> <span class="token punctuation"${s}>(</span>err<span class="token punctuation"${s}>)</span> <span class="token punctuation"${s}>{</span>
    <span class="token comment"${s}>// Requested Quasar Icon Set does not exist,</span>
    <span class="token comment"${s}>// let&#39;s not break the app, so catching error</span>
  <span class="token punctuation"${s}>}</span>
<span class="token punctuation"${s}>}</span></code></pre>`),d(l(u,null,null,g,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token comment"},"// ! NOTICE ssrContext param:"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" ssrContext "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" iconSetName "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'mdi-v7'"),a(),n("span",{class:"token comment"},"// ... some logic to determine it (use Cookies Plugin?)"),a(`

  `),n("span",{class:"token keyword"},"try"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"await"),a(),n("span",{class:"token keyword"},"import"),n("span",{class:"token punctuation"},"("),a(`
      `),n("span",{class:"token comment"},"/* webpackInclude: /(mdi-v7|fontawesome-v6)\\.js$/ */"),a(`
      `),n("span",{class:"token string"},"'quasar/icon-set/'"),a(),n("span",{class:"token operator"},"+"),a(` iconSetName
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"setDefinition"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
      Quasar`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("setDefinition"),n("span",{class:"token punctuation"},"."),a("default"),n("span",{class:"token punctuation"},","),a(" ssrContext"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"catch"),a(),n("span",{class:"token punctuation"},"("),a("err"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Requested Quasar Icon Set does not exist,"),a(`
    `),n("span",{class:"token comment"},"// let's not break the app, so catching error"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},i,t));else return[n(f,{class:"q-pa-none",name:"With @quasar/app-vite"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token comment"},"// relative path to your node_modules/quasar/.."),a(`
`),n("span",{class:"token comment"},"// change to YOUR path"),a(`
`),n("span",{class:"token keyword"},"const"),a(" iconSetList "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"import"),n("span",{class:"token punctuation"},"."),a("meta"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"glob"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'../../node_modules/quasar/icon-set/*.mjs'"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token comment"},"// or just a select few (example below with only mdi-v7 and fontawesome-v6):"),a(`
`),n("span",{class:"token comment"},"// import.meta.glob('../../node_modules/quasar/icon-set/(mdi-v7|fontawesome-v6).mjs')"),a(`

`),n("span",{class:"token comment"},"// ! NOTICE ssrContext param:"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" ssrContext "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" iconSetName "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'mdi-v7'"),a(),n("span",{class:"token comment"},"// ... some logic to determine it (use Cookies Plugin?)"),a(`

  `),n("span",{class:"token keyword"},"try"),a(),n("span",{class:"token punctuation"},"{"),a(`
    iconSetList`),n("span",{class:"token punctuation"},"["),a(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"../../node_modules/quasar/icon-set/"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),a(" iconSetName "),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},".mjs"),n("span",{class:"token template-punctuation string"},"`")]),a(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"lang"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
      Quasar`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("setDefinition"),n("span",{class:"token punctuation"},"."),a("default"),n("span",{class:"token punctuation"},","),a(" ssrContext"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"catch"),a(),n("span",{class:"token punctuation"},"("),a("err"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Requested Quasar Icon Set does not exist,"),a(`
    `),n("span",{class:"token comment"},"// let's not break the app, so catching error"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n(f,{class:"q-pa-none",name:"With @quasar/app-webpack"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token comment"},"// ! NOTICE ssrContext param:"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" ssrContext "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" iconSetName "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'mdi-v7'"),a(),n("span",{class:"token comment"},"// ... some logic to determine it (use Cookies Plugin?)"),a(`

  `),n("span",{class:"token keyword"},"try"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"await"),a(),n("span",{class:"token keyword"},"import"),n("span",{class:"token punctuation"},"("),a(`
      `),n("span",{class:"token comment"},"/* webpackInclude: /(mdi-v7|fontawesome-v6)\\.js$/ */"),a(`
      `),n("span",{class:"token string"},"'quasar/icon-set/'"),a(),n("span",{class:"token operator"},"+"),a(` iconSetName
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"setDefinition"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
      Quasar`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("setDefinition"),n("span",{class:"token punctuation"},"."),a("default"),n("span",{class:"token punctuation"},","),a(" ssrContext"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"catch"),a(),n("span",{class:"token punctuation"},"("),a("err"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Requested Quasar Icon Set does not exist,"),a(`
    `),n("span",{class:"token comment"},"// let's not break the app, so catching error"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1})]}),_:1},$,c)),p(`<h2 id="change-quasar-icon-set-at-runtime" class="doc-heading doc-h2"${c}>Change Quasar Icon Set at Runtime</h2><h4 id="changing-icon-set-dynamically" class="doc-heading doc-h4"${c}>Changing Icon Set Dynamically</h4><p${c}>Quasar Icon Set is reactive, so all components will update properly if you change the $q.iconSet object. Here is an example:</p>`),p(l(m(y),{tabs:["Composition API variant","Options API variant"]},{default:e((r,o,i,t)=>{if(o)o(l(f,{class:"q-pa-none",name:"Composition API variant"},{default:e((h,d,g,s)=>{if(d)d(`<pre class="doc-code"${s}><code${s}><span class="token keyword"${s}>import</span> <span class="token punctuation"${s}>{</span> useQuasar <span class="token punctuation"${s}>}</span> <span class="token keyword"${s}>from</span> <span class="token string"${s}>&#39;quasar&#39;</span>
<span class="token keyword"${s}>import</span> mdiIconSet <span class="token keyword"${s}>from</span> <span class="token string"${s}>&#39;quasar/icon-set/mdi-v7.js&#39;</span>

<span class="token function"${s}>setup</span> <span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span> <span class="token punctuation"${s}>{</span>
  <span class="token keyword"${s}>const</span> $q <span class="token operator"${s}>=</span> <span class="token function"${s}>useQuasar</span><span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span>

  <span class="token keyword"${s}>function</span> <span class="token function"${s}>changeIconSetToMdiIconSet</span> <span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span> <span class="token punctuation"${s}>{</span>
    $q<span class="token punctuation"${s}>.</span>iconSet<span class="token punctuation"${s}>.</span><span class="token function"${s}>set</span><span class="token punctuation"${s}>(</span>mdiIconSet<span class="token punctuation"${s}>)</span>
  <span class="token punctuation"${s}>}</span>

  <span class="token keyword"${s}>return</span> <span class="token punctuation"${s}>{</span>
    changeIconSetToMdiIconSet
  <span class="token punctuation"${s}>}</span>
<span class="token punctuation"${s}>}</span></code></pre>`),d(l(u,null,null,g,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" useQuasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`
`),n("span",{class:"token keyword"},"import"),a(" mdiIconSet "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/icon-set/mdi-v7.js'"),a(`

`),n("span",{class:"token function"},"setup"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" $q "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`

  `),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token function"},"changeIconSetToMdiIconSet"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    $q`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("mdiIconSet"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`

  `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token punctuation"},"{"),a(`
    changeIconSetToMdiIconSet
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},i,t)),o(l(f,{class:"q-pa-none",name:"Options API variant"},{default:e((h,d,g,s)=>{if(d)d(`<pre class="doc-code"${s}><code${s}><span class="token keyword"${s}>import</span> mdiIconSet <span class="token keyword"${s}>from</span> <span class="token string"${s}>&#39;quasar/icon-set/mdi-v7.js&#39;</span>

<span class="token literal-property property"${s}>methods</span><span class="token operator"${s}>:</span> <span class="token punctuation"${s}>{</span>
  <span class="token function"${s}>changeIconSetToMdiIconSet</span> <span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span> <span class="token punctuation"${s}>{</span>
    <span class="token keyword"${s}>this</span><span class="token punctuation"${s}>.</span>$q<span class="token punctuation"${s}>.</span>iconSet<span class="token punctuation"${s}>.</span><span class="token function"${s}>set</span><span class="token punctuation"${s}>(</span>mdiIconSet<span class="token punctuation"${s}>)</span>
  <span class="token punctuation"${s}>}</span>
<span class="token punctuation"${s}>}</span></code></pre>`),d(l(u,null,null,g,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(" mdiIconSet "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/icon-set/mdi-v7.js'"),a(`

`),n("span",{class:"token literal-property property"},"methods"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token function"},"changeIconSetToMdiIconSet"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),a("$q"),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("mdiIconSet"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},i,t));else return[n(f,{class:"q-pa-none",name:"Composition API variant"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" useQuasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`
`),n("span",{class:"token keyword"},"import"),a(" mdiIconSet "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/icon-set/mdi-v7.js'"),a(`

`),n("span",{class:"token function"},"setup"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" $q "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`

  `),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token function"},"changeIconSetToMdiIconSet"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    $q`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("mdiIconSet"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`

  `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token punctuation"},"{"),a(`
    changeIconSetToMdiIconSet
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n(f,{class:"q-pa-none",name:"Options API variant"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(" mdiIconSet "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/icon-set/mdi-v7.js'"),a(`

`),n("span",{class:"token literal-property property"},"methods"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token function"},"changeIconSetToMdiIconSet"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),a("$q"),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("mdiIconSet"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1})]}),_:1},$,c)),p(`<h4 id="changing-a-specific-icon-dynamically" class="doc-heading doc-h4"${c}>Changing a Specific Icon Dynamically</h4><p${c}>If you want to change a specific icon to another, you can. Here is an example:</p>`),p(l(m(y),{tabs:["Composition API variant","Options API variant"]},{default:e((r,o,i,t)=>{if(o)o(l(f,{class:"q-pa-none",name:"Composition API variant"},{default:e((h,d,g,s)=>{if(d)d(`<pre class="doc-code"${s}><code${s}><span class="token keyword"${s}>import</span> <span class="token punctuation"${s}>{</span> useQuasar <span class="token punctuation"${s}>}</span> <span class="token keyword"${s}>from</span> <span class="token string"${s}>&#39;quasar&#39;</span>

<span class="token function"${s}>setup</span> <span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span> <span class="token punctuation"${s}>{</span>
  <span class="token keyword"${s}>const</span> $q <span class="token operator"${s}>=</span> <span class="token function"${s}>useQuasar</span><span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span>

  <span class="token keyword"${s}>function</span> <span class="token function"${s}>changeQEditorHeaderIcon</span> <span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span> <span class="token punctuation"${s}>{</span>
    $q<span class="token punctuation"${s}>.</span>iconSet<span class="token punctuation"${s}>.</span>editor<span class="token punctuation"${s}>.</span>header1 <span class="token operator"${s}>=</span> <span class="token string"${s}>&#39;fas fa-font&#39;</span>
  <span class="token punctuation"${s}>}</span>

  <span class="token keyword"${s}>return</span> <span class="token punctuation"${s}>{</span> changeQEditorHeaderIcon <span class="token punctuation"${s}>}</span>
<span class="token punctuation"${s}>}</span></code></pre>`),d(l(u,null,null,g,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" useQuasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token function"},"setup"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" $q "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`

  `),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token function"},"changeQEditorHeaderIcon"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    $q`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),a("editor"),n("span",{class:"token punctuation"},"."),a("header1 "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'fas fa-font'"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`

  `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token punctuation"},"{"),a(" changeQEditorHeaderIcon "),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},i,t)),o(l(f,{class:"q-pa-none",name:"Options API variant"},{default:e((h,d,g,s)=>{if(d)d(`<pre class="doc-code"${s}><code${s}><span class="token literal-property property"${s}>methods</span><span class="token operator"${s}>:</span> <span class="token punctuation"${s}>{</span>
  <span class="token function"${s}>changeQEditorHeaderIcon</span> <span class="token punctuation"${s}>(</span><span class="token punctuation"${s}>)</span> <span class="token punctuation"${s}>{</span>
    <span class="token keyword"${s}>this</span><span class="token punctuation"${s}>.</span>$q<span class="token punctuation"${s}>.</span>iconSet<span class="token punctuation"${s}>.</span>editor<span class="token punctuation"${s}>.</span>header1 <span class="token operator"${s}>=</span> <span class="token string"${s}>&#39;fas fa-font&#39;</span>
  <span class="token punctuation"${s}>}</span>
<span class="token punctuation"${s}>}</span></code></pre>`),d(l(u,null,null,g,s));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"methods"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token function"},"changeQEditorHeaderIcon"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),a("$q"),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),a("editor"),n("span",{class:"token punctuation"},"."),a("header1 "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'fas fa-font'"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]}),_:1},i,t));else return[n(f,{class:"q-pa-none",name:"Composition API variant"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" useQuasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token function"},"setup"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" $q "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`

  `),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token function"},"changeQEditorHeaderIcon"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    $q`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),a("editor"),n("span",{class:"token punctuation"},"."),a("header1 "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'fas fa-font'"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`

  `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token punctuation"},"{"),a(" changeQEditorHeaderIcon "),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n(f,{class:"q-pa-none",name:"Options API variant"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"methods"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token function"},"changeQEditorHeaderIcon"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),a("$q"),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),a("editor"),n("span",{class:"token punctuation"},"."),a("header1 "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'fas fa-font'"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1})]}),_:1},$,c));else return[n("p",null,[a("Quasar components have their own icons. Rather than forcing you into using one icon library in particular (so that they can display correctly), Quasar lets you choose "),n("strong",null,"which icons it should use for its components"),a(". This is called a "),n("code",{class:"doc-token"},"Quasar Icon Set"),a(".")]),n("p",null,"You can install multiple icon libraries, but you must choose only one to use on Quasar’s components."),n("p",null,[a("Quasar currently supports: "),n(k,{to:"https://fonts.google.com/icons?icon.set=Material+Icons"},{default:e(()=>[a("Material Icons")]),_:1}),a(", "),n(k,{to:"https://fonts.google.com/icons?icon.set=Material+Symbols"},{default:e(()=>[a("Material Symbols")]),_:1}),a(", "),n(k,{to:"https://fontawesome.com/icons"},{default:e(()=>[a("Font Awesome")]),_:1}),a(", "),n(k,{to:"http://ionicons.com/"},{default:e(()=>[a("Ionicons")]),_:1}),a(", "),n(k,{to:"https://materialdesignicons.com/"},{default:e(()=>[a("MDI")]),_:1}),a(", "),n(k,{to:"https://akveo.github.io/eva-icons"},{default:e(()=>[a("Eva Icons")]),_:1}),a(", "),n(k,{to:"https://themify.me/themify-icons"},{default:e(()=>[a("Themify Icons")]),_:1}),a(", "),n(k,{to:"https://icons8.com/line-awesome"},{default:e(()=>[a("Line Awesome")]),_:1}),a(" and "),n(k,{to:"https://icons.getbootstrap.com/"},{default:e(()=>[a("Bootstrap Icons")]),_:1}),a(".")]),n("p",null,[a("It is also possible to use your own icon files (SVG or any image format) with any Quasar component, see "),n(k,{to:"/vue-components/icon#image-icons"},{default:e(()=>[a("QIcon | Image icons")]),_:1}),a(" page for more details.")]),n("p",null,[a("You can also provide an icon mapping function to add support for any other icon library or re-map some existing ones to your liking, see "),n(k,{to:"/vue-components/icon#custom-mapping"},{default:e(()=>[a("QIcon | Custom mapping")]),_:1}),a(" for more details. You can use this to re-map long image file paths to short and understandable names, if using image icons, for example.")]),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,[a("Related pages: "),n(k,{to:"/options/installing-icon-libraries"},{default:e(()=>[a("Installing Icon Libraries")]),_:1}),a(" and "),n(k,{to:"/vue-components/icon"},{default:e(()=>[a("QIcon component")]),_:1}),a(".")])]),n("h2",{id:"configuring-the-default-icon-set",class:"doc-heading doc-h2",onClick:r=>m(w)("configuring-the-default-icon-set")},"Configuring the default Icon Set",8,["onClick"]),n("p",null,[n("strong",null,"There are two types of Quasar Icon Sets: webfont-based and svg-based.")]),n("p",null,[a("Unless configured otherwise, Quasar uses Material Icons webfont as the icon set for its components. You can however tell Quasar to use some other Icon Set, but if it’s a webfont-based one then be sure to include its icon library in your website/app (see "),n(k,{to:"/options/installing-icon-libraries"},{default:e(()=>[a("Installing Icon Libraries")]),_:1}),a(").")]),n("h3",{id:"hardcoded",class:"doc-heading doc-h3",onClick:r=>m(w)("hardcoded")},"Hardcoded",8,["onClick"]),n("p",null,"If the default Quasar Icon Set is not dynamically determined (does not depends on cookies for example), then you can:"),n("h4",{id:"quasar-cli-way",class:"doc-heading doc-h4",onClick:r=>m(w)("quasar-cli-way")},"Quasar CLI Way",8,["onClick"]),n("p",null,[a("We edit the "),n("code",{class:"doc-token"},"/quasar.config"),a(" file again:")]),n(m(y),null,{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"framework"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// webfont-based example"),a(`
  `),n("span",{class:"token literal-property property"},"iconSet"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'mdi-v7'"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n(m(y),null,{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"framework"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// svg-based example"),a(`
  `),n("span",{class:"token literal-property property"},"iconSet"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'svg-mdi-v7'"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n("p",null,[a("For all available options, visit the "),n(k,{to:"https://github.com/quasarframework/quasar/tree/dev/ui/icon-set"},{default:e(()=>[a("GitHub")]),_:1}),a(" repository.")]),n("p",null,"Full example of including MDI & Fontawesome and telling Quasar to use Fontawesome for its components."),n(m(y),null,{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"extras"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"["),a(`
  `),n("span",{class:"token string"},"'mdi-v7'"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token string"},"'fontawesome-v6'"),a(`
`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token literal-property property"},"framework"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token literal-property property"},"iconSet"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'fontawesome-v6'"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n("p",null,"This will enable you to use both MDI & Fontawesome webfonts in your app, and all Quasar components will display Fontawesome icons."),n("h4",{id:"umd-way",class:"doc-heading doc-h4",onClick:r=>m(w)("umd-way")},"UMD Way",8,["onClick"]),n("p",null,"Include the Quasar Icon Set tag for your Quasar version and also tell Quasar to use it. Example:"),n(m(y),null,{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"<!-- include this after Quasar JS tag -->"),a(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("script")]),a(),n("span",{class:"token attr-name"},"src"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("https://cdn.jsdelivr.net/npm/quasar@v2/dist/icon-set/fontawesome-v6.umd.prod.js"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"}),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("script")]),n("span",{class:"token punctuation"},">")]),a(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("script")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"},[n("span",{class:"token language-javascript"},[a(`
  Quasar`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("Quasar"),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),a("fontawesomeV6"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("script")]),n("span",{class:"token punctuation"},">")])])]),n(u)]),_:1}),n("p",null,[a("Check what tags you need to include in your HTML files on "),n(k,{to:"/start/umd"},{default:e(()=>[a("UMD / Standalone")]),_:1}),a(" page.")]),n("h4",{id:"quasar-vite-plugin-way",class:"doc-heading doc-h4",onClick:r=>m(w)("quasar-vite-plugin-way")},"Quasar Vite Plugin Way",8,["onClick"]),n("p",null,[a("We edit your "),n("code",{class:"doc-token"},"main.js"),a(":")]),n(m(y),null,{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token comment"},"// ..."),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`
`),n("span",{class:"token comment"},"// ..."),a(`
`),n("span",{class:"token keyword"},"import"),a(" iconSet "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/icon-set/fontawesome-v6'"),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token string"},"'@quasar/extras/fontawesome-v6/fontawesome-v6.css'"),a(`
`),n("span",{class:"token comment"},"// ..."),a(`
app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),a("Quasar"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// ...,"),a(`
  `),n("span",{class:"token literal-property property"},"iconSet"),n("span",{class:"token operator"},":"),a(` iconSet
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(u)]),_:1}),n("h4",{id:"vue-cli-way",class:"doc-heading doc-h4",onClick:r=>m(w)("vue-cli-way")},"Vue CLI Way",8,["onClick"]),n("p",null,[a("We edit your "),n("code",{class:"doc-token"},"main.js"),a(":")]),n(m(y),null,{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(" iconSet "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/icon-set/fontawesome-v6'"),a(`
`),n("span",{class:"token comment"},"// ..."),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`
`),n("span",{class:"token comment"},"// ..."),a(`
app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),a("Quasar"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// ...,"),a(`
  `),n("span",{class:"token literal-property property"},"iconSet"),n("span",{class:"token operator"},":"),a(` iconSet
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(u)]),_:1}),n("h3",{id:"dynamic-on-non-ssr-",class:"doc-heading doc-h3",onClick:r=>m(w)("dynamic-on-non-ssr-")},"Dynamic (on non-SSR)",8,["onClick"]),n("p",null,[a("Quasar CLI: If your desired Quasar Icon Set must be dynamically selected (example: depends on a cookie), then you need to create a boot file: "),n("code",{class:"doc-token"},"$ quasar new boot quasar-icon-set [--format ts]"),a(". This will create "),n("code",{class:"doc-token"},"/src/boot/quasar-icon-set.js"),a(" file. Edit it to:")]),n(m(y),{tabs:["With @quasar/app-vite","With @quasar/app-webpack"]},{default:e(()=>[n(f,{class:"q-pa-none",name:"With @quasar/app-vite"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token comment"},"// relative path to your node_modules/quasar/.."),a(`
`),n("span",{class:"token comment"},"// change to YOUR path"),a(`
`),n("span",{class:"token keyword"},"const"),a(" iconSetList "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"import"),n("span",{class:"token punctuation"},"."),a("meta"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"glob"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'../../node_modules/quasar/icon-set/*.mjs'"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token comment"},"// or just a select few (example below with only mdi-v7 and fontawesome-v6):"),a(`
`),n("span",{class:"token comment"},"// import.meta.glob('../../node_modules/quasar/icon-set/(mdi-v7|fontawesome-v6).mjs')"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" iconSetName "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'mdi-v7'"),a(),n("span",{class:"token comment"},"// ... some logic to determine it (use Cookies Plugin?)"),a(`

  `),n("span",{class:"token keyword"},"try"),a(),n("span",{class:"token punctuation"},"{"),a(`
    iconSetList`),n("span",{class:"token punctuation"},"["),a(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"../../node_modules/quasar/icon-set/"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),a(" iconSetName "),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},".mjs"),n("span",{class:"token template-punctuation string"},"`")]),a(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"lang"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
      Quasar`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("setDefinition"),n("span",{class:"token punctuation"},"."),a("default"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"catch"),a(),n("span",{class:"token punctuation"},"("),a("err"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Requested Quasar Icon Set does not exist,"),a(`
    `),n("span",{class:"token comment"},"// let's not break the app, so catching error"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n(f,{class:"q-pa-none",name:"With @quasar/app-webpack"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" iconSetName "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'mdi-v7'"),a(),n("span",{class:"token comment"},"// ... some logic to determine it (use Cookies Plugin?)"),a(`

  `),n("span",{class:"token keyword"},"try"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"await"),a(),n("span",{class:"token keyword"},"import"),n("span",{class:"token punctuation"},"("),a(`
      `),n("span",{class:"token comment"},"/* webpackInclude: /(mdi-v7|fontawesome-v6)\\.js$/ */"),a(`
      `),n("span",{class:"token string"},"'quasar/icon-set/'"),a(),n("span",{class:"token operator"},"+"),a(` iconSetName
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"setDefinition"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
      Quasar`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("setDefinition"),n("span",{class:"token punctuation"},"."),a("default"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"catch"),a(),n("span",{class:"token punctuation"},"("),a("err"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Requested Quasar Icon Set does not exist,"),a(`
    `),n("span",{class:"token comment"},"// let's not break the app, so catching error"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1})]),_:1}),n("p",null,[a("Then register this boot file into the "),n("code",{class:"doc-token"},"/quasar.config"),a(" file:")]),n(m(y),null,{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"["),a(`
  `),n("span",{class:"token string"},"'quasar-icon-set'"),a(`
`),n("span",{class:"token punctuation"},"]")])]),n(u)]),_:1}),n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"Always constrain a dynamic import"),n("p",null,[a("Notice the use of the "),n(k,{to:"https://webpack.js.org/api/module-methods/#magic-comments"},{default:e(()=>[a("Webpack magic comment")]),_:1}),a(" - "),n("code",{class:"doc-token"},"webpackInclude"),a(". Otherwise all the available icon set files will be bundled, resulting in an increase in the compilation time and the bundle size. See "),n(k,{to:"https://quasar.dev/quasar-cli/lazy-loading#Caveat-for-dynamic-imports"},{default:e(()=>[a("Caveat for dynamic imports")]),_:1})])]),n("h3",{id:"dynamic-on-ssr-",class:"doc-heading doc-h3",onClick:r=>m(w)("dynamic-on-ssr-")},"Dynamic (on SSR)",8,["onClick"]),n("p",null,[a("When dealing with SSR, we can’t use singleton objects because that would pollute sessions. As a result, as opposed to the dynamical example above (read it first!), you must also specify the "),n("code",{class:"doc-token"},"ssrContext"),a(" from your boot file:")]),n(m(y),{tabs:["With @quasar/app-vite","With @quasar/app-webpack"]},{default:e(()=>[n(f,{class:"q-pa-none",name:"With @quasar/app-vite"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token comment"},"// relative path to your node_modules/quasar/.."),a(`
`),n("span",{class:"token comment"},"// change to YOUR path"),a(`
`),n("span",{class:"token keyword"},"const"),a(" iconSetList "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"import"),n("span",{class:"token punctuation"},"."),a("meta"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"glob"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'../../node_modules/quasar/icon-set/*.mjs'"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token comment"},"// or just a select few (example below with only mdi-v7 and fontawesome-v6):"),a(`
`),n("span",{class:"token comment"},"// import.meta.glob('../../node_modules/quasar/icon-set/(mdi-v7|fontawesome-v6).mjs')"),a(`

`),n("span",{class:"token comment"},"// ! NOTICE ssrContext param:"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" ssrContext "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" iconSetName "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'mdi-v7'"),a(),n("span",{class:"token comment"},"// ... some logic to determine it (use Cookies Plugin?)"),a(`

  `),n("span",{class:"token keyword"},"try"),a(),n("span",{class:"token punctuation"},"{"),a(`
    iconSetList`),n("span",{class:"token punctuation"},"["),a(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"../../node_modules/quasar/icon-set/"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),a(" iconSetName "),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},".mjs"),n("span",{class:"token template-punctuation string"},"`")]),a(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"lang"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
      Quasar`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("setDefinition"),n("span",{class:"token punctuation"},"."),a("default"),n("span",{class:"token punctuation"},","),a(" ssrContext"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"catch"),a(),n("span",{class:"token punctuation"},"("),a("err"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Requested Quasar Icon Set does not exist,"),a(`
    `),n("span",{class:"token comment"},"// let's not break the app, so catching error"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n(f,{class:"q-pa-none",name:"With @quasar/app-webpack"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Quasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token comment"},"// ! NOTICE ssrContext param:"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),a(" ssrContext "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" iconSetName "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'mdi-v7'"),a(),n("span",{class:"token comment"},"// ... some logic to determine it (use Cookies Plugin?)"),a(`

  `),n("span",{class:"token keyword"},"try"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"await"),a(),n("span",{class:"token keyword"},"import"),n("span",{class:"token punctuation"},"("),a(`
      `),n("span",{class:"token comment"},"/* webpackInclude: /(mdi-v7|fontawesome-v6)\\.js$/ */"),a(`
      `),n("span",{class:"token string"},"'quasar/icon-set/'"),a(),n("span",{class:"token operator"},"+"),a(` iconSetName
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"setDefinition"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
      Quasar`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("setDefinition"),n("span",{class:"token punctuation"},"."),a("default"),n("span",{class:"token punctuation"},","),a(" ssrContext"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"catch"),a(),n("span",{class:"token punctuation"},"("),a("err"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Requested Quasar Icon Set does not exist,"),a(`
    `),n("span",{class:"token comment"},"// let's not break the app, so catching error"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1})]),_:1}),n("h2",{id:"change-quasar-icon-set-at-runtime",class:"doc-heading doc-h2",onClick:r=>m(w)("change-quasar-icon-set-at-runtime")},"Change Quasar Icon Set at Runtime",8,["onClick"]),n("h4",{id:"changing-icon-set-dynamically",class:"doc-heading doc-h4",onClick:r=>m(w)("changing-icon-set-dynamically")},"Changing Icon Set Dynamically",8,["onClick"]),n("p",null,"Quasar Icon Set is reactive, so all components will update properly if you change the $q.iconSet object. Here is an example:"),n(m(y),{tabs:["Composition API variant","Options API variant"]},{default:e(()=>[n(f,{class:"q-pa-none",name:"Composition API variant"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" useQuasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`
`),n("span",{class:"token keyword"},"import"),a(" mdiIconSet "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/icon-set/mdi-v7.js'"),a(`

`),n("span",{class:"token function"},"setup"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" $q "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`

  `),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token function"},"changeIconSetToMdiIconSet"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    $q`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("mdiIconSet"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`

  `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token punctuation"},"{"),a(`
    changeIconSetToMdiIconSet
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n(f,{class:"q-pa-none",name:"Options API variant"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(" mdiIconSet "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar/icon-set/mdi-v7.js'"),a(`

`),n("span",{class:"token literal-property property"},"methods"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token function"},"changeIconSetToMdiIconSet"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),a("$q"),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),a("mdiIconSet"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1})]),_:1}),n("h4",{id:"changing-a-specific-icon-dynamically",class:"doc-heading doc-h4",onClick:r=>m(w)("changing-a-specific-icon-dynamically")},"Changing a Specific Icon Dynamically",8,["onClick"]),n("p",null,"If you want to change a specific icon to another, you can. Here is an example:"),n(m(y),{tabs:["Composition API variant","Options API variant"]},{default:e(()=>[n(f,{class:"q-pa-none",name:"Composition API variant"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" useQuasar "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'quasar'"),a(`

`),n("span",{class:"token function"},"setup"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" $q "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`

  `),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token function"},"changeQEditorHeaderIcon"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    $q`),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),a("editor"),n("span",{class:"token punctuation"},"."),a("header1 "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'fas fa-font'"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`

  `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token punctuation"},"{"),a(" changeQEditorHeaderIcon "),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1}),n(f,{class:"q-pa-none",name:"Options API variant"},{default:e(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"methods"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token function"},"changeQEditorHeaderIcon"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),a("$q"),n("span",{class:"token punctuation"},"."),a("iconSet"),n("span",{class:"token punctuation"},"."),a("editor"),n("span",{class:"token punctuation"},"."),a("header1 "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'fas fa-font'"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}")])]),n(u)]),_:1})]),_:1})]}),_:1},x))}}},Q=q.setup;q.setup=(b,v)=>{const S=P();return(S.modules||(S.modules=new Set)).add("src/pages/options/quasar-icon-sets.md"),Q?Q(b,v):void 0};const X=W(q,[["__file","quasar-icon-sets.md"]]);export{X as default};
