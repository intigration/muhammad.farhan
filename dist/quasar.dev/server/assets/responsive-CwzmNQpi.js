import{provide as Q,mergeProps as x,withCtx as C,createVNode as t,unref as l,createTextVNode as n,useSSRContext as y}from"vue";import{ssrRenderComponent as s}from"vue/server-renderer";import{c}from"./page-utils-C-QWsEHe.js";import{D as $}from"./DocPage-DKr-0pQn.js";import{D as i}from"./DocExample-BcaABDtE.js";import{D as p}from"./DocApi-Df9ryd6x.js";import{_ as b}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const m={__name:"responsive",__ssrInlineRender:!0,setup(u){Q("_q_ex",{name:"QResponsive"});const h=[{id:"qresponsive-api",title:"2. QResponsive API",deep:!0},{id:"usage",title:"3. Usage"},{id:"basic",title:"3.1. Basic",sub:!0},{id:"flex-row",title:"3.2. Flex row",sub:!0},{id:"on-some-components",title:"3.3. On some components",sub:!0},{id:"maximum-height",title:"3.4. Maximum height",sub:!0}];return(d,g,w,v)=>{g(s($,x({title:"Responsive",desc:"The QResponsive Vue component forces the content to maintain an aspect ratio based on its width.",heading:"","edit-link":"vue-components/responsive",toc:h},v),{default:C((k,o,a,e)=>{if(o)o(`<p${e}>QResponsive is a component which forces the content to maintain an aspect ratio based on its width.</p>`),o(s(p,{file:"QResponsive"},null,a,e)),o(`<h2 id="usage" class="doc-heading doc-h2"${e}>Usage</h2><div class="doc-note doc-note--tip"${e}><p class="doc-note__title"${e}>TIPS</p><ul${e}><li${e}>The component can be used with any content, as long you specify <strong${e}>only one direct child</strong>. If you need multiple elements inside of it, wrap them in a <code class="doc-token"${e}>&lt;div&gt;</code>.</li><li${e}>It is your responsibility to make sure that your content won’t overflow the container.</li></ul></div><div class="doc-note doc-note--warning"${e}><p class="doc-note__title"${e}>WARNING</p><p${e}>Do not use it on Quasar components that already have a <code class="doc-token"${e}>ratio</code> property, like QImg or QVideo, or on components that have a forced height.</p></div><h3 id="basic" class="doc-heading doc-h3"${e}>Basic</h3>`),o(s(i,{title:"Basic usage",file:"Basic"},null,a,e)),o(`<h3 id="flex-row" class="doc-heading doc-h3"${e}>Flex row</h3><p${e}>Note below that we are using a vertical alignment (<code class="doc-token"${e}>items-start</code>) other than the default (<code class="doc-token"${e}>stretch</code>), so that flexbox won’t force the height on each QResponsive component.</p>`),o(s(i,{title:"Basic usage",file:"FlexRow"},null,a,e)),o(`<h3 id="on-some-components" class="doc-heading doc-h3"${e}>On some components</h3><p${e}>Below are just a few examples. QResponsive is not restricted to only QCard and QCarousel.</p>`),o(s(i,{title:"On QCard",file:"Card"},null,a,e)),o(s(i,{title:"On QCardSection",file:"CardSection"},null,a,e)),o(s(i,{title:"On QTable",file:"Table"},null,a,e)),o(`<p${e}>Notice that we will not supply a <code class="doc-token"${e}>height</code> prop to QCarousel when we use QResponsive on it, since it’s QResponsive who will take care of that.</p>`),o(s(i,{title:"On QCarousel",file:"Carousel"},null,a,e)),o(`<h3 id="maximum-height" class="doc-heading doc-h3"${e}>Maximum height</h3><p${e}>Apply the max height (or max width, etc etc) directly on the QResponsive component through a CSS class or inline. Remember that it is still your responsibility to ensure that the content won’t overflow the container.</p>`),o(s(i,{title:"On QCard",file:"MaxHeight"},null,a,e));else return[t("p",null,"QResponsive is a component which forces the content to maintain an aspect ratio based on its width."),t(p,{file:"QResponsive"}),t("h2",{id:"usage",class:"doc-heading doc-h2",onClick:r=>l(c)("usage")},"Usage",8,["onClick"]),t("div",{class:"doc-note doc-note--tip"},[t("p",{class:"doc-note__title"},"TIPS"),t("ul",null,[t("li",null,[n("The component can be used with any content, as long you specify "),t("strong",null,"only one direct child"),n(". If you need multiple elements inside of it, wrap them in a "),t("code",{class:"doc-token"},"<div>"),n(".")]),t("li",null,"It is your responsibility to make sure that your content won’t overflow the container.")])]),t("div",{class:"doc-note doc-note--warning"},[t("p",{class:"doc-note__title"},"WARNING"),t("p",null,[n("Do not use it on Quasar components that already have a "),t("code",{class:"doc-token"},"ratio"),n(" property, like QImg or QVideo, or on components that have a forced height.")])]),t("h3",{id:"basic",class:"doc-heading doc-h3",onClick:r=>l(c)("basic")},"Basic",8,["onClick"]),t(i,{title:"Basic usage",file:"Basic"}),t("h3",{id:"flex-row",class:"doc-heading doc-h3",onClick:r=>l(c)("flex-row")},"Flex row",8,["onClick"]),t("p",null,[n("Note below that we are using a vertical alignment ("),t("code",{class:"doc-token"},"items-start"),n(") other than the default ("),t("code",{class:"doc-token"},"stretch"),n("), so that flexbox won’t force the height on each QResponsive component.")]),t(i,{title:"Basic usage",file:"FlexRow"}),t("h3",{id:"on-some-components",class:"doc-heading doc-h3",onClick:r=>l(c)("on-some-components")},"On some components",8,["onClick"]),t("p",null,"Below are just a few examples. QResponsive is not restricted to only QCard and QCarousel."),t(i,{title:"On QCard",file:"Card"}),t(i,{title:"On QCardSection",file:"CardSection"}),t(i,{title:"On QTable",file:"Table"}),t("p",null,[n("Notice that we will not supply a "),t("code",{class:"doc-token"},"height"),n(" prop to QCarousel when we use QResponsive on it, since it’s QResponsive who will take care of that.")]),t(i,{title:"On QCarousel",file:"Carousel"}),t("h3",{id:"maximum-height",class:"doc-heading doc-h3",onClick:r=>l(c)("maximum-height")},"Maximum height",8,["onClick"]),t("p",null,"Apply the max height (or max width, etc etc) directly on the QResponsive component through a CSS class or inline. Remember that it is still your responsibility to ensure that the content won’t overflow the container."),t(i,{title:"On QCard",file:"MaxHeight"})]}),_:1},w))}}},f=m.setup;m.setup=(u,h)=>{const d=y();return(d.modules||(d.modules=new Set)).add("src/pages/vue-components/responsive.md"),f?f(u,h):void 0};const J=b(m,[["__file","responsive.md"]]);export{J as default};
