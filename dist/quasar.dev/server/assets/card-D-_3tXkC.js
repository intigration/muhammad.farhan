import{provide as w,mergeProps as y,withCtx as v,createVNode as e,unref as l,createTextVNode as c,useSSRContext as x}from"vue";import{ssrRenderComponent as n}from"vue/server-renderer";import{c as s}from"./page-utils-C-QWsEHe.js";import{D as k}from"./DocPage-DKr-0pQn.js";import{D as o}from"./DocExample-BcaABDtE.js";import{D as d}from"./DocApi-Df9ryd6x.js";import{_ as $}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"./DocCode-BVg0tuSc.js";import"prismjs";import"./CopyButton-l3ndfN49.js";import"./DocCodepen-BPVszLIH.js";import"./utils-DKnLoYai.js";import"./DocCardTitle-BSnqQsiz.js";import"vue-router";import"@quasar/extras/fontawesome-v5";import"quasar/icon-set/svg-mdi-v6.mjs";const p={__name:"card",__ssrInlineRender:!0,setup(u){w("_q_ex",{name:"QCard"});const m=[{name:"Separator",category:"Vue Components",path:"/vue-components/separator"}],h=[{id:"qcard-api",title:"2. QCard API",deep:!0},{id:"qcardsection-api",title:"3. QCardSection API",deep:!0},{id:"qcardactions-api",title:"4. QCardActions API",deep:!0},{id:"usage",title:"5. Usage"},{id:"basic",title:"5.1. Basic",sub:!0},{id:"with-actions",title:"5.2. With actions",sub:!0},{id:"media-content",title:"5.3. Media content",sub:!0},{id:"horizontal",title:"5.4. Horizontal",sub:!0},{id:"various-content",title:"5.5. Various content",sub:!0},{id:"expandable",title:"5.6. Expandable",sub:!0}];return(Q,f,C,b)=>{f(n(k,y({title:"Card",desc:"The QCard Vue component is a great way to display important pieces of grouped content. It assists the viewer by containing and organizing information, while also setting up predictable expectations.",heading:"","edit-link":"vue-components/card",toc:h,related:m},b),{default:v((z,i,a,t)=>{if(i)i(`<p${t}>The QCard component is a great way to display important pieces of grouped content. This pattern is quickly emerging as a core design pattern for Apps, website previews and email content. It assists the viewer by containing and organizing information, while also setting up predictable expectations.</p><p${t}>With so much content to display at once, and often so little screen real-estate, Cards have fast become the design pattern of choice for many companies, including the likes of Google and Twitter.</p><p${t}>The QCard component is intentionally lightweight and essentially a containing element that is capable of “hosting” any other component that is appropriate.</p>`),i(n(d,{file:"QCard"},null,a,t)),i(n(d,{file:"QCardSection"},null,a,t)),i(n(d,{file:"QCardActions"},null,a,t)),i(`<h2 id="usage" class="doc-heading doc-h2"${t}>Usage</h2><div class="doc-note doc-note--tip"${t}><p class="doc-note__title"${t}>TIP</p><p${t}>You can play with the typography within your cards to create beautiful cards.</p></div><h3 id="basic" class="doc-heading doc-h3"${t}>Basic</h3>`),i(n(o,{title:"Basic cards",file:"Basic"},null,a,t)),i(`<h3 id="with-actions" class="doc-heading doc-h3"${t}>With actions</h3>`),i(n(o,{title:"Cards with actions",file:"Actions"},null,a,t)),i(`<p${t}>Below are some of the custom alignments that you can use for the actions through the <code class="doc-token"${t}>align</code> property:</p>`),i(n(o,{title:"Aligning actions",file:"ActionsAlignment"},null,a,t)),i(`<h3 id="media-content" class="doc-heading doc-h3"${t}>Media content</h3>`),i(n(o,{title:"Cards with media content",file:"Media"},null,a,t)),i(n(o,{title:"Card with video",file:"Video"},null,a,t)),i(n(o,{title:"Card with parallax",file:"Parallax"},null,a,t)),i(`<h3 id="horizontal" class="doc-heading doc-h3"${t}>Horizontal</h3><p${t}>On the examples below, notice the QCardSection with <code class="doc-token"${t}>horizontal</code> prop on it that wraps other QCardSections. Also note that you can directly use <code class="doc-token"${t}>col-*</code> classes on children of horizontal QCardSection in order to control the size.</p><p${t}>It’s recommended that you use QImg component instead of native <code class="doc-token"${t}>&lt;img&gt;</code> when dealing with horizontal QCardSections.</p>`),i(n(o,{title:"Basic horizontal",file:"HorizontalBasic"},null,a,t)),i(n(o,{title:"More involved examples",file:"HorizontalMoreInvolved"},null,a,t)),i(`<h3 id="various-content" class="doc-heading doc-h3"${t}>Various content</h3>`),i(n(o,{title:"Various content",file:"VariousContent"},null,a,t)),i(n(o,{title:"Table",file:"Table"},null,a,t)),i(n(o,{title:"Tabs",file:"Tabs"},null,a,t)),i(`<h3 id="expandable" class="doc-heading doc-h3"${t}>Expandable</h3><p${t}>On the example below, click on the round button on the bottom right to see the expansion in action.</p>`),i(n(o,{title:"Expandable",file:"Expandable"},null,a,t));else return[e("p",null,"The QCard component is a great way to display important pieces of grouped content. This pattern is quickly emerging as a core design pattern for Apps, website previews and email content. It assists the viewer by containing and organizing information, while also setting up predictable expectations."),e("p",null,"With so much content to display at once, and often so little screen real-estate, Cards have fast become the design pattern of choice for many companies, including the likes of Google and Twitter."),e("p",null,"The QCard component is intentionally lightweight and essentially a containing element that is capable of “hosting” any other component that is appropriate."),e(d,{file:"QCard"}),e(d,{file:"QCardSection"}),e(d,{file:"QCardActions"}),e("h2",{id:"usage",class:"doc-heading doc-h2",onClick:r=>l(s)("usage")},"Usage",8,["onClick"]),e("div",{class:"doc-note doc-note--tip"},[e("p",{class:"doc-note__title"},"TIP"),e("p",null,"You can play with the typography within your cards to create beautiful cards.")]),e("h3",{id:"basic",class:"doc-heading doc-h3",onClick:r=>l(s)("basic")},"Basic",8,["onClick"]),e(o,{title:"Basic cards",file:"Basic"}),e("h3",{id:"with-actions",class:"doc-heading doc-h3",onClick:r=>l(s)("with-actions")},"With actions",8,["onClick"]),e(o,{title:"Cards with actions",file:"Actions"}),e("p",null,[c("Below are some of the custom alignments that you can use for the actions through the "),e("code",{class:"doc-token"},"align"),c(" property:")]),e(o,{title:"Aligning actions",file:"ActionsAlignment"}),e("h3",{id:"media-content",class:"doc-heading doc-h3",onClick:r=>l(s)("media-content")},"Media content",8,["onClick"]),e(o,{title:"Cards with media content",file:"Media"}),e(o,{title:"Card with video",file:"Video"}),e(o,{title:"Card with parallax",file:"Parallax"}),e("h3",{id:"horizontal",class:"doc-heading doc-h3",onClick:r=>l(s)("horizontal")},"Horizontal",8,["onClick"]),e("p",null,[c("On the examples below, notice the QCardSection with "),e("code",{class:"doc-token"},"horizontal"),c(" prop on it that wraps other QCardSections. Also note that you can directly use "),e("code",{class:"doc-token"},"col-*"),c(" classes on children of horizontal QCardSection in order to control the size.")]),e("p",null,[c("It’s recommended that you use QImg component instead of native "),e("code",{class:"doc-token"},"<img>"),c(" when dealing with horizontal QCardSections.")]),e(o,{title:"Basic horizontal",file:"HorizontalBasic"}),e(o,{title:"More involved examples",file:"HorizontalMoreInvolved"}),e("h3",{id:"various-content",class:"doc-heading doc-h3",onClick:r=>l(s)("various-content")},"Various content",8,["onClick"]),e(o,{title:"Various content",file:"VariousContent"}),e(o,{title:"Table",file:"Table"}),e(o,{title:"Tabs",file:"Tabs"}),e("h3",{id:"expandable",class:"doc-heading doc-h3",onClick:r=>l(s)("expandable")},"Expandable",8,["onClick"]),e("p",null,"On the example below, click on the round button on the bottom right to see the expansion in action."),e(o,{title:"Expandable",file:"Expandable"})]}),_:1},C))}}},g=p.setup;p.setup=(u,m)=>{const h=x();return(h.modules||(h.modules=new Set)).add("src/pages/vue-components/card.md"),g?g(u,m):void 0};const J=$(p,[["__file","card.md"]]);export{J as default};
