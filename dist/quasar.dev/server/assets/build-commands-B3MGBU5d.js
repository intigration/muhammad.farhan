import{mergeProps as y,withCtx as t,unref as i,createVNode as e,createTextVNode as a,useSSRContext as D}from"vue";import{ssrRenderComponent as d}from"vue/server-renderer";import{c as h}from"./page-utils-C-QWsEHe.js";import{D as N,a as $}from"./DocPage-DKr-0pQn.js";import{D as p}from"./DocPrerender-DPOnWPFO.js";import{C as s}from"./CopyButton-l3ndfN49.js";import{_ as W}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const v={__name:"build-commands",__ssrInlineRender:!0,setup(f){const b=[{id:"developing",title:"2. Developing"},{id:"building-for-production",title:"3. Building for Production"}];return(g,w,q,C)=>{w(d(N,y({title:"PWA Build Commands",desc:"(@quasar/app-vite) The Quasar CLI list of commands when developing or building a Progressive Web App.",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/developing-pwa/build-commands",toc:b},C),{default:t((P,r,u,l)=>{if(r)r(`<h2 id="developing" class="doc-heading doc-h2"${l}>Developing</h2>`),r(d(i(p),null,{default:t((m,o,c,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}>$ quasar dev <span class="token parameter variable"${n}>-m</span> pwa

<span class="token comment"${n}># ..or the longer form:</span>
$ quasar dev <span class="token parameter variable"${n}>--mode</span> pwa</code></pre>`),o(d(s,{lang:"bash"},null,c,n));else return[e("pre",{class:"doc-code"},[e("code",null,[a("$ quasar dev "),e("span",{class:"token parameter variable"},"-m"),a(` pwa

`),e("span",{class:"token comment"},"# ..or the longer form:"),a(`
$ quasar dev `),e("span",{class:"token parameter variable"},"--mode"),a(" pwa")])]),e(s,{lang:"bash"})]}),_:1},u,l)),r(`<div class="doc-note doc-note--warning"${l}><p class="doc-note__title"${l}>WARNING</p><p${l}>The development server uses a bare minimum Service Worker precaching only the public folder. Working offline will not be available.</p></div><div class="doc-note doc-note--danger"${l}><p class="doc-note__title"${l}>WARNING</p><p${l}>Do not run `),r(d($,{to:"https://developers.google.com/web/tools/lighthouse/"},{default:t((m,o,c,n)=>{if(o)o("Lighthouse");else return[a("Lighthouse")]}),_:1},u,l)),r(` on your development build because at this stage the code is intentionally not optimized and contains embedded source maps (among many other things).</p></div><h2 id="building-for-production" class="doc-heading doc-h2"${l}>Building for Production</h2>`),r(d(i(p),null,{default:t((m,o,c,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}>$ quasar build <span class="token parameter variable"${n}>-m</span> pwa

<span class="token comment"${n}># ..or the longer form:</span>
$ quasar build <span class="token parameter variable"${n}>--mode</span> pwa</code></pre>`),o(d(s,{lang:"bash"},null,c,n));else return[e("pre",{class:"doc-code"},[e("code",null,[a("$ quasar build "),e("span",{class:"token parameter variable"},"-m"),a(` pwa

`),e("span",{class:"token comment"},"# ..or the longer form:"),a(`
$ quasar build `),e("span",{class:"token parameter variable"},"--mode"),a(" pwa")])]),e(s,{lang:"bash"})]}),_:1},u,l)),r(`<p${l}>If you want a production build with debugging enabled:</p>`),r(d(i(p),null,{default:t((m,o,c,n)=>{if(o)o(`<pre class="doc-code"${n}><code${n}>$ quasar build <span class="token parameter variable"${n}>-m</span> pwa <span class="token parameter variable"${n}>-d</span>

<span class="token comment"${n}># ..or the longer form</span>
$ quasar build <span class="token parameter variable"${n}>-m</span> pwa <span class="token parameter variable"${n}>--debug</span></code></pre>`),o(d(s,{lang:"bash"},null,c,n));else return[e("pre",{class:"doc-code"},[e("code",null,[a("$ quasar build "),e("span",{class:"token parameter variable"},"-m"),a(" pwa "),e("span",{class:"token parameter variable"},"-d"),a(`

`),e("span",{class:"token comment"},"# ..or the longer form"),a(`
$ quasar build `),e("span",{class:"token parameter variable"},"-m"),a(" pwa "),e("span",{class:"token parameter variable"},"--debug")])]),e(s,{lang:"bash"})]}),_:1},u,l));else return[e("h2",{id:"developing",class:"doc-heading doc-h2",onClick:m=>i(h)("developing")},"Developing",8,["onClick"]),e(i(p),null,{default:t(()=>[e("pre",{class:"doc-code"},[e("code",null,[a("$ quasar dev "),e("span",{class:"token parameter variable"},"-m"),a(` pwa

`),e("span",{class:"token comment"},"# ..or the longer form:"),a(`
$ quasar dev `),e("span",{class:"token parameter variable"},"--mode"),a(" pwa")])]),e(s,{lang:"bash"})]),_:1}),e("div",{class:"doc-note doc-note--warning"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,"The development server uses a bare minimum Service Worker precaching only the public folder. Working offline will not be available.")]),e("div",{class:"doc-note doc-note--danger"},[e("p",{class:"doc-note__title"},"WARNING"),e("p",null,[a("Do not run "),e($,{to:"https://developers.google.com/web/tools/lighthouse/"},{default:t(()=>[a("Lighthouse")]),_:1}),a(" on your development build because at this stage the code is intentionally not optimized and contains embedded source maps (among many other things).")])]),e("h2",{id:"building-for-production",class:"doc-heading doc-h2",onClick:m=>i(h)("building-for-production")},"Building for Production",8,["onClick"]),e(i(p),null,{default:t(()=>[e("pre",{class:"doc-code"},[e("code",null,[a("$ quasar build "),e("span",{class:"token parameter variable"},"-m"),a(` pwa

`),e("span",{class:"token comment"},"# ..or the longer form:"),a(`
$ quasar build `),e("span",{class:"token parameter variable"},"--mode"),a(" pwa")])]),e(s,{lang:"bash"})]),_:1}),e("p",null,"If you want a production build with debugging enabled:"),e(i(p),null,{default:t(()=>[e("pre",{class:"doc-code"},[e("code",null,[a("$ quasar build "),e("span",{class:"token parameter variable"},"-m"),a(" pwa "),e("span",{class:"token parameter variable"},"-d"),a(`

`),e("span",{class:"token comment"},"# ..or the longer form"),a(`
$ quasar build `),e("span",{class:"token parameter variable"},"-m"),a(" pwa "),e("span",{class:"token parameter variable"},"--debug")])]),e(s,{lang:"bash"})]),_:1})]}),_:1},q))}}},k=v.setup;v.setup=(f,b)=>{const g=D();return(g.modules||(g.modules=new Set)).add("src/pages/quasar-cli-vite/developing-pwa/build-commands.md"),k?k(f,b):void 0};const F=W(v,[["__file","build-commands.md"]]);export{F as default};
