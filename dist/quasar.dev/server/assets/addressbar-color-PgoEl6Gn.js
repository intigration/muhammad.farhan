import{mergeProps as A,withCtx as r,createTextVNode as s,unref as i,createVNode as n,useSSRContext as x}from"vue";import{ssrRenderComponent as l}from"vue/server-renderer";import{c as j}from"./page-utils-C-QWsEHe.js";import{D as W,a as $}from"./DocPage-DKr-0pQn.js";import{D as h}from"./DocApi-Df9ryd6x.js";import{D as w}from"./DocInstallation-DgMazQjg.js";import{D as k}from"./DocPrerender-DPOnWPFO.js";import{C as c}from"./CopyButton-l3ndfN49.js";import{_ as D}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"./DocCardTitle-BSnqQsiz.js";import"./utils-DKnLoYai.js";import"./DocCode-BVg0tuSc.js";import"prismjs";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const f={__name:"addressbar-color",__ssrInlineRender:!0,setup(b){const m=[{id:"addressbarcolor-api",title:"2. AddressbarColor API",deep:!0},{id:"installation",title:"3. Installation",deep:!0},{id:"usage",title:"4. Usage"}];return(g,C,v,q)=>{C(l(W,A({title:"AddressbarColor Plugin",desc:"A Quasar plugin for changing the addressbar color on newer mobile browsers.",heading:"","edit-link":"quasar-plugins/addressbar-color",toc:m},q),{default:r((T,e,p,t)=>{if(e)e(`<p${t}>Newer mobile browsers have the ability to specify a color for the addressbar, like in the image below.</p><div class="doc-note doc-note--warning"${t}><p class="doc-note__title"${t}>WARNING</p><ul${t}><li${t}>There isn’t yet a Web standard for this so it won’t work for all mobile browsers.</li><li${t}>This applies when building a website only. For coloring top bar on a mobile app (built with Cordova mode), please refer to `),e(l($,{to:"https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-statusbar/"},{default:r((d,o,u,a)=>{if(o)o("cordova-plugin-statusbar");else return[s("cordova-plugin-statusbar")]}),_:1},p,t)),e(`.</li></ul></div><p${t}><img src="https://cdn.quasar.dev/img/mobile-address-bar-colors.jpg" alt="" title="Mobile Addressbar Coloring" class="doc-img"${t}></p>`),e(l(h,{file:"AddressbarColor"},null,p,t)),e(l(w,{plugins:"AddressbarColor"},null,p,t)),e(`<h2 id="usage" class="doc-heading doc-h2"${t}>Usage</h2><p${t}>We create boot file to initialize its usage: <code class="doc-token"${t}>$ quasar new boot addressbar-color [--format ts]</code>. A file is created (<code class="doc-token"${t}>/src/boot/addressbar-color.js</code>). We edit it:</p>`),e(l(i(k),{title:"/src/boot/addressbar-color.js"},{default:r((d,o,u,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>import</span> <span class="token punctuation"${a}>{</span> AddressbarColor <span class="token punctuation"${a}>}</span> <span class="token keyword"${a}>from</span> <span class="token string"${a}>&#39;quasar&#39;</span>

<span class="token keyword"${a}>export</span> <span class="token keyword"${a}>default</span> <span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span> <span class="token operator"${a}>=&gt;</span> <span class="token punctuation"${a}>{</span>
  AddressbarColor<span class="token punctuation"${a}>.</span><span class="token function"${a}>set</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;#a2e3fa&#39;</span><span class="token punctuation"${a}>)</span>
<span class="token punctuation"${a}>}</span></code></pre>`),o(l(c,null,null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" AddressbarColor "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  AddressbarColor`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'#a2e3fa'"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(c)]}),_:1},p,t)),e(`<p${t}>We then have to tell quasar to use this boot file we just created. To do this we edit the boot section of the quasar config:</p>`),e(l(i(k),{title:"/quasar.config file"},{default:r((d,o,u,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>return</span> <span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>boot</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>[</span>
    <span class="token string"${a}>&#39;addressbar-color&#39;</span>
  <span class="token punctuation"${a}>]</span>
<span class="token punctuation"${a}>}</span></code></pre>`),o(l(c,null,null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
    `),n("span",{class:"token string"},"'addressbar-color'"),s(`
  `),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(c)]}),_:1},p,t)),e(`<p${t}>What this does is that it injects some <code class="doc-token"${t}>&lt;meta&gt;</code> tags into your <code class="doc-token"${t}>index.html</code> at runtime.</p><p${t}>Because the meta tag doesn’t get injected until run time you can dynamically change this color multiple times, based on the page the user is on (by calling the <code class="doc-token"${t}>set</code> method in the <code class="doc-token"${t}>created()</code> lifecycle hook on the respective pages):</p>`),e(l(i(k),{title:"A .vue file representing a page"},{default:r((d,o,u,a)=>{if(o)o(`<pre class="doc-code"${a}><code${a}><span class="token keyword"${a}>import</span> <span class="token punctuation"${a}>{</span> useQuasar <span class="token punctuation"${a}>}</span> <span class="token keyword"${a}>from</span> <span class="token string"${a}>&#39;quasar&#39;</span>

<span class="token keyword"${a}>export</span> <span class="token keyword"${a}>default</span> <span class="token punctuation"${a}>{</span>
  <span class="token function"${a}>setup</span> <span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span> <span class="token punctuation"${a}>{</span>
    <span class="token comment"${a}>// equivalent to calling this on creating the component</span>
    <span class="token keyword"${a}>const</span> $q <span class="token operator"${a}>=</span> <span class="token function"${a}>useQuasar</span><span class="token punctuation"${a}>(</span><span class="token punctuation"${a}>)</span>
    $q<span class="token punctuation"${a}>.</span>addressbarColor<span class="token punctuation"${a}>.</span><span class="token function"${a}>set</span><span class="token punctuation"${a}>(</span><span class="token string"${a}>&#39;#a2e3fa&#39;</span><span class="token punctuation"${a}>)</span>
  <span class="token punctuation"${a}>}</span>
<span class="token punctuation"${a}>}</span></code></pre>`),o(l(c,null,null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" useQuasar "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"setup"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// equivalent to calling this on creating the component"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" $q "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    $q`),n("span",{class:"token punctuation"},"."),s("addressbarColor"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'#a2e3fa'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(c)]}),_:1},p,t)),e(`<div class="doc-note doc-note--tip"${t}><p class="doc-note__title"${t}>TIP</p><p${t}>Calling <code class="doc-token"${t}>set()</code> with no parameters will use the primary color.</p></div>`);else return[n("p",null,"Newer mobile browsers have the ability to specify a color for the addressbar, like in the image below."),n("div",{class:"doc-note doc-note--warning"},[n("p",{class:"doc-note__title"},"WARNING"),n("ul",null,[n("li",null,"There isn’t yet a Web standard for this so it won’t work for all mobile browsers."),n("li",null,[s("This applies when building a website only. For coloring top bar on a mobile app (built with Cordova mode), please refer to "),n($,{to:"https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-statusbar/"},{default:r(()=>[s("cordova-plugin-statusbar")]),_:1}),s(".")])])]),n("p",null,[n("img",{src:"https://cdn.quasar.dev/img/mobile-address-bar-colors.jpg",alt:"",title:"Mobile Addressbar Coloring",class:"doc-img"})]),n(h,{file:"AddressbarColor"}),n(w,{plugins:"AddressbarColor"}),n("h2",{id:"usage",class:"doc-heading doc-h2",onClick:d=>i(j)("usage")},"Usage",8,["onClick"]),n("p",null,[s("We create boot file to initialize its usage: "),n("code",{class:"doc-token"},"$ quasar new boot addressbar-color [--format ts]"),s(". A file is created ("),n("code",{class:"doc-token"},"/src/boot/addressbar-color.js"),s("). We edit it:")]),n(i(k),{title:"/src/boot/addressbar-color.js"},{default:r(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" AddressbarColor "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  AddressbarColor`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'#a2e3fa'"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(c)]),_:1}),n("p",null,"We then have to tell quasar to use this boot file we just created. To do this we edit the boot section of the quasar config:"),n(i(k),{title:"/quasar.config file"},{default:r(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"boot"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
    `),n("span",{class:"token string"},"'addressbar-color'"),s(`
  `),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(c)]),_:1}),n("p",null,[s("What this does is that it injects some "),n("code",{class:"doc-token"},"<meta>"),s(" tags into your "),n("code",{class:"doc-token"},"index.html"),s(" at runtime.")]),n("p",null,[s("Because the meta tag doesn’t get injected until run time you can dynamically change this color multiple times, based on the page the user is on (by calling the "),n("code",{class:"doc-token"},"set"),s(" method in the "),n("code",{class:"doc-token"},"created()"),s(" lifecycle hook on the respective pages):")]),n(i(k),{title:"A .vue file representing a page"},{default:r(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" useQuasar "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"setup"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// equivalent to calling this on creating the component"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" $q "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    $q`),n("span",{class:"token punctuation"},"."),s("addressbarColor"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'#a2e3fa'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(c)]),_:1}),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,[s("Calling "),n("code",{class:"doc-token"},"set()"),s(" with no parameters will use the primary color.")])])]}),_:1},v))}}},y=f.setup;f.setup=(b,m)=>{const g=x();return(g.modules||(g.modules=new Set)).add("src/pages/quasar-plugins/addressbar-color.md"),y?y(b,m):void 0};const Z=D(f,[["__file","addressbar-color.md"]]);export{Z as default};
