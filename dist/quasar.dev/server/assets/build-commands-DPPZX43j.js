import{mergeProps as C,withCtx as l,unref as r,createVNode as n,createTextVNode as e,useSSRContext as x}from"vue";import{ssrRenderComponent as i}from"vue/server-renderer";import{c as m}from"./page-utils-C-QWsEHe.js";import{D as P,a as b}from"./DocPage-DKr-0pQn.js";import{D as d}from"./DocPrerender-DPOnWPFO.js";import{C as c}from"./CopyButton-l3ndfN49.js";import{_ as S}from"../server-entry.js";import"quasar";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const f={__name:"build-commands",__ssrInlineRender:!0,setup($){const g=[{id:"developing",title:"2. Developing"},{id:"chrome-devtools",title:"2.1. Chrome DevTools",sub:!0},{id:"vuejs-devtools",title:"2.2. Vuejs Devtools",sub:!0},{id:"building-for-production",title:"3. Building for Production"},{id:"a-note-for-non-windows-users",title:"3.1. A note for non-Windows users",sub:!0},{id:"publishing-electron-builder-only-",title:"4. Publishing (electron-builder only)"}];return(h,y,w,q)=>{y(i(P,C({title:"Electron Build Commands",desc:"(@quasar/app-vite) The Quasar CLI list of commands when developing or building a desktop app.",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/developing-electron-apps/build-commands",toc:g},q),{default:l((D,s,k,o)=>{if(s)s(`<h2 id="developing" class="doc-heading doc-h2"${o}>Developing</h2>`),s(i(r(d),null,{default:l((p,t,u,a)=>{if(t)t(`<pre class="doc-code"${a}><code${a}>$ quasar dev <span class="token parameter variable"${a}>-m</span> electron

<span class="token comment"${a}># ..or the longer form:</span>
$ quasar dev <span class="token parameter variable"${a}>--mode</span> electron

<span class="token comment"${a}># passing extra parameters and/or options to</span>
<span class="token comment"${a}># underlying &quot;electron&quot; executable:</span>
$ quasar dev <span class="token parameter variable"${a}>-m</span> electron -- --no-sandbox --disable-setuid-sandbox
<span class="token comment"${a}># when on Windows and using Powershell:</span>
$ quasar dev <span class="token parameter variable"${a}>-m</span> electron <span class="token string"${a}>&#39;--&#39;</span> --no-sandbox --disable-setuid-sandbox</code></pre>`),t(i(c,{lang:"bash"},null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[e("$ quasar dev "),n("span",{class:"token parameter variable"},"-m"),e(` electron

`),n("span",{class:"token comment"},"# ..or the longer form:"),e(`
$ quasar dev `),n("span",{class:"token parameter variable"},"--mode"),e(` electron

`),n("span",{class:"token comment"},"# passing extra parameters and/or options to"),e(`
`),n("span",{class:"token comment"},'# underlying "electron" executable:'),e(`
$ quasar dev `),n("span",{class:"token parameter variable"},"-m"),e(` electron -- --no-sandbox --disable-setuid-sandbox
`),n("span",{class:"token comment"},"# when on Windows and using Powershell:"),e(`
$ quasar dev `),n("span",{class:"token parameter variable"},"-m"),e(" electron "),n("span",{class:"token string"},"'--'"),e(" --no-sandbox --disable-setuid-sandbox")])]),n(c,{lang:"bash"})]}),_:1},k,o)),s(`<p${o}>It opens up an Electron window with dev-tools included. You have HMR for the renderer process and changes to main process are also picked up (but the latter restarts the Electron window on each change).</p><p${o}>Check how you can tweak Esbuild config Object for the Main Process and the Preload script on the `),s(i(b,{to:"/quasar-cli-vite/developing-electron-apps/configuring-electron"},{default:l((p,t,u,a)=>{if(t)t("Configuring Electron");else return[e("Configuring Electron")]}),_:1},k,o)),s(` page.</p><h3 id="chrome-devtools" class="doc-heading doc-h3"${o}>Chrome DevTools</h3><p${o}>While in dev mode, hit the following combination (while your app window has focus):</p><ul${o}><li${o}>macOS: <kbd${o}>Cmd</kbd> <kbd${o}>Alt</kbd> <kbd${o}>I</kbd> or <kbd${o}>F12</kbd></li><li${o}>Linux: <kbd${o}>Ctrl</kbd> <kbd${o}>Shift</kbd> <kbd${o}>I</kbd> or <kbd${o}>F12</kbd></li><li${o}>Windows: <kbd${o}>Ctrl</kbd> <kbd${o}>Shift</kbd> <kbd${o}>I</kbd> or <kbd${o}>F12</kbd></li></ul><h3 id="vuejs-devtools" class="doc-heading doc-h3"${o}>Vuejs Devtools</h3><p${o}>Should you want to also access Vue Devtools for the renderer thread:</p>`),s(i(r(d),null,{default:l((p,t,u,a)=>{if(t)t(`<pre class="doc-code"${a}><code${a}>$ quasar dev <span class="token parameter variable"${a}>-m</span> electron <span class="token parameter variable"${a}>--devtools</span></code></pre>`),t(i(c,{lang:"bash"},null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[e("$ quasar dev "),n("span",{class:"token parameter variable"},"-m"),e(" electron "),n("span",{class:"token parameter variable"},"--devtools")])]),n(c,{lang:"bash"})]}),_:1},k,o)),s(`<h2 id="building-for-production" class="doc-heading doc-h2"${o}>Building for Production</h2>`),s(i(r(d),null,{default:l((p,t,u,a)=>{if(t)t(`<pre class="doc-code"${a}><code${a}>$ quasar build <span class="token parameter variable"${a}>-m</span> electron

<span class="token comment"${a}># ..or the longer form:</span>
$ quasar build <span class="token parameter variable"${a}>--mode</span> electron</code></pre>`),t(i(c,{lang:"bash"},null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[e("$ quasar build "),n("span",{class:"token parameter variable"},"-m"),e(` electron

`),n("span",{class:"token comment"},"# ..or the longer form:"),e(`
$ quasar build `),n("span",{class:"token parameter variable"},"--mode"),e(" electron")])]),n(c,{lang:"bash"})]}),_:1},k,o)),s(`<p${o}>It builds your app for production and then uses electron-packager to pack it into an executable. Check how to configure this on `),s(i(b,{to:"/quasar-cli-vite/developing-electron-apps/configuring-electron"},{default:l((p,t,u,a)=>{if(t)t("Configuring Electron");else return[e("Configuring Electron")]}),_:1},k,o)),s(` page.</p><p${o}>If you want a production build with debugging enabled for the UI code:</p>`),s(i(r(d),null,{default:l((p,t,u,a)=>{if(t)t(`<pre class="doc-code"${a}><code${a}>$ quasar build <span class="token parameter variable"${a}>-m</span> electron <span class="token parameter variable"${a}>-d</span>

<span class="token comment"${a}># ..or the longer form</span>
$ quasar build <span class="token parameter variable"${a}>-m</span> electron <span class="token parameter variable"${a}>--debug</span></code></pre>`),t(i(c,{lang:"bash"},null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[e("$ quasar build "),n("span",{class:"token parameter variable"},"-m"),e(" electron "),n("span",{class:"token parameter variable"},"-d"),e(`

`),n("span",{class:"token comment"},"# ..or the longer form"),e(`
$ quasar build `),n("span",{class:"token parameter variable"},"-m"),e(" electron "),n("span",{class:"token parameter variable"},"--debug")])]),n(c,{lang:"bash"})]}),_:1},k,o)),s(`<h3 id="a-note-for-non-windows-users" class="doc-heading doc-h3"${o}>A note for non-Windows users</h3><p${o}>If you want to build for Windows with a custom icon using a non-Windows platform, you must have `),s(i(b,{to:"https://www.winehq.org/"},{default:l((p,t,u,a)=>{if(t)t("wine");else return[e("wine")]}),_:1},k,o)),s(" installed. "),s(i(b,{to:"https://github.com/electron-userland/electron-packager#building-windows-apps-from-non-windows-platforms"},{default:l((p,t,u,a)=>{if(t)t("More Info");else return[e("More Info")]}),_:1},k,o)),s(`.</p><h2 id="publishing-electron-builder-only-" class="doc-heading doc-h2"${o}>Publishing (electron-builder only)</h2>`),s(i(r(d),null,{default:l((p,t,u,a)=>{if(t)t(`<pre class="doc-code"${a}><code${a}>$ quasar build <span class="token parameter variable"${a}>-m</span> electron <span class="token parameter variable"${a}>-P</span> always

<span class="token comment"${a}># ..or the longer form:</span>
$ quasar build <span class="token parameter variable"${a}>--mode</span> electron <span class="token parameter variable"${a}>--publish</span> always</code></pre>`),t(i(c,{lang:"bash"},null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[e("$ quasar build "),n("span",{class:"token parameter variable"},"-m"),e(" electron "),n("span",{class:"token parameter variable"},"-P"),e(` always

`),n("span",{class:"token comment"},"# ..or the longer form:"),e(`
$ quasar build `),n("span",{class:"token parameter variable"},"--mode"),e(" electron "),n("span",{class:"token parameter variable"},"--publish"),e(" always")])]),n(c,{lang:"bash"})]}),_:1},k,o)),s(`<p${o}>You can specify using <code class="doc-token"${o}>electron-builder</code> to build your app either directly on the command line (<code class="doc-token"${o}>--bundler builder</code>) or by setting it explicitly within the <code class="doc-token"${o}>quasar.config</code> file at <code class="doc-token"${o}>electron.bundler</code>. This flag has no effect when using <code class="doc-token"${o}>electron-packager</code>.</p><p${o}>Currently (June 2019) supported publishing destinations include GitHub, Bintray, S3, Digital Ocean Spaces, or a generic HTTPS server. More information, including how to create valid publishing instructions, can be found `),s(i(b,{to:"https://www.electron.build/configuration/publish"},{default:l((p,t,u,a)=>{if(t)t("here");else return[e("here")]}),_:1},k,o)),s(`.</p><p${o}>Valid options for <code class="doc-token"${o}>-P</code> are “onTag”, “onTagOrDraft”, “always” and “never” which are explained at the above link. In addition, you must have valid <code class="doc-token"${o}>publish</code> configuration instructions in your <code class="doc-token"${o}>quasar.config</code> file at <code class="doc-token"${o}>electron.builder</code>.</p><p${o}>A very basic configuration to publish a Windows EXE setup file to Amazon S3 might look like this:</p>`),s(i(r(d),{title:"/quasar.config file"},{default:l((p,t,u,a)=>{if(t)t(`<pre class="doc-code"${a}><code${a}><span class="token literal-property property"${a}>electron</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
  <span class="token literal-property property"${a}>bundler</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;builder&#39;</span><span class="token punctuation"${a}>,</span> <span class="token comment"${a}>// set here instead of using command line flag --bundler</span>
  <span class="token literal-property property"${a}>builder</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
    <span class="token literal-property property"${a}>appId</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;com.electron.myelectronapp&#39;</span><span class="token punctuation"${a}>,</span>
    <span class="token literal-property property"${a}>win</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
      <span class="token literal-property property"${a}>target</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;nsis&#39;</span>
    <span class="token punctuation"${a}>}</span><span class="token punctuation"${a}>,</span>
    <span class="token literal-property property"${a}>publish</span><span class="token operator"${a}>:</span> <span class="token punctuation"${a}>{</span>
      <span class="token string-property property"${a}>&#39;provider&#39;</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;s3&#39;</span><span class="token punctuation"${a}>,</span>
      <span class="token string-property property"${a}>&#39;bucket&#39;</span><span class="token operator"${a}>:</span> <span class="token string"${a}>&#39;myS3bucket&#39;</span>
    <span class="token punctuation"${a}>}</span>
  <span class="token punctuation"${a}>}</span></code></pre>`),t(i(c,null,null,u,a));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"electron"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token literal-property property"},"bundler"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"'builder'"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token comment"},"// set here instead of using command line flag --bundler"),e(`
  `),n("span",{class:"token literal-property property"},"builder"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token literal-property property"},"appId"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"'com.electron.myelectronapp'"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token literal-property property"},"win"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"{"),e(`
      `),n("span",{class:"token literal-property property"},"target"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"'nsis'"),e(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token literal-property property"},"publish"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"{"),e(`
      `),n("span",{class:"token string-property property"},"'provider'"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"'s3'"),n("span",{class:"token punctuation"},","),e(`
      `),n("span",{class:"token string-property property"},"'bucket'"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"'myS3bucket'"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
  `),n("span",{class:"token punctuation"},"}")])]),n(c)]}),_:1},k,o));else return[n("h2",{id:"developing",class:"doc-heading doc-h2",onClick:p=>r(m)("developing")},"Developing",8,["onClick"]),n(r(d),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[e("$ quasar dev "),n("span",{class:"token parameter variable"},"-m"),e(` electron

`),n("span",{class:"token comment"},"# ..or the longer form:"),e(`
$ quasar dev `),n("span",{class:"token parameter variable"},"--mode"),e(` electron

`),n("span",{class:"token comment"},"# passing extra parameters and/or options to"),e(`
`),n("span",{class:"token comment"},'# underlying "electron" executable:'),e(`
$ quasar dev `),n("span",{class:"token parameter variable"},"-m"),e(` electron -- --no-sandbox --disable-setuid-sandbox
`),n("span",{class:"token comment"},"# when on Windows and using Powershell:"),e(`
$ quasar dev `),n("span",{class:"token parameter variable"},"-m"),e(" electron "),n("span",{class:"token string"},"'--'"),e(" --no-sandbox --disable-setuid-sandbox")])]),n(c,{lang:"bash"})]),_:1}),n("p",null,"It opens up an Electron window with dev-tools included. You have HMR for the renderer process and changes to main process are also picked up (but the latter restarts the Electron window on each change)."),n("p",null,[e("Check how you can tweak Esbuild config Object for the Main Process and the Preload script on the "),n(b,{to:"/quasar-cli-vite/developing-electron-apps/configuring-electron"},{default:l(()=>[e("Configuring Electron")]),_:1}),e(" page.")]),n("h3",{id:"chrome-devtools",class:"doc-heading doc-h3",onClick:p=>r(m)("chrome-devtools")},"Chrome DevTools",8,["onClick"]),n("p",null,"While in dev mode, hit the following combination (while your app window has focus):"),n("ul",null,[n("li",null,[e("macOS: "),n("kbd",null,"Cmd"),e(),n("kbd",null,"Alt"),e(),n("kbd",null,"I"),e(" or "),n("kbd",null,"F12")]),n("li",null,[e("Linux: "),n("kbd",null,"Ctrl"),e(),n("kbd",null,"Shift"),e(),n("kbd",null,"I"),e(" or "),n("kbd",null,"F12")]),n("li",null,[e("Windows: "),n("kbd",null,"Ctrl"),e(),n("kbd",null,"Shift"),e(),n("kbd",null,"I"),e(" or "),n("kbd",null,"F12")])]),n("h3",{id:"vuejs-devtools",class:"doc-heading doc-h3",onClick:p=>r(m)("vuejs-devtools")},"Vuejs Devtools",8,["onClick"]),n("p",null,"Should you want to also access Vue Devtools for the renderer thread:"),n(r(d),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[e("$ quasar dev "),n("span",{class:"token parameter variable"},"-m"),e(" electron "),n("span",{class:"token parameter variable"},"--devtools")])]),n(c,{lang:"bash"})]),_:1}),n("h2",{id:"building-for-production",class:"doc-heading doc-h2",onClick:p=>r(m)("building-for-production")},"Building for Production",8,["onClick"]),n(r(d),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[e("$ quasar build "),n("span",{class:"token parameter variable"},"-m"),e(` electron

`),n("span",{class:"token comment"},"# ..or the longer form:"),e(`
$ quasar build `),n("span",{class:"token parameter variable"},"--mode"),e(" electron")])]),n(c,{lang:"bash"})]),_:1}),n("p",null,[e("It builds your app for production and then uses electron-packager to pack it into an executable. Check how to configure this on "),n(b,{to:"/quasar-cli-vite/developing-electron-apps/configuring-electron"},{default:l(()=>[e("Configuring Electron")]),_:1}),e(" page.")]),n("p",null,"If you want a production build with debugging enabled for the UI code:"),n(r(d),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[e("$ quasar build "),n("span",{class:"token parameter variable"},"-m"),e(" electron "),n("span",{class:"token parameter variable"},"-d"),e(`

`),n("span",{class:"token comment"},"# ..or the longer form"),e(`
$ quasar build `),n("span",{class:"token parameter variable"},"-m"),e(" electron "),n("span",{class:"token parameter variable"},"--debug")])]),n(c,{lang:"bash"})]),_:1}),n("h3",{id:"a-note-for-non-windows-users",class:"doc-heading doc-h3",onClick:p=>r(m)("a-note-for-non-windows-users")},"A note for non-Windows users",8,["onClick"]),n("p",null,[e("If you want to build for Windows with a custom icon using a non-Windows platform, you must have "),n(b,{to:"https://www.winehq.org/"},{default:l(()=>[e("wine")]),_:1}),e(" installed. "),n(b,{to:"https://github.com/electron-userland/electron-packager#building-windows-apps-from-non-windows-platforms"},{default:l(()=>[e("More Info")]),_:1}),e(".")]),n("h2",{id:"publishing-electron-builder-only-",class:"doc-heading doc-h2",onClick:p=>r(m)("publishing-electron-builder-only-")},"Publishing (electron-builder only)",8,["onClick"]),n(r(d),null,{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[e("$ quasar build "),n("span",{class:"token parameter variable"},"-m"),e(" electron "),n("span",{class:"token parameter variable"},"-P"),e(` always

`),n("span",{class:"token comment"},"# ..or the longer form:"),e(`
$ quasar build `),n("span",{class:"token parameter variable"},"--mode"),e(" electron "),n("span",{class:"token parameter variable"},"--publish"),e(" always")])]),n(c,{lang:"bash"})]),_:1}),n("p",null,[e("You can specify using "),n("code",{class:"doc-token"},"electron-builder"),e(" to build your app either directly on the command line ("),n("code",{class:"doc-token"},"--bundler builder"),e(") or by setting it explicitly within the "),n("code",{class:"doc-token"},"quasar.config"),e(" file at "),n("code",{class:"doc-token"},"electron.bundler"),e(". This flag has no effect when using "),n("code",{class:"doc-token"},"electron-packager"),e(".")]),n("p",null,[e("Currently (June 2019) supported publishing destinations include GitHub, Bintray, S3, Digital Ocean Spaces, or a generic HTTPS server. More information, including how to create valid publishing instructions, can be found "),n(b,{to:"https://www.electron.build/configuration/publish"},{default:l(()=>[e("here")]),_:1}),e(".")]),n("p",null,[e("Valid options for "),n("code",{class:"doc-token"},"-P"),e(" are “onTag”, “onTagOrDraft”, “always” and “never” which are explained at the above link. In addition, you must have valid "),n("code",{class:"doc-token"},"publish"),e(" configuration instructions in your "),n("code",{class:"doc-token"},"quasar.config"),e(" file at "),n("code",{class:"doc-token"},"electron.builder"),e(".")]),n("p",null,"A very basic configuration to publish a Windows EXE setup file to Amazon S3 might look like this:"),n(r(d),{title:"/quasar.config file"},{default:l(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token literal-property property"},"electron"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token literal-property property"},"bundler"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"'builder'"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token comment"},"// set here instead of using command line flag --bundler"),e(`
  `),n("span",{class:"token literal-property property"},"builder"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token literal-property property"},"appId"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"'com.electron.myelectronapp'"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token literal-property property"},"win"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"{"),e(`
      `),n("span",{class:"token literal-property property"},"target"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"'nsis'"),e(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token literal-property property"},"publish"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"{"),e(`
      `),n("span",{class:"token string-property property"},"'provider'"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"'s3'"),n("span",{class:"token punctuation"},","),e(`
      `),n("span",{class:"token string-property property"},"'bucket'"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"'myS3bucket'"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
  `),n("span",{class:"token punctuation"},"}")])]),n(c)]),_:1})]}),_:1},w))}}},v=f.setup;f.setup=($,g)=>{const h=x();return(h.modules||(h.modules=new Set)).add("src/pages/quasar-cli-vite/developing-electron-apps/build-commands.md"),v?v($,g):void 0};const z=S(f,[["__file","build-commands.md"]]);export{z as default};
