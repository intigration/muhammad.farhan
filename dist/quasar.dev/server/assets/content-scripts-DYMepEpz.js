import{mergeProps as x,withCtx as o,createTextVNode as s,unref as i,createVNode as n,useSSRContext as v}from"vue";import{ssrRenderComponent as l}from"vue/server-renderer";import"quasar";import{D as C,a as h}from"./DocPage-DKr-0pQn.js";import{D as r}from"./DocPrerender-DPOnWPFO.js";import{C as p}from"./CopyButton-l3ndfN49.js";import{_ as q}from"../server-entry.js";import"@quasar/extras/mdi-v6";import"vue-router";import"@quasar/extras/fontawesome-v5";import"@quasar/extras/fontawesome-v6";import"@quasar/extras/mdi-v7";import"quasar/icon-set/svg-mdi-v6.mjs";const f={__name:"content-scripts",__ssrInlineRender:!0,setup(m){return(y,$,w,b)=>{$(l(C,x({title:"Content Scripts",desc:"(@quasar/app-vite) How to communicate using your content script with your Quasar App and Background Script in Quasar Browser Extension mode.",overline:"Quasar CLI with Vite - @quasar/app-vite",heading:"","edit-link":"quasar-cli-vite/developing-browser-extensions/content-scripts"},b),{default:o((Q,c,k,a)=>{if(c)c(`<p${a}><code class="doc-token"${a}>src-bex/my-content-script.js</code> is essentially a standard `),c(l(h,{to:"https://developer.chrome.com/extensions/content_scripts"},{default:o((d,e,u,t)=>{if(e)e("content script");else return[s("content script")]}),_:1},k,a)),c(` and you are welcome to use it as such. Content scripts are able to access the DOM of the underlying webpage and thus you are able to manipulate the content of said page.</p><div class="doc-note doc-note--tip"${a}><p class="doc-note__title"${a}>TIP</p><p${a}>You can have multiple content scripts with the name of your desire (that includes renaming the default <code class="doc-token"${a}>my-content-script.js</code>). Each time that you create a new one, please make sure that you reference it in <code class="doc-token"${a}>/src-bex/manifest.json</code>. Use the <code class="doc-token"${a}>.js</code> extension even if your filename ends in <code class="doc-token"${a}>.ts</code>.</p></div><p${a}>The added benefit of this file is this function:</p>`),c(l(i(r),null,{default:o((d,e,u,t)=>{if(e)e(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> bexContent <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar/wrappers&#39;</span>

<span class="token keyword"${t}>export</span> <span class="token keyword"${t}>default</span> <span class="token function"${t}>bexContent</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>(</span><span class="token parameter"${t}>bridge</span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
  <span class="token comment"${t}>//</span>
<span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span></code></pre>`),e(l(p,null,null,u,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" bexContent "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"bexContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"bridge"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"//"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(p)]}),_:1},k,a)),c(`<p${a}>This function is called automatically via the Quasar BEX build chain and injects a bridge which is shared between your Quasar App instance and the background script of the BEX.</p><p${a}>For example, letâ€™s say we want to react to a button being pressed on our Quasar App and highlight some text on the underlying web page, this would be done via the content scripts like so:</p>`),c(l(i(r),{title:"Quasar App, /src"},{default:o((d,e,u,t)=>{if(e)e(`<pre class="doc-code"${t}><code${t}><span class="token function"${t}>setup</span> <span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>)</span> <span class="token punctuation"${t}>{</span>
  <span class="token keyword"${t}>const</span> $q <span class="token operator"${t}>=</span> <span class="token function"${t}>useQuasar</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>)</span>

  <span class="token keyword"${t}>async</span> <span class="token keyword"${t}>function</span> <span class="token function"${t}>myButtonClickHandler</span> <span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>)</span> <span class="token punctuation"${t}>{</span>
    <span class="token keyword"${t}>await</span> $q<span class="token punctuation"${t}>.</span>bex<span class="token punctuation"${t}>.</span><span class="token function"${t}>send</span><span class="token punctuation"${t}>(</span><span class="token string"${t}>&#39;highlight.content&#39;</span><span class="token punctuation"${t}>,</span> <span class="token punctuation"${t}>{</span> <span class="token literal-property property"${t}>selector</span><span class="token operator"${t}>:</span> <span class="token string"${t}>&#39;.some-class&#39;</span> <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span>
    $q<span class="token punctuation"${t}>.</span><span class="token function"${t}>notify</span><span class="token punctuation"${t}>(</span><span class="token string"${t}>&#39;Text has been highlighted&#39;</span><span class="token punctuation"${t}>)</span>
  <span class="token punctuation"${t}>}</span>

  <span class="token keyword"${t}>return</span> <span class="token punctuation"${t}>{</span> myButtonClickHandler <span class="token punctuation"${t}>}</span>
<span class="token punctuation"${t}>}</span></code></pre>`),e(l(p,null,null,u,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token function"},"setup"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" $q "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"myButtonClickHandler"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"await"),s(" $q"),n("span",{class:"token punctuation"},"."),s("bex"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"send"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'highlight.content'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"selector"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'.some-class'"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
    $q`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"notify"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Text has been highlighted'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(" myButtonClickHandler "),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(p)]}),_:1},k,a)),c(l(i(r),{title:"src-bex/assets/content.css"},{default:o((d,e,u,t)=>{if(e)e(`<pre class="doc-code language-css"${t}><code${t}><span class="token selector"${t}>.bex-highlight</span> <span class="token punctuation"${t}>{</span>
    <span class="token property"${t}>background-color</span><span class="token punctuation"${t}>:</span> red<span class="token punctuation"${t}>;</span>
<span class="token punctuation"${t}>}</span></code></pre>`),e(l(p,null,null,u,t));else return[n("pre",{class:"doc-code language-css"},[n("code",null,[n("span",{class:"token selector"},".bex-highlight"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},"background-color"),n("span",{class:"token punctuation"},":"),s(" red"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(p)]}),_:1},k,a)),c(l(i(r),{title:"/src-bex/my-content-script.js:"},{default:o((d,e,u,t)=>{if(e)e(`<pre class="doc-code"${t}><code${t}><span class="token keyword"${t}>import</span> <span class="token punctuation"${t}>{</span> bexContent <span class="token punctuation"${t}>}</span> <span class="token keyword"${t}>from</span> <span class="token string"${t}>&#39;quasar/wrappers&#39;</span>

<span class="token keyword"${t}>export</span> <span class="token keyword"${t}>default</span> <span class="token function"${t}>bexContent</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>(</span><span class="token parameter"${t}>bridge</span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
  bridge<span class="token punctuation"${t}>.</span><span class="token function"${t}>on</span><span class="token punctuation"${t}>(</span><span class="token string"${t}>&#39;highlight.content&#39;</span><span class="token punctuation"${t}>,</span> <span class="token punctuation"${t}>(</span><span class="token parameter"${t}><span class="token punctuation"${t}>{</span> data<span class="token punctuation"${t}>,</span> respond <span class="token punctuation"${t}>}</span></span><span class="token punctuation"${t}>)</span> <span class="token operator"${t}>=&gt;</span> <span class="token punctuation"${t}>{</span>
    <span class="token keyword"${t}>const</span> el <span class="token operator"${t}>=</span> document<span class="token punctuation"${t}>.</span><span class="token function"${t}>querySelector</span><span class="token punctuation"${t}>(</span>data<span class="token punctuation"${t}>.</span>selector<span class="token punctuation"${t}>)</span>
    <span class="token keyword"${t}>if</span> <span class="token punctuation"${t}>(</span>el <span class="token operator"${t}>!==</span> <span class="token keyword"${t}>null</span><span class="token punctuation"${t}>)</span> <span class="token punctuation"${t}>{</span>
      el<span class="token punctuation"${t}>.</span>classList<span class="token punctuation"${t}>.</span><span class="token function"${t}>add</span><span class="token punctuation"${t}>(</span><span class="token string"${t}>&#39;bex-highlight&#39;</span><span class="token punctuation"${t}>)</span>
    <span class="token punctuation"${t}>}</span>

    <span class="token comment"${t}>// Let&#39;s resolve the \`send()\` call&#39;s promise, this way we can await it on the other side then display a notification.</span>
    <span class="token function"${t}>respond</span><span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>)</span>
  <span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span>
<span class="token punctuation"${t}>}</span><span class="token punctuation"${t}>)</span></code></pre>`),e(l(p,null,null,u,t));else return[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" bexContent "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"bexContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"bridge"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  bridge`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"on"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'highlight.content'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" data"),n("span",{class:"token punctuation"},","),s(" respond "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" el "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"querySelector"),n("span",{class:"token punctuation"},"("),s("data"),n("span",{class:"token punctuation"},"."),s("selector"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("el "),n("span",{class:"token operator"},"!=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      el`),n("span",{class:"token punctuation"},"."),s("classList"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'bex-highlight'"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token comment"},"// Let's resolve the `send()` call's promise, this way we can await it on the other side then display a notification."),s(`
    `),n("span",{class:"token function"},"respond"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(p)]}),_:1},k,a)),c(`<p${a}>Content scripts live in an `),c(l(h,{to:"https://developer.chrome.com/extensions/content_scripts#isolated_world"},{default:o((d,e,u,t)=>{if(e)e("isolated world");else return[s("isolated world")]}),_:1},k,a)),c(`, allowing a content script to makes changes to its JavaScript environment without conflicting with the page or additional content scripts.</p><p${a}>Isolated worlds do not allow for content scripts, the extension, and the web page to access any variables or functions created by the others. This also gives content scripts the ability to enable functionality that should not be accessible to the web page.</p><p${a}>This is where the <code class="doc-token"${a}>dom-script</code> comes in.</p>`);else return[n("p",null,[n("code",{class:"doc-token"},"src-bex/my-content-script.js"),s(" is essentially a standard "),n(h,{to:"https://developer.chrome.com/extensions/content_scripts"},{default:o(()=>[s("content script")]),_:1}),s(" and you are welcome to use it as such. Content scripts are able to access the DOM of the underlying webpage and thus you are able to manipulate the content of said page.")]),n("div",{class:"doc-note doc-note--tip"},[n("p",{class:"doc-note__title"},"TIP"),n("p",null,[s("You can have multiple content scripts with the name of your desire (that includes renaming the default "),n("code",{class:"doc-token"},"my-content-script.js"),s("). Each time that you create a new one, please make sure that you reference it in "),n("code",{class:"doc-token"},"/src-bex/manifest.json"),s(". Use the "),n("code",{class:"doc-token"},".js"),s(" extension even if your filename ends in "),n("code",{class:"doc-token"},".ts"),s(".")])]),n("p",null,"The added benefit of this file is this function:"),n(i(r),null,{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" bexContent "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"bexContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"bridge"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"//"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(p)]),_:1}),n("p",null,"This function is called automatically via the Quasar BEX build chain and injects a bridge which is shared between your Quasar App instance and the background script of the BEX."),n("p",null,"For example, letâ€™s say we want to react to a button being pressed on our Quasar App and highlight some text on the underlying web page, this would be done via the content scripts like so:"),n(i(r),{title:"Quasar App, /src"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token function"},"setup"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" $q "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"useQuasar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"myButtonClickHandler"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"await"),s(" $q"),n("span",{class:"token punctuation"},"."),s("bex"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"send"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'highlight.content'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"selector"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'.some-class'"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
    $q`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"notify"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Text has been highlighted'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(" myButtonClickHandler "),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(p)]),_:1}),n(i(r),{title:"src-bex/assets/content.css"},{default:o(()=>[n("pre",{class:"doc-code language-css"},[n("code",null,[n("span",{class:"token selector"},".bex-highlight"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},"background-color"),n("span",{class:"token punctuation"},":"),s(" red"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}")])]),n(p)]),_:1}),n(i(r),{title:"/src-bex/my-content-script.js:"},{default:o(()=>[n("pre",{class:"doc-code"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" bexContent "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'quasar/wrappers'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"bexContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"bridge"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  bridge`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"on"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'highlight.content'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" data"),n("span",{class:"token punctuation"},","),s(" respond "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" el "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"querySelector"),n("span",{class:"token punctuation"},"("),s("data"),n("span",{class:"token punctuation"},"."),s("selector"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("el "),n("span",{class:"token operator"},"!=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      el`),n("span",{class:"token punctuation"},"."),s("classList"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'bex-highlight'"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token comment"},"// Let's resolve the `send()` call's promise, this way we can await it on the other side then display a notification."),s(`
    `),n("span",{class:"token function"},"respond"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n(p)]),_:1}),n("p",null,[s("Content scripts live in an "),n(h,{to:"https://developer.chrome.com/extensions/content_scripts#isolated_world"},{default:o(()=>[s("isolated world")]),_:1}),s(", allowing a content script to makes changes to its JavaScript environment without conflicting with the page or additional content scripts.")]),n("p",null,"Isolated worlds do not allow for content scripts, the extension, and the web page to access any variables or functions created by the others. This also gives content scripts the ability to enable functionality that should not be accessible to the web page."),n("p",null,[s("This is where the "),n("code",{class:"doc-token"},"dom-script"),s(" comes in.")])]}),_:1},w))}}},g=f.setup;f.setup=(m,y)=>{const $=v();return($.modules||($.modules=new Set)).add("src/pages/quasar-cli-vite/developing-browser-extensions/content-scripts.md"),g?g(m,y):void 0};const F=q(f,[["__file","content-scripts.md"]]);export{F as default};
